Search.setIndex({"docnames": ["about", "api/kqcircuits", "api/kqcircuits.chips", "api/kqcircuits.chips.airbridge_crossings", "api/kqcircuits.chips.airbridge_dc_test", "api/kqcircuits.chips.chip", "api/kqcircuits.chips.crossing_twoface", "api/kqcircuits.chips.daisy_woven", "api/kqcircuits.chips.dc_test", "api/kqcircuits.chips.demo", "api/kqcircuits.chips.demo_twoface", "api/kqcircuits.chips.empty", "api/kqcircuits.chips.junction_test", "api/kqcircuits.chips.junction_test2", "api/kqcircuits.chips.launchers", "api/kqcircuits.chips.lithography_test", "api/kqcircuits.chips.lithography_test_twoface", "api/kqcircuits.chips.munch_qubits", "api/kqcircuits.chips.quality_factor", "api/kqcircuits.chips.quality_factor_twoface", "api/kqcircuits.chips.sample_holder_test", "api/kqcircuits.chips.shaping", "api/kqcircuits.chips.simple", "api/kqcircuits.chips.single_xmons", "api/kqcircuits.chips.stripes", "api/kqcircuits.chips.tsv_test", "api/kqcircuits.chips.xmons_direct_coupling", "api/kqcircuits.defaults", "api/kqcircuits.elements", "api/kqcircuits.elements.airbridge_connection", "api/kqcircuits.elements.airbridges", "api/kqcircuits.elements.airbridges.airbridge", "api/kqcircuits.elements.airbridges.airbridge_multi_face", "api/kqcircuits.elements.airbridges.airbridge_rectangular", "api/kqcircuits.elements.capacitive_x_coupler", "api/kqcircuits.elements.chip_frame", "api/kqcircuits.elements.circular_capacitor", "api/kqcircuits.elements.element", "api/kqcircuits.elements.finger_capacitor_square", "api/kqcircuits.elements.finger_capacitor_taper", "api/kqcircuits.elements.flip_chip_connectors", "api/kqcircuits.elements.flip_chip_connectors.flip_chip_connector", "api/kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc", "api/kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf", "api/kqcircuits.elements.fluxlines", "api/kqcircuits.elements.fluxlines.fluxline", "api/kqcircuits.elements.fluxlines.fluxline_standard", "api/kqcircuits.elements.fluxlines.fluxline_straight", "api/kqcircuits.elements.hanger_resonator", "api/kqcircuits.elements.launcher", "api/kqcircuits.elements.launcher_dc", "api/kqcircuits.elements.markers", "api/kqcircuits.elements.markers.marker", "api/kqcircuits.elements.markers.marker_standard", "api/kqcircuits.elements.markers.mask_marker_fc", "api/kqcircuits.elements.meander", "api/kqcircuits.elements.quarter_wave_cpw_resonator", "api/kqcircuits.elements.smooth_capacitor", "api/kqcircuits.elements.spiral_capacitor", "api/kqcircuits.elements.spiral_resonator_polygon", "api/kqcircuits.elements.tsvs", "api/kqcircuits.elements.tsvs.tsv", "api/kqcircuits.elements.tsvs.tsv_ellipse", "api/kqcircuits.elements.tsvs.tsv_standard", "api/kqcircuits.elements.waveguide_composite", "api/kqcircuits.elements.waveguide_coplanar", "api/kqcircuits.elements.waveguide_coplanar_curved", "api/kqcircuits.elements.waveguide_coplanar_splitter", "api/kqcircuits.elements.waveguide_coplanar_straight", "api/kqcircuits.elements.waveguide_coplanar_taper", "api/kqcircuits.junctions", "api/kqcircuits.junctions.junction", "api/kqcircuits.junctions.manhattan", "api/kqcircuits.junctions.manhattan_single_junction", "api/kqcircuits.junctions.no_squid", "api/kqcircuits.junctions.sim", "api/kqcircuits.junctions.squid", "api/kqcircuits.klayout_view", "api/kqcircuits.layer_cluster", "api/kqcircuits.layer_config", "api/kqcircuits.layer_config.default_layer_config", "api/kqcircuits.layer_config.example_layer_config", "api/kqcircuits.masks", "api/kqcircuits.masks.mask_export", "api/kqcircuits.masks.mask_layout", "api/kqcircuits.masks.mask_set", "api/kqcircuits.masks.multi_face_mask_layout", "api/kqcircuits.pya_resolver", "api/kqcircuits.qubits", "api/kqcircuits.qubits.circular_transmon_single_island", "api/kqcircuits.qubits.concentric_transmon", "api/kqcircuits.qubits.double_pads", "api/kqcircuits.qubits.double_pads_splines", "api/kqcircuits.qubits.qubit", "api/kqcircuits.qubits.swissmon", "api/kqcircuits.run", "api/kqcircuits.simulations", "api/kqcircuits.simulations.airbridges_sim", "api/kqcircuits.simulations.cross_section_simulation", "api/kqcircuits.simulations.empty_simulation", "api/kqcircuits.simulations.epr", "api/kqcircuits.simulations.epr.circular_capacitor", "api/kqcircuits.simulations.epr.example", "api/kqcircuits.simulations.epr.gui_config", "api/kqcircuits.simulations.epr.smooth_capacitor", "api/kqcircuits.simulations.epr.spiral_capacitor", "api/kqcircuits.simulations.epr.swissmon", "api/kqcircuits.simulations.epr.util", "api/kqcircuits.simulations.export", "api/kqcircuits.simulations.export.ansys", "api/kqcircuits.simulations.export.ansys.ansys_export", "api/kqcircuits.simulations.export.ansys.ansys_solution", "api/kqcircuits.simulations.export.cross_section", "api/kqcircuits.simulations.export.cross_section.cross_section_export", "api/kqcircuits.simulations.export.cross_section.cross_section_profile", "api/kqcircuits.simulations.export.cross_section.epr_correction_export", "api/kqcircuits.simulations.export.cross_section.xsection_export", "api/kqcircuits.simulations.export.elmer", "api/kqcircuits.simulations.export.elmer.elmer_export", "api/kqcircuits.simulations.export.elmer.elmer_solution", "api/kqcircuits.simulations.export.export_and_run", "api/kqcircuits.simulations.export.export_singularity", "api/kqcircuits.simulations.export.remote_export_and_run", "api/kqcircuits.simulations.export.simulation_export", "api/kqcircuits.simulations.export.simulation_validate", "api/kqcircuits.simulations.export.solution", "api/kqcircuits.simulations.export.sonnet", "api/kqcircuits.simulations.export.sonnet.parser", "api/kqcircuits.simulations.export.sonnet.sonnet_export", "api/kqcircuits.simulations.export.util", "api/kqcircuits.simulations.partition_region", "api/kqcircuits.simulations.port", "api/kqcircuits.simulations.post_process", "api/kqcircuits.simulations.simulation", "api/kqcircuits.simulations.single_element_simulation", "api/kqcircuits.simulations.single_xmons_full_chip_sim", "api/kqcircuits.simulations.waveguides_sim", "api/kqcircuits.simulations.xmons_direct_coupling_full_chip_sim", "api/kqcircuits.simulations.xmons_direct_coupling_sim", "api/kqcircuits.test_structures", "api/kqcircuits.test_structures.airbridge_dc", "api/kqcircuits.test_structures.cross_test", "api/kqcircuits.test_structures.junction_test_pads", "api/kqcircuits.test_structures.junction_test_pads.junction_test_pads", "api/kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple", "api/kqcircuits.test_structures.stripes_test", "api/kqcircuits.test_structures.stripes_test_increasing_width", "api/kqcircuits.test_structures.test_structure", "api/kqcircuits.test_structures.tsv_test_pattern", "api/kqcircuits.util", "api/kqcircuits.util.area", "api/kqcircuits.util.count_instances", "api/kqcircuits.util.coupler_lib", "api/kqcircuits.util.deep_delete", "api/kqcircuits.util.defaults_helper", "api/kqcircuits.util.dependencies", "api/kqcircuits.util.edit_node_plugin", "api/kqcircuits.util.export_helper", "api/kqcircuits.util.geometry_helper", "api/kqcircuits.util.geometry_json_encoder", "api/kqcircuits.util.groundgrid", "api/kqcircuits.util.gui_helper", "api/kqcircuits.util.import_helper", "api/kqcircuits.util.label", "api/kqcircuits.util.label_polygons", "api/kqcircuits.util.layout_to_code", "api/kqcircuits.util.library_helper", "api/kqcircuits.util.load_save_layout", "api/kqcircuits.util.log_router", "api/kqcircuits.util.merge", "api/kqcircuits.util.netlist_extraction", "api/kqcircuits.util.netlist_graph", "api/kqcircuits.util.parameters", "api/kqcircuits.util.plugin_startup", "api/kqcircuits.util.refpoints", "api/kqcircuits.util.replace_junctions", "api/kqcircuits.util.symmetric_polygons", "citing", "contributing", "developer/architecture", "developer/coding_style", "developer/containers", "developer/documentation", "developer/index", "developer/setup", "developer/standalone", "developer/testing", "getting_started/first_look", "getting_started/gui_features/gui_elements", "getting_started/gui_features/gui_elements_to_code", "getting_started/gui_features/gui_menu_commands", "getting_started/gui_features/gui_tutorial", "getting_started/gui_features/gui_waveguides", "getting_started/gui_features/index", "getting_started/index", "getting_started/python_workflow/faces", "getting_started/python_workflow/index", "getting_started/python_workflow/layers", "getting_started/python_workflow/python_example", "getting_started/python_workflow/python_start", "getting_started/python_workflow/python_structure", "getting_started/python_workflow/refpoints", "getting_started/salt", "index", "installation/index", "installation/klayout", "installation/known_issues", "support", "trademarks", "user_guide/configuration", "user_guide/cross_section", "user_guide/file_system_and_utilities", "user_guide/index", "user_guide/macro_workflow", "user_guide/mask_export", "user_guide/simulation/elmer_remote_workflow", "user_guide/simulation/export_and_run", "user_guide/simulation/gmsh_elmer_export", "user_guide/simulation/simulation_features", "user_guide/simulation/simulation_objects", "user_guide/simulation/simulation_scripts", "user_guide/simulations", "user_guide/terminology", "user_guide/usage"], "filenames": ["about.rst", "api/kqcircuits.rst", "api/kqcircuits.chips.rst", "api/kqcircuits.chips.airbridge_crossings.rst", "api/kqcircuits.chips.airbridge_dc_test.rst", "api/kqcircuits.chips.chip.rst", "api/kqcircuits.chips.crossing_twoface.rst", "api/kqcircuits.chips.daisy_woven.rst", "api/kqcircuits.chips.dc_test.rst", "api/kqcircuits.chips.demo.rst", "api/kqcircuits.chips.demo_twoface.rst", "api/kqcircuits.chips.empty.rst", "api/kqcircuits.chips.junction_test.rst", "api/kqcircuits.chips.junction_test2.rst", "api/kqcircuits.chips.launchers.rst", "api/kqcircuits.chips.lithography_test.rst", "api/kqcircuits.chips.lithography_test_twoface.rst", "api/kqcircuits.chips.munch_qubits.rst", "api/kqcircuits.chips.quality_factor.rst", "api/kqcircuits.chips.quality_factor_twoface.rst", "api/kqcircuits.chips.sample_holder_test.rst", "api/kqcircuits.chips.shaping.rst", "api/kqcircuits.chips.simple.rst", "api/kqcircuits.chips.single_xmons.rst", "api/kqcircuits.chips.stripes.rst", "api/kqcircuits.chips.tsv_test.rst", "api/kqcircuits.chips.xmons_direct_coupling.rst", "api/kqcircuits.defaults.rst", "api/kqcircuits.elements.rst", "api/kqcircuits.elements.airbridge_connection.rst", "api/kqcircuits.elements.airbridges.rst", "api/kqcircuits.elements.airbridges.airbridge.rst", "api/kqcircuits.elements.airbridges.airbridge_multi_face.rst", "api/kqcircuits.elements.airbridges.airbridge_rectangular.rst", "api/kqcircuits.elements.capacitive_x_coupler.rst", "api/kqcircuits.elements.chip_frame.rst", "api/kqcircuits.elements.circular_capacitor.rst", "api/kqcircuits.elements.element.rst", "api/kqcircuits.elements.finger_capacitor_square.rst", "api/kqcircuits.elements.finger_capacitor_taper.rst", "api/kqcircuits.elements.flip_chip_connectors.rst", "api/kqcircuits.elements.flip_chip_connectors.flip_chip_connector.rst", "api/kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc.rst", "api/kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf.rst", "api/kqcircuits.elements.fluxlines.rst", "api/kqcircuits.elements.fluxlines.fluxline.rst", "api/kqcircuits.elements.fluxlines.fluxline_standard.rst", "api/kqcircuits.elements.fluxlines.fluxline_straight.rst", "api/kqcircuits.elements.hanger_resonator.rst", "api/kqcircuits.elements.launcher.rst", "api/kqcircuits.elements.launcher_dc.rst", "api/kqcircuits.elements.markers.rst", "api/kqcircuits.elements.markers.marker.rst", "api/kqcircuits.elements.markers.marker_standard.rst", "api/kqcircuits.elements.markers.mask_marker_fc.rst", "api/kqcircuits.elements.meander.rst", "api/kqcircuits.elements.quarter_wave_cpw_resonator.rst", "api/kqcircuits.elements.smooth_capacitor.rst", "api/kqcircuits.elements.spiral_capacitor.rst", "api/kqcircuits.elements.spiral_resonator_polygon.rst", "api/kqcircuits.elements.tsvs.rst", "api/kqcircuits.elements.tsvs.tsv.rst", "api/kqcircuits.elements.tsvs.tsv_ellipse.rst", "api/kqcircuits.elements.tsvs.tsv_standard.rst", "api/kqcircuits.elements.waveguide_composite.rst", "api/kqcircuits.elements.waveguide_coplanar.rst", "api/kqcircuits.elements.waveguide_coplanar_curved.rst", "api/kqcircuits.elements.waveguide_coplanar_splitter.rst", "api/kqcircuits.elements.waveguide_coplanar_straight.rst", "api/kqcircuits.elements.waveguide_coplanar_taper.rst", "api/kqcircuits.junctions.rst", "api/kqcircuits.junctions.junction.rst", "api/kqcircuits.junctions.manhattan.rst", "api/kqcircuits.junctions.manhattan_single_junction.rst", "api/kqcircuits.junctions.no_squid.rst", "api/kqcircuits.junctions.sim.rst", "api/kqcircuits.junctions.squid.rst", "api/kqcircuits.klayout_view.rst", "api/kqcircuits.layer_cluster.rst", "api/kqcircuits.layer_config.rst", "api/kqcircuits.layer_config.default_layer_config.rst", "api/kqcircuits.layer_config.example_layer_config.rst", "api/kqcircuits.masks.rst", "api/kqcircuits.masks.mask_export.rst", "api/kqcircuits.masks.mask_layout.rst", "api/kqcircuits.masks.mask_set.rst", "api/kqcircuits.masks.multi_face_mask_layout.rst", "api/kqcircuits.pya_resolver.rst", "api/kqcircuits.qubits.rst", "api/kqcircuits.qubits.circular_transmon_single_island.rst", "api/kqcircuits.qubits.concentric_transmon.rst", "api/kqcircuits.qubits.double_pads.rst", "api/kqcircuits.qubits.double_pads_splines.rst", "api/kqcircuits.qubits.qubit.rst", "api/kqcircuits.qubits.swissmon.rst", "api/kqcircuits.run.rst", "api/kqcircuits.simulations.rst", "api/kqcircuits.simulations.airbridges_sim.rst", "api/kqcircuits.simulations.cross_section_simulation.rst", "api/kqcircuits.simulations.empty_simulation.rst", "api/kqcircuits.simulations.epr.rst", "api/kqcircuits.simulations.epr.circular_capacitor.rst", "api/kqcircuits.simulations.epr.example.rst", "api/kqcircuits.simulations.epr.gui_config.rst", "api/kqcircuits.simulations.epr.smooth_capacitor.rst", "api/kqcircuits.simulations.epr.spiral_capacitor.rst", "api/kqcircuits.simulations.epr.swissmon.rst", "api/kqcircuits.simulations.epr.util.rst", "api/kqcircuits.simulations.export.rst", "api/kqcircuits.simulations.export.ansys.rst", "api/kqcircuits.simulations.export.ansys.ansys_export.rst", "api/kqcircuits.simulations.export.ansys.ansys_solution.rst", "api/kqcircuits.simulations.export.cross_section.rst", "api/kqcircuits.simulations.export.cross_section.cross_section_export.rst", "api/kqcircuits.simulations.export.cross_section.cross_section_profile.rst", "api/kqcircuits.simulations.export.cross_section.epr_correction_export.rst", "api/kqcircuits.simulations.export.cross_section.xsection_export.rst", "api/kqcircuits.simulations.export.elmer.rst", "api/kqcircuits.simulations.export.elmer.elmer_export.rst", "api/kqcircuits.simulations.export.elmer.elmer_solution.rst", "api/kqcircuits.simulations.export.export_and_run.rst", "api/kqcircuits.simulations.export.export_singularity.rst", "api/kqcircuits.simulations.export.remote_export_and_run.rst", "api/kqcircuits.simulations.export.simulation_export.rst", "api/kqcircuits.simulations.export.simulation_validate.rst", "api/kqcircuits.simulations.export.solution.rst", "api/kqcircuits.simulations.export.sonnet.rst", "api/kqcircuits.simulations.export.sonnet.parser.rst", "api/kqcircuits.simulations.export.sonnet.sonnet_export.rst", "api/kqcircuits.simulations.export.util.rst", "api/kqcircuits.simulations.partition_region.rst", "api/kqcircuits.simulations.port.rst", "api/kqcircuits.simulations.post_process.rst", "api/kqcircuits.simulations.simulation.rst", "api/kqcircuits.simulations.single_element_simulation.rst", "api/kqcircuits.simulations.single_xmons_full_chip_sim.rst", "api/kqcircuits.simulations.waveguides_sim.rst", "api/kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.rst", "api/kqcircuits.simulations.xmons_direct_coupling_sim.rst", "api/kqcircuits.test_structures.rst", "api/kqcircuits.test_structures.airbridge_dc.rst", "api/kqcircuits.test_structures.cross_test.rst", "api/kqcircuits.test_structures.junction_test_pads.rst", "api/kqcircuits.test_structures.junction_test_pads.junction_test_pads.rst", "api/kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple.rst", "api/kqcircuits.test_structures.stripes_test.rst", "api/kqcircuits.test_structures.stripes_test_increasing_width.rst", "api/kqcircuits.test_structures.test_structure.rst", "api/kqcircuits.test_structures.tsv_test_pattern.rst", "api/kqcircuits.util.rst", "api/kqcircuits.util.area.rst", "api/kqcircuits.util.count_instances.rst", "api/kqcircuits.util.coupler_lib.rst", "api/kqcircuits.util.deep_delete.rst", "api/kqcircuits.util.defaults_helper.rst", "api/kqcircuits.util.dependencies.rst", "api/kqcircuits.util.edit_node_plugin.rst", "api/kqcircuits.util.export_helper.rst", "api/kqcircuits.util.geometry_helper.rst", "api/kqcircuits.util.geometry_json_encoder.rst", "api/kqcircuits.util.groundgrid.rst", "api/kqcircuits.util.gui_helper.rst", "api/kqcircuits.util.import_helper.rst", "api/kqcircuits.util.label.rst", "api/kqcircuits.util.label_polygons.rst", "api/kqcircuits.util.layout_to_code.rst", "api/kqcircuits.util.library_helper.rst", "api/kqcircuits.util.load_save_layout.rst", "api/kqcircuits.util.log_router.rst", "api/kqcircuits.util.merge.rst", "api/kqcircuits.util.netlist_extraction.rst", "api/kqcircuits.util.netlist_graph.rst", "api/kqcircuits.util.parameters.rst", "api/kqcircuits.util.plugin_startup.rst", "api/kqcircuits.util.refpoints.rst", "api/kqcircuits.util.replace_junctions.rst", "api/kqcircuits.util.symmetric_polygons.rst", "citing.rst", "contributing.rst", "developer/architecture.rst", "developer/coding_style.rst", "developer/containers.rst", "developer/documentation.rst", "developer/index.rst", "developer/setup.rst", "developer/standalone.rst", "developer/testing.rst", "getting_started/first_look.rst", "getting_started/gui_features/gui_elements.rst", "getting_started/gui_features/gui_elements_to_code.rst", "getting_started/gui_features/gui_menu_commands.rst", "getting_started/gui_features/gui_tutorial.rst", "getting_started/gui_features/gui_waveguides.rst", "getting_started/gui_features/index.rst", "getting_started/index.rst", "getting_started/python_workflow/faces.rst", "getting_started/python_workflow/index.rst", "getting_started/python_workflow/layers.rst", "getting_started/python_workflow/python_example.rst", "getting_started/python_workflow/python_start.rst", "getting_started/python_workflow/python_structure.rst", "getting_started/python_workflow/refpoints.rst", "getting_started/salt.rst", "index.rst", "installation/index.rst", "installation/klayout.rst", "installation/known_issues.rst", "support.rst", "trademarks.rst", "user_guide/configuration.rst", "user_guide/cross_section.rst", "user_guide/file_system_and_utilities.rst", "user_guide/index.rst", "user_guide/macro_workflow.rst", "user_guide/mask_export.rst", "user_guide/simulation/elmer_remote_workflow.rst", "user_guide/simulation/export_and_run.rst", "user_guide/simulation/gmsh_elmer_export.rst", "user_guide/simulation/simulation_features.rst", "user_guide/simulation/simulation_objects.rst", "user_guide/simulation/simulation_scripts.rst", "user_guide/simulations.rst", "user_guide/terminology.rst", "user_guide/usage.rst"], "titles": ["About", "API documentation", "kqcircuits.chips", "kqcircuits.chips.airbridge_crossings", "kqcircuits.chips.airbridge_dc_test", "kqcircuits.chips.chip", "kqcircuits.chips.crossing_twoface", "kqcircuits.chips.daisy_woven", "kqcircuits.chips.dc_test", "kqcircuits.chips.demo", "kqcircuits.chips.demo_twoface", "kqcircuits.chips.empty", "kqcircuits.chips.junction_test", "kqcircuits.chips.junction_test2", "kqcircuits.chips.launchers", "kqcircuits.chips.lithography_test", "kqcircuits.chips.lithography_test_twoface", "kqcircuits.chips.munch_qubits", "kqcircuits.chips.quality_factor", "kqcircuits.chips.quality_factor_twoface", "kqcircuits.chips.sample_holder_test", "kqcircuits.chips.shaping", "kqcircuits.chips.simple", "kqcircuits.chips.single_xmons", "kqcircuits.chips.stripes", "kqcircuits.chips.tsv_test", "kqcircuits.chips.xmons_direct_coupling", "kqcircuits.defaults", "kqcircuits.elements", "kqcircuits.elements.airbridge_connection", "kqcircuits.elements.airbridges", "kqcircuits.elements.airbridges.airbridge", "kqcircuits.elements.airbridges.airbridge_multi_face", "kqcircuits.elements.airbridges.airbridge_rectangular", "kqcircuits.elements.capacitive_x_coupler", "kqcircuits.elements.chip_frame", "kqcircuits.elements.circular_capacitor", "kqcircuits.elements.element", "kqcircuits.elements.finger_capacitor_square", "kqcircuits.elements.finger_capacitor_taper", "kqcircuits.elements.flip_chip_connectors", "kqcircuits.elements.flip_chip_connectors.flip_chip_connector", "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc", "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf", "kqcircuits.elements.fluxlines", "kqcircuits.elements.fluxlines.fluxline", "kqcircuits.elements.fluxlines.fluxline_standard", "kqcircuits.elements.fluxlines.fluxline_straight", "kqcircuits.elements.hanger_resonator", "kqcircuits.elements.launcher", "kqcircuits.elements.launcher_dc", "kqcircuits.elements.markers", "kqcircuits.elements.markers.marker", "kqcircuits.elements.markers.marker_standard", "kqcircuits.elements.markers.mask_marker_fc", "kqcircuits.elements.meander", "kqcircuits.elements.quarter_wave_cpw_resonator", "kqcircuits.elements.smooth_capacitor", "kqcircuits.elements.spiral_capacitor", "kqcircuits.elements.spiral_resonator_polygon", "kqcircuits.elements.tsvs", "kqcircuits.elements.tsvs.tsv", "kqcircuits.elements.tsvs.tsv_ellipse", "kqcircuits.elements.tsvs.tsv_standard", "kqcircuits.elements.waveguide_composite", "kqcircuits.elements.waveguide_coplanar", "kqcircuits.elements.waveguide_coplanar_curved", "kqcircuits.elements.waveguide_coplanar_splitter", "kqcircuits.elements.waveguide_coplanar_straight", "kqcircuits.elements.waveguide_coplanar_taper", "kqcircuits.junctions", "kqcircuits.junctions.junction", "kqcircuits.junctions.manhattan", "kqcircuits.junctions.manhattan_single_junction", "kqcircuits.junctions.no_squid", "kqcircuits.junctions.sim", "kqcircuits.junctions.squid", "kqcircuits.klayout_view", "kqcircuits.layer_cluster", "kqcircuits.layer_config", "kqcircuits.layer_config.default_layer_config", "kqcircuits.layer_config.example_layer_config", "kqcircuits.masks", "kqcircuits.masks.mask_export", "kqcircuits.masks.mask_layout", "kqcircuits.masks.mask_set", "kqcircuits.masks.multi_face_mask_layout", "kqcircuits.pya_resolver", "kqcircuits.qubits", "kqcircuits.qubits.circular_transmon_single_island", "kqcircuits.qubits.concentric_transmon", "kqcircuits.qubits.double_pads", "kqcircuits.qubits.double_pads_splines", "kqcircuits.qubits.qubit", "kqcircuits.qubits.swissmon", "kqcircuits.run", "kqcircuits.simulations", "kqcircuits.simulations.airbridges_sim", "kqcircuits.simulations.cross_section_simulation", "kqcircuits.simulations.empty_simulation", "kqcircuits.simulations.epr", "kqcircuits.simulations.epr.circular_capacitor", "kqcircuits.simulations.epr.example", "kqcircuits.simulations.epr.gui_config", "kqcircuits.simulations.epr.smooth_capacitor", "kqcircuits.simulations.epr.spiral_capacitor", "kqcircuits.simulations.epr.swissmon", "kqcircuits.simulations.epr.util", "kqcircuits.simulations.export", "kqcircuits.simulations.export.ansys", "kqcircuits.simulations.export.ansys.ansys_export", "kqcircuits.simulations.export.ansys.ansys_solution", "kqcircuits.simulations.export.cross_section", "kqcircuits.simulations.export.cross_section.cross_section_export", "kqcircuits.simulations.export.cross_section.cross_section_profile", "kqcircuits.simulations.export.cross_section.epr_correction_export", "kqcircuits.simulations.export.cross_section.xsection_export", "kqcircuits.simulations.export.elmer", "kqcircuits.simulations.export.elmer.elmer_export", "kqcircuits.simulations.export.elmer.elmer_solution", "kqcircuits.simulations.export.export_and_run", "kqcircuits.simulations.export.export_singularity", "kqcircuits.simulations.export.remote_export_and_run", "kqcircuits.simulations.export.simulation_export", "kqcircuits.simulations.export.simulation_validate", "kqcircuits.simulations.export.solution", "kqcircuits.simulations.export.sonnet", "kqcircuits.simulations.export.sonnet.parser", "kqcircuits.simulations.export.sonnet.sonnet_export", "kqcircuits.simulations.export.util", "kqcircuits.simulations.partition_region", "kqcircuits.simulations.port", "kqcircuits.simulations.post_process", "kqcircuits.simulations.simulation", "kqcircuits.simulations.single_element_simulation", "kqcircuits.simulations.single_xmons_full_chip_sim", "kqcircuits.simulations.waveguides_sim", "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim", "kqcircuits.simulations.xmons_direct_coupling_sim", "kqcircuits.test_structures", "kqcircuits.test_structures.airbridge_dc", "kqcircuits.test_structures.cross_test", "kqcircuits.test_structures.junction_test_pads", "kqcircuits.test_structures.junction_test_pads.junction_test_pads", "kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple", "kqcircuits.test_structures.stripes_test", "kqcircuits.test_structures.stripes_test_increasing_width", "kqcircuits.test_structures.test_structure", "kqcircuits.test_structures.tsv_test_pattern", "kqcircuits.util", "kqcircuits.util.area", "kqcircuits.util.count_instances", "kqcircuits.util.coupler_lib", "kqcircuits.util.deep_delete", "kqcircuits.util.defaults_helper", "kqcircuits.util.dependencies", "kqcircuits.util.edit_node_plugin", "kqcircuits.util.export_helper", "kqcircuits.util.geometry_helper", "kqcircuits.util.geometry_json_encoder", "kqcircuits.util.groundgrid", "kqcircuits.util.gui_helper", "kqcircuits.util.import_helper", "kqcircuits.util.label", "kqcircuits.util.label_polygons", "kqcircuits.util.layout_to_code", "kqcircuits.util.library_helper", "kqcircuits.util.load_save_layout", "kqcircuits.util.log_router", "kqcircuits.util.merge", "kqcircuits.util.netlist_extraction", "kqcircuits.util.netlist_graph", "kqcircuits.util.parameters", "kqcircuits.util.plugin_startup", "kqcircuits.util.refpoints", "kqcircuits.util.replace_junctions", "kqcircuits.util.symmetric_polygons", "Citing", "Contributing", "Architecture", "Coding Style", "Containers", "Documentation", "Developer Guide", "Developer GUI Setup", "Developer Standalone module Setup", "Testing", "First look around", "Placing Elements", "Converting elements placed in GUI into code", "Useful commands", "Manual workflow tutorial", "Using waveguides", "GUI Features", "Getting started", "Faces", "Python workflow", "KQCircuits Layers", "Detailed examples", "Getting started", "Structure of Element code", "Refpoints", "KQCircuits Salt package", "KQCircuits documentation", "Installation", "Installing KLayout", "Known installation issues", "Support", "Trademarks", "Custom configuration", "Cross sections", "General Structure and Miscellaneous Utilities", "User Guide", "Macro and script development", "Mask export", "Elmer remote simulations workflow", "Run and export in one line", "Gmsh/Elmer export", "Simulation features", "Simulation objects", "Export functions", "External simulation tools", "Terminology", "Usage"], "terms": {"kqcircuit": [0, 1, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223], "develop": [0, 114, 178, 186, 196, 200, 202, 203, 204, 205, 210, 212, 216, 220], "wa": [0, 37, 84, 98, 133, 165, 174, 202, 203, 206, 213, 214, 217, 219, 223], "start": [0, 5, 13, 19, 35, 55, 59, 64, 65, 66, 67, 80, 89, 90, 113, 129, 133, 143, 158, 165, 172, 175, 182, 191, 196, 200, 202, 203, 207, 209, 211, 213, 215, 217, 219], "johann": [0, 177], "heinsoo": [0, 177], "aalto": [0, 70, 218], "univers": [0, 218], "The": [0, 3, 5, 6, 12, 13, 14, 18, 19, 20, 21, 22, 23, 24, 26, 29, 32, 33, 35, 36, 37, 38, 39, 41, 43, 49, 50, 52, 53, 54, 55, 57, 58, 59, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 77, 80, 82, 83, 84, 85, 86, 88, 89, 90, 93, 94, 96, 97, 98, 99, 107, 110, 111, 113, 115, 116, 118, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 140, 151, 157, 158, 159, 161, 162, 165, 167, 169, 170, 171, 172, 175, 178, 179, 181, 182, 184, 185, 186, 187, 188, 189, 191, 192, 193, 195, 196, 198, 199, 200, 201, 202, 204, 206, 209, 210, 211, 213, 214, 215, 217, 218, 220, 221, 222, 223], "final": [0, 64, 80, 85, 133, 197, 220], "kqc": [0, 95, 98, 114, 120, 122, 171, 173, 174, 178, 179, 181, 184, 185, 187, 188, 189, 195, 199, 202, 204, 205, 206, 209, 211, 213, 214, 215, 216, 217, 223], "version": [0, 1, 82, 83, 84, 85, 86, 159, 177, 181, 183, 184, 185, 191, 202, 204, 205, 210, 211, 214, 215, 217, 220], "correspond": [0, 17, 19, 26, 37, 64, 80, 84, 86, 89, 90, 119, 130, 133, 138, 158, 162, 163, 165, 170, 179, 181, 185, 186, 187, 188, 191, 198, 199, 200, 201, 211, 213, 218, 219, 221, 222], "v0": [0, 206], "0": [0, 5, 6, 7, 10, 13, 16, 17, 18, 19, 23, 25, 28, 29, 31, 32, 35, 36, 37, 38, 43, 47, 55, 56, 57, 59, 64, 65, 66, 67, 71, 72, 73, 77, 80, 89, 91, 92, 93, 94, 98, 111, 113, 115, 116, 119, 127, 128, 129, 131, 133, 137, 143, 147, 148, 150, 158, 159, 164, 165, 169, 172, 173, 174, 175, 181, 185, 191, 195, 197, 201, 202, 205, 206, 209, 214, 218, 219], "tag": [0, 170, 178, 181, 185, 222], "iqm": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223], "github": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223], "repositori": [0, 157, 181, 183, 185, 202, 204, 211, 218], "sinc": [0, 161, 185, 189, 201, 219], "ha": [0, 5, 20, 23, 36, 37, 38, 57, 64, 72, 84, 85, 89, 90, 94, 98, 111, 124, 133, 157, 161, 165, 171, 172, 175, 181, 184, 185, 187, 189, 190, 197, 200, 201, 202, 206, 211, 213, 214, 215, 217, 219], "been": [0, 64, 85, 133, 166, 181, 202, 214], "see": [0, 2, 19, 37, 64, 77, 80, 85, 97, 99, 107, 111, 113, 116, 119, 128, 133, 134, 135, 136, 137, 138, 139, 175, 178, 179, 181, 184, 185, 189, 190, 191, 192, 195, 196, 198, 199, 201, 202, 204, 206, 208, 209, 210, 211, 213, 214, 215, 217, 218, 219, 220, 223], "cite": [0, 203], "section": [0, 13, 25, 29, 32, 37, 38, 59, 64, 91, 98, 111, 113, 114, 116, 119, 131, 133, 134, 143, 148, 170, 174, 179, 184, 185, 189, 190, 191, 192, 193, 194, 196, 198, 200, 201, 202, 203, 209, 212, 214, 216, 219, 221], "other": [0, 2, 5, 13, 28, 34, 37, 38, 64, 65, 66, 72, 73, 77, 78, 80, 91, 93, 98, 119, 122, 128, 133, 143, 152, 158, 168, 174, 175, 176, 177, 178, 179, 181, 185, 186, 187, 189, 192, 193, 195, 197, 198, 200, 201, 203, 206, 209, 211, 213, 214, 217, 218, 219, 220, 222, 223], "author": [0, 177], "http": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223], "com": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223], "finland": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223], "chip": [1, 28, 29, 32, 35, 37, 38, 40, 41, 42, 43, 49, 54, 59, 64, 80, 82, 83, 84, 85, 86, 91, 114, 133, 136, 137, 143, 148, 157, 165, 170, 171, 175, 179, 181, 187, 189, 190, 192, 194, 195, 196, 197, 200, 201, 202, 203, 209, 212, 213, 219, 222, 223], "airbridge_cross": [1, 2], "airbridgecross": [1, 2, 3], "build": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 82, 84, 85, 88, 89, 90, 91, 94, 96, 97, 98, 99, 107, 133, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 148, 165, 166, 179, 181, 182, 184, 187, 196, 198, 199, 201, 202, 205, 206, 214, 215, 217, 218, 219, 220, 221], "airbridge_dc_test": [1, 2], "airbridgedctest": [1, 2, 4], "library_nam": [1, 2, 5, 28, 37, 64, 70, 71, 88, 93, 96, 98, 133, 139, 147, 166, 179], "library_descript": [1, 2, 5, 28, 37, 70, 71, 88, 93, 139, 147, 179], "library_path": [1, 2, 5, 28, 37, 70, 71, 88, 93, 139, 147, 166], "display_text_impl": [1, 2, 5, 28, 37], "can_create_from_shape_impl": [1, 2, 5, 28, 38, 39, 55, 57, 58, 65], "parameters_from_shape_impl": [1, 2, 5, 28, 55, 65], "transformation_from_shape_impl": [1, 2, 5, 28, 30, 31, 65], "get_launcher_assign": [1, 2, 5], "produce_junction_test": [1, 2, 5, 9], "produce_opt_lit_test": [1, 2, 5], "produce_ground_grid": [1, 2, 5], "produce_ground_on_face_grid": [1, 2, 5], "produce_fram": [1, 2, 5], "merge_layout_layers_on_fac": [1, 2, 5, 149, 169], "merge_layout_lay": [1, 2, 5], "produce_structur": [1, 2, 5], "get_box": [1, 2, 5], "get_filter_region": [1, 2, 5], "insert_filtered_el": [1, 2, 5], "get_ground_bump_loc": [1, 2, 5], "post_build": [1, 2, 5, 28, 37], "produce_launch": [1, 2, 5, 96, 137, 198, 201, 209], "produce_n_launch": [1, 2, 5], "make_grid_loc": [1, 2, 5], "get_ground_tsv_loc": [1, 2, 5], "crossing_twofac": [1, 2], "crossingtwofac": [1, 2, 6], "daisy_woven": [1, 2], "daisywoven": [1, 2, 7], "dc_test": [1, 2], "dctest": [1, 2, 8], "demo": [1, 2, 211, 213, 214], "produce_qubit": [1, 2, 9, 10, 17, 26, 96, 137, 138], "produce_coupl": [1, 2, 9, 10, 17], "produce_control_lin": [1, 2, 9, 10], "produce_drivelin": [1, 2, 9, 10, 17], "produce_fluxlin": [1, 2, 9, 10, 88, 93], "produce_readout_structur": [1, 2, 9, 10], "produce_probelin": [1, 2, 9, 10, 17], "demo_twofac": [1, 2, 214], "demotwofac": [1, 2, 10, 195, 214], "empti": [1, 2, 5, 13, 25, 29, 32, 34, 36, 37, 38, 48, 56, 57, 58, 59, 64, 67, 85, 86, 89, 90, 91, 94, 98, 133, 143, 148, 161, 171, 172, 186, 190, 218, 219, 220], "make_empty_area": [1, 2, 11], "junction_test": [1, 2], "junctiontest": [1, 2, 12], "junction_test2": [1, 2], "junctiontest2": [1, 2, 13], "launcher": [1, 2, 5, 7, 8, 18, 20, 23, 28, 50, 94, 135, 137, 170, 191, 195, 198, 201, 209], "lithography_test": [1, 2], "lithographytest": [1, 2, 15], "create_pattern": [1, 2, 15, 16], "lithography_test_twofac": [1, 2], "lithographytesttwofac": [1, 2, 16], "munch_qubit": [1, 2], "munchqubit": [1, 2, 17], "produce_readout_reson": [1, 2, 17, 26, 96, 137], "quality_factor": [1, 2, 166, 214], "qualityfactor": [1, 2, 18, 85, 166, 214], "quality_factor_twofac": [1, 2], "qualityfactortwofac": [1, 2, 19], "produce_reson": [1, 2, 19], "sample_holder_test": [1, 2], "sampleholdertest": [1, 2, 20], "shape": [1, 2, 5, 13, 18, 25, 28, 29, 31, 32, 33, 35, 37, 38, 43, 55, 59, 64, 65, 68, 78, 83, 85, 89, 90, 91, 93, 98, 113, 114, 133, 143, 147, 148, 163, 169, 175, 187, 188, 192, 197, 198, 210, 213, 219, 220, 222], "simpl": [1, 2, 13, 85, 87, 128, 133, 143, 144, 181, 195, 214, 217], "single_xmon": [1, 2], "singlexmon": [1, 2, 23], "qubits_refpoint": [1, 2, 23], "stripe": [1, 2, 5, 15, 16, 145, 146], "tsv_test": [1, 2], "tsvtest": [1, 2, 25], "create_xsect": [1, 2, 25], "xmons_direct_coupl": [1, 2], "xmonsdirectcoupl": [1, 2, 26], "element": [1, 2, 3, 5, 13, 22, 23, 25, 27, 71, 73, 77, 84, 85, 89, 90, 91, 93, 94, 101, 102, 104, 105, 106, 107, 111, 119, 131, 133, 134, 139, 143, 147, 148, 149, 152, 158, 159, 161, 165, 166, 169, 170, 171, 172, 174, 175, 181, 183, 185, 190, 192, 193, 194, 196, 197, 201, 202, 203, 209, 210, 212, 213, 214, 218, 220, 221, 223], "airbridg": [1, 3, 4, 18, 19, 28, 29, 37, 52, 54, 55, 56, 59, 64, 67, 133, 140, 149, 166, 174, 192, 219], "default_typ": [1, 28, 30, 31, 32, 33, 40, 41, 44, 45, 51, 52, 60, 61, 70, 71, 139, 142, 143], "creat": [1, 2, 5, 28, 30, 31, 32, 37, 40, 41, 44, 45, 51, 52, 60, 61, 64, 65, 66, 70, 71, 76, 77, 80, 84, 85, 86, 87, 93, 97, 98, 99, 107, 110, 113, 116, 118, 123, 133, 134, 135, 136, 137, 138, 139, 142, 143, 150, 156, 157, 161, 165, 166, 169, 173, 174, 179, 182, 184, 185, 186, 187, 190, 191, 192, 194, 196, 198, 199, 200, 201, 202, 203, 207, 211, 212, 214, 217, 218, 219, 220, 222], "airbridge_multi_fac": [1, 28, 30], "airbridgemultifac": [1, 28, 30, 32], "airbridge_rectangular": [1, 28, 30], "airbridgerectangular": [1, 28, 30, 33], "flip_chip_connector": [1, 28], "flipchipconnector": [1, 28, 40, 41, 42, 64], "flip_chip_connector_dc": [1, 28, 40], "flipchipconnectordc": [1, 28, 40, 42], "flip_chip_connector_rf": [1, 28, 40], "flipchipconnectorrf": [1, 28, 40, 43, 195], "get_sim_port": [1, 28, 34, 36, 37, 38, 40, 43, 48, 56, 57, 58, 88, 89, 90, 91, 94, 219], "fluxlin": [1, 9, 23, 26, 28, 88, 93, 94, 138], "fluxline_standard": [1, 28, 44], "fluxlinestandard": [1, 28, 44, 46], "fluxline_straight": [1, 28, 44], "fluxlinestraight": [1, 28, 44, 47], "marker": [1, 5, 13, 28, 35, 55, 84, 141, 157, 175], "produce_geometri": [1, 28, 51, 52], "get_marker_loc": [1, 28, 51, 52, 54], "get_marker_region": [1, 28, 51, 52, 54], "marker_standard": [1, 28, 51], "markerstandard": [1, 28, 51, 53], "mask_marker_fc": [1, 28, 51], "maskmarkerfc": [1, 28, 51, 54], "create_cross": [1, 28, 51, 54], "tsv": [1, 5, 25, 28, 37, 133, 148, 195, 200], "tsv_ellips": [1, 28, 60], "tsvellips": [1, 28, 60, 62], "produce_impl": [1, 28, 37, 60, 62, 179], "create_tsv_connector": [1, 28, 60, 62], "tsv_standard": [1, 28, 60], "tsvstandard": [1, 28, 60, 63], "airbridge_connect": [1, 28], "airbridgeconnect": [1, 28, 29, 64], "capacitive_x_coupl": [1, 28], "capacitivexcoupl": [1, 28, 34], "chip_fram": [1, 28], "chipfram": [1, 5, 6, 7, 10, 16, 19, 28, 35], "circular_capacitor": [1, 28, 96, 100], "circularcapacitor": [1, 28, 36], "get_refpoint": [1, 28, 37, 96, 133], "insert_cell_into": [1, 28, 37], "resolve_fac": [1, 28, 37], "parameter_order_kei": [1, 28, 37], "create_cell_from_shap": [1, 28, 37], "create_subtyp": [1, 28, 37], "create_with_refpoint": [1, 28, 37], "add_el": [1, 28, 37, 71, 76, 96, 133, 152, 179, 198], "insert_cel": [1, 26, 28, 37, 77, 96, 133, 138, 152, 165, 179, 195, 198, 201, 213, 219], "face": [1, 5, 6, 7, 10, 13, 16, 19, 25, 28, 29, 31, 32, 35, 37, 38, 41, 43, 56, 59, 62, 63, 64, 65, 66, 67, 77, 80, 82, 83, 84, 85, 86, 91, 96, 98, 107, 114, 130, 131, 133, 136, 143, 148, 149, 157, 169, 170, 174, 175, 187, 190, 192, 196, 197, 200, 201, 212, 221], "pcell_params_by_nam": [1, 28, 37, 96, 133], "add_port": [1, 28, 37, 201], "copy_port": [1, 28, 37], "get_schema": [1, 28, 37, 96, 98, 133], "etch_opposite_face_impl": [1, 28, 37], "get_lay": [1, 28, 37, 93, 96, 98, 108, 112, 114, 133, 195, 198], "raise_error_on_cel": [1, 28, 37], "add_protect": [1, 28, 37], "finger_capacitor_squar": [1, 28, 201], "eval_a2": [1, 28, 38], "eval_b2": [1, 28, 38], "fingercapacitorsquar": [1, 28, 38, 152, 201], "get_ground_region": [1, 28, 38], "finger_area_width": [1, 28, 38], "finger_area_length": [1, 28, 38], "cut_region": [1, 28, 38], "add_waveguid": [1, 28, 38], "finger_capacitor_tap": [1, 28], "fingercapacitortap": [1, 28, 39], "hanger_reson": [1, 28], "hangerreson": [1, 28, 48], "launcher_dc": [1, 28], "launcherdc": [1, 28, 50], "meander": [1, 3, 6, 18, 28, 56, 64, 128, 161, 192], "quarter_wave_cpw_reson": [1, 28], "quarterwavecpwreson": [1, 28, 56], "smooth_capacitor": [1, 28, 96, 100, 134], "unit_vector": [1, 28, 57], "segment_point": [1, 28, 57], "smoothcapacitor": [1, 19, 28, 57, 152], "t_poli": [1, 28, 57], "finger_polygon": [1, 28, 57], "super_smoothen_region": [1, 28, 57], "get_finger_region": [1, 28, 57], "middle_gap_fil": [1, 28, 57], "insert_wg_joint": [1, 28, 57], "spiral_capacitor": [1, 28, 96, 100], "spiralcapacitor": [1, 28, 58], "spiral_resonator_polygon": [1, 28], "spiralresonatorpolygon": [1, 28, 59, 192], "rectangular_paramet": [1, 28, 59], "waveguide_composit": [1, 28], "node": [1, 28, 64, 156, 161, 165, 171, 189, 191, 201, 217], "posit": [1, 17, 23, 25, 28, 31, 37, 55, 64, 65, 66, 84, 89, 90, 93, 94, 107, 127, 133, 157, 161, 163, 165, 171, 174, 189, 192, 198, 200, 201, 214], "align": [1, 28, 37, 54, 64, 77, 84, 93, 133, 141, 157, 161, 175, 189, 201, 214], "inst_nam": [1, 9, 10, 28, 37, 64, 77, 133, 161, 175, 201], "angl": [1, 17, 28, 36, 58, 64, 65, 66, 67, 89, 90, 158, 161], "length_befor": [1, 28, 64, 161], "length_incr": [1, 28, 64, 161], "meander_direct": [1, 28, 55, 64], "deseri": [1, 28, 64, 159], "nodes_from_str": [1, 28, 64], "waveguidecomposit": [1, 28, 64, 161, 165, 201], "get_segment_cel": [1, 28, 64], "get_segment_length": [1, 28, 64], "produce_fixed_length_waveguid": [1, 28, 64], "snap_point": [1, 28, 64], "coerce_parameters_impl": [1, 28, 64, 66], "check_node_typ": [1, 28, 64], "produce_fixed_length_bend": [1, 28, 64], "waveguide_coplanar": [1, 28, 201], "waveguidecoplanar": [1, 28, 64, 65, 165, 189, 201], "produce_waveguid": [1, 28, 65, 96, 137], "get_corner_data": [1, 28, 65], "produce_end_termin": [1, 28, 65], "is_continu": [1, 28, 65], "waveguide_coplanar_curv": [1, 28], "arc": [1, 17, 28, 66, 89, 90, 158], "waveguidecoplanarcurv": [1, 28, 66], "build_geometri": [1, 28, 66, 68], "create_curve_arc": [1, 28, 66], "produce_curve_termin": [1, 28, 66], "waveguide_coplanar_splitt": [1, 28], "waveguidecoplanarsplitt": [1, 28, 67, 192], "t_cross_paramet": [1, 28, 67], "waveguide_coplanar_straight": [1, 28], "waveguidecoplanarstraight": [1, 28, 68], "add_waveguide_path": [1, 28, 68], "waveguide_coplanar_tap": [1, 28], "waveguidecoplanartap": [1, 28, 64, 69], "junction": [1, 5, 9, 10, 13, 23, 26, 83, 89, 90, 91, 92, 93, 131, 133, 138, 142, 143, 144, 174, 175, 179, 187, 197, 203, 218, 219], "manhattan": [1, 5, 10, 13, 23, 26, 70, 71, 73, 91, 93, 138, 143], "produce_manhattan_squid": [1, 70, 72], "produce_tp_smal": [1, 70, 72], "produce_tp_larg": [1, 70, 72], "produce_contact_pad": [1, 70, 72], "manhattan_single_junct": [1, 70], "manhattansinglejunct": [1, 70, 73], "produce_manhattan_junct": [1, 70, 73], "no_squid": [1, 70], "nosquid": [1, 70, 74], "sim": [1, 10, 13, 23, 26, 70, 71, 91, 93, 115, 134, 138, 143, 185, 204, 215, 216, 217, 219, 220], "squid": [1, 10, 13, 23, 26, 70, 71, 72, 74, 75, 88, 91, 92, 93, 94, 131, 138, 143, 175], "layer_config": [1, 203, 209, 211], "default_layer_config": [1, 79, 195, 209], "example_layer_config": [1, 79, 209], "mask": [1, 5, 35, 52, 54, 149, 181, 185, 191, 194, 197, 203, 204, 211, 212, 222], "mask_export": [1, 82], "export_mask_set": [1, 82, 83], "export_design": [1, 82, 83], "export_chip": [1, 82, 83], "export_masks_of_fac": [1, 82, 83], "export_mask": [1, 82, 83], "export_doc": [1, 82, 83], "export_bitmap": [1, 82, 83], "get_mask_layout_full_nam": [1, 82, 83], "export_junction_paramet": [1, 82, 83], "mask_layout": [1, 82, 83, 85, 86, 214], "masklayout": [1, 82, 83, 84, 85, 86], "layout": [1, 25, 26, 28, 31, 37, 41, 45, 52, 61, 64, 71, 77, 82, 83, 84, 85, 86, 96, 97, 98, 99, 113, 114, 116, 123, 130, 133, 135, 136, 137, 138, 143, 148, 157, 166, 167, 169, 170, 171, 173, 175, 179, 185, 188, 190, 191, 201, 203, 204, 209, 210, 213, 214, 219, 220, 221, 223], "name": [1, 5, 7, 9, 10, 13, 17, 19, 22, 23, 25, 26, 29, 32, 35, 37, 38, 43, 59, 62, 64, 67, 71, 76, 77, 78, 80, 82, 83, 84, 85, 86, 91, 93, 96, 98, 107, 108, 110, 111, 114, 115, 118, 119, 122, 123, 124, 125, 130, 131, 132, 133, 134, 137, 143, 147, 148, 150, 157, 161, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 179, 181, 182, 184, 191, 197, 198, 199, 201, 202, 206, 209, 211, 213, 214, 215, 219, 220, 221], "with_grid": [1, 5, 82, 84, 85, 86, 133, 214], "face_id": [1, 5, 13, 15, 16, 19, 25, 28, 29, 32, 37, 38, 43, 59, 64, 77, 78, 82, 84, 85, 86, 91, 114, 133, 143, 148, 195, 209], "layers_to_mask": [1, 82, 84, 214], "covered_region_excluded_lay": [1, 82, 84], "chips_map": [1, 82, 84, 85, 86], "align_to": [1, 37, 77, 82, 84, 133, 201, 214], "chips_map_legend": [1, 82, 84, 85], "wafer_rad": [1, 82, 84], "wafer_cent": [1, 82, 84], "chips_map_offset": [1, 82, 84], "wafer_top_flat_length": [1, 82, 84], "wafer_bottom_flat_length": [1, 82, 84], "dice_width": [1, 35, 82, 84], "text_margin": [1, 35, 82, 84], "chip_siz": [1, 82, 84, 214], "edge_clear": [1, 82, 84, 214], "remove_chip": [1, 82, 84], "chip_box_offset": [1, 82, 84], "chip_tran": [1, 82, 84], "mask_name_offset": [1, 82, 84], "mask_name_scal": [1, 82, 84], "mask_name_box_margin": [1, 82, 84], "mask_text_scal": [1, 82, 84], "mask_markers_dict": [1, 82, 84], "mask_marker_offset": [1, 82, 84], "mask_export_lay": [1, 80, 82, 84, 85], "mask_export_density_lay": [1, 82, 84], "submask": [1, 82, 84], "extra_id": [1, 82, 84], "extra_chip": [1, 82, 84], "top_cel": [1, 77, 82, 84, 161, 165, 175, 213, 222], "added_chip": [1, 82, 84], "chips_placed_by_position_label": [1, 82, 84], "chip_copi": [1, 82, 84], "mirror_label": [1, 82, 84], "bbox_face_id": [1, 82, 84, 85, 86], "add_chips_map": [1, 82, 84, 86, 214], "insert_chip": [1, 82, 84], "generate_position_label": [1, 82, 84], "generate_and_insert_chip_copy_label": [1, 82, 84], "insert_chip_copy_label": [1, 82, 84], "two_coordinates_to_position_label": [1, 82, 84], "position_label_to_two_coordin": [1, 82, 84], "mask_set": [1, 82, 83, 214], "maskset": [1, 82, 83, 85, 86, 214], "view": [1, 77, 80, 82, 85, 119, 156, 165, 173, 185, 186, 190, 201, 202, 209, 213, 217, 220, 223], "export_drc": [1, 82, 83, 85], "used_chip": [1, 82, 85], "export_path": [1, 82, 85, 120, 171, 214], "add_mask_layout": [1, 82, 85, 214], "add_multi_face_mask_layout": [1, 82, 85, 86], "add_chip": [1, 82, 85, 214], "export": [1, 77, 78, 80, 82, 83, 84, 85, 96, 97, 99, 107, 133, 135, 136, 137, 138, 157, 165, 170, 171, 175, 185, 191, 194, 202, 203, 204, 210, 212, 213, 215, 218, 219, 221, 222], "chips_map_from_box_map": [1, 82, 85], "multi_face_mask_layout": [1, 82], "multifacemasklayout": [1, 82, 85, 86], "qubit": [1, 9, 10, 17, 23, 26, 70, 107, 137, 138, 179, 187, 191, 197, 200, 202, 203, 218, 219, 220], "circular_transmon_single_island": [1, 88], "circulartransmonsingleisland": [1, 88, 89], "concentric_transmon": [1, 88], "concentrictransmon": [1, 88, 90], "double_pad": [1, 88], "doublepad": [1, 88, 91, 92], "double_pads_splin": [1, 88], "doublepadssplin": [1, 88, 92], "produce_squid": [1, 88, 93, 139, 142, 143], "swissmon": [1, 88, 96, 100, 191, 219, 220], "simul": [1, 13, 25, 26, 29, 32, 34, 36, 37, 38, 43, 48, 56, 57, 58, 59, 64, 75, 80, 89, 90, 91, 93, 94, 143, 148, 149, 174, 181, 185, 194, 196, 197, 202, 203, 204, 210, 211, 212, 216, 217, 220], "epr": [1, 13, 25, 29, 32, 36, 37, 38, 56, 57, 58, 59, 64, 91, 94, 96, 115, 119, 131, 133, 134, 143, 148, 210, 218], "partition_region": [1, 96, 100, 101, 102, 104, 105, 106, 107, 115, 133], "correction_cut": [1, 96, 100, 101, 102, 104, 105, 106, 107, 115], "extract_circular_capacitor_from": [1, 96, 100, 101], "exampl": [1, 5, 28, 37, 64, 77, 78, 80, 84, 85, 96, 100, 107, 119, 133, 134, 158, 159, 166, 171, 175, 179, 181, 184, 185, 186, 187, 191, 192, 193, 195, 196, 197, 199, 200, 201, 205, 209, 210, 212, 214, 215, 217, 218, 219, 220], "extract_from": [1, 96, 100, 102], "gui_config": [1, 96, 100, 102], "extract_swissmon_from": [1, 96, 100, 106], "util": [1, 59, 67, 96, 100, 108, 185, 186, 198, 199, 201, 203, 210, 212, 219, 220], "in_gui": [1, 96, 100, 107], "get_mer_z": [1, 96, 100, 107], "extract_child_simul": [1, 96, 100, 107], "ansi": [1, 96, 108, 125, 154, 217, 218, 219, 221], "ansys_export": [1, 96, 108, 109, 218, 220], "export_ansys_json": [1, 96, 108, 109, 110], "export_ansys_bat": [1, 96, 108, 109, 110], "export_ansi": [1, 96, 108, 109, 110, 218, 220, 221], "ansys_solut": [1, 96, 108, 109], "ansyssolut": [1, 96, 108, 109, 110, 111], "ansys_tool": [1, 96, 108, 109, 111, 218], "percent_refin": [1, 96, 108, 109, 111, 218], "maximum_pass": [1, 96, 108, 109, 111, 117, 119, 218], "minimum_pass": [1, 96, 108, 109, 111, 117, 119, 218], "minimum_converged_pass": [1, 96, 108, 109, 111, 218], "frequency_unit": [1, 96, 108, 109, 111, 218], "mesh_siz": [1, 96, 108, 109, 111, 117, 119], "simulation_flag": [1, 96, 108, 109, 111, 218], "ansys_project_templ": [1, 96, 108, 109, 111], "get_solution_data": [1, 96, 108, 109, 111, 117, 119], "ansyshfsssolut": [1, 96, 108, 109, 111], "frequenc": [1, 96, 108, 109, 111, 117, 119, 217, 218], "max_delta_": [1, 96, 108, 109, 111, 117, 119, 218], "sweep_en": [1, 96, 108, 109, 111, 218], "sweep_start": [1, 96, 108, 109, 111, 218], "sweep_end": [1, 96, 108, 109, 111, 218], "sweep_count": [1, 96, 108, 109, 111, 218], "sweep_typ": [1, 96, 108, 109, 111, 117, 119, 218], "capacitance_export": [1, 96, 108, 109, 111, 218], "integrate_energi": [1, 96, 108, 109, 111, 117, 119, 218], "integrate_magnetic_flux": [1, 96, 108, 109, 111], "ansysq3dsolut": [1, 96, 108, 109, 111], "percent_error": [1, 96, 108, 109, 111, 117, 119, 218], "ansyseigenmodesolut": [1, 96, 108, 109, 111], "min_frequ": [1, 96, 108, 109, 111, 218], "max_delta_f": [1, 96, 108, 109, 111, 218], "n_mode": [1, 96, 108, 109, 111, 218], "ansyscurrentsolut": [1, 96, 108, 109, 111], "ansysvoltagesolut": [1, 96, 108, 109, 111], "ansyscrosssectionsolut": [1, 96, 108, 109, 111], "get_ansys_solut": [1, 96, 108, 109, 111], "cross_sect": [1, 96, 108, 210], "cross_section_export": [1, 96, 108, 112, 210], "create_cross_sections_from_simul": [1, 96, 108, 112, 113, 210], "find_layer_by_nam": [1, 96, 108, 112, 113], "free_layer_slot": [1, 96, 108, 112, 113], "visualise_cross_section_cut_on_original_layout": [1, 96, 108, 112, 113], "take_cross_sect": [1, 96, 108, 112, 113], "produce_intersection_shap": [1, 96, 108, 112, 113], "cross_section_profil": [1, 96, 108, 112, 113, 115], "crosssectionprofil": [1, 96, 108, 112, 113, 114, 115], "level": [1, 37, 77, 96, 108, 112, 113, 114, 115, 130, 133, 157, 159, 165, 174, 178, 179, 186, 188, 200, 201, 210, 211, 213, 217], "prioriti": [1, 96, 108, 112, 114, 159, 188], "get_level": [1, 96, 108, 112, 114], "get_dominant_layer_regex": [1, 96, 108, 112, 114], "get_invisible_lay": [1, 96, 108, 112, 114], "change_lay": [1, 96, 108, 112, 114], "add_fac": [1, 96, 108, 112, 114], "get_single_face_cross_section_profil": [1, 96, 108, 112, 114], "get_flip_chip_cross_section_profil": [1, 96, 108, 112, 114], "get_cross_section_profil": [1, 96, 108, 112, 113, 114, 115], "epr_correction_export": [1, 96, 108, 112, 210], "get_epr_correction_elmer_solut": [1, 96, 108, 112, 115], "get_epr_correction_simul": [1, 96, 102, 108, 112, 115], "xsection_export": [1, 96, 108, 112, 210], "xsection_cal": [1, 96, 108, 112, 116, 210], "create_xsections_from_simul": [1, 96, 108, 112, 116, 210], "elmer": [1, 96, 108, 125, 181, 212, 216, 218, 219, 221], "elmer_export": [1, 96, 108, 117, 218, 220], "export_elmer_json": [1, 96, 108, 117, 118], "export_elmer_script": [1, 96, 108, 117, 118], "export_elm": [1, 96, 108, 117, 118, 217, 218, 220, 221], "elmer_solut": [1, 96, 108, 117], "elmersolut": [1, 96, 108, 117, 118, 119], "tool": [1, 55, 65, 96, 98, 108, 115, 117, 119, 170, 185, 186, 187, 188, 190, 191, 192, 202, 203, 212, 218, 219, 220, 223], "max_error_scal": [1, 96, 108, 117, 119], "max_outlier_fract": [1, 96, 108, 117, 119], "is_axisymmetr": [1, 96, 108, 117, 119], "mesh_level": [1, 96, 108, 117, 119], "vtu_output": [1, 96, 108, 117, 119], "elmervectorhelmholtzsolut": [1, 96, 108, 117, 119], "frequency_batch": [1, 96, 108, 117, 119], "london_penetration_depth": [1, 96, 98, 108, 113, 116, 117, 119, 133], "quadratic_approxim": [1, 96, 108, 117, 119], "second_kind_basi": [1, 96, 108, 117, 119], "use_av": [1, 96, 108, 117, 119], "conduct": [1, 96, 108, 117, 119, 133], "nested_iter": [1, 96, 108, 117, 119], "convergence_toler": [1, 96, 108, 117, 119], "max_iter": [1, 96, 108, 117, 119], "elmercapacitancesolut": [1, 96, 108, 117, 119], "p_element_ord": [1, 96, 108, 117, 119], "linear_system_method": [1, 96, 108, 117, 119], "linear_system_precondit": [1, 96, 108, 117, 119], "elmercrosssectionsolut": [1, 96, 108, 115, 117, 119], "boundary_condit": [1, 96, 108, 117, 119], "run_inductance_sim": [1, 96, 108, 117, 119], "voltage_excit": [1, 96, 108, 117, 119], "elmerepr3dsolut": [1, 96, 108, 117, 119, 133], "get_elmer_solut": [1, 96, 108, 117, 119], "sonnet": [1, 96, 108, 221], "parser": [1, 96, 108, 126, 159], "apply_templ": [1, 96, 108, 126, 127], "polygon_head": [1, 96, 108, 126, 127], "symmetri": [1, 96, 108, 126, 127, 176], "box": [1, 5, 18, 19, 35, 52, 55, 77, 84, 85, 93, 96, 98, 107, 108, 113, 116, 119, 126, 127, 130, 133, 134, 141, 143, 160, 163, 170, 174, 188, 190, 191, 192, 198, 199, 202, 214, 221, 222], "refplan": [1, 96, 108, 126, 127], "port": [1, 5, 13, 17, 31, 34, 36, 37, 38, 39, 43, 48, 49, 56, 57, 58, 64, 67, 89, 90, 91, 93, 94, 96, 97, 99, 108, 119, 124, 126, 127, 128, 133, 134, 135, 136, 137, 138, 143, 170, 174, 189, 209, 218, 220, 221], "control": [1, 17, 92, 96, 108, 126, 127, 128, 152, 158, 159, 172, 182, 183, 184, 185, 204, 205, 209, 215, 217], "polygon": [1, 59, 65, 66, 96, 108, 113, 126, 127, 128, 129, 131, 133, 158, 176, 192, 198, 219, 222], "via": [1, 5, 25, 96, 108, 126, 127, 148, 167, 200, 215, 217, 219], "sonnet_export": [1, 96, 108, 126, 220], "poly_and_edge_indic": [1, 96, 108, 126, 128], "export_sonnet_son": [1, 96, 108, 126, 128, 220], "export_sonnet": [1, 96, 108, 126, 128, 220, 221], "export_and_run": [1, 96, 108, 216], "run_export_script": [1, 96, 108, 120], "run_simul": [1, 96, 108, 120], "export_singular": [1, 96, 108], "remote_export_and_run": [1, 96, 108], "remote_run_onli": [1, 96, 108, 122], "simulation_export": [1, 96, 108, 219, 220], "get_combined_paramet": [1, 96, 108, 123], "copy_content_into_directori": [1, 96, 108, 123], "get_post_process_command_lin": [1, 96, 108, 123], "export_simulation_json": [1, 96, 108, 123], "export_simulation_oa": [1, 96, 108, 123, 220], "sweep_simul": [1, 96, 108, 123, 219], "cross_sweep_simul": [1, 96, 108, 123, 219], "sweep_solut": [1, 96, 108, 123], "cross_sweep_solut": [1, 96, 108, 123], "cross_combin": [1, 96, 108, 123], "simulation_valid": [1, 96, 108], "validate_simul": [1, 96, 108, 124], "simulation_and_solution_types_match": [1, 96, 108, 124], "has_no_ports_when_requir": [1, 96, 108, 124], "has_edgeport_when_forbidden": [1, 96, 108, 124], "flux_integration_layer_exists_if_need": [1, 96, 108, 124], "get_port_nam": [1, 96, 108, 124], "validatesimerror": [1, 96, 108, 124], "solut": [1, 96, 108, 110, 111, 115, 118, 119, 123, 124, 184, 202, 218], "get_paramet": [1, 96, 98, 108, 125, 133], "find_edge_from_point_in_polygon": [1, 96, 108, 129], "get_enclosing_polygon": [1, 96, 108, 129], "airbridges_sim": [1, 96], "airbridgessim": [1, 96, 97], "cross_section_simul": [1, 96, 113, 116], "crosssectionsimul": [1, 96, 98, 110, 113, 116, 118, 210, 218, 219, 221], "process_lay": [1, 96, 98], "register_cell_layers_as_sim_lay": [1, 96, 98], "get_sim_lay": [1, 96, 98], "set_permitt": [1, 96, 98], "get_dict_by_lay": [1, 96, 98], "get_new_layers_format": [1, 96, 98], "get_simulation_data": [1, 96, 98, 133], "empty_simul": [1, 96], "emptysimul": [1, 96, 99], "get_list_of_two": [1, 96, 130], "partitionregion": [1, 96, 101, 102, 104, 105, 106, 119, 130, 133, 134], "limit_box": [1, 96, 130], "limit_fac": [1, 96, 130], "as_dict": [1, 96, 131], "internalport": [1, 96, 131, 133, 174, 219], "get_etch_polygon": [1, 96, 131], "edgeport": [1, 96, 124, 131, 174, 218, 219], "post_process": [1, 96, 110, 115, 118, 123, 220], "postprocess": [1, 96, 110, 115, 118, 123, 132], "get_command_lin": [1, 96, 132], "get_simulation_layer_by_nam": [1, 96, 133], "to_1d_list": [1, 96, 133], "from_cel": [1, 96, 97, 99, 133, 135, 136, 137, 138, 219, 220], "face_stack_list_of_list": [1, 96, 133], "ith_valu": [1, 96, 133], "face_z_level": [1, 96, 133], "region_from_lay": [1, 96, 133], "simplified_region": [1, 96, 133], "insert_lay": [1, 96, 133], "insert_stacked_up_lay": [1, 96, 133], "insert_layers_between_fac": [1, 96, 133], "is_met": [1, 96, 133], "split_metal_layers_by_excit": [1, 96, 133], "create_simulation_lay": [1, 96, 97, 99, 133, 135, 136, 137, 138], "produce_lay": [1, 96, 133], "warn_of_small_shap": [1, 96, 133], "ground_grid_region": [1, 96, 133], "produce_waveguide_to_port": [1, 96, 133, 219], "etched_lin": [1, 96, 133], "get_port_data": [1, 96, 133], "get_partition_region": [1, 96, 102, 130, 133], "delete_inst": [1, 96, 133], "visualise_region": [1, 96, 133], "single_element_simul": [1, 96, 219, 220], "get_single_element_sim_class": [1, 96, 102, 134, 174, 219, 220], "single_xmons_full_chip_sim": [1, 96], "singlexmonsfullchipsim": [1, 96, 135], "waveguides_sim": [1, 96], "waveguidessim": [1, 96, 136], "produce_guid": [1, 96, 136], "produce_ground_bump": [1, 96, 136], "xmons_direct_coupling_full_chip_sim": [1, 96], "xmonsdirectcouplingfullchipsim": [1, 96, 137], "produce_launchers_sma8": [1, 96, 137], "xmons_direct_coupling_sim": [1, 96], "xmonsdirectcouplingsim": [1, 96, 138], "test_structur": [1, 203], "junction_test_pad": [1, 139], "junctiontestpad": [1, 93, 139, 142, 143, 144], "junction_test_pads_simpl": [1, 139, 142], "junctiontestpadssimpl": [1, 139, 142, 144], "airbridge_dc": [1, 139], "airbridgedc": [1, 139, 140], "cross_test": [1, 139], "crosstest": [1, 139, 141], "stripes_test": [1, 139], "stripestest": [1, 15, 16, 139, 145], "stripes_test_increasing_width": [1, 139], "stripestestincreasingwidth": [1, 139, 146], "teststructur": [1, 139, 140, 141, 143, 145, 146, 147, 148, 179], "produce_pad": [1, 139, 147], "produce_four_point_pad": [1, 139, 147], "produce_etched_region": [1, 139, 147], "tsv_test_pattern": [1, 139], "tsvtestpattern": [1, 139, 148], "area": [1, 13, 43, 52, 55, 59, 64, 72, 76, 77, 84, 91, 93, 128, 130, 131, 133, 143, 144, 147, 149, 160, 187, 190, 191, 197, 219], "areareceiv": [1, 149, 150], "put": [1, 64, 149, 150, 181, 190, 200], "get_area_and_dens": [1, 149, 150], "count_inst": [1, 149], "count_instances_in_cel": [1, 149, 151], "coupler_lib": [1, 149], "cap_param": [1, 19, 149, 152], "deep_delet": [1, 149], "deep_delete_pcel": [1, 149, 153], "deep_delete_al": [1, 149, 153], "defaults_help": [1, 149], "find_ansys_execut": [1, 149, 154], "depend": [1, 19, 131, 133, 144, 149, 166, 174, 179, 181, 183, 206, 211, 216, 217, 219], "install_kqc_gui_depend": [1, 149, 155], "edit_node_plugin": [1, 149], "editnodeplugin": [1, 149, 156], "create_dialog": [1, 149, 156], "update_node_from_form": [1, 149, 156], "update_form_from_nod": [1, 149, 156], "deselect": [1, 149, 156], "select": [1, 13, 72, 128, 149, 156, 165, 167, 187, 188, 190, 191, 192, 198, 201, 202, 213, 214, 219], "activ": [1, 77, 131, 149, 156, 157, 185, 205, 217, 218], "deactiv": [1, 149, 156], "mouse_click_ev": [1, 149, 156], "mouse_moved_ev": [1, 149, 156], "has_tracking_posit": [1, 149, 156], "tracking_posit": [1, 149, 156], "updat": [1, 37, 84, 133, 149, 156, 179, 183, 192, 205, 210, 211, 213, 218], "editnodepluginfactori": [1, 149, 156], "create_plugin": [1, 149, 156], "export_help": [1, 149, 219, 220], "generate_probepoints_json": [1, 149, 157], "generate_probepoints_from_fil": [1, 149, 157], "create_or_empty_tmp_directori": [1, 120, 149, 157, 220], "get_simulation_directori": [1, 149, 157], "get_active_or_new_layout": [1, 149, 157, 219, 220], "write_commit_reference_fil": [1, 149, 157], "write_export_machine_versions_fil": [1, 149, 157], "open_with_klayout_or_default_appl": [1, 149, 157, 220], "get_klayout_vers": [1, 149, 157], "export_drc_report": [1, 149, 157], "geometry_help": [1, 149], "vector_length_and_direct": [1, 149, 158], "point_shift_along_vector": [1, 149, 158], "get_direct": [1, 149, 158], "get_angl": [1, 149, 158], "get_cell_path_length": [1, 149, 158], "get_object_path_length": [1, 149, 158], "simple_region": [1, 149, 158], "region_with_merged_point": [1, 133, 149, 158], "region_with_merged_polygon": [1, 133, 149, 158], "merge_points_and_match_on_edg": [1, 149, 158], "is_clockwis": [1, 149, 158], "circle_polygon": [1, 149, 158], "arc_point": [1, 149, 158], "bspline_point": [1, 149, 158], "bezier_point": [1, 149, 158], "force_rounded_corn": [1, 149, 158], "geometry_json_encod": [1, 149], "geometryjsonencod": [1, 149, 159], "default": [1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 79, 80, 84, 85, 86, 89, 90, 91, 92, 93, 94, 97, 98, 110, 113, 115, 116, 118, 119, 128, 133, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 148, 149, 152, 154, 157, 158, 159, 161, 163, 167, 168, 169, 170, 171, 172, 174, 179, 181, 184, 187, 190, 195, 197, 198, 200, 201, 203, 205, 206, 209, 214, 215, 218, 219, 220, 223], "geometryjsondecod": [1, 149, 159], "encode_python_obj_as_dict": [1, 149, 159], "decode_dict_as_python_obj": [1, 149, 159], "groundgrid": [1, 149], "make_grid": [1, 149, 160], "gui_help": [1, 149], "get_nodes_near_posit": [1, 149, 161], "node_to_text": [1, 149, 161], "node_from_text": [1, 149, 161], "replace_nod": [1, 149, 161], "get_all_node_el": [1, 149, 161], "get_valid_node_el": [1, 149, 161], "import_help": [1, 149], "module_from_fil": [1, 149, 162], "label": [1, 5, 35, 37, 67, 77, 84, 133, 149, 164, 171, 178, 201, 214], "labelorigin": [1, 149, 163], "bottomleft": [1, 149, 163], "bottomright": [1, 149, 163], "topleft": [1, 149, 163], "topright": [1, 149, 163], "produce_label": [1, 149, 163], "label_polygon": [1, 149], "get_text_polygon": [1, 149, 164], "load_font_polygon": [1, 149, 164], "layout_to_cod": [1, 149], "convert_cells_to_cod": [1, 149, 165], "get_node_param": [1, 149, 165], "extract_pcell_data_from_view": [1, 149, 165], "restore_pcells_to_view": [1, 149, 165], "library_help": [1, 149, 179, 186, 211], "load_librari": [1, 149, 166], "get_library_path": [1, 149, 166], "delete_all_librari": [1, 149, 166], "delete_librari": [1, 149, 166], "element_by_class_nam": [1, 149, 166], "to_module_nam": [1, 149, 166], "to_library_nam": [1, 149, 166], "load_save_layout": [1, 149], "load_layout": [1, 77, 149, 167], "save_layout": [1, 77, 149, 167], "log_rout": [1, 149], "route_log": [1, 149, 168], "merg": [1, 5, 64, 133, 149, 158, 178, 179, 197], "merge_lay": [1, 149, 169], "convert_child_instances_to_stat": [1, 149, 169], "netlist_extract": [1, 149, 201], "export_cell_netlist": [1, 85, 149, 170], "extract_net": [1, 149, 170], "extract_circuit": [1, 149, 170], "netlist_graph": [1, 149], "network_as_graph": [1, 149, 171], "draw_graph": [1, 149, 171], "paramet": [1, 3, 4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 97, 98, 99, 102, 107, 110, 111, 113, 114, 115, 116, 118, 119, 120, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 182, 183, 187, 192, 195, 197, 198, 201, 203, 209, 210, 213, 214, 217, 219, 220, 221, 223], "add_parameters_from": [1, 149, 172, 179, 219], "add_paramet": [1, 149, 172, 179, 219], "pdt": [1, 149, 172, 198, 200], "typedoubl": [1, 149, 172, 198, 200], "typeint": [1, 149, 172], "typelist": [1, 149, 172], "typestr": [1, 149, 172], "typeshap": [1, 149, 172], "typeboolean": [1, 149, 172], "typelay": [1, 149, 172], "typenon": [1, 149, 172], "param": [1, 37, 64, 124, 133, 149, 172, 175, 179, 198, 200], "get_al": [1, 149, 172], "plugin_startup": [1, 149], "register_plugin": [1, 149, 173], "refpoint": [1, 19, 23, 28, 33, 34, 36, 37, 48, 56, 57, 58, 62, 64, 77, 80, 89, 90, 91, 92, 93, 94, 102, 107, 133, 134, 143, 147, 149, 157, 161, 165, 189, 196, 197, 200, 219], "layer": [1, 5, 13, 25, 27, 28, 29, 32, 33, 35, 36, 37, 38, 52, 54, 57, 58, 59, 62, 64, 65, 66, 68, 69, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 91, 93, 94, 98, 102, 111, 113, 114, 115, 116, 119, 124, 130, 133, 141, 143, 145, 146, 147, 148, 149, 150, 158, 163, 167, 169, 170, 174, 175, 187, 190, 191, 195, 196, 198, 199, 201, 203, 210, 211, 213, 218, 219], "cell": [1, 5, 15, 16, 31, 34, 36, 37, 41, 45, 48, 52, 55, 56, 57, 58, 61, 64, 65, 71, 76, 77, 83, 84, 85, 89, 90, 91, 93, 94, 96, 97, 98, 99, 113, 116, 133, 134, 135, 136, 137, 138, 143, 149, 150, 151, 152, 153, 157, 158, 161, 163, 165, 166, 167, 169, 170, 174, 175, 179, 185, 187, 188, 190, 192, 193, 195, 198, 201, 213, 214, 219, 220, 222], "tran": [1, 5, 9, 10, 37, 66, 68, 77, 84, 133, 147, 149, 174, 175, 219], "rec_level": [1, 37, 77, 133, 149, 174, 201], "dict": [1, 5, 64, 84, 93, 98, 101, 102, 104, 105, 106, 111, 113, 115, 118, 119, 134, 143, 149, 157, 159, 164, 166, 174, 175, 219], "item": [1, 115, 133, 149, 159, 171, 174, 199], "kei": [1, 5, 23, 37, 80, 84, 85, 86, 111, 115, 119, 123, 133, 137, 149, 152, 157, 159, 165, 166, 169, 170, 174, 175, 181, 192, 215, 217], "valu": [1, 5, 13, 23, 27, 29, 34, 36, 37, 38, 43, 48, 56, 57, 58, 59, 64, 69, 77, 80, 83, 84, 85, 89, 90, 91, 94, 98, 111, 113, 114, 115, 116, 119, 128, 131, 133, 137, 143, 149, 157, 159, 161, 163, 165, 166, 169, 170, 172, 174, 175, 179, 181, 191, 192, 198, 200, 203, 209, 210, 211, 213, 218, 219], "refpointtosimport": [1, 34, 36, 37, 48, 56, 57, 58, 89, 90, 91, 94, 149, 174, 219], "refpointtointernalport": [1, 149, 174], "refpointtoedgeport": [1, 149, 174], "waveguidetosimport": [1, 149, 174, 219], "toward": [1, 58, 64, 133, 149, 174, 219], "side": [1, 3, 5, 6, 18, 19, 29, 34, 36, 37, 43, 48, 56, 57, 58, 62, 63, 67, 84, 89, 90, 91, 94, 113, 131, 133, 134, 147, 149, 165, 174, 176, 179, 195, 214, 218, 219], "use_internal_port": [1, 56, 133, 149, 174, 219], "waveguide_length": [1, 133, 138, 149, 174, 219], "term1": [1, 59, 64, 65, 133, 137, 149, 174], "turn_radiu": [1, 133, 137, 149, 174], "b": [1, 13, 19, 25, 29, 31, 32, 36, 37, 38, 39, 43, 49, 57, 58, 59, 64, 67, 69, 80, 91, 92, 133, 137, 143, 148, 149, 158, 174], "over_etch": [1, 133, 149, 174], "deembed_cross_sect": [1, 131, 133, 134, 149, 174], "junctionsimport": [1, 149, 174, 219], "other_refpoint": [1, 149, 174], "float": [1, 5, 17, 64, 84, 107, 111, 113, 114, 115, 116, 119, 127, 129, 131, 133, 149, 150, 158, 159, 161, 174, 218, 219], "replace_junct": [1, 149], "junctionentri": [1, 149, 175], "extract_junct": [1, 149, 175], "check_static_cell_has_junct": [1, 149, 175], "place_junct": [1, 149, 175], "get_tuned_junction_json": [1, 149, 175], "copy_one_layer_of_cel": [1, 149, 175], "replace_squid": [1, 149, 175], "convert_cells_to_stat": [1, 149, 175], "symmetric_polygon": [1, 149, 198], "polygon_with_hsym": [1, 149, 176], "polygon_with_vsym": [1, 149, 176, 198], "polygon_with_sym": [1, 149, 176], "klayout_view": [1, 185, 203, 213], "klayoutview": [1, 77, 85, 185], "layout_view": [1, 77, 213], "focu": [1, 77, 213], "show": [1, 13, 25, 29, 32, 37, 38, 59, 64, 77, 91, 133, 143, 145, 146, 148, 171, 185, 187, 190, 191, 192, 196, 197, 198, 199, 201, 213, 214, 219, 220], "close": [1, 52, 65, 77, 110, 158, 165, 202, 214], "cell_view": [1, 77, 213], "active_cel": [1, 77, 213], "clear_lay": [1, 77], "add_default_lay": [1, 77], "create_top_cel": [1, 77], "export_layers_bitmap": [1, 77], "export_all_layers_bitmap": [1, 77], "export_pcell_png": [1, 77, 213], "get_pixel": [1, 77], "get_active_cell_view": [1, 77], "get_active_layout": [1, 77], "get_active_cel": [1, 77], "missinguilibraryexcept": [1, 77], "resolve_default_layer_info": [1, 77], "layer_clust": [1, 203], "layerclust": [1, 78], "main_lay": [1, 78], "extra_lay": [1, 78], "all_lay": [1, 78], "pya_resolv": [1, 179, 198, 203, 219], "is_standalone_sess": [1, 87], "klayout_executable_command": [1, 87], "run": [1, 64, 77, 80, 87, 110, 116, 118, 119, 120, 122, 132, 155, 157, 181, 182, 184, 185, 186, 202, 203, 206, 210, 211, 212, 214, 215, 217, 218, 220, 221, 222, 223], "argument_pars": [1, 95], "run_kqc": [1, 95], "pcell": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 85, 88, 89, 90, 91, 92, 93, 94, 97, 98, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 161, 163, 164, 165, 166, 169, 170, 171, 172, 175, 182, 183, 187, 188, 189, 191, 192, 200, 211, 213, 219, 222], "declar": [2, 3, 5, 6, 7, 12, 13, 14, 18, 19, 20, 21, 22, 23, 24, 26, 28, 29, 32, 33, 35, 36, 37, 38, 39, 42, 43, 49, 50, 53, 54, 55, 57, 58, 59, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 88, 89, 90, 94, 139, 140, 141, 145, 146, 147, 148], "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 102, 111, 114, 119, 124, 125, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 156, 159, 161, 163, 165, 166, 172, 174, 175, 179, 180, 182, 196, 198, 199, 201, 211, 213, 218, 220, 221], "consist": [2, 15, 16, 25, 35, 64, 65, 66, 80, 82, 85, 89, 90, 91, 92, 102, 144, 157, 159, 180, 187, 203, 217, 221], "thei": [2, 3, 6, 28, 64, 70, 80, 84, 86, 89, 90, 98, 102, 129, 133, 158, 169, 171, 175, 179, 181, 187, 195, 201, 213, 218], "ar": [2, 3, 5, 6, 13, 20, 23, 25, 28, 29, 30, 32, 33, 37, 38, 43, 49, 59, 64, 65, 66, 67, 70, 77, 80, 82, 84, 85, 86, 91, 93, 98, 102, 107, 108, 111, 113, 114, 115, 116, 119, 120, 122, 124, 128, 130, 133, 137, 139, 143, 147, 148, 149, 151, 157, 158, 159, 161, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 206, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222], "themselv": 2, "A": [2, 5, 9, 23, 26, 37, 52, 59, 64, 65, 66, 67, 77, 84, 85, 86, 89, 90, 91, 92, 107, 111, 113, 116, 119, 123, 124, 125, 128, 133, 137, 138, 157, 158, 166, 171, 172, 174, 181, 185, 190, 191, 192, 195, 200, 209, 213, 214, 218, 219, 222], "frame": [2, 5, 35, 49, 84, 190], "i": [2, 3, 5, 6, 7, 10, 16, 19, 23, 28, 29, 31, 32, 33, 34, 36, 37, 38, 39, 41, 43, 48, 49, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 71, 76, 77, 80, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 97, 98, 99, 102, 107, 110, 111, 113, 114, 115, 116, 118, 119, 120, 123, 124, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 144, 145, 146, 147, 152, 155, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222], "alwai": [2, 119, 170, 185, 195, 200, 202, 218], "method": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 32, 33, 34, 36, 37, 38, 39, 42, 43, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 77, 89, 90, 91, 94, 97, 98, 99, 107, 114, 119, 133, 135, 136, 137, 138, 140, 141, 144, 145, 146, 148, 158, 159, 165, 179, 180, 185, 186, 198, 199, 200, 210, 213, 218, 219, 220], "place": [2, 5, 13, 18, 25, 28, 29, 32, 34, 36, 37, 38, 48, 52, 55, 56, 57, 58, 59, 64, 65, 66, 77, 80, 84, 89, 90, 91, 94, 113, 114, 133, 134, 143, 148, 159, 165, 168, 174, 175, 179, 182, 186, 187, 191, 193, 197, 198, 199, 200, 201, 202, 213, 214, 219, 220], "some": [2, 5, 13, 25, 28, 29, 32, 37, 38, 59, 64, 78, 85, 86, 91, 107, 110, 118, 124, 128, 133, 143, 148, 157, 158, 172, 175, 179, 182, 184, 185, 186, 188, 191, 192, 193, 197, 198, 200, 201, 202, 206, 209, 213, 214, 215, 218, 219, 222], "test": [2, 3, 4, 5, 9, 11, 13, 15, 16, 23, 25, 34, 70, 135, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 159, 175, 181, 183, 184, 185, 187, 203, 205, 211, 214, 217, 220], "structur": [2, 5, 28, 70, 131, 139, 140, 143, 144, 147, 148, 171, 175, 185, 186, 187, 196, 199, 203, 212, 214, 218, 222], "after": [2, 13, 28, 64, 65, 72, 73, 80, 84, 91, 110, 113, 118, 123, 133, 134, 143, 172, 181, 184, 187, 198, 199, 201, 202, 209, 211, 213, 214, 217, 220], "ad": [2, 19, 37, 64, 77, 84, 114, 123, 131, 132, 133, 137, 157, 158, 163, 165, 170, 171, 172, 179, 181, 198, 201, 219], "ground": [2, 5, 11, 17, 18, 35, 36, 37, 38, 39, 43, 48, 52, 55, 56, 57, 58, 64, 65, 66, 68, 84, 85, 86, 89, 90, 91, 98, 128, 131, 133, 136, 152, 160, 163, 190, 197, 218, 219], "grid": [2, 5, 18, 35, 37, 55, 56, 64, 65, 66, 68, 84, 85, 86, 133, 147, 160, 163, 165, 190, 197], "which": [2, 5, 6, 7, 10, 16, 19, 23, 28, 34, 36, 37, 48, 56, 57, 58, 64, 65, 66, 77, 78, 80, 82, 84, 85, 86, 88, 89, 90, 91, 94, 96, 97, 98, 99, 107, 113, 114, 116, 119, 122, 123, 128, 130, 131, 133, 134, 135, 136, 137, 138, 139, 144, 145, 146, 147, 148, 149, 151, 152, 157, 158, 159, 160, 161, 163, 166, 167, 169, 174, 175, 179, 181, 182, 184, 185, 186, 187, 188, 191, 192, 195, 198, 201, 206, 209, 210, 211, 213, 214, 215, 217, 218, 219, 220, 221, 223], "avoid": [2, 5, 13, 19, 25, 29, 32, 35, 37, 38, 59, 64, 65, 66, 91, 133, 143, 147, 148, 160, 163, 168, 169, 188, 190, 197, 203, 214, 218], "can": [2, 5, 19, 23, 28, 36, 37, 38, 52, 55, 59, 64, 65, 70, 71, 76, 77, 80, 82, 83, 85, 86, 88, 89, 90, 97, 98, 99, 102, 107, 113, 114, 115, 119, 123, 124, 128, 130, 131, 133, 134, 135, 136, 137, 138, 144, 157, 158, 159, 161, 165, 167, 171, 174, 175, 177, 179, 181, 184, 185, 186, 187, 188, 189, 191, 192, 195, 196, 198, 199, 200, 201, 202, 205, 206, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223], "produc": [2, 5, 9, 13, 19, 23, 31, 35, 45, 52, 59, 64, 65, 66, 67, 71, 76, 84, 93, 111, 113, 114, 115, 116, 119, 131, 133, 135, 137, 143, 144, 147, 152, 158, 161, 163, 186, 198, 214, 217, 219, 220, 222], "document": [2, 82, 83, 85, 96, 139, 179, 180, 183, 185, 186, 192, 193, 194, 196, 199, 205, 211, 213, 214, 222], "gener": [2, 5, 13, 30, 37, 55, 62, 65, 70, 71, 76, 77, 82, 84, 85, 86, 88, 91, 93, 98, 105, 113, 120, 133, 139, 143, 158, 160, 161, 164, 165, 170, 172, 175, 181, 182, 185, 187, 188, 189, 196, 197, 199, 200, 203, 210, 212, 213, 214, 217, 218, 220, 221], "descript": [2, 139, 172, 179, 198, 200, 222], "sourc": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 104, 105, 106, 107, 110, 111, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 183, 185, 186, 204, 208, 211, 218, 219], "base": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 84, 85, 86, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 107, 111, 113, 114, 119, 120, 124, 125, 130, 131, 132, 133, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 150, 156, 158, 159, 163, 172, 174, 175, 179, 195, 196, 197, 198, 200, 211, 214, 217, 218, 219], "an": [3, 5, 26, 28, 29, 31, 32, 36, 37, 38, 42, 43, 64, 65, 66, 68, 77, 80, 84, 85, 86, 93, 107, 111, 113, 116, 118, 119, 123, 124, 133, 134, 140, 144, 152, 157, 158, 159, 161, 165, 170, 171, 172, 174, 175, 176, 179, 184, 185, 187, 188, 189, 192, 195, 199, 201, 202, 205, 206, 209, 210, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223], "On": [3, 6, 184, 206, 215, 216], "left": [3, 5, 6, 13, 19, 23, 35, 37, 38, 43, 48, 59, 66, 83, 84, 92, 98, 113, 129, 131, 133, 174, 191, 198, 202, 214, 219], "straight": [3, 6, 26, 45, 47, 59, 64, 65, 68, 93, 133, 138, 211], "vertic": [3, 6, 13, 24, 25, 32, 33, 47, 59, 84, 113, 114, 115, 130, 133, 143, 148, 175, 176, 210], "waveguid": [3, 6, 17, 19, 20, 29, 37, 38, 43, 48, 49, 55, 58, 59, 64, 65, 66, 67, 68, 69, 89, 90, 91, 94, 98, 131, 133, 136, 138, 158, 161, 165, 170, 171, 174, 187, 189, 190, 193, 201, 218, 219], "cross": [3, 6, 13, 23, 25, 29, 32, 37, 38, 59, 64, 67, 91, 98, 111, 113, 114, 116, 119, 123, 131, 133, 134, 141, 143, 148, 174, 190, 192, 198, 203, 212, 219, 221], "multipl": [3, 6, 64, 80, 85, 86, 89, 90, 102, 107, 113, 157, 169, 171, 175, 179, 184, 187, 195, 202, 203, 213, 214, 217, 219, 222], "time": [3, 6, 110, 113, 118, 119, 123, 128, 174, 182, 191, 199, 203, 205, 213, 214, 215, 217, 219], "There": [3, 6, 23, 92, 144, 145, 146, 179, 182, 185, 187, 188, 200, 201, 204, 205, 210, 214, 215, 217, 219], "right": [3, 6, 19, 23, 29, 38, 59, 69, 83, 84, 113, 131, 133, 174, 187, 191, 197, 199, 201, 213, 214, 219], "likewis": [3, 6], "do": [3, 6, 37, 64, 80, 119, 133, 165, 180, 181, 184, 185, 186, 191, 201, 209, 213, 214, 216, 217, 218, 219, 220], "ani": [3, 6, 19, 64, 65, 71, 76, 77, 85, 86, 97, 98, 99, 101, 102, 106, 107, 114, 115, 119, 133, 134, 135, 136, 137, 138, 144, 161, 166, 173, 178, 179, 184, 185, 192, 195, 197, 198, 199, 200, 202, 207, 214, 217, 218, 219, 220, 221], "point": [3, 4, 5, 6, 13, 25, 29, 32, 33, 36, 37, 38, 39, 43, 55, 58, 59, 64, 65, 66, 77, 84, 89, 90, 91, 92, 95, 113, 116, 129, 133, 137, 138, 140, 143, 148, 157, 158, 165, 169, 171, 174, 176, 182, 186, 189, 191, 201, 209, 210, 213, 217, 219, 222], "In": [3, 43, 64, 77, 80, 85, 97, 99, 113, 123, 133, 135, 136, 137, 138, 158, 179, 181, 184, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 201, 202, 211, 213, 214, 218, 219, 220], "center": [3, 5, 13, 17, 18, 19, 23, 25, 29, 32, 33, 36, 37, 38, 41, 43, 48, 58, 59, 62, 63, 64, 65, 66, 67, 74, 75, 84, 89, 90, 91, 92, 93, 94, 131, 133, 143, 147, 148, 158, 170, 174, 191, 214, 219], "arrai": [3, 5, 25, 84, 85, 144, 159, 222], "mechan": 3, "differ": [3, 5, 6, 13, 15, 16, 28, 36, 37, 43, 52, 59, 84, 85, 86, 98, 111, 113, 116, 133, 143, 157, 170, 175, 179, 184, 186, 187, 192, 195, 198, 200, 203, 204, 209, 211, 214, 217, 218, 219, 220], "length": [3, 5, 6, 9, 10, 12, 13, 15, 16, 17, 18, 19, 23, 24, 26, 29, 31, 32, 34, 35, 36, 38, 39, 48, 49, 55, 56, 57, 59, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 84, 91, 93, 94, 98, 111, 113, 119, 127, 131, 133, 136, 137, 138, 141, 143, 145, 146, 152, 158, 160, 161, 165, 169, 174, 191, 192, 198, 200, 218, 219], "width": [3, 4, 5, 13, 17, 18, 19, 20, 25, 26, 29, 31, 32, 34, 35, 36, 37, 38, 39, 43, 45, 47, 48, 49, 50, 56, 57, 58, 59, 62, 64, 65, 67, 68, 71, 72, 73, 75, 77, 84, 89, 90, 91, 93, 94, 113, 131, 133, 137, 138, 140, 141, 143, 145, 146, 147, 148, 174, 198, 219], "child": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 29, 32, 33, 34, 36, 37, 38, 39, 42, 43, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 63, 65, 66, 67, 68, 69, 72, 73, 74, 75, 85, 89, 90, 91, 94, 107, 140, 141, 144, 145, 146, 148, 151, 161, 165, 169, 174, 195, 200, 219], "re": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 29, 32, 33, 34, 36, 37, 38, 39, 42, 43, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 63, 65, 66, 67, 68, 69, 72, 73, 74, 75, 89, 90, 91, 94, 127, 131, 140, 141, 144, 145, 146, 148, 165, 172, 179, 195, 213, 217], "defin": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 29, 32, 33, 34, 36, 37, 38, 39, 42, 43, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 80, 89, 90, 91, 92, 93, 94, 98, 102, 107, 110, 113, 114, 115, 116, 133, 134, 140, 141, 144, 145, 146, 147, 148, 157, 159, 168, 170, 172, 175, 179, 186, 187, 191, 195, 196, 200, 201, 202, 203, 209, 210, 211, 214, 215, 217, 218, 219], "thi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 42, 43, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 83, 84, 85, 86, 87, 89, 90, 91, 94, 96, 97, 98, 99, 102, 107, 110, 113, 114, 115, 116, 118, 119, 130, 131, 133, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 148, 150, 155, 156, 158, 159, 161, 165, 166, 167, 169, 170, 171, 172, 174, 175, 179, 181, 182, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220], "int": [3, 4, 5, 6, 12, 13, 18, 20, 24, 25, 29, 32, 34, 35, 37, 38, 39, 43, 52, 54, 55, 56, 59, 64, 65, 66, 84, 89, 90, 91, 92, 97, 111, 113, 116, 119, 122, 127, 131, 133, 136, 140, 141, 143, 145, 146, 148, 158, 159, 161, 164], "number": [3, 4, 5, 6, 13, 18, 19, 20, 22, 23, 25, 29, 32, 34, 35, 37, 38, 39, 43, 52, 54, 55, 56, 57, 59, 64, 66, 67, 80, 82, 85, 89, 90, 91, 92, 97, 111, 119, 128, 130, 131, 133, 136, 140, 141, 143, 145, 146, 148, 151, 152, 157, 158, 159, 160, 171, 175, 178, 195, 197, 209, 217, 218, 219], "pair": [3, 6, 13, 17, 54, 143, 159, 161, 165, 174, 192, 201, 211], "10": [3, 5, 13, 17, 18, 19, 23, 25, 26, 29, 32, 34, 35, 37, 38, 48, 52, 56, 57, 58, 59, 64, 67, 69, 89, 90, 91, 94, 111, 119, 133, 137, 141, 143, 148, 158, 160, 161, 177, 184, 185, 205, 206, 217, 218, 219], "b_number": 3, "one": [3, 12, 17, 19, 23, 24, 59, 64, 66, 80, 82, 85, 86, 89, 90, 91, 92, 98, 110, 113, 114, 118, 123, 124, 133, 157, 158, 159, 165, 168, 169, 170, 172, 173, 174, 175, 178, 179, 181, 184, 185, 188, 190, 191, 195, 198, 201, 205, 206, 209, 211, 212, 213, 217, 218, 219, 220, 221], "5": [3, 13, 18, 19, 23, 25, 29, 32, 37, 38, 39, 57, 58, 59, 64, 73, 74, 89, 90, 91, 94, 97, 111, 113, 116, 119, 133, 136, 143, 148, 160, 172, 202, 217, 218], "full": [4, 5, 66, 77, 80, 87, 130, 158, 165, 171, 185, 190, 202, 203, 216, 217, 219, 222], "4": [4, 5, 13, 17, 18, 19, 23, 85, 89, 90, 113, 115, 116, 119, 133, 141, 143, 144, 158, 163, 172, 202, 206, 219], "dc": [4, 5, 7, 8, 32, 41, 42, 43, 50, 59, 64, 140], "n_step": 4, "increment": [4, 5, 13, 64, 146, 161, 175], "step": [4, 13, 15, 16, 64, 143, 158, 160, 175, 184, 191, 196, 202, 206, 213, 214, 215], "1": [4, 5, 6, 7, 10, 13, 16, 17, 18, 19, 23, 26, 28, 29, 36, 38, 43, 55, 56, 57, 58, 59, 64, 66, 69, 72, 73, 85, 89, 90, 91, 111, 113, 115, 116, 119, 127, 130, 133, 138, 143, 145, 146, 150, 158, 163, 165, 171, 172, 183, 191, 195, 201, 202, 209, 210, 214, 215, 217, 218, 219], "test_width": 4, "doubl": [4, 5, 6, 13, 17, 18, 19, 20, 25, 26, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 45, 47, 48, 49, 50, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 89, 90, 91, 93, 94, 119, 133, 136, 137, 138, 140, 141, 143, 145, 146, 148, 176, 188, 191, 192, 213, 218, 223], "singl": [4, 6, 10, 13, 17, 19, 23, 26, 57, 59, 64, 71, 73, 83, 85, 89, 91, 93, 102, 110, 114, 118, 123, 133, 134, 138, 143, 165, 166, 172, 185, 186, 195, 199, 202, 214, 215, 217, 221, 222], "2000": [4, 19, 119, 140, 198, 209], "unit": [4, 5, 6, 9, 10, 13, 17, 18, 19, 20, 25, 26, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 45, 47, 48, 49, 50, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 69, 71, 72, 73, 74, 75, 76, 89, 90, 91, 93, 94, 98, 111, 113, 116, 119, 130, 131, 133, 136, 137, 138, 140, 141, 143, 145, 146, 148, 157, 158, 160, 179, 183, 185, 198, 200, 203, 218], "\u03bcm": [4, 5, 6, 9, 10, 13, 17, 18, 19, 20, 25, 26, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 45, 47, 48, 49, 50, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 69, 71, 72, 73, 76, 89, 90, 91, 93, 94, 133, 136, 137, 138, 140, 141, 143, 145, 146, 148, 174, 198, 200], "pixel": [5, 7, 77, 158, 222], "corner": [5, 7, 13, 35, 37, 38, 39, 52, 64, 65, 66, 158, 163, 189, 198, 201], "dice": [5, 7, 35, 84], "edg": [5, 7, 12, 19, 20, 24, 35, 36, 52, 59, 64, 65, 74, 75, 84, 90, 91, 92, 113, 115, 116, 119, 128, 129, 130, 131, 133, 136, 137, 147, 158, 160, 174, 186, 192, 219], "option": [5, 23, 32, 37, 59, 64, 84, 85, 86, 94, 102, 111, 114, 115, 116, 119, 122, 128, 131, 133, 134, 144, 152, 165, 170, 181, 186, 191, 192, 198, 200, 205, 206, 210, 214, 215, 217, 220], "all": [5, 11, 28, 31, 34, 36, 37, 48, 56, 57, 58, 62, 64, 65, 67, 77, 83, 84, 85, 86, 89, 90, 91, 94, 98, 102, 107, 113, 114, 115, 116, 118, 120, 122, 123, 133, 150, 158, 159, 161, 165, 166, 167, 169, 172, 175, 179, 180, 181, 185, 186, 190, 191, 195, 198, 201, 202, 206, 209, 211, 213, 214, 216, 217, 218, 219, 220], "contain": [5, 22, 23, 28, 34, 36, 37, 48, 56, 57, 58, 64, 70, 77, 78, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 98, 102, 107, 110, 113, 114, 115, 116, 118, 119, 120, 122, 123, 133, 134, 141, 145, 146, 148, 150, 157, 159, 161, 163, 169, 170, 171, 174, 175, 179, 182, 183, 184, 185, 186, 187, 192, 194, 197, 198, 199, 203, 210, 211, 213, 214, 217, 219, 220, 222], "connector": [5, 19, 32, 37, 40, 41, 42, 43, 59, 62, 63, 64, 187, 192, 195], "between": [5, 6, 9, 10, 12, 13, 17, 18, 19, 23, 24, 25, 29, 32, 34, 35, 37, 38, 39, 41, 43, 57, 58, 59, 62, 63, 64, 65, 80, 91, 94, 113, 116, 119, 131, 133, 138, 141, 143, 145, 146, 147, 148, 150, 158, 160, 170, 187, 203, 218, 219], "librari": [5, 28, 31, 37, 41, 45, 52, 61, 64, 71, 77, 91, 92, 93, 94, 143, 147, 161, 166, 183, 184, 185, 187, 188, 190, 191, 195, 198, 199, 202, 203, 206, 211, 212, 222, 223], "superconduct": [5, 37, 113, 116, 147, 203], "quantum": [5, 28, 37, 70, 147, 203, 222], "circuit": [5, 28, 37, 147, 170, 203, 211, 222], "implement": [5, 28, 31, 34, 36, 37, 38, 39, 43, 48, 52, 55, 56, 57, 58, 64, 65, 66, 89, 90, 91, 94, 98, 102, 107, 133, 157, 158, 159, 165, 174, 178, 198, 201, 211, 215, 217, 219, 222], "static": [5, 37, 54, 64, 65, 66, 68, 77, 84, 85, 133, 164, 167, 169, 175, 188], "chip_cel": [5, 83, 84], "return": [5, 34, 36, 37, 38, 48, 52, 56, 57, 58, 59, 64, 65, 66, 67, 77, 78, 84, 85, 87, 89, 90, 91, 93, 94, 98, 102, 105, 107, 110, 111, 113, 114, 115, 116, 118, 119, 120, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 137, 143, 150, 151, 152, 154, 157, 158, 159, 160, 161, 162, 164, 165, 166, 171, 172, 174, 175, 176, 195, 201, 213, 214, 219], "dictionari": [5, 23, 37, 59, 67, 80, 84, 85, 86, 98, 111, 113, 115, 119, 123, 125, 131, 133, 134, 137, 152, 159, 166, 169, 170, 171, 172, 174, 201, 209, 219], "assign": [5, 102, 115, 133, 174, 190, 201], "port_id": 5, "launcher_id": 5, "object": [5, 26, 34, 36, 37, 45, 48, 52, 56, 57, 58, 64, 77, 78, 80, 83, 84, 85, 86, 89, 90, 91, 93, 94, 96, 98, 107, 108, 110, 113, 114, 115, 116, 118, 119, 123, 124, 125, 130, 131, 132, 133, 134, 138, 150, 156, 157, 158, 159, 161, 167, 169, 170, 172, 174, 175, 179, 185, 188, 191, 196, 198, 200, 203, 210, 212, 213, 214, 217, 218, 220, 221, 222, 223], "junction_typ": [5, 9, 10, 13, 23, 26, 71, 72, 73, 74, 75, 76, 91, 93, 138, 143, 175, 219], "pad": [5, 9, 13, 29, 31, 32, 33, 34, 36, 38, 49, 50, 59, 72, 73, 75, 90, 91, 93, 94, 133, 140, 142, 143, 144, 147, 200, 219], "string": [5, 6, 7, 9, 10, 13, 14, 15, 16, 17, 19, 22, 23, 24, 25, 26, 29, 31, 32, 33, 34, 35, 37, 38, 41, 43, 45, 46, 47, 56, 59, 61, 62, 63, 64, 67, 71, 72, 73, 74, 75, 84, 85, 91, 93, 98, 107, 111, 119, 120, 122, 123, 132, 133, 134, 136, 138, 143, 144, 148, 152, 157, 159, 161, 164, 165, 166, 168, 170, 171, 174, 195, 201, 214], "type": [5, 9, 10, 13, 14, 15, 16, 18, 19, 23, 25, 26, 27, 29, 31, 32, 33, 35, 37, 41, 43, 45, 46, 47, 52, 56, 59, 61, 62, 63, 64, 67, 71, 72, 73, 74, 75, 80, 85, 87, 91, 93, 94, 107, 113, 115, 116, 119, 124, 128, 131, 133, 134, 135, 138, 143, 144, 148, 150, 151, 152, 157, 158, 159, 161, 165, 170, 172, 175, 185, 186, 188, 189, 197, 198, 200, 209, 216, 218, 219], "us": [5, 9, 11, 19, 23, 26, 28, 29, 34, 35, 36, 37, 38, 43, 48, 49, 52, 55, 56, 57, 58, 59, 64, 65, 67, 68, 69, 71, 76, 77, 80, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 97, 98, 99, 102, 107, 108, 110, 111, 113, 114, 115, 116, 118, 119, 120, 122, 123, 128, 130, 131, 133, 134, 135, 136, 137, 138, 139, 143, 147, 152, 157, 158, 159, 160, 161, 164, 165, 166, 169, 170, 171, 172, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 191, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 209, 210, 211, 214, 215, 217, 218, 219, 220, 221, 222, 223], "optic": [5, 15, 16, 141, 145, 146, 203, 222], "lithographi": [5, 15, 16, 133, 141, 145, 146, 211, 222], "call": [5, 37, 57, 64, 85, 97, 98, 99, 102, 107, 113, 116, 119, 123, 130, 133, 135, 136, 137, 138, 150, 159, 166, 167, 169, 170, 179, 186, 199, 200, 201, 202, 213, 214, 216, 217, 218, 219, 220, 222], "overrid": [5, 13, 84, 86, 97, 98, 99, 107, 115, 131, 133, 135, 136, 137, 138, 143, 179, 181, 215], "set": [5, 19, 37, 59, 64, 77, 82, 83, 85, 86, 98, 102, 107, 111, 113, 114, 115, 116, 119, 120, 128, 131, 133, 137, 157, 167, 174, 178, 179, 181, 184, 185, 186, 187, 188, 197, 198, 199, 200, 203, 209, 215, 217, 218, 219, 220], "given": [5, 34, 36, 37, 48, 55, 56, 57, 58, 59, 64, 65, 77, 80, 83, 85, 89, 90, 91, 93, 94, 98, 107, 111, 113, 114, 115, 119, 130, 131, 132, 133, 134, 141, 143, 144, 145, 146, 148, 157, 158, 159, 162, 163, 164, 166, 167, 169, 172, 174, 175, 179, 181, 198, 201, 210, 211, 214, 217, 218, 219, 221], "pya": [5, 37, 52, 64, 80, 84, 85, 87, 93, 113, 115, 116, 130, 133, 147, 158, 159, 161, 167, 170, 172, 174, 176, 183, 195, 198, 201, 209, 214, 219], "dbox": [5, 77, 93, 113, 116, 130, 133, 195, 198, 209, 214, 219], "within": [5, 34, 36, 37, 48, 56, 57, 58, 64, 89, 90, 91, 94, 102, 107, 114, 119, 144, 175, 185, 186, 210, 211, 221, 223], "id": [5, 6, 7, 10, 13, 16, 19, 25, 29, 32, 37, 38, 59, 64, 77, 80, 85, 86, 91, 107, 133, 136, 143, 148, 157, 158, 171, 180, 185, 195, 199, 209, 212, 213, 214, 223], "where": [5, 13, 17, 19, 23, 25, 29, 32, 34, 36, 37, 38, 48, 56, 57, 58, 59, 64, 65, 66, 71, 76, 84, 85, 86, 89, 90, 91, 94, 98, 102, 110, 113, 114, 116, 118, 119, 120, 123, 128, 130, 132, 133, 134, 137, 143, 148, 157, 158, 161, 163, 165, 169, 170, 174, 175, 179, 184, 188, 197, 198, 201, 206, 209, 213, 214, 215, 217, 218, 219, 221], "frame_paramet": 5, "r0": [5, 37, 133, 147], "dtran": [5, 52, 66, 84, 134, 176, 198, 201, 219], "toler": [5, 65, 119, 129, 133, 158, 169], "004": [5, 133, 169], "base_metal_gap": [5, 80, 169, 197], "combin": [5, 37, 98, 123, 133, 169, 203, 219], "three": [5, 17, 70, 133, 169, 185, 204, 211, 213, 214, 217, 219], "subtract": [5, 52, 133, 147, 169], "insert": [5, 28, 35, 37, 59, 64, 68, 77, 84, 93, 107, 133, 143, 147, 159, 169, 174, 185, 188, 192, 195, 201, 219], "oper": [5, 37, 64, 157, 169, 184, 185, 190, 192, 205, 206, 217], "base_metal_gap_wo_grid": [5, 93, 141, 143, 145, 146, 169, 170, 190, 197, 198, 199, 209], "base_metal_addit": [5, 68, 169, 197], "ground_grid": [5, 169, 197], "info": [5, 122, 128, 133, 168, 169, 181, 217], "gap": [5, 13, 17, 18, 19, 20, 23, 25, 29, 32, 34, 35, 36, 37, 38, 39, 43, 45, 47, 48, 49, 56, 57, 58, 59, 64, 65, 66, 67, 72, 73, 75, 89, 90, 91, 93, 94, 115, 130, 133, 143, 147, 148, 152, 158, 169, 174, 197, 219], "ignor": [5, 85, 93, 98, 133, 158, 169, 174, 184, 217], "while": [5, 23, 80, 169, 170, 181, 186, 199, 206, 217], "\u00b5m": [5, 17, 35, 59, 64, 74, 75, 89, 90, 91, 93, 128, 133, 169], "possibli": [5, 52, 175, 202, 214], "befor": [5, 37, 64, 65, 77, 85, 119, 130, 133, 161, 173, 184, 188, 220], "get": [5, 64, 77, 98, 113, 115, 116, 150, 159, 170, 172, 179, 181, 182, 184, 185, 186, 191, 196, 202, 203, 211, 213, 215], "specifi": [5, 31, 32, 33, 37, 49, 64, 77, 84, 85, 86, 98, 113, 116, 119, 131, 133, 157, 158, 159, 161, 162, 167, 168, 170, 171, 172, 175, 181, 182, 209, 210, 211, 214, 215, 219, 220], "correctli": [5, 37, 65, 84, 192, 197, 201], "resolv": [5, 84, 183, 197], "integ": [5, 6, 7, 10, 16, 19, 84, 131, 133, 158, 159, 164, 219], "filter_layer_list": 5, "transform": [5, 37, 52, 66, 77, 84, 93, 133, 134, 143, 147, 158, 174, 198], "filter_region": 5, "tupl": [5, 23, 37, 64, 65, 66, 77, 84, 85, 110, 113, 114, 115, 116, 118, 120, 123, 133, 137, 150, 157, 159, 161, 165, 172], "layer_nam": [5, 37, 77, 83, 98, 113, 114, 133], "distanc": [5, 6, 17, 18, 19, 25, 29, 35, 43, 64, 65, 67, 89, 90, 91, 113, 115, 119, 133, 137, 138, 141, 147, 148, 158, 161], "filter": [5, 122, 186], "region": [5, 36, 37, 38, 52, 57, 58, 64, 84, 94, 102, 105, 107, 113, 114, 115, 116, 119, 130, 133, 134, 147, 158, 160, 164], "element_cel": 5, "shape_lay": 5, "locat": [5, 37, 52, 64, 77, 80, 84, 107, 110, 115, 118, 128, 131, 133, 137, 154, 163, 165, 171, 174, 175, 184, 185, 186, 187, 201, 202, 205, 213, 218, 219, 220], "rotat": [5, 37, 43, 58, 64, 77, 84, 93, 133, 201, 214], "repeat": [5, 132], "list": [5, 6, 7, 9, 10, 13, 16, 17, 18, 19, 23, 25, 26, 28, 29, 32, 34, 35, 36, 37, 38, 48, 52, 55, 56, 57, 58, 59, 64, 65, 66, 67, 77, 78, 82, 84, 85, 86, 89, 90, 91, 92, 94, 98, 101, 102, 104, 105, 106, 107, 110, 111, 113, 115, 116, 118, 119, 120, 122, 123, 124, 128, 129, 130, 131, 132, 133, 134, 137, 138, 143, 148, 150, 157, 158, 159, 161, 163, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 181, 184, 185, 191, 195, 198, 202, 209, 210, 211, 218, 219, 220, 221], "dpoint": [5, 37, 64, 65, 77, 84, 93, 113, 115, 116, 129, 131, 133, 147, 157, 158, 161, 163, 170, 174, 198, 201, 209, 210, 214, 219], "degre": [5, 17, 36, 43, 58, 64, 67, 84, 89, 90, 93, 119, 158, 201, 214], "bump_box": 5, "should": [5, 31, 34, 36, 37, 48, 56, 57, 58, 59, 64, 65, 68, 77, 78, 80, 89, 90, 91, 94, 97, 98, 99, 107, 114, 116, 119, 130, 131, 133, 134, 135, 136, 137, 138, 155, 157, 159, 170, 172, 174, 175, 179, 180, 181, 182, 184, 185, 186, 188, 189, 191, 195, 197, 199, 200, 201, 202, 204, 205, 206, 209, 211, 213, 214, 219, 223], "fill": [5, 98, 128, 178, 190, 191, 197, 202], "bump": [5, 32, 41, 43, 59, 64, 133, 136, 178, 195, 219], "coordin": [5, 17, 37, 55, 64, 66, 77, 84, 91, 113, 114, 116, 119, 133, 147, 171, 174, 214], "mai": [5, 28, 37, 64, 77, 84, 85, 98, 114, 133, 134, 166, 169, 170, 171, 175, 179, 181, 182, 184, 185, 186, 190, 191, 199, 201, 206, 209, 211, 213, 214, 216, 217], "post": [5, 37, 113, 116, 123, 132, 218, 220, 221], "sampleholder_typ": [5, 14, 209], "launcher_assign": 5, "none": [5, 13, 25, 26, 29, 31, 32, 35, 36, 37, 38, 41, 45, 52, 57, 58, 59, 61, 64, 71, 77, 83, 84, 85, 86, 87, 91, 93, 94, 98, 107, 110, 111, 113, 114, 115, 116, 118, 119, 120, 122, 123, 124, 130, 131, 132, 133, 134, 137, 138, 143, 147, 148, 150, 152, 157, 158, 159, 165, 166, 167, 170, 171, 172, 174, 175, 217, 219], "enabl": [5, 37, 57, 64, 102, 111, 119, 130, 133, 137, 167, 168, 192, 197, 201, 203, 204, 218], "typic": [5, 13, 25, 29, 32, 37, 38, 59, 64, 70, 91, 133, 143, 148, 152, 166, 170, 195, 198, 219, 220, 221], "sampl": [5, 8, 18, 92, 137, 158, 198, 212], "holder": [5, 8, 18, 137, 198, 212], "size": [5, 29, 36, 38, 43, 57, 58, 64, 69, 77, 84, 85, 89, 90, 119, 131, 133, 158, 163, 164, 171, 174, 187, 198, 209, 214], "self": [5, 37, 59, 64, 67, 71, 76, 84, 85, 93, 97, 98, 99, 133, 135, 136, 137, 138, 159, 180, 195, 197, 198, 201, 209, 211, 217, 219], "accordingli": [5, 198], "wrapper": [5, 77, 137, 179], "around": [5, 19, 29, 35, 36, 38, 52, 65, 66, 77, 84, 133, 157, 158, 163, 179, 190, 191, 194, 203, 211, 214, 219], "configur": [5, 13, 20, 27, 43, 77, 79, 80, 102, 114, 124, 143, 144, 179, 186, 195, 198, 203, 212], "mean": [5, 29, 36, 38, 43, 55, 57, 58, 59, 64, 65, 69, 80, 113, 116, 130, 133, 178, 179, 195, 214, 219], "index": [5, 19, 37, 64, 65, 66, 80, 129, 131, 133, 161, 174, 175, 185, 195, 203], "head": [5, 48, 137], "from": [5, 13, 19, 20, 23, 29, 31, 34, 35, 37, 49, 52, 59, 64, 65, 66, 67, 70, 72, 73, 77, 80, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 97, 98, 99, 102, 107, 111, 113, 114, 115, 116, 118, 119, 120, 122, 123, 129, 130, 131, 133, 135, 136, 137, 138, 143, 147, 150, 151, 154, 157, 158, 161, 162, 163, 164, 166, 167, 168, 170, 172, 174, 175, 178, 179, 181, 182, 184, 185, 187, 188, 190, 191, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 212, 213, 214, 215, 217, 218, 219, 221, 222, 223], "n": [5, 13, 25, 29, 32, 37, 38, 57, 59, 64, 66, 89, 90, 91, 127, 133, 143, 148, 158, 159, 170, 186, 209, 217, 218], "launcher_typ": [5, 209], "launcher_width": [5, 20, 209], "launcher_gap": [5, 20, 209], "launcher_ind": [5, 20, 209], "pad_pitch": [5, 209], "port_id_remap": 5, "launcher_frame_gap": [5, 49], "chip_box": [5, 209], "chang": [5, 34, 36, 37, 43, 48, 56, 57, 58, 64, 89, 90, 91, 94, 134, 172, 175, 178, 179, 181, 184, 185, 186, 187, 188, 190, 192, 195, 198, 199, 202, 205, 209, 213, 215, 219, 220, 223], "equal": [5, 130, 158, 165, 171, 174, 218], "distribut": [5, 64, 86, 206], "overridden": [5, 97, 98, 99, 133, 135, 136, 137, 138], "desir": [5, 37, 64, 65, 93, 163, 185, 188, 195, 214, 215, 218, 219], "per": [5, 38, 57, 64, 67, 111, 144, 158, 179, 217, 218], "disabl": [5, 13, 37, 72, 77, 91, 130, 133, 143, 174, 188, 213], "argument": [5, 34, 36, 37, 48, 52, 56, 57, 58, 64, 77, 85, 86, 89, 90, 91, 93, 94, 97, 98, 99, 102, 107, 111, 113, 115, 116, 119, 120, 122, 132, 133, 134, 135, 136, 137, 138, 143, 161, 164, 167, 172, 181, 201, 206, 211, 214, 219, 220, 221], "If": [5, 37, 64, 67, 68, 77, 86, 97, 98, 99, 102, 107, 111, 113, 115, 116, 119, 120, 122, 130, 133, 134, 135, 136, 137, 138, 147, 157, 158, 159, 164, 165, 166, 167, 168, 170, 171, 174, 175, 177, 180, 181, 182, 184, 185, 186, 188, 191, 192, 199, 201, 202, 206, 207, 209, 210, 213, 214, 217, 219, 222, 223], "neither": [5, 77], "rf": [5, 43, 186, 209], "most": [5, 129, 159, 161, 174, 179, 187, 189, 196, 197, 205, 206, 211, 213, 217, 219, 222], "top": [5, 6, 19, 33, 41, 59, 77, 80, 84, 97, 98, 99, 114, 116, 130, 133, 135, 136, 137, 138, 157, 165, 174, 175, 179, 187, 188, 190, 191, 192, 195, 197, 201, 213, 214, 219, 222], "clockwis": [5, 13, 19, 35, 59, 84, 129, 158, 214], "order": [5, 19, 23, 59, 64, 65, 98, 114, 119, 129, 133, 158, 159, 179, 181, 189, 194, 195, 218, 219], "x": [5, 17, 34, 55, 64, 65, 84, 89, 90, 93, 115, 116, 119, 129, 147, 157, 161, 170, 171, 182, 189, 206, 209, 214, 217, 219, 220], "y": [5, 13, 55, 64, 84, 93, 113, 116, 119, 127, 129, 143, 147, 157, 161, 170, 171, 182, 214, 219, 220], "your": [5, 52, 98, 110, 118, 131, 133, 177, 178, 180, 181, 184, 185, 186, 198, 199, 200, 202, 203, 205, 209, 211, 215, 220], "For": [5, 19, 23, 28, 64, 80, 84, 93, 102, 107, 119, 134, 157, 158, 159, 161, 165, 166, 171, 172, 173, 175, 179, 181, 185, 186, 189, 191, 192, 195, 198, 199, 200, 201, 202, 204, 205, 206, 209, 211, 213, 217, 218, 219, 220], "flip": [5, 6, 16, 19, 32, 37, 40, 41, 43, 54, 59, 64, 114, 136, 157, 192, 195, 200, 214, 219], "": [5, 12, 17, 24, 34, 36, 37, 48, 49, 56, 57, 58, 64, 77, 85, 87, 89, 90, 91, 93, 94, 107, 111, 114, 129, 133, 134, 143, 157, 158, 164, 165, 167, 170, 172, 174, 175, 179, 182, 184, 190, 192, 195, 197, 199, 204, 206, 209, 211, 214, 215, 221, 223], "axi": [5, 13, 17, 24, 65, 89, 90, 93, 119, 143, 157, 175, 176], "rang": [5, 57, 159], "delta_x": 5, "100": [5, 13, 18, 25, 29, 32, 35, 37, 38, 43, 59, 61, 64, 65, 76, 91, 92, 93, 119, 127, 133, 136, 138, 141, 143, 145, 146, 148, 158, 191, 195, 198, 219, 220], "delta_i": 5, "x0": [5, 57], "y0": 5, "separ": [5, 13, 38, 72, 73, 77, 85, 91, 92, 98, 113, 116, 119, 133, 143, 159, 161, 165, 166, 169, 186, 192, 198, 199, 200, 205, 206, 210, 215, 219, 220], "along": [5, 59, 68, 119, 175, 192, 210], "dimens": [5, 20, 77, 84, 130, 133, 182, 192, 218, 219], "displac": [5, 93, 201], "tsv_box": 5, "boolean": [5, 9, 10, 13, 18, 21, 23, 25, 29, 32, 34, 35, 37, 38, 43, 49, 52, 54, 55, 56, 59, 64, 65, 66, 67, 68, 69, 72, 73, 75, 77, 84, 85, 91, 93, 98, 133, 135, 136, 137, 143, 147, 148, 168], "make": [5, 28, 41, 84, 85, 86, 87, 110, 118, 119, 133, 172, 178, 179, 181, 182, 184, 185, 186, 187, 189, 190, 192, 197, 198, 199, 200, 202, 203, 204, 210, 213, 214, 215, 219, 220], "plane": [5, 36, 38, 39, 52, 89, 90, 133, 190, 191, 197, 214], "fals": [5, 13, 18, 19, 21, 25, 29, 32, 34, 35, 37, 38, 43, 49, 52, 54, 55, 56, 59, 64, 65, 66, 67, 68, 69, 72, 73, 77, 83, 84, 85, 91, 93, 98, 110, 111, 115, 118, 119, 120, 122, 127, 128, 130, 131, 132, 133, 135, 136, 143, 148, 158, 159, 163, 165, 166, 167, 171, 174, 175, 201, 214, 217, 218, 219], "merge_base_metal_gap": 5, "a_cap": 5, "conductor": [5, 13, 17, 18, 19, 25, 29, 32, 37, 38, 43, 59, 64, 65, 67, 89, 90, 91, 133, 143, 148, 174], "cap": [5, 19], "b_cap": 5, "with_gnd_tsv": 5, "through": [5, 25, 57, 59, 65, 85, 86, 111, 148, 158, 181, 182, 200, 213, 219], "silicon": [5, 25, 133, 148, 197, 200, 219, 222], "tsv_grid_spac": 5, "space": [5, 12, 13, 15, 16, 19, 24, 26, 59, 64, 98, 136, 137, 138, 141, 143, 145, 146, 161, 163, 166, 185], "300": [5, 6, 48, 49, 59, 89, 90, 133], "edge_from_tsv": 5, "clearanc": [5, 52, 64, 84], "550": [5, 17, 133], "tsv_edge_to_tsv_edge_separ": 5, "exist": [5, 77, 84, 97, 98, 99, 113, 119, 123, 133, 135, 136, 137, 138, 157, 158, 161, 166, 171, 175, 179, 184, 188, 190, 191, 194, 198, 200, 201, 202, 205, 219, 220], "250": [5, 90, 92], "tsv_edge_to_nearest_el": 5, "with_gnd_bump": 5, "indium": [5, 133, 195, 219], "bump_grid_spac": 5, "120": [5, 89, 90, 94, 178, 180], "edge_from_bump": 5, "bump_edge_to_bump_edge_separ": 5, "95": 5, "frames_en": [5, 6, 7, 10, 16, 19], "drawn": [5, 6, 7, 10, 16, 19, 187, 219, 222], "frames_marker_dist": 5, "each": [5, 13, 18, 23, 26, 35, 36, 59, 64, 65, 66, 67, 77, 80, 82, 83, 84, 85, 86, 89, 90, 92, 94, 98, 102, 111, 113, 114, 115, 116, 119, 133, 138, 144, 147, 157, 158, 161, 164, 165, 166, 169, 170, 171, 175, 179, 184, 185, 186, 187, 188, 191, 192, 195, 198, 199, 201, 209, 210, 211, 213, 214, 215, 217, 218, 219, 220, 221], "1500": [5, 35], "1000": [5, 17, 18, 48, 56, 59, 77, 80, 84, 119, 133, 209], "frames_diagonal_squar": 5, "diagon": [5, 35, 52, 218], "squar": [5, 12, 24, 35, 38, 52, 84, 85, 147, 165, 185, 197, 199], "2": [5, 13, 18, 19, 23, 25, 26, 33, 34, 38, 39, 45, 57, 64, 72, 76, 84, 91, 93, 111, 113, 116, 119, 138, 143, 144, 148, 158, 163, 172, 183, 184, 198, 203, 215, 217, 218, 219], "frames_mirror": 5, "mirror": [5, 9, 10, 13, 19, 83, 84, 93, 143, 163, 175, 176, 214], "true": [5, 9, 10, 13, 18, 19, 23, 29, 32, 37, 56, 59, 64, 65, 68, 72, 73, 75, 77, 84, 85, 86, 91, 93, 98, 107, 110, 111, 119, 120, 122, 128, 133, 135, 136, 137, 143, 151, 157, 158, 159, 161, 165, 166, 168, 169, 171, 172, 174, 175, 179, 198, 200, 201, 213, 214, 217, 218, 219], "frames_dice_width": 5, "street": 5, "200": [5, 13, 17, 19, 25, 35, 59, 64, 94, 148, 198], "140": 5, "face_box": 5, "8500": 5, "dice_grid_margin": [5, 35], "margin": [5, 13, 19, 25, 29, 32, 35, 37, 38, 59, 61, 64, 69, 72, 73, 84, 91, 133, 143, 148, 163, 197, 219, 220], "name_mask": [5, 35], "m000": [5, 35], "name_chip": [5, 7, 9, 10, 17, 22, 35], "ctest": [5, 35], "name_copi": [5, 35, 84], "copi": [5, 35, 37, 64, 84, 123, 165, 176, 179, 198, 215, 220, 221], "name_brand": [5, 35], "brand": [5, 35], "marker_typ": [5, 13, 35, 52], "lower": [5, 13, 23, 35, 75, 93, 130, 133, 199, 211, 218, 219], "standard": [5, 13, 25, 26, 35, 45, 46, 52, 53, 61, 63, 64, 93, 114, 137, 138, 148, 158, 161, 168, 191, 199, 206], "chip_dicing_in_base_met": [5, 35], "line": [5, 6, 9, 17, 18, 19, 35, 36, 48, 56, 65, 85, 91, 92, 113, 123, 129, 132, 133, 145, 146, 148, 158, 161, 178, 182, 184, 185, 191, 192, 209, 210, 211, 212, 213, 214, 220, 221, 222, 223], "metal": [5, 11, 13, 25, 29, 32, 35, 37, 38, 41, 49, 59, 64, 65, 66, 67, 68, 69, 72, 73, 75, 91, 93, 94, 98, 113, 115, 116, 119, 130, 131, 133, 136, 143, 147, 148, 174, 197, 218, 219], "addit": [5, 13, 29, 35, 37, 49, 64, 65, 66, 67, 68, 69, 72, 73, 80, 84, 91, 97, 99, 113, 116, 119, 132, 133, 135, 136, 137, 138, 143, 178, 181, 189, 192, 197, 201, 214, 218], "bound": [5, 35, 55, 64, 84, 93, 130, 133, 143, 160, 163, 170, 190], "10000": [5, 18, 35, 98, 133, 214], "bump_typ": [5, 32, 41, 43, 59, 64], "choic": [5, 6, 10, 13, 14, 15, 16, 18, 19, 23, 25, 26, 29, 31, 32, 33, 34, 41, 43, 45, 46, 47, 56, 59, 61, 62, 63, 64, 67, 71, 72, 73, 74, 75, 91, 93, 111, 119, 138, 143, 144, 148, 172, 179, 185, 218], "tsv_type": [5, 25, 61, 62, 63, 148], "ellips": [5, 25, 61, 62, 148], "bottom": [6, 33, 37, 41, 59, 74, 75, 80, 84, 114, 130, 133, 174, 179, 191, 195, 197, 198, 214, 219], "transmiss": [6, 18, 56, 65, 148], "3": [6, 17, 18, 19, 23, 26, 34, 38, 39, 47, 54, 66, 84, 89, 90, 94, 113, 116, 119, 133, 138, 158, 163, 172, 181, 183, 184, 202, 206, 218, 219], "crossing_length": 6, "400": [6, 17, 59, 89, 90, 133, 195, 209], "cross_talk_dist": 6, "meander_fac": 6, "two": [6, 9, 17, 35, 36, 38, 39, 41, 43, 55, 62, 63, 64, 72, 84, 90, 91, 92, 93, 113, 116, 130, 133, 147, 157, 158, 161, 170, 174, 179, 184, 188, 189, 201, 210, 214, 217, 218, 219, 220], "daisi": 7, "woven": 7, "includ": [7, 9, 10, 13, 18, 25, 28, 29, 32, 37, 38, 56, 59, 64, 70, 72, 73, 83, 85, 86, 91, 93, 98, 110, 113, 118, 133, 135, 143, 148, 157, 158, 159, 165, 175, 177, 181, 182, 187, 189, 192, 195, 198, 203, 206, 209, 210, 211, 214, 218, 220], "text": [7, 35, 37, 64, 80, 84, 113, 131, 133, 145, 146, 161, 163, 164, 174, 185, 191, 197, 201], "manual": [7, 30, 59, 64, 70, 71, 76, 80, 85, 88, 102, 111, 119, 155, 157, 181, 183, 193, 202, 203, 214, 218, 219, 220, 222], "pattern": [7, 59, 203], "No": [7, 10, 13, 23, 26, 71, 74, 91, 93, 119, 138, 143, 206], "input": [7, 17, 19, 43, 59, 64, 116, 158, 161, 210, 217, 219], "demonstr": [9, 10, 17, 185, 186, 188, 189], "four": [9, 23, 52, 92, 140, 147, 158, 163, 170, 195, 214], "readout": [9, 10, 17, 23, 91, 92], "reson": [9, 10, 17, 18, 19, 23, 48, 56, 59, 135, 192, 218], "probe": [9, 17, 147, 157], "charg": [9, 191], "qubit_a_nr": [9, 10], "qubit_b_nr": [9, 10], "port_nr": [9, 133, 219], "qubit_nr": [9, 10], "cap_finger_nr": [9, 10], "probeline_nam": [9, 10], "readout_res_length": [9, 10, 17, 23, 214], "5000": [9, 10, 23, 59, 137, 201, 214], "5100": [9, 10, 23], "5200": [9, 10, 23], "5300": [9, 10, 23], "include_coupl": [9, 10, 214], "coupler": [9, 10, 17, 18, 19, 23, 26, 34, 36, 38, 56, 89, 90, 91, 92, 94, 133, 138, 152, 191, 219], "3d": [10, 28, 115, 119, 133, 192, 219], "integr": [10, 28, 111, 118, 119, 124, 192, 211, 221], "multi": [10, 29, 31, 32, 56, 59, 64, 67, 80, 85, 86, 133, 186, 195, 203], "featur": [10, 37, 64, 107, 114, 159, 185, 186, 187, 192, 194, 196, 200, 202, 203, 204, 205, 212, 213, 214, 221], "dt": 10, "almost": [11, 170], "remov": [11, 34, 52, 84, 85, 114, 133, 136, 157, 158, 166, 168, 172, 175, 182, 184, 185, 197], "ebl": [11, 78, 203, 214], "edge_len": [12, 24], "80": [12, 13, 24, 36, 67, 89, 90, 92], "inter_spac": [12, 24], "20": [12, 17, 18, 19, 24, 29, 31, 36, 38, 39, 69, 89, 90, 91, 92, 93, 145, 146, 217, 219], "pad_width": [13, 73, 91, 143, 147], "500": [13, 19, 25, 34, 48, 50, 56, 59, 64, 84, 91, 119, 140, 143, 148, 164, 195, 219], "junctions_horizont": [13, 143], "horizont": [13, 18, 23, 25, 59, 73, 84, 91, 143, 147, 148, 176], "small_loop_area": 13, "small": [13, 22, 65, 133, 178, 197, 217], "loop": [13, 72, 76, 91, 93, 143], "large_loop_area": 13, "larg": [13, 186, 217], "130": [13, 209], "junction_width_smal": 13, "finger": [13, 17, 18, 19, 23, 34, 38, 39, 56, 57, 58, 72, 73, 91, 94, 143, 152], "15": [13, 89, 90, 141, 219], "junction_width_larg": 13, "08": [13, 138], "junction_width_step_increment_smal": 13, "01": [13, 111, 119, 129, 133], "junction_width_step_increment_larg": 13, "03": 13, "pads_loop": 13, "central": [13, 201, 214], "6": [13, 17, 18, 19, 23, 25, 29, 32, 37, 38, 48, 59, 64, 67, 73, 89, 90, 91, 133, 143, 148, 158, 172], "turn": [13, 19, 25, 29, 32, 34, 36, 37, 38, 48, 56, 57, 58, 59, 64, 89, 90, 91, 94, 119, 133, 138, 143, 148, 174, 179, 188, 201], "64": [13, 25, 29, 32, 37, 38, 59, 64, 91, 133, 143, 148, 158, 205], "r": [13, 25, 29, 32, 37, 38, 43, 57, 59, 64, 65, 66, 91, 133, 143, 148, 158, 159, 174, 181, 184, 185, 201, 217, 220, 223], "radiu": [13, 25, 29, 32, 36, 37, 38, 39, 55, 59, 64, 65, 66, 73, 84, 89, 90, 91, 94, 133, 143, 148, 158, 174, 201], "protect": [13, 25, 29, 32, 37, 38, 59, 64, 69, 91, 133, 143, 148], "1t1": [13, 25, 29, 32, 37, 38, 59, 64, 80, 84, 85, 91, 133, 136, 143, 148, 157, 187, 190, 195, 197, 214, 219], "2b1": [13, 25, 29, 32, 37, 38, 59, 64, 80, 84, 91, 133, 143, 148, 195, 197, 214, 219], "1b1": [13, 25, 29, 32, 37, 38, 59, 64, 91, 133, 143, 148, 195], "2t1": [13, 25, 29, 32, 37, 38, 59, 64, 80, 84, 91, 133, 143, 148, 195, 197], "display_nam": [13, 25, 29, 32, 37, 38, 59, 64, 91, 133, 143, 148], "displai": [13, 25, 29, 32, 37, 38, 59, 64, 77, 91, 133, 143, 148, 190, 192, 210, 213, 214], "gui": [13, 25, 28, 29, 32, 37, 38, 55, 59, 64, 65, 77, 80, 91, 102, 107, 120, 122, 133, 143, 148, 155, 157, 161, 165, 179, 183, 185, 191, 192, 194, 195, 200, 202, 203, 204, 206, 209, 211, 213, 216, 219, 221, 222, 223], "protect_opposite_fac": [13, 25, 29, 32, 37, 38, 59, 64, 91, 133, 143, 148], "appli": [13, 25, 29, 32, 37, 38, 59, 64, 66, 77, 84, 85, 86, 91, 115, 119, 130, 133, 134, 143, 147, 148, 179, 192, 219], "onli": [13, 25, 29, 32, 34, 36, 37, 38, 48, 56, 57, 58, 59, 64, 65, 68, 71, 84, 85, 86, 89, 90, 91, 93, 94, 98, 107, 115, 119, 120, 122, 130, 133, 139, 143, 144, 148, 151, 155, 159, 161, 164, 167, 169, 172, 173, 174, 175, 179, 181, 184, 185, 186, 188, 189, 190, 192, 195, 197, 198, 201, 202, 204, 206, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220], "signal": [13, 25, 29, 32, 37, 38, 59, 64, 91, 98, 119, 131, 133, 143, 148, 174, 192, 218, 219], "carri": [13, 25, 29, 32, 37, 38, 59, 64, 85, 91, 133, 143, 148], "opposing_face_id_group": [13, 25, 29, 32, 37, 38, 59, 64, 91, 133, 143, 148], "oppos": [13, 25, 29, 32, 37, 38, 59, 64, 91, 133, 143, 148, 219], "group": [13, 25, 29, 32, 37, 38, 59, 64, 70, 80, 91, 127, 128, 133, 143, 148, 157, 160, 187, 195, 197], "etch_opposite_fac": [13, 25, 29, 32, 37, 38, 59, 64, 91, 133, 143, 148], "etch": [13, 19, 25, 29, 32, 37, 38, 59, 64, 80, 91, 116, 130, 131, 133, 143, 148], "opposit": [13, 19, 25, 29, 32, 37, 38, 59, 64, 91, 133, 136, 143, 148, 219], "too": [13, 25, 29, 32, 37, 38, 49, 59, 64, 65, 66, 67, 68, 69, 91, 133, 143, 148, 170, 172, 184, 185, 186], "etch_opposite_face_margin": [13, 19, 25, 29, 32, 37, 38, 59, 64, 91, 133, 143, 148], "_epr_show": [13, 25, 29, 32, 37, 38, 59, 64, 91, 102, 133, 143, 148], "geometri": [13, 25, 29, 32, 34, 36, 37, 38, 48, 52, 56, 57, 58, 59, 62, 63, 64, 72, 89, 90, 91, 93, 94, 97, 98, 99, 113, 114, 116, 130, 133, 135, 136, 137, 138, 143, 148, 164, 167, 170, 175, 178, 187, 190, 191, 195, 196, 197, 198, 199, 200, 201, 203, 210, 213, 218, 221, 222], "relat": [13, 25, 29, 32, 37, 38, 57, 59, 64, 80, 91, 124, 133, 143, 148, 201, 203, 207, 209], "avail": [13, 25, 29, 32, 37, 38, 59, 64, 77, 91, 93, 113, 133, 143, 148, 179, 185, 190, 195, 198, 199, 209, 210, 217, 218, 220], "_epr_cross_section_cut_lay": [13, 25, 29, 32, 37, 38, 59, 64, 91, 102, 133, 143, 148], "cut": [13, 25, 29, 32, 37, 38, 59, 64, 91, 102, 105, 107, 113, 114, 115, 116, 133, 134, 143, 148, 210], "_epr_cross_section_cut_width": [13, 25, 29, 32, 37, 38, 59, 64, 91, 133, 143, 148], "when": [13, 25, 29, 32, 34, 36, 37, 38, 48, 56, 57, 58, 59, 64, 65, 77, 84, 89, 90, 91, 94, 102, 107, 113, 114, 116, 119, 122, 124, 130, 131, 133, 143, 148, 157, 158, 174, 175, 178, 179, 181, 182, 185, 187, 188, 192, 195, 197, 198, 200, 201, 206, 213, 214, 215, 217, 219, 222], "visualis": [13, 25, 29, 32, 37, 38, 59, 64, 91, 102, 113, 130, 133, 143, 148, 185, 211], "area_height": [13, 143], "height": [13, 17, 19, 34, 73, 77, 84, 91, 115, 130, 131, 133, 140, 143, 147, 163, 219], "1900": [13, 143], "area_width": [13, 143], "1300": [13, 19, 143], "pad_spac": [13, 143], "only_pad": [13, 143], "pad_configur": [13, 143], "junction_width_step": [13, 143], "automat": [13, 39, 55, 59, 64, 72, 77, 82, 84, 87, 98, 110, 143, 165, 179, 181, 182, 184, 185, 189, 192, 197, 202, 205, 211, 213, 214, 215, 217], "junction_width": [13, 71, 91, 93, 143], "junction_test_pads_typ": [13, 143, 144], "mirror_squid": [13, 93, 143], "its": [13, 37, 59, 64, 65, 84, 93, 98, 107, 114, 119, 133, 143, 157, 158, 159, 175, 179, 181, 188, 189, 200, 209, 210, 214, 215], "finger_overshoot": [13, 72, 73, 91, 143], "include_base_metal_gap": [13, 72, 73, 91, 143], "shadow_margin": [13, 72, 73, 91, 143], "shadow": [13, 72, 73, 91, 143], "compact_geometri": [13, 72, 91, 143], "compact": [13, 72, 91, 143, 159], "separate_junct": [13, 72, 73, 91, 143], "offset_compens": [13, 72, 73, 91, 143], "lead": [13, 38, 57, 72, 73, 91, 119, 143, 174, 184, 217, 219], "offset": [13, 64, 72, 73, 84, 91, 94, 143], "mirror_offset": [13, 72, 73, 91, 143], "move": [13, 55, 64, 72, 73, 91, 93, 143, 158, 181, 191, 192, 202], "finger_overlap": [13, 72, 73, 91, 143], "insid": [13, 36, 57, 59, 64, 72, 73, 91, 98, 111, 113, 116, 119, 131, 143, 159, 165, 174, 188, 191, 198, 199, 201, 213, 214, 219, 222], "single_junct": [13, 72, 91, 143], "second": [13, 17, 32, 43, 72, 91, 115, 116, 119, 122, 133, 143, 158, 195, 215, 217, 220], "predefin": [14, 65, 113, 116, 190], "sma8": [14, 18, 137, 198, 201], "ard24": [14, 18], "dc24": 14, "num_strip": [15, 16, 145, 146], "min_width": [15, 16], "max_width": [15, 16], "stripe_test": [15, 16], "stripe_test_increasing_width": [15, 16], "architectur": [16, 183, 195, 200, 203, 206], "circular": [17, 36, 63, 84, 89, 159], "island": [17, 36, 89, 90, 91, 92, 93, 94, 218, 219], "drivelin": [17, 89, 90, 91, 92], "11500": 17, "12700": 17, "8000": [17, 127], "kappa_finger_control": 17, "capacitor": [17, 18, 19, 34, 36, 38, 39, 56, 57, 58, 64, 105, 152, 170, 187, 201], "32": [17, 89, 90], "21": [17, 18, 19, 23], "46": 17, "coupler_length": 17, "9800": 17, "couplers_a_qb1": 17, "couplers_b_qb1": 17, "couplers_angle_qb1": 17, "0deg": [17, 89, 90], "225": 17, "315": 17, "couplers_width_qb1": 17, "radial": [17, 89, 90], "30": [17, 18, 25, 56, 61, 62, 68, 89, 90, 111, 140, 148, 198, 218], "50": [17, 25, 35, 91, 127, 131, 165, 174], "couplers_arc_amplitude_qb1": 17, "angular": [17, 89, 90], "extens": [17, 89, 90, 131, 133, 167, 182, 183, 204, 215, 218], "25": [17, 32, 41, 59, 219], "65": 17, "couplers_a_qb2": 17, "couplers_b_qb2": 17, "couplers_angle_qb2": 17, "couplers_width_qb2": 17, "couplers_arc_amplitude_qb2": 17, "35": [17, 89, 90], "drive_line_offset": 17, "end": [17, 29, 32, 38, 55, 59, 64, 65, 66, 110, 113, 115, 118, 122, 130, 133, 136, 174, 175, 181, 182, 190, 213, 214, 218, 219], "drive": [17, 89, 90, 91, 137], "ground_gap": [17, 36, 57, 58, 89, 90, 91], "1400": 17, "900": [17, 209], "coupler_ext": [17, 91], "150": [17, 89, 91, 94, 198, 209], "island1_ext": [17, 91], "first": [17, 18, 23, 37, 43, 55, 59, 64, 65, 77, 80, 91, 115, 116, 132, 133, 158, 172, 174, 179, 182, 184, 185, 189, 194, 195, 198, 199, 202, 203, 205, 212, 214, 216, 217, 219, 220], "island2_ext": [17, 91], "drive_posit": [17, 91], "1100": 17, "island_island_gap": [17, 91], "em1": 17, "res_length": [18, 19], "physic": [18, 19, 29, 36, 38, 43, 57, 58, 64, 69, 110, 118, 119, 171, 210, 217, 222], "5434": [18, 19], "5429": [18, 19], "5374": [18, 19], "5412": [18, 19], "5493": [18, 19], "5589": [18, 19], "n_finger": [18, 19, 23, 56], "planar": [18, 19, 98], "l_finger": [18, 19, 23, 56], "23": [18, 19, 23], "9": [18, 19, 23, 206, 209, 214], "14": [18, 19, 23, 25, 184, 185], "28": [18, 19, 173, 185, 205], "type_coupl": [18, 19, 23, 56], "interdigit": [18, 19, 23, 56, 152], "n_ab": [18, 56, 140], "res_term": [18, 56], "termin": [18, 56, 59, 64, 65, 66, 122, 133, 136, 174, 184, 185, 204, 205, 206, 214, 215, 218, 219], "galvan": [18, 41, 56], "res_beg": [18, 56], "begin": [18, 56, 59, 66, 146, 214, 215], "res_a": [18, 19, 48, 56], "res_b": [18, 19, 48, 56], "12": [18, 19, 29, 69, 73, 75, 91, 93, 94, 111, 133, 218], "tl_airbridg": [18, 56], "res_airbridge_typ": [18, 56], "rectangular": [18, 29, 31, 33, 49, 56, 59, 64, 65, 66, 67, 84, 94, 214], "sample_holder_typ": 18, "marker_safeti": 18, "curv": [18, 65, 66, 158], "feedline_bend_dist": 18, "feedlin": [18, 23, 36, 38], "bend": [18, 55, 57, 64, 65, 219], "resonators_both_sid": 18, "both": [18, 19, 29, 30, 32, 43, 58, 64, 71, 76, 87, 119, 125, 133, 174, 179, 182, 186, 214, 217, 219, 220], "max_res_len": [18, 56], "exceed": [18, 56], "becom": [18, 56, 64, 80, 132, 213, 218, 219], "1e": [18, 56, 113, 116, 119, 138], "ground_grid_in_trac": [18, 55, 56, 64, 65, 66, 68], "trace": [18, 29, 48, 49, 56, 64, 65, 66, 67, 68, 69, 131], "border": [18, 133], "preliminari": 19, "resonator_typ": 19, "connector_dist": [19, 59], "extra_resonator_avoid": 19, "extra_resonator_etch": 19, "spiral": [19, 58, 59, 105, 192], "attach": [19, 84, 166, 201, 214], "pl_": 19, "_t_port_c": 19, "identifi": [19, 85, 107, 120, 170, 171, 178, 195, 209, 214, 215], "long": [19, 178, 185, 201, 211, 217, 218, 219], "same": [19, 23, 36, 37, 38, 55, 58, 64, 77, 84, 85, 86, 98, 113, 133, 158, 165, 169, 170, 171, 172, 175, 179, 184, 185, 186, 187, 193, 196, 198, 199, 201, 202, 213, 214, 215, 217, 219], "wai": [19, 22, 64, 85, 86, 113, 114, 116, 129, 174, 179, 185, 188, 191, 195, 196, 201, 202, 203, 204, 209, 210, 211, 214, 219, 220], "direct": [19, 22, 32, 33, 37, 49, 55, 64, 65, 84, 93, 119, 130, 133, 137, 151, 158, 161, 174, 189, 201, 219], "_corner": [19, 174], "cpw": [19, 25, 56, 148], "exclud": [19, 133, 172, 174], "finger_control": [19, 57], "solid": [19, 133, 218], "twofac": 19, "extra": [19, 29, 33, 64, 65, 67, 84, 93, 128, 163, 175, 206], "ground_grid_avoid": [19, 37, 93, 209], "counter": [19, 59, 158], "resonator_fac": 19, "2100": 19, "2900": 19, "3700": 19, "4500": 19, "spiral_box_height": 19, "spiral_box_width": 19, "x_indent": 19, "indent": [19, 20, 159], "800": [19, 59], "cap_res_dist": 19, "waveguide_indent": 19, "At": 19, "bridge_spac": [19, 59], "parametr": [20, 187, 191, 196, 203], "connect": [20, 22, 23, 38, 43, 49, 50, 59, 65, 89, 90, 128, 131, 133, 144, 147, 165, 189, 191, 192, 195, 197, 200, 201, 219], "pairwis": 20, "coplanar": [20, 43, 64, 65, 66, 68, 69, 171, 192, 218], "n_launcher": 20, "40": [20, 32, 36, 41, 43, 59, 64], "launcher_pitch": 20, "pitch": [20, 25, 148], "635": 20, "160": [20, 191], "96": 20, "520": 20, "tunabl": 21, "veri": [22, 65, 77, 190, 191, 192, 201, 213, 219, 220], "coupl": [23, 48, 218], "half": [23, 92, 198], "abov": [23, 59, 133, 165, 185, 186, 189, 191, 192, 199, 213, 217, 218, 220, 221], "below": [23, 29, 59, 75, 93, 115, 130, 133, 151, 165, 175, 177, 184, 195, 211, 213, 214, 215, 217, 218, 219, 221], "chargelin": [23, 94], "whose": [23, 114, 158, 165, 167, 169], "upper": [23, 75, 93, 130, 133, 219], "six": 23, "5400": [23, 214], "5500": [23, 214], "use_test_reson": [23, 135], "test_res_length": 23, "5600": [23, 214], "5800": 23, "metrologi": 25, "segment": [25, 59, 64, 65, 66, 68, 69, 113, 115, 133, 158, 189, 192], "crossect": 25, "analysi": [25, 111, 128, 218], "array_form": 25, "array_layout": 25, "metrology_pitch": 25, "cpw_distanc": [25, 148], "placehold": [25, 148, 214], "hor_dist": [25, 148], "ver_dist": [25, 148], "tsv_diamet": [25, 61, 148], "diamet": [25, 32, 41, 59, 61, 148], "tsv_margin": [25, 61, 148], "tsv_elliptical_width": [25, 62, 148], "ellipt": [25, 62, 148], "pos_start": [26, 137], "end_i": [26, 137], "c_kappa_l_fing": 26, "dedic": [26, 133, 138, 219, 221], "function": [26, 31, 37, 38, 45, 57, 59, 64, 67, 68, 71, 76, 77, 80, 83, 85, 87, 93, 96, 98, 102, 107, 113, 114, 115, 116, 120, 124, 130, 133, 134, 137, 138, 150, 152, 155, 158, 159, 161, 167, 169, 170, 172, 175, 178, 179, 180, 186, 195, 196, 198, 210, 211, 212, 214, 217, 218, 219, 221], "also": [26, 28, 37, 49, 55, 64, 65, 66, 68, 77, 84, 85, 86, 87, 88, 93, 94, 114, 118, 125, 130, 133, 138, 143, 145, 146, 147, 151, 157, 158, 159, 165, 166, 168, 170, 172, 175, 179, 181, 182, 184, 185, 186, 187, 190, 191, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 211, 213, 214, 215, 217, 218, 219, 221, 223], "assum": [26, 65, 66, 77, 85, 133, 138, 205, 218, 219], "follow": [26, 59, 64, 65, 77, 80, 82, 83, 97, 98, 99, 114, 133, 135, 136, 137, 138, 158, 159, 165, 166, 167, 171, 177, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 194, 195, 199, 202, 205, 210, 213, 214, 215, 217, 218, 219, 220, 221], "attribut": [26, 37, 83, 107, 131, 138, 172, 179, 180], "arm_width_a": [26, 137, 138], "arm_width_b": [26, 137, 138], "qubit_spac": [26, 137, 138], "fluxline_typ": [26, 45, 46, 47, 93, 138, 219], "rr_cpl_width": [26, 138], "arm": [26, 38, 93, 94, 137, 138, 141, 143, 198], "24": [26, 94, 137, 138], "rr": [26, 138], "qb": [26, 138], "um": [26, 94, 131, 133, 138, 163, 171], "file": [27, 37, 70, 77, 78, 80, 82, 83, 84, 85, 110, 111, 116, 118, 119, 120, 122, 123, 128, 132, 133, 155, 157, 162, 164, 167, 168, 170, 171, 175, 177, 179, 181, 182, 184, 185, 186, 190, 198, 199, 200, 202, 203, 204, 205, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223], "thing": [27, 82, 179, 187, 197, 217], "path": [27, 59, 64, 65, 68, 77, 83, 87, 110, 111, 115, 116, 118, 120, 123, 128, 132, 137, 157, 158, 162, 166, 170, 171, 181, 185, 186, 188, 191, 192, 201, 205, 206, 210, 211, 215, 216, 217, 220], "sub": [27, 37, 64, 65, 72, 84, 93, 119, 130, 133, 175, 179, 188, 214], "repres": [28, 64, 65, 66, 71, 76, 77, 82, 84, 85, 86, 113, 195, 203, 213, 219], "form": [28, 64, 84, 98, 111, 119, 125, 129, 133, 165, 178, 179, 210], "being": [28, 80, 184, 201], "pcelldeclarationhelp": [28, 37, 179], "load": [28, 70, 77, 85, 88, 91, 92, 94, 162, 164, 166, 167, 171, 175, 179, 213, 214, 217], "klayout": [28, 64, 65, 77, 80, 87, 102, 107, 113, 116, 133, 155, 157, 158, 164, 165, 166, 167, 168, 170, 173, 179, 181, 182, 184, 185, 187, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 209, 211, 212, 214, 219, 221, 222, 223], "code": [28, 30, 34, 36, 37, 48, 55, 56, 57, 58, 64, 65, 70, 71, 76, 77, 88, 89, 90, 91, 93, 94, 98, 143, 159, 165, 175, 178, 179, 181, 183, 184, 185, 186, 188, 190, 191, 193, 196, 197, 198, 199, 201, 202, 203, 204, 211, 213, 219, 220, 222, 223], "share": [28, 93, 133, 158, 217], "them": [28, 98, 111, 122, 133, 170, 179, 184, 185, 186, 187, 189, 198, 200, 201, 209, 211, 214, 219], "have": [28, 31, 34, 36, 37, 48, 52, 56, 57, 58, 64, 65, 77, 80, 84, 85, 86, 88, 89, 90, 91, 94, 107, 111, 113, 114, 116, 133, 157, 158, 165, 166, 170, 172, 174, 175, 179, 181, 182, 184, 185, 186, 188, 189, 190, 191, 192, 195, 197, 198, 199, 200, 201, 202, 206, 207, 209, 210, 213, 214, 215, 216, 218, 219], "easi": [28, 184, 186, 203], "support": [28, 36, 64, 77, 108, 118, 119, 128, 133, 157, 159, 164, 185, 192, 203, 206, 215, 217, 218, 219, 221], "concept": [28, 187, 193, 200, 213, 219], "belong": [28, 80, 107, 170, 197], "certain": [28, 34, 36, 37, 48, 56, 57, 58, 78, 84, 85, 89, 90, 91, 94, 133, 184, 185, 186, 198, 200, 219], "determin": [28, 37, 43, 52, 64, 65, 84, 85, 107, 110, 111, 119, 133, 147, 165, 168, 174, 175, 201, 209, 214, 215, 218, 219], "actual": [28, 31, 45, 64, 65, 66, 71, 76, 84, 85, 93, 108, 181, 185, 195, 202, 210, 213, 214, 219], "refer": [28, 35, 36, 37, 38, 39, 77, 80, 83, 89, 90, 133, 157, 158, 159, 174, 177, 179, 184, 185, 186, 189, 201, 213, 220], "taper": [29, 39, 49, 64, 69, 91], "bridge_gap_width": 29, "with_side_airbridg": 29, "With": [29, 80, 179, 192, 214], "with_right_waveguid": 29, "gap_between_bridg": 29, "inner": [29, 90, 133, 158, 219], "adjac": [29, 64, 133, 158, 160], "bridg": [29, 31, 32, 33, 55, 59, 64, 67, 97, 200], "waveguide_extra": 29, "taper_length": [29, 39, 64, 69], "31": [29, 69, 159], "41592653589793": [29, 69], "m2": [29, 69, 206], "a2": [29, 36, 38, 43, 57, 58, 64, 67, 69], "non": [29, 36, 38, 43, 55, 57, 58, 59, 64, 69, 105, 111, 113, 116, 133, 158, 159, 164, 178, 218, 219], "b2": [29, 36, 38, 43, 57, 58, 64, 67, 69], "add_met": [29, 49, 64, 65, 66, 67, 68, 69], "add": [29, 32, 37, 38, 43, 49, 55, 62, 64, 65, 66, 67, 68, 69, 75, 77, 84, 85, 93, 97, 99, 113, 114, 119, 128, 133, 135, 136, 137, 138, 147, 172, 179, 181, 197, 198, 200, 201, 202, 209, 214, 215, 217, 219, 220], "airbridge_typ": [29, 31, 32, 33, 59, 64, 67], "bridge_width": [29, 31, 32, 59], "pad_length": [29, 31, 32, 59], "22": [29, 73, 91, 181, 184, 205], "bridge_length": [29, 31, 59, 200], "60": [29, 39, 89, 90], "without": [31, 45, 59, 64, 71, 76, 77, 84, 87, 93, 122, 129, 133, 144, 185, 186, 190, 193, 197, 202, 205, 214, 215, 217, 219, 223], "subclass": [31, 34, 36, 37, 48, 52, 56, 57, 58, 64, 85, 86, 89, 90, 91, 93, 94, 98, 111, 119, 133, 159, 172, 218, 220, 221], "otherwis": [31, 32, 33, 37, 64, 65, 77, 97, 99, 120, 122, 130, 133, 134, 135, 136, 137, 138, 159, 166, 175, 184, 190, 205, 219], "user": [31, 32, 33, 37, 62, 64, 77, 85, 93, 122, 157, 178, 181, 182, 184, 185, 194, 198, 199, 200, 203, 204, 205, 211, 214, 215, 217, 219], "classmethod": [31, 34, 36, 37, 38, 41, 43, 45, 48, 52, 54, 56, 57, 58, 61, 64, 71, 89, 90, 91, 94, 98, 133, 143, 172, 179, 219], "18": [31, 45], "44": [31, 59, 200], "equival": [32, 64, 159], "origin": [32, 33, 37, 41, 62, 63, 66, 67, 74, 75, 77, 84, 113, 114, 133, 158, 163, 191, 198], "geometr": [32, 33, 41, 62, 63, 158, 203], "include_bump": [32, 59], "ubm_diamet": [32, 41, 59], "under": [32, 37, 41, 59, 77, 85, 107, 115, 131, 133, 166, 181, 184, 188, 192, 197, 199, 202, 211, 213], "bump_diamet": [32, 41, 59], "part": [33, 48, 49, 59, 85, 93, 94, 119, 130, 131, 133, 143, 158, 184, 190, 191, 195, 198, 201, 210, 213, 214, 217, 218], "port_a": [33, 38, 64, 134], "port_b": [33, 38, 64, 201], "closest": [33, 35, 129, 133, 147, 157, 158, 165, 219], "pad_extra": 33, "capacit": [34, 57, 91, 92, 111, 119, 131, 138, 174, 217, 219, 221], "fem": [34, 217], "comput": [34, 68, 70, 119, 128, 158, 215, 217, 218], "best": [34, 36, 37, 48, 56, 57, 58, 89, 90, 91, 94, 185, 206, 209], "practic": [34, 36, 37, 48, 56, 57, 58, 64, 89, 90, 91, 94, 179, 211, 219], "effect": [34, 36, 37, 48, 56, 57, 58, 89, 90, 91, 94, 111, 114, 133, 134, 137, 158, 163, 184, 186, 218], "serv": [34, 36, 37, 48, 56, 57, 58, 89, 90, 91, 94], "deriv": [34, 36, 37, 48, 56, 57, 58, 64, 89, 90, 91, 94, 102, 107, 134, 151, 158, 179, 200], "noth": [34, 36, 37, 48, 56, 57, 58, 89, 90, 91, 94, 172, 213], "els": [34, 36, 37, 48, 56, 57, 58, 89, 90, 91, 94, 159], "cl": [34, 36, 37, 48, 52, 56, 57, 58, 89, 90, 91, 94, 98, 133, 152, 172, 219], "you": [34, 36, 37, 48, 52, 56, 57, 58, 59, 77, 89, 90, 91, 94, 110, 113, 115, 116, 118, 159, 165, 177, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 191, 197, 198, 199, 200, 201, 202, 205, 206, 207, 209, 210, 211, 213, 214, 215, 216, 218, 219, 220, 222, 223], "need": [34, 36, 37, 48, 52, 56, 57, 58, 59, 64, 65, 78, 80, 87, 89, 90, 91, 94, 96, 98, 102, 107, 132, 155, 157, 158, 171, 177, 178, 179, 180, 181, 184, 185, 186, 189, 197, 199, 200, 202, 203, 205, 206, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221], "decid": [34, 36, 37, 48, 56, 57, 58, 89, 90, 91, 94, 219], "x_coupler_length": 34, "x_coupler_height": 34, "x_coupler_vari": 34, "variant": [34, 46, 47, 82, 85, 214], "either": [34, 37, 59, 70, 71, 76, 77, 80, 85, 86, 88, 102, 114, 133, 144, 158, 174, 184, 188, 201, 219, 221], "remove_capacitor": 34, "finger_numb": [34, 38, 39], "finger_width": [34, 38, 39, 57, 58], "finger_gap": [34, 38, 39, 57, 58], "finger_gap_end": [34, 38], "marker_dist": 35, "diagonal_squar": [35, 52], "use_face_prefix": 35, "prefix": [35, 37, 77, 83, 101, 102, 104, 105, 106, 107, 113, 118, 123, 132, 133, 147, 186, 201], "chip_dicing_width": 35, "chip_dicing_line_length": 35, "chip_dicing_gap_length": 35, "dash": [35, 192], "outer": [36, 49, 84, 90, 147, 158, 195], "semi": 36, "fix": [36, 38, 57, 64, 133, 186, 205, 206], "imped": [36, 89, 90, 131], "r_inner": [36, 90, 158], "r_outer": [36, 90, 158], "extern": [36, 90, 115, 199, 203, 210, 211, 212, 219, 220], "swept_angl": 36, "cover": [36, 52, 84, 130, 133, 152, 160, 174, 186, 190, 194, 214, 218], "180": [36, 43, 58, 64, 67, 90], "outer_island_width": [36, 90], "fixed_length": [36, 38, 57], "auto": [36, 38, 57, 197], "_epr_part_reg_cplrbulk_lay": 36, "partit": [36, 57, 58, 94, 102, 105, 107, 115, 130, 133, 134, 217], "cplrbulk": 36, "_epr_part_reg_1leadbulk_lay": 36, "1leadbulk": 36, "_epr_part_reg_2leadbulk_lay": 36, "2leadbulk": 36, "_epr_part_reg_1gapbulk_lay": 36, "1gapbulk": 36, "_epr_part_reg_2gapbulk_lay": 36, "2gapbulk": 36, "cell_transf": [37, 133], "extract": [37, 102, 107, 165, 170, 174, 175], "specif": [37, 52, 64, 71, 76, 77, 82, 83, 85, 98, 107, 124, 133, 159, 174, 177, 179, 181, 184, 185, 192, 193, 200, 202, 205, 206, 213, 219, 220, 221], "convert": [37, 64, 84, 98, 133, 159, 161, 165, 166, 169, 170, 174, 175, 188, 193, 211], "target": [37, 64, 150, 174, 185, 206], "system": [37, 80, 119, 157, 174, 181, 184, 185, 200, 202, 205, 206, 212, 217, 220], "recurs": [37, 77, 133, 159, 169, 174], "look": [37, 77, 114, 132, 133, 134, 166, 174, 184, 194, 199, 201, 203], "subcel": [37, 64, 77, 93, 133, 143, 174, 198], "behav": 37, "like": [37, 64, 71, 76, 85, 102, 107, 159, 172, 179, 181, 182, 185, 186, 187, 192, 197, 198, 206, 214, 217, 218], "target_cel": 37, "label_tran": [37, 77, 133], "note": [37, 59, 64, 77, 84, 85, 102, 119, 133, 158, 161, 173, 174, 179, 181, 184, 185, 186, 188, 190, 191, 192, 198, 199, 214, 215, 217, 223], "To": [37, 85, 86, 87, 102, 111, 119, 137, 159, 181, 182, 184, 187, 188, 189, 191, 195, 198, 200, 201, 202, 205, 206, 209, 210, 213, 214, 217, 218, 219, 223], "inherit": [37, 179, 198, 219], "It": [37, 64, 65, 77, 84, 85, 86, 87, 93, 133, 143, 159, 179, 181, 184, 185, 186, 191, 192, 193, 197, 202, 203, 206, 209, 210, 216, 217, 219, 220], "directli": [37, 64, 77, 133, 186, 190, 192, 195, 198, 200, 209, 211, 214, 217], "take": [37, 77, 98, 107, 113, 114, 116, 133, 134, 158, 159, 172, 174, 184, 188, 190, 191, 210, 217, 218, 220, 221], "provid": [37, 77, 86, 96, 133, 159, 181, 187, 210, 213, 218, 219], "keyword": [37, 52, 64, 77, 85, 86, 97, 98, 99, 115, 133, 135, 136, 137, 138, 167, 219], "placement": [37, 52, 77, 84, 133, 137, 175, 182, 209], "parent": [37, 77, 133, 137, 174, 175, 179], "allow": [37, 64, 65, 77, 84, 93, 111, 119, 133, 143, 159, 179, 185, 188, 202, 203, 204, 217, 218, 223], "possibl": [37, 52, 59, 64, 65, 77, 85, 93, 133, 144, 172, 179, 181, 184, 185, 190, 202, 210, 215, 217, 218, 220, 222], "instanc": [37, 52, 64, 68, 77, 85, 86, 111, 114, 119, 133, 134, 151, 152, 156, 161, 165, 167, 169, 170, 171, 175, 179, 184, 185, 187, 188, 189, 191, 198, 200, 201, 210, 213, 218, 219, 220, 221, 222], "properti": [37, 62, 77, 84, 86, 98, 133, 171, 172, 175, 179, 188, 191, 192, 209, 211, 213], "rel": [37, 77, 93, 107, 110, 111, 115, 119, 133, 143, 163, 166, 174, 179, 201, 218], "dvector": [37, 77, 84, 93, 133, 158], "must": [37, 64, 65, 77, 130, 133, 158, 161, 173, 174, 175, 184, 185, 198, 199, 200, 209, 211, 213, 217, 218, 219, 220, 223], "default_fac": [37, 80, 209], "doe": [37, 64, 98, 131, 133, 165, 181, 184, 188, 190, 202, 210, 217, 221], "necessarili": [37, 65, 133], "sort": [37, 113, 159], "criteria": [37, 124], "push": [37, 181, 215], "_epr_": 37, "alphabet": 37, "subtyp": 37, "abstract": [37, 98, 133, 179], "care": [37, 158, 184, 186], "str": [37, 64, 84, 101, 102, 104, 105, 106, 107, 110, 111, 113, 114, 115, 118, 119, 121, 122, 125, 127, 131, 133, 134, 150, 157, 159, 161, 164, 165, 166, 172, 175], "indic": [37, 80, 113, 115, 133, 167, 174, 195, 197, 218, 219], "refpoint_transform": 37, "conveni": [37, 64, 84, 87, 133, 210, 216, 219], "new": [37, 77, 97, 98, 99, 113, 123, 133, 135, 136, 137, 138, 150, 156, 157, 161, 166, 172, 175, 178, 179, 184, 185, 186, 187, 188, 190, 194, 198, 199, 200, 201, 202, 214], "present": [37, 124, 133, 175, 181, 184, 204], "give": [37, 119, 133, 184, 195, 198, 202, 204, 218], "current": [37, 77, 87, 108, 111, 128, 133, 157, 187, 190, 192, 206, 209, 210, 214, 215, 219], "po": [37, 137, 147], "well": [37, 107, 129, 158, 175, 210, 214, 219], "netlist": [37, 85, 170, 171, 211, 214], "Will": [37, 113, 116], "decor": [37, 172, 179, 219], "annot": [37, 62, 65, 66, 80, 182, 197, 211], "evalu": [37, 38], "replac": [37, 85, 161, 175, 184, 214, 220], "mark": [37, 80, 213], "go": [37, 77, 133, 177, 181, 182, 201, 213, 219, 223], "_to_": 37, "cell_inst": 37, "new_nam": 37, "definit": [37, 123, 133, 165, 179, 198, 199, 200, 201, 203, 214, 215, 217, 222], "expos": [37, 64, 87, 213], "renam": [37, 167], "nopar": [37, 98, 133], "abstract_class": [37, 98, 133], "ancestor": [37, 98, 133, 179], "up": [37, 68, 98, 110, 111, 114, 118, 119, 131, 133, 134, 160, 164, 166, 173, 174, 179, 184, 185, 186, 188, 192, 195, 199, 201, 213, 217, 218, 219, 221], "draw": [37, 62, 64, 171, 185, 187, 192, 195, 197, 199, 203, 211, 219, 220], "out": [37, 77, 114, 122, 133, 164, 165, 174, 184, 185, 196, 197, 206, 214, 215], "By": [37, 52, 55, 84, 85, 86, 93, 113, 119, 133, 159, 167, 168, 178, 195, 197, 213, 214, 215, 217, 222], "contour": 37, "overriden": [37, 133], "custom": [37, 52, 64, 77, 80, 89, 90, 113, 116, 118, 124, 130, 159, 167, 182, 195, 198, 203, 212, 217], "behaviour": 37, "error_msg": 37, "error": [37, 110, 118, 119, 123, 124, 128, 157, 168, 181, 184, 192, 197, 199, 202, 203, 206, 213], "rais": [37, 64, 123, 124, 157, 159, 161, 175, 213], "valueerror": [37, 64, 159, 161], "messag": [37, 77, 124, 178, 199, 206], "pure": [37, 218], "doesn": [37, 98, 105, 107, 133, 188, 219], "t": [37, 43, 64, 67, 80, 98, 105, 107, 124, 133, 158, 159, 179, 181, 184, 185, 188, 206, 217, 219], "dpolygon": [37, 68, 130, 176, 198], "etc": [37, 64, 80, 113, 116, 170, 175, 179, 184, 198, 202, 209, 222], "primari": [37, 184, 218], "x_max": 38, "y_max": 38, "x_end": 38, "y_left": 38, "y_right": 38, "respect": [38, 64, 130, 131, 133, 141, 163, 176, 219], "adjust": [38, 39, 43, 64, 192], "ground_pad": 38, "ground_gap_ratio": 38, "ratio": [38, 39, 49, 77, 221], "finger_length": [38, 39], "corner_r": [38, 39], "maintain": [39, 114, 178, 184, 196, 205], "match": [41, 66, 85, 86, 114, 124, 133, 199, 211, 215, 220], "contact": [41, 157], "over": [41, 64, 86, 111, 119, 133, 165, 172, 181, 184, 213, 218, 219], "inter": [42, 43], "output": [43, 64, 116, 118, 119, 150, 159, 161, 165, 168, 181, 185, 210, 211, 215, 217, 218, 220, 221], "chosen": [43, 55, 59, 77, 124, 192, 215, 217], "_port": 43, "orient": [43, 64, 115, 175], "output_rot": [43, 64], "inter_bump_dist": [43, 64], "w": [43, 59, 64, 65, 137], "connector_a": [43, 59, 64], "connector_b": [43, 59, 64], "round_connector": [43, 59, 64], "round": [43, 59, 64, 73, 91, 94, 119, 133, 158, 164, 197], "n_center_bump": [43, 64], "seri": [43, 64, 92, 97, 220], "fluxline_width": [45, 47], "fluxline_gap_width": [45, 47], "hanger": 48, "coupling_length": 48, "head_length": 48, "resonator_length": [48, 56], "total": [48, 55, 64, 74, 75, 93, 119, 133, 140, 150, 158, 217, 218], "ground_width": 48, "middl": [48, 64, 133, 134, 214, 219], "wirebond": [49, 50], "west": [49, 94, 157], "east": [49, 94, 157], "scale": [49, 84], "a_launch": 49, "b_launcher": 49, "l": [49, 68, 180], "240": 49, "144": 49, "common": [52, 96, 107, 123, 203, 205, 213, 220], "cell_mark": [52, 54], "kwarg": [52, 54, 59, 64, 67, 77, 84, 85, 86, 97, 98, 99, 133, 135, 136, 137, 138, 150, 152, 159, 166, 172], "wafer": [52, 84, 86, 214, 222], "own": [52, 94, 157, 181, 184, 198, 199, 202, 203, 204, 209], "wish": [52, 114, 184, 214], "hous": 52, "encod": [52, 159], "prefer": [52, 68, 155, 179, 182, 185, 216, 217, 222], "inst": [52, 54, 151], "surround": [52, 175], "extend": [52, 64, 65, 133, 174, 201, 203, 209, 214], "box_margin": 52, "window": [52, 54, 77, 118, 157, 158, 181, 183, 187, 188, 191, 199, 205, 213, 214, 216, 220, 223], "flyover": [52, 54], "arm_length": [54, 93, 94, 143, 198, 219], "arm_width": [54, 94, 198], "ubm": 54, "arrow_numb": 54, "arrow": [54, 213], "start_point": 55, "end_point": 55, "altern": [55, 59, 64, 65, 85, 107, 111, 119, 122, 133, 170, 175, 184, 217, 218, 220], "shown": [55, 77, 113, 120, 122, 170, 171, 179, 187, 195, 200, 213, 217], "latter": [55, 64, 85, 181], "cannot": [55, 64, 161, 191, 198, 205, 215], "edit": [55, 64, 65, 161, 185, 188, 190, 191, 199, 202, 209, 211, 223], "minim": [55, 64, 107], "taken": [55, 65, 66, 92, 113, 114, 133, 158, 165, 179, 211, 219], "underli": [55, 211], "equidist": 55, "n_bridg": [55, 64, 97], "600": 55, "3000": [55, 201], "probeline_length": 56, "probelin": 56, "smooth": [56, 57, 152], "intern": [56, 98, 133, 174, 187, 210, 218, 219, 220], "radian": [57, 66, 158], "start_po": 57, "start_ang": 57, "continu": [57, 59, 64, 65, 158, 186], "numer": 57, "optim": [57, 119], "achiev": [57, 64, 93], "order_numb": 57, "reg": 57, "xr": 57, "growth": 57, "_epr_part_reg_fingersbulk_lay": 57, "fingersbulk": 57, "finger_width2": 58, "ground_gap2": 58, "spiral_angl": 58, "spiral_angle2": 58, "rotation2": 58, "_epr_part_reg_fingergmer_lay": 58, "fingergm": 58, "_epr_part_reg_waveguides_lay": 58, "input_path": 59, "goe": [59, 64, 158], "last": [59, 64, 65, 80, 102, 132, 133, 158, 191, 209, 214], "poly_path": 59, "unless": [59, 184, 185, 205, 214], "alreadi": [59, 77, 110, 113, 122, 184, 197, 214], "longer": [59, 169, 172, 188, 191], "than": [59, 64, 77, 80, 84, 114, 115, 119, 133, 158, 165, 168, 170, 179, 195, 203, 206, 213, 217, 218], "vertex": 59, "parallel": [59, 85, 136, 184, 214, 217], "polygon_path": 59, "want": [59, 84, 102, 115, 158, 165, 175, 182, 184, 185, 186, 187, 191, 197, 201, 213, 214, 216, 217, 219, 220], "choos": [59, 85, 93, 143, 185, 187, 191, 199, 201, 202, 205, 210, 213, 214, 215, 217], "attempt": [59, 159, 170, 184], "find": [59, 87, 129, 154, 161, 166, 179, 186, 197, 205, 206], "largest": [59, 158], "zero": [59, 68, 113, 116, 133, 219], "independ": [59, 184, 185, 196, 217], "n_bridges_pattern": 59, "neg": [59, 133, 159], "so": [59, 64, 85, 97, 98, 99, 107, 113, 114, 133, 135, 136, 137, 138, 157, 158, 174, 175, 179, 181, 184, 185, 186, 193, 198, 200, 201, 202, 206, 209, 213, 218, 220, 223], "above_spac": 59, "below_spac": 59, "right_spac": 59, "x_space": 59, "y_space": 59, "bridges_left": 59, "bridges_bottom": 59, "bridges_right": 59, "bridges_top": 59, "easili": [59, 67, 128, 152, 185, 186, 200, 203, 211], "old": [59, 67, 166, 168, 175, 214], "spiralresonatorrectangl": 59, "bx": [59, 64, 65], "ex": [59, 64, 65, 205], "auto_spac": 59, "include_connector_length": 59, "manual_spac": 59, "term2": [59, 64, 65, 137], "substrat": [62, 63, 113, 115, 116, 119, 130, 133, 197, 219], "e": [63, 64, 67, 84, 93, 119, 134, 137, 159, 170, 175, 179, 181, 185, 195, 209, 211, 215, 216, 217, 218], "composit": [64, 102, 179, 192], "suppli": [64, 65, 86, 97, 99, 133, 135, 136, 137, 138, 157, 219], "serial": [64, 159], "from_seri": 64, "ast": [64, 161], "literal_ev": [64, 161], "node_object": 64, "node_obj": 64, "element_nam": 64, "human": [64, 203, 211], "readabl": [64, 211], "represent": [64, 84, 158, 159, 217], "storag": [64, 190], "conform": [64, 128], "format": [64, 98, 157, 165, 167, 177, 217, 218, 220, 221], "class_str": 64, "parameter_dict": 64, "__str__": 64, "omit": [64, 206, 214, 219], "made": [64, 93, 114, 169, 170, 171, 218, 219], "perspect": 64, "rout": [64, 133, 168, 192, 201], "sever": [64, 77, 159, 179, 184, 187, 190, 201, 202, 214, 219, 220, 221], "As": [64, 187, 198, 199, 201, 209, 213, 214], "bonu": 64, "arbitrari": [64, 65, 119, 133, 159, 201, 210, 218], "next": [64, 130, 133, 145, 146, 158, 189, 199, 213, 219], "waypoint": [64, 65], "except": [64, 65, 77, 85, 115, 124, 159, 161, 167, 170, 172, 175, 179, 190, 213], "collinear": 64, "previou": [64, 158, 184, 185, 190, 198, 201, 209, 213, 214], "back": [64, 191, 197, 215], "pass": [64, 77, 85, 86, 97, 98, 99, 102, 107, 111, 114, 119, 120, 122, 133, 135, 136, 137, 138, 158, 159, 165, 166, 171, 179, 195, 201, 219], "ab_across": 64, "across": [64, 219], "evenli": 64, "preced": 64, "calcul": [64, 84, 93, 102, 111, 114, 119, 131, 143, 185, 190, 201, 210, 218], "ab_to_ab_spac": 64, "ab_to_node_clear": 64, "former": [64, 114], "densiti": [64, 84, 150, 190], "fact": 64, "instead": [64, 67, 77, 85, 119, 159, 161, 179, 181, 184, 189, 198, 200, 202, 210, 215, 217, 218, 219], "normal": [64, 131, 179, 181], "those": [64, 122, 130, 159, 189, 214, 215], "correct": [64, 87, 102, 105, 107, 115, 134, 161, 179, 195, 198, 199, 205, 215], "compar": [64, 65, 159, 164, 211], "notabl": 64, "detail": [64, 77, 96, 119, 181, 184, 185, 191, 196, 197, 199, 200, 202, 213, 218, 220, 221], "everi": [64, 65, 132, 159, 175, 179, 182, 185, 190, 222], "done": [64, 119, 185, 186, 187, 209, 216, 217, 218, 223], "segment_length": 64, "individu": [64, 84, 85, 86, 113, 116, 119, 133, 178, 184, 185, 192, 219], "regular": [64, 205, 214, 219, 220], "test_waveguide_composit": [64, 213], "lym": [64, 175, 189, 213, 220], "script": [64, 77, 110, 118, 120, 122, 123, 132, 157, 165, 175, 181, 182, 184, 185, 190, 196, 202, 203, 206, 210, 211, 212, 215, 216, 217, 218, 219, 220, 221, 222], "were": [64, 102, 114, 165, 175], "explicitli": [64, 107, 119, 133, 157, 205, 206, 217], "implicitli": 64, "node_index": [64, 156, 161], "_created_": 64, "associ": [64, 77, 171, 213], "particular": [64, 195, 197, 201, 202, 213], "subscel": 64, "appear": [64, 188, 191, 195, 199, 213, 222], "retriev": 64, "itself": [64, 107, 184, 197, 202, 218], "count": [64, 133, 151, 219], "consecut": [64, 160], "special": [64, 158, 189], "consequ": [64, 92, 170], "accumul": 64, "oni": 64, "report": [64, 85, 119, 186], "route_funct": 64, "initial_guess": 64, "waveguide_param": 64, "lambda": 64, "f": [64, 67, 113, 131, 138, 181, 213], "more": [64, 80, 82, 85, 110, 113, 116, 118, 128, 133, 170, 178, 179, 180, 181, 184, 185, 189, 190, 191, 194, 197, 198, 199, 200, 203, 209, 211, 213, 214, 217, 218, 219, 220, 221, 223], "compon": [64, 170], "tune": [64, 93, 175, 219], "weight": 64, "initi": [64, 77, 97, 98, 99, 133, 135, 136, 137, 138, 165, 174, 213, 214], "reason": [64, 179, 195], "interfac": [64, 113, 115, 116, 119, 133, 218, 219], "snap": [64, 165], "behavior": [64, 77, 159], "unmodifi": 64, "requir": [64, 77, 119, 124, 155, 165, 179, 180, 183, 184, 186, 190, 202, 206, 210, 211, 214, 217, 219, 220, 221], "chain": 64, "iter": [64, 65, 111, 119, 159, 165, 218], "approri": 64, "target_len": 64, "point_a": 64, "point_a_corn": 64, "point_b": 64, "point_b_corn": 64, "endpoint": [64, 65, 113, 116, 158, 170], "enable_gui_edit": [64, 161], "gui_path": 64, "gui_path_shadow": 64, "hidden": [64, 80, 172, 179, 197, 200], "detect": [64, 102, 189, 190, 201], "tight_rout": 64, "tight": 64, "airbridge_param": 64, "radio": 65, "bent": 65, "open": [65, 91, 92, 102, 157, 182, 184, 190, 191, 202, 205, 206, 208, 210, 212, 213, 214, 217, 218, 223], "dpath": [65, 68, 201], "partial": [65, 191, 192], "case": [65, 80, 85, 87, 107, 113, 114, 116, 123, 133, 157, 158, 169, 175, 182, 185, 186, 187, 191, 197, 199, 201, 204, 210, 211, 213, 214, 215, 218, 219], "guid": [65, 85, 136, 180, 181, 188, 192, 194, 200, 203, 219], "visibl": [65, 77, 184, 187, 190, 192, 198, 199, 201, 202, 206, 213, 214], "graphic": [65, 84, 158], "due": [65, 179, 206], "precis": [65, 113, 116, 133, 203, 218], "arithmet": 65, "point1": 65, "point2": 65, "point3": 65, "data": [65, 80, 84, 96, 98, 111, 113, 116, 119, 131, 132, 133, 165, 171, 175, 197, 198, 204, 209, 213, 218, 220, 221], "v1": 65, "v2": 65, "alpha1": 65, "alpha2": 65, "corner_po": 65, "vector": [65, 158], "elem": [65, 66], "point_1": 65, "point_2": 65, "term_len": [65, 66], "face_index": [65, 66], "One": [65, 133, 163, 170, 185, 188, 219], "waveguide_cel": 65, "annotation_lay": 65, "consid": [65, 84, 98, 113, 116, 133, 158, 161, 185, 218, 219], "enough": [65, 165], "neighbor": [65, 192], "begin_shapes_rec": 65, "we": [65, 80, 84, 102, 114, 133, 170, 174, 175, 178, 179, 180, 184, 185, 191, 193, 195, 196, 198, 199, 200, 201, 202, 205, 206, 213, 214, 217, 219, 220, 222], "unsign": [65, 158], "maximum": [65, 77, 111, 119, 217, 218], "tline": 65, "stop": [66, 111, 119, 158, 184, 213, 218], "mode": [66, 77, 102, 107, 155, 185, 191, 202, 211, 213, 217, 220, 223], "circl": [66, 158, 213], "discret": [66, 111, 218], "shortcut": 66, "detour": 66, "alpha": 66, "left_gap_inn": 66, "left_gap_out": 66, "right_gap_inn": 66, "right_gap_out": 66, "left_protect": 66, "right_protect": 66, "would": [66, 87, 107, 159, 161, 170, 185, 186, 189, 200], "rad": 66, "141592653589793": 66, "multiwai": 67, "splitter": 67, "letter": [67, 80, 164, 166, 199], "length_extra": 67, "length_extra_sid": 67, "waveguidecoplanartcross": 67, "measur": [67, 89, 90, 133, 140, 213], "11": [67, 115, 133, 184, 185], "270": 67, "use_airbridg": 67, "centr": [67, 89, 90], "bridge_dist": 67, "a_list": 67, "b_list": 67, "port_nam": [67, 124, 201], "c": [67, 85, 137, 179], "d": [67, 85, 133, 159, 184, 214, 217], "g": [67, 84, 159, 175, 209, 217], "h": [67, 131, 138], "j": [67, 218], "waveguide_path": 68, "mess": 68, "centerlin": 68, "design": [70, 71, 76, 83, 85, 88, 93, 175, 182, 185, 187, 192, 195, 196, 200, 201, 203, 211, 213, 218, 221, 222], "packag": [70, 87, 96, 178, 181, 184, 185, 194, 198, 199, 200, 203, 204, 205, 210, 211, 215, 216, 218, 222], "oasi": [70, 123], "devic": [70, 93, 143, 197], "research": 70, "qcd1": 70, "qcd2": 70, "qcd3": 70, "thu": [71, 76, 218], "junctionnam": 71, "02": [71, 91, 93, 143], "style": [72, 73, 178, 183, 194, 201, 203], "distinct": [72, 187, 204], "top_pad_lay": 72, "edge_height": 72, "small_loop_height": 72, "loop_bottom_i": 72, "delta_j": 72, "finger_margin": 72, "junction_shapes_top": 72, "junction_shapes_bottom": 72, "shadow_shap": 72, "h_pad_height": 72, "v_pad_width": 72, "pad_overlap": 72, "tp_width": 72, "tp_height": 72, "rounding_param": 72, "bp_height": 72, "bp_gap_x": 72, "big_loop_height": 72, "include_base_metal_addit": [73, 91], "pad_height": [73, 91, 140, 147], "pad_to_pad_separ": [73, 91], "x_offset": [73, 91], "pad_rounding_radiu": [73, 91], "junction_total_length": [74, 75, 93, 133], "26": 74, "33": [75, 93, 133], "junction_upper_pad_width": [75, 93, 133], "8": [75, 93, 115, 133, 171, 172, 179], "junction_upper_pad_length": [75, 93, 133], "13": [75, 93, 133, 205], "junction_lower_pad_width": [75, 93, 133], "junction_lower_pad_length": [75, 93, 133], "include_background_gap": [75, 93, 133], "squidnam": 76, "loop_area": [76, 91, 93, 143], "background_color": 77, "ffffff": 77, "helper": [77, 86, 98, 115, 124, 133, 149, 158, 166, 174, 185, 219], "render": [77, 133], "environ": [77, 128, 181, 183, 184, 205, 206, 215, 217, 221, 222], "layoutview": [77, 213], "cellview": [77, 213], "imag": [77, 82, 171, 181, 182, 185, 205, 213, 214, 215, 217, 219], "tab": [77, 159, 188, 191, 213, 214], "standalon": [77, 87, 157, 179, 183, 184, 196, 203, 204, 206, 213, 214, 216], "python": [77, 87, 132, 159, 161, 162, 165, 179, 180, 181, 183, 191, 194, 198, 199, 202, 203, 204, 210, 211, 213, 214, 215, 216, 217, 218, 220, 223], "keep": [77, 114, 179, 185, 192, 214], "scope": [77, 185], "macro": [77, 165, 175, 184, 189, 190, 196, 199, 202, 203, 206, 211, 212, 214, 220, 222, 223], "applic": [77, 157, 158, 204, 212, 223], "command": [77, 85, 87, 95, 123, 132, 165, 180, 181, 182, 184, 185, 186, 193, 204, 205, 211, 213, 215, 217, 223], "act": [77, 131, 192], "onc": [77, 118, 130, 155, 174, 179, 187, 188, 191, 201, 202, 210, 213, 214, 215, 217, 219, 220], "png": [77, 182], "jupyt": [77, 183], "notebook": [77, 183], "inlin": [77, 192], "wrap": [77, 78], "whether": [77, 91, 93, 115, 131, 132, 143, 157, 181, 216, 218], "background": [77, 215], "color": [77, 209, 219], "html": [77, 80, 181, 182, 205], "white": 77, "fit": [77, 119, 198, 213], "zoom": [77, 190, 191, 213], "main": [77, 84, 95, 118, 119, 170, 181, 185, 187, 196, 199, 200, 211, 213, 214, 221, 222], "ipython": 77, "bold": [77, 187, 213], "clear": 77, "popul": [77, 84, 85, 165], "top_cell_nam": 77, "filenam": [77, 83, 167, 168, 170], "layers_set": 77, "directori": [77, 83, 122, 123, 157, 179, 181, 182, 184, 185, 186, 199, 205, 206, 209, 211, 213, 214, 215, 220], "max_siz": 77, "bigger": 77, "pixelbuff": 77, "whole": [77, 136, 191], "hierarchi": [77, 84, 85, 151, 165, 175, 179, 186, 187, 190, 193, 201, 212, 213, 214], "correspondingli": 77, "viewport": 77, "aspect": [77, 93], "opt": [77, 167], "global": [77, 84, 119], "save": [77, 111, 132, 167, 175, 199, 209, 215, 218, 219], "Not": [77, 118, 174], "deprec": [77, 84, 175, 210], "miss": [77, 155, 175, 186, 213], "ui": 77, "layerinfo": [77, 80, 113, 114, 150, 167, 169, 209], "default_lay": [77, 80, 209, 211], "valid": [77, 124, 133, 161, 180, 185, 218], "cluster": [78, 215, 217], "process": [78, 80, 85, 97, 99, 111, 113, 116, 123, 132, 133, 135, 136, 137, 138, 174, 184, 191, 199, 203, 204, 211, 214, 217, 218, 220, 221], "inform": [78, 85, 116, 133, 177, 179, 189, 198, 199, 200, 209, 210, 211, 214, 218, 219, 220], "about": [78, 179, 184, 195, 198, 200, 203, 205, 210, 211, 213], "togeth": [78, 158, 172, 184, 192, 200, 201, 219], "220": 80, "reserv": [80, 98, 119], "127": [80, 197], "128": [80, 89, 197], "255": [80, 197], "work": [80, 98, 105, 107, 116, 179, 181, 184, 185, 187, 196, 201, 202, 206, 210, 213, 214, 216, 219, 222], "anoth": [80, 91, 92, 94, 114, 118, 159, 174, 175, 179, 188, 197, 198, 209, 210], "stack": [80, 98, 115, 133, 213, 221], "bond": 80, "denot": [80, 119, 195, 214], "manufactur": 80, "necessari": [80, 110, 175, 185, 216, 217], "deposit": [80, 113, 116], "auxiliari": [80, 214], "field": [80, 98, 119, 133, 161, 174, 196, 215], "229": 80, "organis": 80, "accord": [80, 84, 113, 116, 167, 175, 182, 185], "www": [80, 119, 128, 205, 217, 220], "de": [80, 131, 205], "doc": [80, 111, 119, 172, 181, 182, 185, 211, 218, 219], "qt5": 80, "layer_sourc": 80, "flat": [80, 84, 179], "map": [80, 84, 85, 86, 107, 113, 170, 219], "subset": [80, 195], "minor": [80, 178], "twist": 80, "1t1_base_metal_gap": 80, "invert": [80, 83], "skip_extra": 83, "bitmap": [83, 85], "oa": [83, 84, 85, 116, 157, 164, 175, 210, 211, 214, 217, 220], "gd": [83, 110, 118, 157, 175, 211, 214, 217], "chip_nam": [83, 84], "chip_dir": 83, "alt_netlist": [83, 85, 170], "export_dir": 83, "subdirectori": [83, 202, 211], "modifi": [83, 84, 91, 92, 113, 114, 133, 158, 167, 185, 187, 189, 190, 199, 200, 202, 203, 209, 213, 215], "mask_document": 83, "md": 83, "spec_lay": 83, "mask_graphical_rep": 83, "json": [83, 110, 116, 118, 123, 132, 157, 159, 170, 171, 175, 210, 217, 218, 220], "postfix": [84, 170, 186], "creation": [84, 174, 217], "2d": [84, 85, 115, 119, 157], "local_chip_tran": 84, "position_label": 84, "abc": 84, "1800": 84, "m90": 84, "h08": 84, "exact": [84, 187, 204, 213], "minimum": [84, 111, 119, 158, 184, 185, 218], "violat": 84, "conflict": [84, 167], "never": 84, "factor": [84, 166], "coverag": [84, 186], "uniqu": [84, 157, 165, 170, 171, 201, 215, 221], "outsid": [84, 92, 119, 185, 197, 198], "dure": [84, 159, 185, 191], "calcualt": 84, "k": [84, 170], "rigtht": 84, "90": [84, 158, 201, 214], "what": [84, 114, 128, 180, 209, 211, 213, 219], "translat": [84, 205], "chip_placement_list": 84, "unit_x": 84, "unit_i": 84, "chip_coordin": 84, "coord_x": 84, "coord_i": 84, "xxx": 84, "labels_cel": 84, "mask_name_for_chip": 84, "row": [84, 98, 218], "column": [84, 98, 218], "c03": 84, "add_mask_name_to_chip": 85, "These": [85, 86, 108, 165, 179, 182, 184, 201, 209, 211, 213, 214, 220], "Then": [85, 119, 175, 184, 188, 220], "entir": [85, 151, 181, 213], "switch": [85, 223], "debug": [85, 133, 168, 213, 214, 223], "limit": [85, 98, 130, 158, 175, 181, 204, 218, 219, 220], "concurr": [85, 184], "cpu": [85, 186, 206], "resourc": [85, 211, 215, 217], "manag": [85, 156, 181, 184, 202, 204, 205, 210, 213, 215, 217], "purpos": [85, 133, 139, 179, 185, 189, 210, 219], "drc": [85, 157, 190, 211], "similar": [85, 98, 119, 174, 213, 217, 218, 219, 220], "folder": [85, 110, 115, 118, 122, 123, 132, 181, 182, 184, 185, 186, 198, 199, 200, 210, 211, 214, 215, 216, 217, 218, 220, 221], "tmp_path": [85, 157, 214], "mask_layout_typ": [85, 86], "extra_face_param": [85, 86], "ident": [85, 86, 170, 171, 175, 179, 185], "overwritten": 85, "extra_kwarg": 85, "variant_nam": 85, "complex": [85, 187, 192, 203, 218], "polymorph": 85, "here": [85, 102, 114, 168, 183, 188, 191, 197, 198, 199, 201, 202, 217, 222], "rest": [85, 122], "quick_demo": [85, 185, 214], "py": [85, 110, 118, 122, 134, 179, 181, 182, 184, 185, 186, 195, 197, 198, 200, 206, 209, 210, 211, 214, 215, 216, 217, 218, 220], "further": [85, 181, 202, 214, 219], "Or": [85, 87], "qdg": 85, "o": [85, 87, 159, 184, 205], "cpu_count": 85, "whichev": 85, "smaller": [85, 133, 158], "remove_guiding_shap": 85, "box_map": 85, "mask_map": 85, "nxn": 85, "mxm": 85, "mnxmn": 85, "usual": [86, 107, 113, 116, 131, 170, 184, 197, 199, 202, 211, 213, 214, 216, 217, 219], "instanti": [86, 174, 179, 185, 219], "extra_param": 86, "modul": [87, 118, 158, 162, 166, 179, 180, 183, 184, 186, 198, 202, 203, 204, 206, 211, 213, 216, 217], "import": [87, 110, 165, 166, 171, 179, 181, 182, 185, 186, 187, 193, 198, 199, 201, 204, 206, 211, 213, 214, 219, 220], "api": [87, 119, 172, 178, 182, 185, 192, 198, 199, 203, 213, 217, 218, 219, 220, 222], "usag": [87, 166, 183, 191, 193, 202, 203, 212, 213, 214, 217, 218, 219, 220], "editor": [87, 184, 185, 191, 199, 202, 206, 211, 213, 214, 220, 223], "db": [87, 179], "execut": [87, 110, 118, 123, 132, 154, 181, 186, 205, 213, 214, 217, 220, 221], "session": 87, "found": [87, 124, 154, 157, 165, 177, 181, 200, 205, 210, 211, 217, 218], "transmon": [89, 90], "josephson": [89, 90], "r_island": 89, "squid_angl": [89, 90], "couplers_r": [89, 90], "couplers_a": [89, 90], "couplers_b": [89, 90], "couplers_angl": [89, 90], "340": [89, 90], "210": [89, 90], "couplers_width": [89, 90], "couplers_arc_amplitud": [89, 90], "45": [89, 90, 115, 133], "drive_angl": [89, 90], "drive_dist": [89, 90], "concentr": 90, "290": 90, "rectangl": [91, 92, 113, 179, 192], "shunt": [91, 92], "north": [91, 92, 94], "join": [91, 92], "700": 91, "ground_gap_r": 91, "coupler_r": 91, "coupler_a": 91, "coupler_offset": 91, "squid_offset": 91, "island1_r": 91, "island2_r": 91, "450": 91, "island1_taper_width": 91, "island1_taper_junction_width": 91, "island2_taper_width": 91, "island2_taper_junction_width": 91, "70": 91, "with_squid": 91, "spline": [92, 158], "construct": [92, 114, 123, 158, 175, 214, 219], "island_splin": 92, "island_spline_sampl": 92, "collect": [93, 113, 114, 157, 187], "routin": 93, "beam": 93, "customari": 93, "probepoint": [93, 157], "simpli": [93, 133, 159, 181, 195, 219], "appropri": [93, 174, 178, 179, 195, 198, 209], "probe_ground": 93, "probe_island": 93, "probe_island_1": 93, "probe_island_2": 93, "transf": [93, 143], "only_arm": [93, 143], "base_metal_gap_for_ebl": [93, 143], "right_sid": [93, 143], "help": [93, 143, 184, 185, 186, 190, 203, 213], "dcplxtran": [93, 143, 175], "rot": 93, "flux": [93, 111, 124, 137, 191], "flux_corn": 93, "origin_fluxlin": 93, "origin_squid": 93, "port_common": 93, "howev": [93, 133, 185, 192, 195, 202, 206, 214, 217], "might": [93, 110, 118, 119, 181, 184, 202, 205, 206, 217], "tweak": 93, "overwrit": [93, 157, 181, 217], "south": 94, "gap_width": [94, 219], "wne": 94, "cpl_width": [94, 138], "cpl_length": 94, "cpl_gap": 94, "102": 94, "port_width": 94, "cl_offset": 94, "island_r": 94, "_epr_part_reg_crossbulk_lay": 94, "crossbulk": 94, "_epr_part_reg_0cplrbulk_lay": 94, "0cplrbulk": 94, "_epr_part_reg_1cplrbulk_lay": 94, "1cplrbulk": 94, "_epr_part_reg_2cplrbulk_lay": 94, "2cplrbulk": 94, "arg": [95, 120, 122, 150, 157, 159, 175, 181], "args_for_script": 95, "entri": [95, 157, 175, 202, 206, 214], "consol": [95, 122, 168, 206, 214, 216], "pars": [97, 98, 99, 120, 133, 135, 136, 137, 138, 161], "readi": [97, 99, 133, 135, 136, 137, 138], "co": 98, "intend": [98, 133, 210, 219], "materi": [98, 113, 116, 119, 133, 217, 218], "don": [98, 179, 184, 185, 206], "obei": 98, "vacuum": [98, 113, 115, 116, 119, 130, 133, 219], "word": [98, 166, 199, 202], "result": [98, 107, 111, 147, 157, 158, 159, 191, 215, 217, 218, 221], "matric": [98, 111, 218], "introduc": [98, 113, 116, 133, 196, 219], "dielectr": [98, 133, 219], "permitt": [98, 113, 115, 116, 133], "regist": [98, 173, 179, 208, 211], "reset": 98, "param_nam": [98, 172, 182], "cast": [98, 133], "simulation_lay": 98, "temporari": 98, "layer_dict": 98, "permittivity_dict": 98, "material_dict": [98, 133], "relev": [98, 133, 174, 218, 219], "london": [98, 113, 116, 218], "penetr": [98, 113, 116, 218], "depth": [98, 113, 116, 218], "m": [98, 115, 133, 185, 217], "xsection_source_class": 98, "xsection": [98, 115, 116, 211, 212], "schema": [98, 175], "ignore_process_lay": 98, "boundari": [98, 119, 133, 218], "extra_json_data": [98, 133], "store": [98, 133, 150, 175, 214, 218, 219], "virtual": [98, 133, 185, 206], "refpoint_prefix": [101, 102, 106, 107, 147], "parameter_remap_funct": [101, 102, 106, 107], "callabl": [101, 102, 106, 107, 113, 114, 115, 116, 134], "pointer": 102, "partition_region_funct": [102, 134], "could": [102, 122, 128, 159, 178, 180, 181, 217, 219], "_epr_part_reg_xxx_lay": 102, "differenti": [102, 113], "meant": [102, 211], "reus": [102, 118, 164], "compos": [102, 194, 201], "symmetr": [105, 119], "bool": [107, 110, 111, 118, 119, 120, 122, 127, 131, 133, 157, 158, 169, 175], "check": [107, 124, 155, 159, 175, 184, 185, 211, 218, 223], "face_stack": [107, 114, 133, 219], "face_bas": 107, "z": [107, 114, 115, 130, 133, 181, 223], "mer": [107, 115], "postit": 107, "needed_paramet": 107, "stub": [107, 133, 138], "parit": 107, "recommend": [107, 113, 184, 185, 193, 205, 206, 210, 211, 214, 217, 218], "suppos": [107, 214, 219], "But": 107, "qubit_a": 107, "program": [108, 203, 213, 216], "hfss": [108, 111, 218, 219, 221], "q3d": [108, 111, 218, 219, 221], "write": [110, 118, 123, 128, 157, 179, 181, 182, 184, 185, 186, 206, 210, 217, 219, 223], "json_filenam": [110, 118, 123, 132], "file_prefix": [110, 118, 123], "exit_after_run": 110, "execution_script": 110, "import_and_simul": 110, "use_rel_path": 110, "batch": [110, 132, 211, 220], "bat": [110, 123, 220], "electron": [110, 154, 218, 220, 221], "desktop": [110, 217, 218, 220, 221], "sequenc": [110, 118, 146, 158], "script_fold": [110, 118], "import_script": 110, "skip_error": [110, 118], "solution_param": [110, 111, 118, 119], "skip": [110, 118, 119, 159, 191], "caus": [110, 114, 118, 134, 158, 159, 184], "carefulli": [110, 118, 178, 219], "sens": [110, 118, 213], "wast": [110, 118], "bad": [110, 118], "ghz": [111, 119, 218], "percentag": [111, 218], "mesh": [111, 118, 119, 128, 217, 218], "refin": [111, 119, 218], "how": [111, 133, 175, 179, 185, 189, 191, 192, 198, 199, 201, 206, 211, 215, 218, 219], "mani": [111, 133, 177, 184, 185, 187, 192, 195, 198, 201, 203, 205, 206, 209, 211, 214, 217, 218, 219], "meet": [111, 192, 218], "criterion": [111, 119, 218], "maxim": [111, 119], "templat": [111, 182, 203], "classvar": [111, 119, 125], "101": [111, 218], "interpol": [111, 119, 218], "multifrequ": [111, 218], "sweep": [111, 113, 116, 119, 123, 128, 175, 217, 218, 221], "lowest": [111, 133, 218, 219], "highest": [111, 133, 218], "fast": [111, 178, 218], "energi": [111, 118, 119, 221], "magnet": [111, 124], "pec": [111, 133], "sheet": [111, 115, 133, 219], "matrix": [111, 119, 158, 217, 221], "nomin": 111, "moment": 111, "eigenmod": [111, 221], "eigenfrequ": [111, 218], "solv": [111, 158, 218], "excit": [111, 119, 131, 133, 218], "voltag": [111, 119], "induct": [111, 119, 127, 131, 138, 174, 218], "pyacor": [113, 116], "profil": [113, 114, 148, 215, 217], "post_processing_funct": [113, 116], "oxidise_layers_funct": [113, 116], "_oxidise_lay": [113, 116], "ma_permitt": [113, 116], "ms_permitt": [113, 116], "sa_permitt": [113, 116], "ma_thick": [113, 115, 116], "ms_thick": [113, 115, 116], "sa_thick": [113, 115, 116], "vertical_cul": [113, 116], "mer_box": [113, 116], "magnification_ord": [113, 116], "p1": [113, 115, 116, 133], "p2": [113, 115, 116, 133], "default_cross_section_profil": [113, 115], "perform": [113, 116, 133, 175, 181, 185, 217, 218], "oxid": [113, 116], "expect": [113, 116, 178, 206], "signatur": [113, 116], "typehint": 113, "air": [113, 116], "thick": [113, 115, 116, 119, 133, 219], "cull": [113, 116], "retain": [113, 116], "_mer": [113, 116], "suffix": [113, 116, 130, 157, 171], "increas": [113, 116, 119, 146, 181, 217], "magnif": [113, 116, 187], "accomod": [113, 116], "spacial": [113, 116], "dbu": [113, 116, 127, 128, 129, 130, 150], "10x": [113, 116], "100x": [113, 116], "slot": 113, "cut_label": 113, "width_ratio": 113, "request": [113, 168, 175, 181, 215, 217], "cross_section_cut": 113, "_1": 113, "_2": 113, "multipli": 113, "intersect": [113, 129], "account": [113, 133, 163, 165, 179, 215, 217, 219], "overlap": [113, 114, 133, 158, 160, 170, 201], "segments_by_lay": 113, "regex": 114, "disjoint": 114, "pleas": [114, 158, 178, 184, 185, 186, 207, 208, 210, 217, 218, 219, 220], "assumpt": 114, "bottom_funct": 114, "top_funct": 114, "change_to_lay": 114, "target_layer_regex": 114, "dominant_layer_regex": 114, "concret": [114, 179], "higher": [114, 206], "know": [114, 184, 185, 206], "domin": 114, "written": [114, 157, 220], "invis": 114, "input_lay": 114, "context": [114, 159, 175], "override_arg": 115, "xsection_path": 115, "pathlib": [115, 116], "ma_eps_r": 115, "ms_eps_r": 115, "sa_eps_r": 115, "0048": 115, "0003": 115, "0024": 115, "ma_bg_eps_r": 115, "ms_bg_eps_r": 115, "sa_bg_eps_r": 115, "metal_height": [115, 133, 219], "metal_edg": 115, "later": [115, 130, 148, 175, 186, 201, 202], "x_revers": 115, "closer": [115, 133, 158, 165], "z_revers": 115, "older": [115, 181, 185, 191], "ma": [115, 133], "sa": [115, 133], "approxim": [115, 133], "input_oa": 116, "output_oa": 116, "cut1": 116, "cut2": 116, "process_path": 116, "posixpath": 116, "home": [116, 181, 214], "runner": 116, "kqc_process": [116, 210], "parameters_path": 116, "plugin": [116, 156, 173, 180, 184, 210], "down": [116, 131, 133, 190, 191, 201, 213], "output_path": 116, "pyhint": 116, "thin": [116, 133, 219], "workflow": [118, 128, 181, 192, 193, 194, 203, 211, 212, 213, 217, 221], "mesh_reuse_nam": 118, "script_fil": 118, "compile_elmer_modul": 118, "launch": [118, 184, 205, 209, 214, 223], "compil": [118, 119, 185, 206, 215], "runtim": [118, 181], "model": [118, 119, 131, 133, 185, 217, 218, 219], "005": 119, "001": 119, "factori": 119, "adapt": [119, 219], "fraction": 119, "outlier": 119, "big": [119, 214], "_": [119, 156, 201, 219], "larger": [119, 133, 217], "finer": 119, "divid": [119, 179, 185, 211, 217], "dim": [119, 130], "term": [119, 130, 133, 186, 218, 219], "entiti": 119, "expans": [119, 130, 133, 158, 174], "constant": [119, 133, 179, 218], "slope": 119, "global_max": 119, "less": [119, 128, 179, 204, 206], "awai": [119, 130, 131, 133, 158, 161, 201], "forc": [119, 131, 133, 158, 218], "niter": 119, "dimtag": 119, "gmsh": [119, 181, 212, 215, 216, 220, 221], "netgen": 119, "vtu": 119, "paraview": [119, 181, 216, 217, 220], "off": [119, 133, 213], "slightli": [119, 204], "faster": [119, 128, 175], "explicit": 119, "wave": [119, 133, 219], "equat": 119, "converg": 119, "supercurr": 119, "flow": 119, "finit": 119, "nedelec": 119, "kind": [119, 185, 200], "formul": [119, 134], "vectorhelmholtz": 119, "potenti": [119, 131], "v": [119, 127, 178], "electr": [119, 133, 218], "nic": 119, "funet": 119, "fi": 119, "pub": 119, "sci": 119, "elmermodelsmanu": 119, "pdf": [119, 128], "warn": [119, 133, 168, 205], "experiment": [119, 222], "poor": [119, 217], "film": 119, "nest": [119, 133], "solver": [119, 133, 217, 218, 220], "calc": 119, "wave_equ": [119, 218], "mg": 119, "09": 119, "ilu0": 119, "polynomi": [119, 158], "p": [119, 156], "multigrid": 119, "bicgstab": 119, "mention": [119, 133, 181], "elmersolv": [119, 181, 217], "umfpack": 119, "mump": 119, "pardiso": 119, "superlu": 119, "softwar": [119, 177, 181, 208, 217, 220], "redund": 119, "precondition": 119, "linear": [119, 178], "condit": [119, 218], "xmin": [119, 127], "xmax": [119, 127], "ymin": [119, 127], "ymax": [119, 127], "just": [119, 179, 181, 184, 185, 199, 201, 202, 211, 219], "impend": 119, "1v": 119, "electrostat": 119, "epr_3d": 119, "export_script": 120, "quiet": [120, 122], "export_onli": [120, 122], "basenam": [120, 215], "dialog": [120, 122, 192, 202, 216], "describ": [120, 131, 133, 152, 158, 165, 180, 185, 192, 195, 197, 216, 218, 219, 221], "stdout": [120, 168], "print": [120, 159, 165, 166, 168, 214], "export_path_identifi": 120, "script_export_path": 120, "remote_host": 121, "singularity_remote_path": 121, "ssh_login": 122, "kqc_remote_tmp_path": [122, 215], "detach_simul": 122, "poll_interv": 122, "export_path_basenam": 122, "local": [122, 178, 181, 182, 185, 199, 202, 204, 213, 215], "remot": [122, 212, 217, 221], "host": [122, 183, 185, 215, 217], "froce": 122, "q": [122, 185, 191, 216], "ssh": [122, 215], "login": 122, "hostnam": 122, "tmp": [122, 181, 185, 211, 215, 217, 220], "detach": [122, 215], "wait": 122, "finish": [122, 191, 215, 217], "poll": [122, 215], "interv": [122, 215], "interpret": [122, 223], "export_tmp_dir": 122, "source_path": 123, "content": [123, 157, 202, 203, 217], "sh": [123, 181, 215, 217, 220], "json_data": 123, "json_file_path": 123, "sim_class": [123, 219, 220], "sim_paramet": [123, 219], "vari": [123, 200, 217, 219], "sol_class": 123, "sol_paramet": 123, "analys": 124, "inconsist": 124, "met": 124, "ensur": [124, 159, 179, 201], "least": [124, 158, 161, 175, 184, 190, 200, 201, 206, 213], "presenc": 124, "validation_typ": 124, "handl": [124, 150, 179, 189, 217, 221], "filename_templ": 127, "filename_output": 127, "rule": [127, 133, 182, 211], "nvertic": 127, "debugid": 127, "ilevel": 127, "mtype": 127, "filltyp": 127, "conmax": 127, "edge_mesh": 127, "sym": 127, "xwidth": 127, "ywidth": 127, "xcell": 127, "ycell": 127, "materials_typ": 127, "si": 127, "bt": 127, "port_ipoli": 127, "portnum": 127, "ipolygon": 127, "ivertex": 127, "port_typ": 127, "std": 127, "xcord": 127, "ycord": 127, "resist": [127, 131, 174], "react": 127, "capac": 127, "control_typ": 127, "fill_typ": [127, 128], "poli": 127, "detailed_reson": 128, "lower_accuraci": 128, "ab": 128, "staircas": 128, "simulation_safeti": 128, "son": [128, 220], "sonnetsoftwar": 128, "download": [128, 181, 205], "techdoc": 128, "enhanced_resonance_detection_featur": 128, "fine": [128, 172], "coars": 128, "accur": 128, "good": [128, 214], "everyth": [128, 187, 190, 197, 199], "scalar": [130, 133], "vertical_dimens": 130, "metal_edge_dimens": 130, "accept": [130, 152, 161, 178, 184, 218], "domain": [130, 133, 219], "preview": [130, 133], "databas": [130, 158, 160, 222], "sign": 130, "metal_region": [130, 147], "etch_region": 130, "reactanc": [131, 174], "renorm": [131, 218], "ideal": 131, "rlc": [131, 218], "lump": [131, 133, 218, 219], "real": 131, "ohm": 131, "omega": 131, "imaginari": 131, "henri": 131, "farad": 131, "signal_loc": [131, 218, 219], "ground_loc": [131, 218, 219], "etch_width": 131, "deembed_len": [131, 174, 218], "embed": 131, "micron": [131, 164], "port_siz": [131, 133], "repeat_for_each": 132, "data_file_prefix": 132, "dimension": [133, 203, 218, 219], "basic": [133, 183, 184, 187, 193, 194, 211, 213, 222], "built": [133, 181, 182, 187, 198, 199, 202, 219, 223], "principl": [133, 161], "imagin": [133, 219], "surfac": [133, 218, 219], "touch": [133, 197], "lower_box_height": [133, 219], "pile": [133, 219], "That": [133, 218, 219], "leav": [133, 219], "substrate_height": [133, 219], "chip_dist": [133, 219], "infinit": [133, 159, 219], "insul": 133, "dielectric_height": [133, 219], "grid_siz": [133, 160], "expand": [133, 158], "resolut": 133, "list_or_const": 133, "ordin": 133, "short": [133, 187, 222], "duplic": [133, 158, 169, 184], "ascend": 133, "simplifi": 133, "polygon_toler": 133, "shrink": 133, "amount": [133, 158, 215, 217], "minimum_point_spac": 133, "z0": 133, "z1": 133, "split": [133, 158], "opp_i": 133, "come": [133, 184, 201], "quit": 133, "__init__": 133, "hole": [133, 160], "subtract_kei": 133, "port_kwarg": 133, "engin": 133, "infer": [133, 157, 175], "brought": [133, 174], "at_edg": 133, "signal_edg": 133, "ground_edg": 133, "member": [133, 159], "whatev": [133, 206], "delet": [133, 166, 169, 192, 202], "access": [133, 185, 190, 204], "append": [133, 158, 168, 170, 171, 219], "dtext": 133, "ground_grid_box": 133, "use_port": 133, "upper_box_height": 133, "fixed_level_stackup": 133, "375": 133, "substrate_box": 133, "correspondingsubstr": 133, "fulli": [133, 185, 218], "substrate_materi": 133, "perfect": 133, "dielectric_loss_tang": 133, "permeabl": 133, "magnetic_loss_tang": 133, "partli": 133, "airbridge_height": 133, "dielectric_materi": 133, "vertical_over_etch": 133, "hollow_tsv": 133, "constructor": [133, 159, 219], "tls_layer_thick": 133, "tl": [133, 218], "tls_layer_materi": 133, "tls_sheet_approxim": 133, "detach_tls_sheets_from_bodi": 133, "significantli": 133, "improv": [133, 185, 186, 205], "small_shape_area": 133, "trigger": 133, "\u00b5m\u00b2": 133, "element_class": 134, "ignore_port": [134, 219], "transformation_from_cent": 134, "sim_junction_typ": 134, "deembed": [134, 174], "convent": [134, 179, 186, 201, 205, 211], "port_refpoint": 134, "cross_section_nam": 134, "port_am": 134, "xs1": 135, "xs2": 135, "cpw_length": 136, "n_guid": 136, "guide_face_id": 136, "add_bump": 136, "port_termination_end": 136, "use_edge_port": 136, "etch_whole_opposite_fac": 136, "qubit_cel": 137, "center_x": 137, "center_i": 137, "wn": [137, 201], "en": 137, "sw": [137, 157], "se": [137, 157], "nw": [137, 157], "ne": [137, 157], "enable_flux_lin": 137, "enable_drive_lin": 137, "enable_transmission_lin": 137, "transmit": 137, "66": 138, "junction_induct": 138, "35e": 138, "junction_capacit": 138, "16": [138, 209], "num_cross": 141, "cross_width": 141, "cross_length": 141, "cross_spac": 141, "cross_box_dist": 141, "stripe_width": 145, "stripe_length": [145, 146], "stripe_spac": [145, 146], "min_stripe_width": 146, "stripe_step": 146, "widen": 146, "pads_region": 147, "pad_spacing_x": 147, "pad_spacing_i": 147, "connect_pad": 147, "refpoint_dist": 147, "resembl": 148, "fenc": 148, "tsv_array_form": 148, "tileoutputreceiv": 150, "tilingprocessor": 150, "brief": [150, 156], "ix": 150, "ii": 150, "tile": 150, "obj": [150, 158], "clip": 150, "layer_info": 150, "rho": 150, "frac": 150, "bbox": 150, "pcell_class": 151, "isinst": 151, "pcell_declar": 151, "coupler_typ": 152, "element_kei": 152, "useless": 152, "latest": [154, 181, 185, 204, 205, 220], "instal": [154, 155, 181, 183, 187, 198, 199, 203, 210, 211, 213, 216, 217, 220, 221, 223], "against": [155, 211], "txt": [155, 184, 185, 206, 217, 220], "upgrad": [155, 184, 185, 206], "stand": [155, 165, 211, 213, 221], "alon": [155, 165, 211, 213, 221], "pip": [155, 184, 185, 206, 216, 217, 220], "sync": [155, 185], "venv": [155, 184, 185], "startup": [155, 161, 185], "button": [156, 191, 213], "prio": 156, "__": 156, "pluginfactori": 156, "flip_fac": 157, "default_probe_typ": 157, "default_probe_suffix": 157, "millimet": 157, "tell": 157, "site": [157, 185, 206], "cell_fil": 157, "dir_nam": 157, "prompt": [157, 184, 185], "permiss": 157, "deni": 157, "tri": [157, 181], "write_versions_fil": 157, "commit_refer": [157, 217], "git": [157, 178, 183, 184, 185, 204, 211], "revis": [157, 222], "export_machine_vers": 157, "filepath": 157, "maco": [157, 183, 205, 206], "linux": [157, 181, 183, 185, 205, 211, 214, 217, 220], "drc_script": 157, "name_drc_report": 157, "lyrdb": 157, "default_path_length_lay": 158, "sum": 158, "children": 158, "objectinstpath": 158, "outward": 158, "whenev": [158, 178, 213], "elimin": [158, 159], "simple_polygon": 158, "polygon_point": 158, "counterclockwis": 158, "283185307179586": 158, "pi": 158, "control_point": 158, "sample_point": 158, "startpoint": 158, "uniformli": 158, "cubic": 158, "subsequ": 158, "slide": 158, "unlik": 158, "bezier": 158, "guarante": [158, 159, 202], "kaihuai": 158, "qin": 158, "proceed": 158, "pacif": 158, "98": 158, "sixth": 158, "confer": 158, "singapor": 158, "1998": 158, "pp": 158, "37": 158, "43": [158, 179], "doi": [158, 177], "1109": 158, "pccga": 158, "731996": 158, "uniform": [158, 219], "prepend": 158, "tangent": 158, "third": [158, 204, 217], "fourth": 158, "try": [158, 159, 184, 185, 206], "round_corn": 158, "problem": [158, 181, 184, 185, 202, 206, 207, 218], "prevent": [158, 159, 206], "apart": 158, "decreas": 158, "skipkei": 159, "ensure_ascii": 159, "check_circular": 159, "allow_nan": 159, "sort_kei": 159, "jsonencod": 159, "sensibl": 159, "typeerror": 159, "incom": 159, "ascii": 159, "charact": [159, 163, 164, 178], "escap": 159, "recursionerror": 159, "nan": 159, "infin": 159, "compliant": 159, "javascript": 159, "decod": 159, "regress": 159, "dai": 159, "basi": [159, 179, 219], "pretti": 159, "newlin": 159, "item_separ": 159, "key_separ": 159, "whitespac": 159, "serializ": 159, "def": [159, 198, 201, 219], "let": [159, 185, 201, 209], "jsondecod": 159, "object_hook": 159, "rpc": 159, "hint": 159, "object_pairs_hook": 159, "parse_float": 159, "num_str": 159, "datatyp": 159, "decim": 159, "parse_int": 159, "parse_const": 159, "invalid": 159, "encount": [159, 181], "strict": [159, 179], "parseabl": 159, "boundbox": 160, "avoid_region": 160, "grid_step": 160, "group_n": 160, "speed": [160, 164, 174, 186, 217], "box_siz": 161, "require_gui_editing_en": 161, "search": [161, 203], "captur": 161, "invers": 161, "treat": [161, 170, 179], "strip": 161, "liter": 161, "namespac": [161, 172], "comma": [161, 165], "multilin": 161, "waveguide_inst": 161, "usabl": 161, "x_corner": 161, "slow": [161, 213, 214], "clumsi": 161, "curat": 161, "node_editor_valid_el": 161, "kept": 161, "file_path": 162, "enum": 163, "origin_offset": 163, "layer_protect": 163, "350": 163, "nearest": 164, "lai": 164, "font_polygon": 164, "cach": 164, "print_waveguides_as_composit": 165, "add_instance_nam": 165, "refpoint_snap": 165, "grid_snap": 165, "output_format": 165, "include_import": 165, "create_cod": 165, "past": 165, "statement": [165, 199], "node_param": 165, "complet": [165, 182, 185, 202, 209, 217], "flatten": 165, "flush": 166, "ones": [166, 184, 185], "src_path": 166, "memori": [166, 181, 217], "_kqc_librari": 166, "class_nam": 166, "pascalcas": [166, 179], "lowercas": [166, 202], "module_nam": 166, "_to_module_nam": 166, "titl": [166, 177], "qualiti": 166, "loadlayoutopt": 167, "emploi": [167, 218], "cell_conflict_resolut": 167, "renamecel": 167, "savelayoutopt": 167, "set_format_from_filenam": 167, "write_context_info": 167, "lowest_visible_level": 168, "remove_old_handl": 168, "log": [168, 214], "logfil": 168, "monitor": 168, "handler": 168, "root": [168, 181, 186, 211], "logger": 168, "critic": 168, "cell_list": 169, "layer_1": 169, "layer_2": 169, "layer_merg": 169, "only_el": 169, "prune": 169, "contrast": 169, "convert_to_stat": 169, "descend": [169, 179], "anywher": [169, 202], "net": 170, "subcircuit": [170, 171], "terminologi": [170, 203, 212], "eda": 170, "resistor": 170, "pin": [170, 185, 191], "wire": [170, 192], "conceptu": 170, "analog": 170, "exactli": [170, 211], "subcircuit_id": [170, 171], "unconnect": 170, "cell_nam": [170, 171], "subcircuit_loc": 170, "_pya_typ": 170, "subcircuit_origin": 170, "breakdown": 170, "regadless": 170, "absolut": [170, 185, 211], "cell_map": 170, "internal_cel": 170, "network": 171, "networkx": [171, 206], "graph": [171, 179, 185, 211], "cell_typ": 171, "instance_nam": [171, 197], "obtain": [171, 219], "with_label": 171, "with_posit": 171, "figsiz": 171, "spring": 171, "figur": [171, 219], "matplotlib": 171, "interact": [171, 212], "plot": 171, "param_with_default_valu": 172, "wildcard": 172, "simplic": [172, 179], "grain": 172, "particularli": 172, "pcellparameterdeclar": 172, "data_typ": 172, "plain": [172, 179, 199], "docstr": [172, 180, 182, 189, 210], "sphinx": [172, 182], "owner": 172, "registr": 173, "happen": 173, "demand": 174, "builder": [174, 219], "ground_refpoint": 174, "port_squid_a": [174, 219], "port_squid_b": [174, 219], "separate_island_internal_port": 174, "commonli": [174, 198], "export_tuned_junct": 175, "class_typ": 175, "parent_nam": 175, "tuned_junction_paramet": 175, "qb1": 175, "testarray_nw": 175, "squid_0": 175, "squid_3": 175, "testarrai": 175, "even": [175, 179, 181, 185, 206, 213], "quick": [175, 209], "jsonabl": 175, "exhaust": 175, "read": [175, 181, 193, 201, 202, 204], "write_path": 175, "layer_str": 175, "visual": [175, 185, 211, 217], "again": [175, 181, 184, 213, 214], "parameter_nam": 175, "parameter_start": 175, "parameter_step": 175, "parameter_end": 175, "swept": 175, "squid_index": 175, "mirror_tran": 176, "project": [177, 179, 186, 205, 215, 217], "public": [177, 178, 181, 186], "citat": 177, "bib": 177, "zenodo": 177, "click": [177, 184, 187, 188, 191, 192, 199, 201, 202, 205, 213, 214, 223], "badg": 177, "cucurachi": 177, "daniel": 177, "da": 177, "soumya": 177, "ranjan": 177, "giri": 177, "rakshyakar": 177, "gusenkova": 177, "daria": 177, "guthri": 177, "andrew": 177, "inel": 177, "sinan": 177, "janzs\u00f3": 177, "d\u00e1vid": 177, "jenei": 177, "m\u00e1t\u00e9": 177, "juliusson": 177, "kristinn": 177, "kotilahti": 177, "jann": 177, "landra": 177, "alessandro": 177, "moretti": 177, "roberto": 177, "myll\u00e4ri": 177, "tuoma": 177, "ockeloen": 177, "korppi": 177, "caspar": 177, "r\u00e4bin\u00e4": 177, "jukka": 177, "savola": [177, 218], "niko": 177, "smirnov": 177, "pavel": 177, "takala": 177, "eeli": 177, "wubben": 177, "leon": 177, "month": 177, "jun": 177, "year": 177, "2021": 177, "publish": [177, 181], "5281": 177, "4944796": 177, "url": 177, "welcom": 178, "commun": [178, 217], "contributor": 178, "licens": [178, 218], "agreement": 178, "websit": [178, 181], "review": 178, "approv": 178, "pr": 178, "forward": [178, 217], "strategi": 178, "histori": 178, "organ": [178, 186, 209, 213], "commit": [178, 185], "meaning": [178, 197], "black": [178, 179, 180], "permit": [178, 195], "pep": [178, 179], "440": 178, "scheme": 178, "miniv": 178, "major": 178, "micro": 178, "offici": 178, "releas": [178, 181, 210], "salt": [178, 184, 185, 194, 198, 199, 203, 204, 211], "incompat": 178, "backward": [178, 185], "break": [178, 181], "seriou": 178, "cosmet": 178, "affect": [178, 203, 206, 217], "explain": [179, 180, 184, 193, 198, 213, 220], "diagram": 179, "oval": 179, "leaf": 179, "green": [179, 213, 219], "natur": 179, "ever": 179, "live": 179, "create_cel": 179, "properli": [179, 184, 186, 202], "variabl": [179, 181, 185, 198, 200, 209, 211, 213, 215, 217, 218], "descriptor": 179, "hierarch": 179, "transpar": 179, "caller": 179, "default_parameter_valu": 179, "technic": [179, 195, 197, 218], "intent": 179, "otherclass": 179, "param_a": 179, "param_b": 179, "myclass": 179, "param_c": 179, "42": 179, "param_d": 179, "41": 179, "syntax": [179, 219], "bit": [179, 191, 197, 205], "revers": 179, "why": [179, 180], "bodi": 179, "kqc_library_nam": 179, "downstream": 179, "discov": 179, "comment": [180, 189, 198, 206, 209, 211, 213], "someth": [180, 217], "feel": 180, "probabl": [180, 206], "rewritten": 180, "clearli": 180, "builtin": 180, "googl": 180, "dockerfil": 181, "addition": [181, 217, 219], "kl_file": 181, "md5": 181, "hash": [181, 185, 211], "kl_hash": 181, "klayout_0": 181, "29": [181, 205], "1_amd64": 181, "deb": 181, "421df42661a3d795b534da5048261044": 181, "ubuntu": [181, 184, 205], "quickli": 181, "m00x": 181, "volum": 181, "pwd": 181, "ghcr": 181, "io": [181, 210], "mount": 181, "run_script": 181, "nc": 181, "rx": [181, 211], "cours": [181, 200], "wd": 181, "hyperv": 181, "backend": 181, "ram": 181, "1gb": 181, "entrypoint": 181, "branch": [181, 199, 202, 213], "pipelin": [181, 186], "pull": [181, 184], "registri": 181, "sylab": 181, "quick_start": 181, "better": [181, 186, 210, 219], "hpc": 181, "tutori": [181, 193, 194, 212, 213], "libexec": 181, "kqclib": [181, 217], "repo": 181, "ora": 181, "pem": 181, "rsa": 181, "encrypt": 181, "successfulli": [181, 184, 185, 223], "singularity_priv": 181, "privat": [181, 186], "now": [181, 191, 199, 201, 213], "create_link": 181, "among": [181, 203], "elmersolver_mpi": 181, "elmergrid": [181, 217], "symbol": [181, 211, 213, 215, 217], "link": [181, 184, 202, 204, 211, 213, 215, 217], "rememb": [181, 184, 190], "bin": [181, 215], "prepar": [181, 217], "klayout_packag": [181, 184, 185, 198, 210, 211, 213, 215, 216, 217, 218, 220], "And": [181, 211], "waveguides_sim_compar": [181, 185, 216, 217], "sure": [181, 184, 185, 186, 187, 192, 197, 199, 202, 210, 213, 215, 220], "ride": 181, "python_execut": [181, 217], "subsystem": 181, "wsl": 181, "stuck": 181, "workload": [181, 215, 217], "simple_workload_manag": 181, "subfold": [181, 199, 200], "kqc_tmp_path": [181, 185], "waveguides_sim_elm": [181, 217], "affor": 181, "rst": 182, "rebuild": 182, "clean": 182, "apidoc": 182, "sphinxext": 182, "make_pcell_imag": 182, "pcell_imag": 182, "markers_for_png": 182, "x_2": 182, "y_2": 182, "ruler": [182, 210], "illustr": [182, 190, 219], "satisfactori": 182, "x2": 182, "y2": 182, "setup": [183, 192, 202, 203, 204, 209, 213, 215, 216, 217, 221, 223], "prerequisit": 183, "unlink": 183, "secondari": 183, "symlink": 183, "reproduc": 183, "secur": [183, 217, 220], "exclus": 183, "pypi": [183, 211], "cli": 183, "docker": 183, "ci": [183, 185, 186, 211], "singular": [183, 211, 215, 217], "contribut": [183, 203], "pre": [184, 219], "04": [184, 205], "platform": [184, 185, 205, 206, 217], "lt": [184, 205], "clone": [184, 185, 204], "cd": [184, 185, 186], "python3": 184, "setup_within_klayout": [184, 185, 211], "virtualenv": 184, "libpython": 184, "dll": 184, "known": [184, 202, 203, 204], "issu": [184, 202, 203, 204, 205, 207], "downgrad": [184, 202], "ask": 184, "restart": [184, 190, 202, 213, 223], "afterward": [184, 185], "evolv": [184, 201], "realli": [184, 214], "simultan": 184, "kqc_2nd": 184, "klayout_hom": 184, "klayout_alt": 184, "mix": 184, "subsect": 184, "ln": 184, "path_to_kqcircuit": 184, "kqcircuits_script": [184, 211, 213, 214], "kqcircuits_requir": [184, 211], "administr": 184, "privileg": 184, "homepath": [184, 205], "mklink": 184, "powershel": 184, "ye": 184, "mayb": 184, "won": [184, 185], "bulk": 184, "win": [184, 185, 211], "mac": [184, 185, 205, 206, 211, 214], "debugg": [185, 212], "autom": [185, 203, 210, 221], "suitabl": [185, 204, 218, 219], "viewer": [185, 220], "compat": [185, 206], "safe": 185, "interfer": 185, "yet": [185, 188], "bracket": 185, "trust": 185, "easier": [185, 200], "troubleshoot": 185, "subsitut": 185, "dep": 185, "rewrit": 185, "wipe": 185, "advanc": [185, 192, 194, 213], "categori": 185, "core": [185, 186, 217], "linter": 185, "netlist_as_graph": [185, 206, 211], "publicli": 185, "abl": [185, 213], "upload": 185, "double_pads_sim": [185, 218], "elsewher": [185, 214], "ipynb": [185, 218], "tofu": 185, "rare": [185, 197], "verifi": [185, 205, 214], "legitim": 185, "constraint": 185, "unsaf": 185, "substitut": 185, "tox": 186, "pytest": [186, 211], "pylint": 186, "lint": 186, "ini": 186, "framework": [186, 203, 218, 221], "num": 186, "reflect": 186, "propos": 186, "test_load_librari": 186, "test_invalid_nam": 186, "approach": [186, 202, 217, 219], "u": [186, 201], "our": [186, 198, 199], "understand": [186, 213], "unfortun": 186, "repetit": 186, "consider": 186, "cov": 186, "comprehens": [186, 194], "happi": 186, "failur": 186, "similarli": [186, 219, 220], "bug": [186, 213], "fail": 186, "prior": 186, "wil": 186, "reintroduc": 186, "conftest": 186, "panel": [187, 191, 197], "drag": [187, 188, 191, 192, 195, 199, 213, 223], "press": [187, 191, 192, 199, 202, 213], "f2": [187, 190, 191, 199], "block": [187, 198], "toolbox": [187, 188], "toolbar": [188, 191, 192], "evok": 188, "anim": [188, 189], "bring": [188, 192], "few": [188, 217], "situat": 188, "accid": 188, "export_cells_as_cod": 189, "nearbi": 189, "hardcod": [189, 198], "instruct": [189, 206], "nice": 189, "x_port_a": 189, "x_port_a_corn": 189, "anywai": [189, 201], "navig": [190, 191], "shift": [190, 191, 192, 213, 214], "drop": [190, 191, 199, 223], "unhid": [190, 191], "1t1_ground_grid": 190, "arrang": 190, "minut": 190, "reload": [190, 198, 199, 212], "video": [190, 192], "anyth": 190, "learn": [191, 195, 213], "ok": 191, "chiplibrari": 191, "menu": [191, 199, 202, 209, 213, 222], "still": [191, 206, 214], "mous": 191, "scroll": [191, 210], "littl": 191, "esc": 191, "plan": 191, "fabric": [191, 203, 204], "essenti": [192, 210, 219], "power": 192, "confirm": 192, "del": 192, "flexibl": [192, 219], "highlight": [192, 193], "enter": 192, "mostli": [193, 201], "introduct": 194, "topic": 194, "intuit": 195, "2nd": 195, "stackup": 195, "span": 195, "indium_bump": 195, "1t1_indium_bump": 195, "2b1_indium_bump": 195, "often": [195, 198, 213], "swap": 195, "electromagnet": 196, "tree": 197, "miscellan": [197, 199, 203, 212], "strictli": 197, "aptli": 197, "explan": [197, 198, 215], "wo": 197, "laid": 197, "encompass": 197, "plu": 197, "groud": 197, "formula": 197, "simplecross": 198, "hold": 198, "len1": 198, "len2": 198, "cross_poli": 198, "simple_cross": 198, "scratch": 198, "especi": 198, "my_packag": [198, 199], "newchip1": [198, 201], "samplehold": [198, 209], "default_samplehold": [198, 209], "half_width": 198, "cross_cel": 198, "new_chip1": 198, "f5": [199, 202, 213, 214], "my": 199, "my_el": 199, "myelement": [199, 200], "underscor": [199, 202, 211], "capit": 199, "ctrl": 199, "canva": 199, "discuss": [200, 207], "myelement2": 200, "multilay": 200, "myqubit": 200, "my_qubit": 200, "hide": 200, "follw": 200, "refpoint_nam": 201, "cap_refpoint": 201, "wn_port": 201, "wn_port_corn": 201, "port_b_corn": 201, "perhap": 201, "someel": 201, "refpoint_of_some_el": 201, "existing_ref": 201, "hard": 201, "port_name_corn": 201, "something_port": 201, "something_port_corn": 201, "wherev": 201, "easiest": [202, 211], "migrat": 202, "uninstal": 202, "recent": 202, "safest": 202, "quirk": 202, "broken": 202, "reinstal": 202, "earlier": 202, "reloc": 202, "behind": 202, "tqdm": 202, "reduc": [203, 218], "effort": 203, "processor": 203, "instantli": 203, "exchang": 203, "qpu": 203, "assembl": 203, "trademark": 203, "page": [203, 210, 211], "simplest": [204, 219], "instant": 204, "rather": 204, "codebas": 204, "simulation_script": 204, "parti": 204, "mask_script": 204, "yourself": 205, "homebrew": 205, "brew": 205, "cask": 205, "becaus": [205, 213, 214], "app": 205, "finder": 205, "bugfix": 205, "stabil": 205, "27": [205, 206], "17": 205, "microsoft": 205, "server": 205, "2022": 205, "talk": 205, "mental": 205, "appdata": [205, 216], "klayout_app": 205, "st": 206, "dynam": [206, 219], "sonoma": 206, "heavyweight": 206, "hw": 206, "proce": 206, "bigsur": 206, "setuptool": 206, "_distutils_hack": 206, "v52": 206, "v57": 206, "sometim": [206, 213], "dir": 206, "binari": [206, 216], "__path__": 206, "queri": 206, "sy": 206, "version_info": 206, "x86_64": 206, "modern": 206, "macbook": 206, "henc": [206, 220], "numpi": 206, "scipi": 206, "macosx_10_9_x86_64": 206, "fetch": 206, "macosx_10_9_arm64": 206, "notic": [206, 214], "question": 207, "idea": 207, "polici": 208, "rf16": 209, "12000": 209, "layer_config_path": 209, "simpler": 209, "x_base_metal_gap_wo_grid": 209, "x_ground_grid_avoid": 209, "133": 209, "x_port": 209, "154": 209, "x_new_lay": 209, "999": 209, "new_lay": 209, "although": 209, "newli": 209, "default_layer_prop": 209, "therefor": 210, "waveguides_sim_cross_sect": 210, "swissmon_epr_sim": 210, "plug": 210, "high": [210, 211], "low": 210, "7": 210, "newest": 210, "lightweight": 210, "klayoutmatthia": 210, "docintro": 210, "docrefer": 210, "docgrow": 210, "docetch": 210, "mainli": [211, 219], "pictur": 211, "camelcas": 211, "adher": 211, "rubi": 211, "librair": 211, "variou": 211, "check_layer_prop": 211, "create_element_from_path": 211, "gdiff": 211, "get_klayout_python_info": 211, "oas2dxf": 211, "dxf": 211, "rm": 211, "rd": 211, "element_path": 211, "incorpor": 211, "pycharm": 211, "studio": 211, "vim": 211, "neovim": 211, "demo_placing_a_pcel": 213, "icon": 213, "plai": 213, "exclam": 213, "task": [213, 217, 223], "toggl": 213, "breakpoint": 213, "red": 213, "f9": 213, "stage": 213, "pop": 213, "cancel": 213, "asterisk": 213, "caught": 213, "unrespons": 213, "heavi": 213, "though": 213, "demo_pya_bas": 213, "test_wgc_airbridg": 213, "photomask": 214, "product": 214, "effici": [214, 217], "observ": 214, "multiprocess": 214, "test_mask": 214, "de1": 214, "roughli": 214, "logging_setup": 214, "spcifi": 214, "de2": 214, "5700": 214, "dt1": 214, "qf1": 214, "my_chip": 214, "mcf": 214, "proper": 214, "complic": [214, 217, 223], "mdemo": 214, "ch2": 214, "45000": 214, "30000": 214, "ch1": 214, "sx1": 214, "jt1": 214, "ac1": 214, "st1": 214, "jt2": 214, "65000": 214, "interest": 214, "fragment": 214, "fragmet": 214, "centerd": 214, "exploit": 214, "slurm": [215, 217], "password": 215, "openmpi": 215, "install_softwar": 215, "mpi": [215, 217], "machin": [215, 217], "send": 215, "singularity_path": 215, "bash": 215, "sbatch_paramet": [215, 217], "kqc_remote_account": [215, 217], "sim_1": 215, "sim_2": 215, "sim_n": 215, "job": 215, "state": [215, 217], "sim_i_tmp_fold": 215, "nohup_runid": 215, "runid": 215, "watch": 215, "cat": 215, "shell": [216, 217], "liner": 216, "initialis": 216, "admin": 216, "priviledg": 216, "elmer_help": 217, "gmsh_helper": 217, "sif": 217, "capacitancematrix": 217, "electric_potenti": 217, "pvsm": 217, "waveguides_n_guides_1": 217, "waveguides_n_guides_2": 217, "n_worker": 217, "elmer_n_process": 217, "thread": 217, "openmp": 217, "elmer_n_thread": 217, "benefici": 217, "relationship": 217, "independentprocess": 217, "parallelizationsecond": 217, "ofparallel": 217, "sequenti": 217, "worker": 217, "floor": 217, "run_gmsh_gui": 217, "run_elmergrid": 217, "run_elm": 217, "run_paraview": 217, "omp": 217, "gmsh_n_thread": 217, "bsd": 217, "benefit": 217, "multithread": 217, "sbatch": 217, "max_threads_per_nod": 217, "max": 217, "elmer_mem": 217, "64g": 217, "elmer_tim": 217, "00": 217, "gmsh_mem": 217, "alloc": 217, "gmsh_time": 217, "env_setup_cmd": 217, "bashrc": 217, "project_0": 217, "bill": 217, "simulation_mesh": 217, "afterok": 217, "sent": 217, "queue": 217, "elmerfem": [217, 220], "elmercsc": [217, 220], "org": [217, 220], "suffic": 217, "scatter": 218, "snp": 218, "touchston": 218, "s1p": 218, "s2p": 218, "s3p": 218, "forth": 218, "export_paramet": [218, 220], "extractor": [218, 221], "consult": [218, 219], "estim": 218, "mutual": 218, "c_i_j": 218, "c_i_i": 218, "lifetim": 218, "eig": 218, "eigenvalu": 218, "_energi": 218, "cv": 218, "export_epr": 218, "post_process_script": 218, "_epr": 218, "csv": 218, "offer": 218, "accuraci": 218, "logic": 218, "cpw_cross_section_sim": 218, "xmons_direct_coupling_pyepr": 218, "pyepr_exampl": 218, "t_1": 218, "intermediate_processing_command": 218, "t1_estim": 218, "queu": 218, "lossi": 218, "coher": 218, "master": 218, "thesi": 218, "2023": 218, "focus": 219, "distinguish": 219, "snippet": 219, "refp": 219, "mandatori": [219, 220], "100um": 219, "port_2": 219, "port_2_corn": 219, "port_3": 219, "port_3_corn": 219, "multipurpos": 219, "airbridge_flyov": 219, "joint": 219, "parameter": [219, 220], "purpl": 219, "troubl": 219, "port_cplr0": 219, "port_cplr1": 219, "port_cplr2": 219, "revert": 219, "swissmonsimul": 219, "port_cplr0_corn": 219, "port_cplr1_corn": 219, "port_cplr2_corn": 219, "squid_port_squid_a": 219, "squid_port_squid_b": 219, "portion": 219, "variat": 219, "procedur": 219, "eas": 219, "arm_length_500": 219, "gap_sweep": 219, "ansys_execut": 220, "swissmon_simulation_output": 220, "dir_path": 220, "ironpython": 220, "gdsii": 220, "meta": 220, "occurr": 220, "incomplet": 220, "manner": 220, "dev": 220, "abil": 221, "until": 221, "guidanc": 221, "particip": 221, "pyepr": 221, "summari": 222, "parameteriz": 222, "primit": 222, "emb": 222, "onto": 222, "archiv": 222, "traceabl": 222, "thought": 222, "manipul": 223, "browser": 223}, "objects": {"": [[1, 0, 0, "-", "kqcircuits"]], "kqcircuits": [[2, 0, 0, "-", "chips"], [27, 0, 0, "-", "defaults"], [28, 0, 0, "-", "elements"], [70, 0, 0, "-", "junctions"], [77, 0, 0, "-", "klayout_view"], [78, 0, 0, "-", "layer_cluster"], [79, 0, 0, "-", "layer_config"], [82, 0, 0, "-", "masks"], [87, 0, 0, "-", "pya_resolver"], [88, 0, 0, "-", "qubits"], [95, 0, 0, "-", "run"], [96, 0, 0, "-", "simulations"], [139, 0, 0, "-", "test_structures"], [149, 0, 0, "-", "util"]], "kqcircuits.chips": [[3, 0, 0, "-", "airbridge_crossings"], [4, 0, 0, "-", "airbridge_dc_test"], [5, 0, 0, "-", "chip"], [6, 0, 0, "-", "crossing_twoface"], [7, 0, 0, "-", "daisy_woven"], [8, 0, 0, "-", "dc_test"], [9, 0, 0, "-", "demo"], [10, 0, 0, "-", "demo_twoface"], [11, 0, 0, "-", "empty"], [12, 0, 0, "-", "junction_test"], [13, 0, 0, "-", "junction_test2"], [14, 0, 0, "-", "launchers"], [15, 0, 0, "-", "lithography_test"], [16, 0, 0, "-", "lithography_test_twoface"], [17, 0, 0, "-", "munch_qubits"], [18, 0, 0, "-", "quality_factor"], [19, 0, 0, "-", "quality_factor_twoface"], [20, 0, 0, "-", "sample_holder_test"], [21, 0, 0, "-", "shaping"], [22, 0, 0, "-", "simple"], [23, 0, 0, "-", "single_xmons"], [24, 0, 0, "-", "stripes"], [25, 0, 0, "-", "tsv_test"], [26, 0, 0, "-", "xmons_direct_coupling"]], "kqcircuits.chips.airbridge_crossings": [[3, 1, 1, "", "AirbridgeCrossings"]], "kqcircuits.chips.airbridge_crossings.AirbridgeCrossings": [[3, 2, 1, "", "build"]], "kqcircuits.chips.airbridge_dc_test": [[4, 1, 1, "", "AirbridgeDcTest"]], "kqcircuits.chips.airbridge_dc_test.AirbridgeDcTest": [[4, 2, 1, "", "build"]], "kqcircuits.chips.chip": [[5, 1, 1, "", "Chip"]], "kqcircuits.chips.chip.Chip": [[5, 3, 1, "", "LIBRARY_DESCRIPTION"], [5, 3, 1, "", "LIBRARY_NAME"], [5, 3, 1, "", "LIBRARY_PATH"], [5, 2, 1, "", "can_create_from_shape_impl"], [5, 2, 1, "", "display_text_impl"], [5, 2, 1, "", "get_box"], [5, 2, 1, "", "get_filter_regions"], [5, 2, 1, "", "get_ground_bump_locations"], [5, 2, 1, "", "get_ground_tsv_locations"], [5, 2, 1, "", "get_launcher_assignments"], [5, 2, 1, "", "insert_filtered_elements"], [5, 2, 1, "", "make_grid_locations"], [5, 2, 1, "", "merge_layout_layers"], [5, 2, 1, "", "merge_layout_layers_on_face"], [5, 2, 1, "", "parameters_from_shape_impl"], [5, 2, 1, "", "post_build"], [5, 2, 1, "", "produce_frame"], [5, 2, 1, "", "produce_ground_grid"], [5, 2, 1, "", "produce_ground_on_face_grid"], [5, 2, 1, "", "produce_junction_tests"], [5, 2, 1, "", "produce_launchers"], [5, 2, 1, "", "produce_n_launchers"], [5, 2, 1, "", "produce_opt_lit_tests"], [5, 2, 1, "", "produce_structures"], [5, 2, 1, "", "transformation_from_shape_impl"]], "kqcircuits.chips.crossing_twoface": [[6, 1, 1, "", "CrossingTwoface"]], "kqcircuits.chips.crossing_twoface.CrossingTwoface": [[6, 2, 1, "", "build"]], "kqcircuits.chips.daisy_woven": [[7, 1, 1, "", "DaisyWoven"]], "kqcircuits.chips.daisy_woven.DaisyWoven": [[7, 2, 1, "", "build"]], "kqcircuits.chips.dc_test": [[8, 1, 1, "", "DcTest"]], "kqcircuits.chips.dc_test.DcTest": [[8, 2, 1, "", "build"]], "kqcircuits.chips.demo": [[9, 1, 1, "", "Demo"]], "kqcircuits.chips.demo.Demo": [[9, 2, 1, "", "build"], [9, 2, 1, "", "produce_control_lines"], [9, 2, 1, "", "produce_coupler"], [9, 2, 1, "", "produce_couplers"], [9, 2, 1, "", "produce_driveline"], [9, 2, 1, "", "produce_fluxline"], [9, 2, 1, "", "produce_junction_tests"], [9, 2, 1, "", "produce_probeline"], [9, 2, 1, "", "produce_probelines"], [9, 2, 1, "", "produce_qubit"], [9, 2, 1, "", "produce_qubits"], [9, 2, 1, "", "produce_readout_structure"], [9, 2, 1, "", "produce_readout_structures"]], "kqcircuits.chips.demo_twoface": [[10, 1, 1, "", "DemoTwoface"]], "kqcircuits.chips.demo_twoface.DemoTwoface": [[10, 2, 1, "", "build"], [10, 2, 1, "", "produce_control_lines"], [10, 2, 1, "", "produce_coupler"], [10, 2, 1, "", "produce_couplers"], [10, 2, 1, "", "produce_driveline"], [10, 2, 1, "", "produce_fluxline"], [10, 2, 1, "", "produce_probeline"], [10, 2, 1, "", "produce_probelines"], [10, 2, 1, "", "produce_qubit"], [10, 2, 1, "", "produce_qubits"], [10, 2, 1, "", "produce_readout_structure"], [10, 2, 1, "", "produce_readout_structures"]], "kqcircuits.chips.empty": [[11, 1, 1, "", "Empty"]], "kqcircuits.chips.empty.Empty": [[11, 2, 1, "", "build"], [11, 2, 1, "", "make_empty_area"]], "kqcircuits.chips.junction_test": [[12, 1, 1, "", "JunctionTest"]], "kqcircuits.chips.junction_test.JunctionTest": [[12, 2, 1, "", "build"]], "kqcircuits.chips.junction_test2": [[13, 1, 1, "", "JunctionTest2"]], "kqcircuits.chips.junction_test2.JunctionTest2": [[13, 2, 1, "", "build"]], "kqcircuits.chips.launchers": [[14, 1, 1, "", "Launchers"]], "kqcircuits.chips.launchers.Launchers": [[14, 2, 1, "", "build"]], "kqcircuits.chips.lithography_test": [[15, 1, 1, "", "LithographyTest"]], "kqcircuits.chips.lithography_test.LithographyTest": [[15, 2, 1, "", "build"], [15, 2, 1, "", "create_pattern"]], "kqcircuits.chips.lithography_test_twoface": [[16, 1, 1, "", "LithographyTestTwoface"]], "kqcircuits.chips.lithography_test_twoface.LithographyTestTwoface": [[16, 2, 1, "", "build"], [16, 2, 1, "", "create_pattern"]], "kqcircuits.chips.munch_qubits": [[17, 1, 1, "", "MunchQubits"]], "kqcircuits.chips.munch_qubits.MunchQubits": [[17, 2, 1, "", "build"], [17, 2, 1, "", "produce_coupler"], [17, 2, 1, "", "produce_drivelines"], [17, 2, 1, "", "produce_probeline"], [17, 2, 1, "", "produce_qubits"], [17, 2, 1, "", "produce_readout_resonators"]], "kqcircuits.chips.quality_factor": [[18, 1, 1, "", "QualityFactor"]], "kqcircuits.chips.quality_factor.QualityFactor": [[18, 2, 1, "", "build"]], "kqcircuits.chips.quality_factor_twoface": [[19, 1, 1, "", "QualityFactorTwoface"]], "kqcircuits.chips.quality_factor_twoface.QualityFactorTwoface": [[19, 2, 1, "", "build"], [19, 2, 1, "", "produce_resonator"]], "kqcircuits.chips.sample_holder_test": [[20, 1, 1, "", "SampleHolderTest"]], "kqcircuits.chips.sample_holder_test.SampleHolderTest": [[20, 2, 1, "", "build"]], "kqcircuits.chips.shaping": [[21, 1, 1, "", "Shaping"]], "kqcircuits.chips.shaping.Shaping": [[21, 2, 1, "", "build"]], "kqcircuits.chips.simple": [[22, 1, 1, "", "Simple"]], "kqcircuits.chips.simple.Simple": [[22, 2, 1, "", "build"]], "kqcircuits.chips.single_xmons": [[23, 1, 1, "", "SingleXmons"]], "kqcircuits.chips.single_xmons.SingleXmons": [[23, 2, 1, "", "build"], [23, 3, 1, "", "launchers"], [23, 3, 1, "", "qubits_refpoints"]], "kqcircuits.chips.stripes": [[24, 1, 1, "", "Stripes"]], "kqcircuits.chips.stripes.Stripes": [[24, 2, 1, "", "build"]], "kqcircuits.chips.tsv_test": [[25, 1, 1, "", "TsvTest"]], "kqcircuits.chips.tsv_test.TsvTest": [[25, 2, 1, "", "build"], [25, 2, 1, "", "create_xsection"]], "kqcircuits.chips.xmons_direct_coupling": [[26, 1, 1, "", "XMonsDirectCoupling"]], "kqcircuits.chips.xmons_direct_coupling.XMonsDirectCoupling": [[26, 2, 1, "", "build"], [26, 2, 1, "", "produce_qubits"], [26, 2, 1, "", "produce_readout_resonator"]], "kqcircuits.elements": [[29, 0, 0, "-", "airbridge_connection"], [30, 0, 0, "-", "airbridges"], [34, 0, 0, "-", "capacitive_x_coupler"], [35, 0, 0, "-", "chip_frame"], [36, 0, 0, "-", "circular_capacitor"], [37, 0, 0, "-", "element"], [38, 0, 0, "-", "finger_capacitor_square"], [39, 0, 0, "-", "finger_capacitor_taper"], [40, 0, 0, "-", "flip_chip_connectors"], [44, 0, 0, "-", "fluxlines"], [48, 0, 0, "-", "hanger_resonator"], [49, 0, 0, "-", "launcher"], [50, 0, 0, "-", "launcher_dc"], [51, 0, 0, "-", "markers"], [55, 0, 0, "-", "meander"], [56, 0, 0, "-", "quarter_wave_cpw_resonator"], [57, 0, 0, "-", "smooth_capacitor"], [58, 0, 0, "-", "spiral_capacitor"], [59, 0, 0, "-", "spiral_resonator_polygon"], [60, 0, 0, "-", "tsvs"], [64, 0, 0, "-", "waveguide_composite"], [65, 0, 0, "-", "waveguide_coplanar"], [66, 0, 0, "-", "waveguide_coplanar_curved"], [67, 0, 0, "-", "waveguide_coplanar_splitter"], [68, 0, 0, "-", "waveguide_coplanar_straight"], [69, 0, 0, "-", "waveguide_coplanar_taper"]], "kqcircuits.elements.airbridge_connection": [[29, 1, 1, "", "AirbridgeConnection"]], "kqcircuits.elements.airbridge_connection.AirbridgeConnection": [[29, 2, 1, "", "build"]], "kqcircuits.elements.airbridges": [[31, 0, 0, "-", "airbridge"], [32, 0, 0, "-", "airbridge_multi_face"], [33, 0, 0, "-", "airbridge_rectangular"]], "kqcircuits.elements.airbridges.airbridge": [[31, 1, 1, "", "Airbridge"]], "kqcircuits.elements.airbridges.airbridge.Airbridge": [[31, 2, 1, "", "create"], [31, 3, 1, "", "default_type"], [31, 2, 1, "", "transformation_from_shape_impl"]], "kqcircuits.elements.airbridges.airbridge_multi_face": [[32, 1, 1, "", "AirbridgeMultiFace"]], "kqcircuits.elements.airbridges.airbridge_multi_face.AirbridgeMultiFace": [[32, 2, 1, "", "build"], [32, 3, 1, "", "default_type"]], "kqcircuits.elements.airbridges.airbridge_rectangular": [[33, 1, 1, "", "AirbridgeRectangular"]], "kqcircuits.elements.airbridges.airbridge_rectangular.AirbridgeRectangular": [[33, 2, 1, "", "build"], [33, 3, 1, "", "default_type"]], "kqcircuits.elements.capacitive_x_coupler": [[34, 1, 1, "", "CapacitiveXCoupler"]], "kqcircuits.elements.capacitive_x_coupler.CapacitiveXCoupler": [[34, 2, 1, "", "build"], [34, 2, 1, "", "get_sim_ports"]], "kqcircuits.elements.chip_frame": [[35, 1, 1, "", "ChipFrame"]], "kqcircuits.elements.chip_frame.ChipFrame": [[35, 2, 1, "", "build"]], "kqcircuits.elements.circular_capacitor": [[36, 1, 1, "", "CircularCapacitor"]], "kqcircuits.elements.circular_capacitor.CircularCapacitor": [[36, 2, 1, "", "build"], [36, 2, 1, "", "get_sim_ports"]], "kqcircuits.elements.element": [[37, 1, 1, "", "Element"], [37, 4, 1, "", "get_refpoints"], [37, 4, 1, "", "insert_cell_into"], [37, 4, 1, "", "parameter_order_key"], [37, 4, 1, "", "resolve_face"]], "kqcircuits.elements.element.Element": [[37, 3, 1, "", "LIBRARY_DESCRIPTION"], [37, 3, 1, "", "LIBRARY_NAME"], [37, 3, 1, "", "LIBRARY_PATH"], [37, 2, 1, "", "add_element"], [37, 2, 1, "", "add_port"], [37, 2, 1, "", "add_protection"], [37, 2, 1, "", "build"], [37, 2, 1, "", "copy_port"], [37, 2, 1, "", "create"], [37, 2, 1, "", "create_cell_from_shape"], [37, 2, 1, "", "create_subtype"], [37, 2, 1, "", "create_with_refpoints"], [37, 2, 1, "", "display_text_impl"], [37, 2, 1, "", "etch_opposite_face_impl"], [37, 2, 1, "", "face"], [37, 2, 1, "", "get_layer"], [37, 2, 1, "", "get_refpoints"], [37, 2, 1, "", "get_schema"], [37, 2, 1, "", "get_sim_ports"], [37, 2, 1, "", "insert_cell"], [37, 2, 1, "", "pcell_params_by_name"], [37, 2, 1, "", "post_build"], [37, 2, 1, "", "produce_impl"], [37, 2, 1, "", "raise_error_on_cell"]], "kqcircuits.elements.finger_capacitor_square": [[38, 1, 1, "", "FingerCapacitorSquare"], [38, 4, 1, "", "eval_a2"], [38, 4, 1, "", "eval_b2"]], "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare": [[38, 2, 1, "", "add_waveguides"], [38, 2, 1, "", "build"], [38, 2, 1, "", "can_create_from_shape_impl"], [38, 2, 1, "", "cut_region"], [38, 2, 1, "", "finger_area_length"], [38, 2, 1, "", "finger_area_width"], [38, 2, 1, "", "get_ground_region"], [38, 2, 1, "", "get_sim_ports"]], "kqcircuits.elements.finger_capacitor_taper": [[39, 1, 1, "", "FingerCapacitorTaper"]], "kqcircuits.elements.finger_capacitor_taper.FingerCapacitorTaper": [[39, 2, 1, "", "build"], [39, 2, 1, "", "can_create_from_shape_impl"]], "kqcircuits.elements.flip_chip_connectors": [[41, 0, 0, "-", "flip_chip_connector"], [42, 0, 0, "-", "flip_chip_connector_dc"], [43, 0, 0, "-", "flip_chip_connector_rf"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector": [[41, 1, 1, "", "FlipChipConnector"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector.FlipChipConnector": [[41, 2, 1, "", "create"], [41, 3, 1, "", "default_type"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc": [[42, 1, 1, "", "FlipChipConnectorDc"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc.FlipChipConnectorDc": [[42, 2, 1, "", "build"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf": [[43, 1, 1, "", "FlipChipConnectorRf"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf.FlipChipConnectorRf": [[43, 2, 1, "", "build"], [43, 2, 1, "", "get_sim_ports"]], "kqcircuits.elements.fluxlines": [[45, 0, 0, "-", "fluxline"], [46, 0, 0, "-", "fluxline_standard"], [47, 0, 0, "-", "fluxline_straight"]], "kqcircuits.elements.fluxlines.fluxline": [[45, 1, 1, "", "Fluxline"]], "kqcircuits.elements.fluxlines.fluxline.Fluxline": [[45, 2, 1, "", "create"], [45, 3, 1, "", "default_type"]], "kqcircuits.elements.fluxlines.fluxline_standard": [[46, 1, 1, "", "FluxlineStandard"]], "kqcircuits.elements.fluxlines.fluxline_standard.FluxlineStandard": [[46, 2, 1, "", "build"]], "kqcircuits.elements.fluxlines.fluxline_straight": [[47, 1, 1, "", "FluxlineStraight"]], "kqcircuits.elements.fluxlines.fluxline_straight.FluxlineStraight": [[47, 2, 1, "", "build"]], "kqcircuits.elements.hanger_resonator": [[48, 1, 1, "", "HangerResonator"]], "kqcircuits.elements.hanger_resonator.HangerResonator": [[48, 2, 1, "", "build"], [48, 2, 1, "", "get_sim_ports"]], "kqcircuits.elements.launcher": [[49, 1, 1, "", "Launcher"]], "kqcircuits.elements.launcher.Launcher": [[49, 2, 1, "", "build"]], "kqcircuits.elements.launcher_dc": [[50, 1, 1, "", "LauncherDC"]], "kqcircuits.elements.launcher_dc.LauncherDC": [[50, 2, 1, "", "build"]], "kqcircuits.elements.markers": [[52, 0, 0, "-", "marker"], [53, 0, 0, "-", "marker_standard"], [54, 0, 0, "-", "mask_marker_fc"]], "kqcircuits.elements.markers.marker": [[52, 1, 1, "", "Marker"]], "kqcircuits.elements.markers.marker.Marker": [[52, 2, 1, "", "create"], [52, 3, 1, "", "default_type"], [52, 2, 1, "", "get_marker_locations"], [52, 2, 1, "", "get_marker_region"], [52, 2, 1, "", "produce_geometry"]], "kqcircuits.elements.markers.marker_standard": [[53, 1, 1, "", "MarkerStandard"]], "kqcircuits.elements.markers.marker_standard.MarkerStandard": [[53, 2, 1, "", "build"]], "kqcircuits.elements.markers.mask_marker_fc": [[54, 1, 1, "", "MaskMarkerFc"]], "kqcircuits.elements.markers.mask_marker_fc.MaskMarkerFc": [[54, 2, 1, "", "build"], [54, 2, 1, "", "create_cross"], [54, 2, 1, "", "get_marker_locations"], [54, 2, 1, "", "get_marker_region"]], "kqcircuits.elements.meander": [[55, 1, 1, "", "Meander"]], "kqcircuits.elements.meander.Meander": [[55, 2, 1, "", "build"], [55, 2, 1, "", "can_create_from_shape_impl"], [55, 2, 1, "", "parameters_from_shape_impl"]], "kqcircuits.elements.quarter_wave_cpw_resonator": [[56, 1, 1, "", "QuarterWaveCpwResonator"]], "kqcircuits.elements.quarter_wave_cpw_resonator.QuarterWaveCpwResonator": [[56, 2, 1, "", "build"], [56, 2, 1, "", "get_sim_ports"]], "kqcircuits.elements.smooth_capacitor": [[57, 1, 1, "", "SmoothCapacitor"], [57, 4, 1, "", "segment_points"], [57, 4, 1, "", "unit_vector"]], "kqcircuits.elements.smooth_capacitor.SmoothCapacitor": [[57, 2, 1, "", "build"], [57, 2, 1, "", "can_create_from_shape_impl"], [57, 2, 1, "", "finger_polygon"], [57, 2, 1, "", "get_finger_regions"], [57, 2, 1, "", "get_sim_ports"], [57, 2, 1, "", "insert_wg_joint"], [57, 2, 1, "", "middle_gap_fill"], [57, 2, 1, "", "super_smoothen_region"], [57, 2, 1, "", "t_poly"]], "kqcircuits.elements.spiral_capacitor": [[58, 1, 1, "", "SpiralCapacitor"]], "kqcircuits.elements.spiral_capacitor.SpiralCapacitor": [[58, 2, 1, "", "build"], [58, 2, 1, "", "can_create_from_shape_impl"], [58, 2, 1, "", "get_sim_ports"]], "kqcircuits.elements.spiral_resonator_polygon": [[59, 1, 1, "", "SpiralResonatorPolygon"], [59, 4, 1, "", "rectangular_parameters"]], "kqcircuits.elements.spiral_resonator_polygon.SpiralResonatorPolygon": [[59, 2, 1, "", "build"]], "kqcircuits.elements.tsvs": [[61, 0, 0, "-", "tsv"], [62, 0, 0, "-", "tsv_ellipse"], [63, 0, 0, "-", "tsv_standard"]], "kqcircuits.elements.tsvs.tsv": [[61, 1, 1, "", "Tsv"]], "kqcircuits.elements.tsvs.tsv.Tsv": [[61, 2, 1, "", "create"], [61, 3, 1, "", "default_type"]], "kqcircuits.elements.tsvs.tsv_ellipse": [[62, 1, 1, "", "TsvEllipse"]], "kqcircuits.elements.tsvs.tsv_ellipse.TsvEllipse": [[62, 2, 1, "", "create_tsv_connector"], [62, 2, 1, "", "produce_impl"]], "kqcircuits.elements.tsvs.tsv_standard": [[63, 1, 1, "", "TsvStandard"]], "kqcircuits.elements.tsvs.tsv_standard.TsvStandard": [[63, 2, 1, "", "build"]], "kqcircuits.elements.waveguide_composite": [[64, 1, 1, "", "Node"], [64, 1, 1, "", "WaveguideComposite"], [64, 4, 1, "", "produce_fixed_length_bend"]], "kqcircuits.elements.waveguide_composite.Node": [[64, 3, 1, "", "align"], [64, 3, 1, "", "angle"], [64, 2, 1, "", "deserialize"], [64, 3, 1, "", "element"], [64, 3, 1, "", "inst_name"], [64, 3, 1, "", "length_before"], [64, 3, 1, "", "length_increment"], [64, 3, 1, "", "meander_direction"], [64, 2, 1, "", "nodes_from_string"], [64, 3, 1, "", "position"]], "kqcircuits.elements.waveguide_composite.WaveguideComposite": [[64, 2, 1, "", "build"], [64, 2, 1, "", "check_node_type"], [64, 2, 1, "", "coerce_parameters_impl"], [64, 2, 1, "", "create"], [64, 2, 1, "", "get_segment_cells"], [64, 2, 1, "", "get_segment_lengths"], [64, 2, 1, "", "produce_fixed_length_waveguide"], [64, 2, 1, "", "snap_point"]], "kqcircuits.elements.waveguide_coplanar": [[65, 1, 1, "", "WaveguideCoplanar"]], "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar": [[65, 2, 1, "", "build"], [65, 2, 1, "", "can_create_from_shape_impl"], [65, 2, 1, "", "get_corner_data"], [65, 2, 1, "", "is_continuous"], [65, 2, 1, "", "parameters_from_shape_impl"], [65, 2, 1, "", "produce_end_termination"], [65, 2, 1, "", "produce_waveguide"], [65, 2, 1, "", "transformation_from_shape_impl"]], "kqcircuits.elements.waveguide_coplanar_curved": [[66, 1, 1, "", "WaveguideCoplanarCurved"], [66, 4, 1, "", "arc"]], "kqcircuits.elements.waveguide_coplanar_curved.WaveguideCoplanarCurved": [[66, 2, 1, "", "build"], [66, 2, 1, "", "build_geometry"], [66, 2, 1, "", "coerce_parameters_impl"], [66, 2, 1, "", "create_curve_arcs"], [66, 2, 1, "", "produce_curve_termination"]], "kqcircuits.elements.waveguide_coplanar_splitter": [[67, 1, 1, "", "WaveguideCoplanarSplitter"], [67, 4, 1, "", "t_cross_parameters"]], "kqcircuits.elements.waveguide_coplanar_splitter.WaveguideCoplanarSplitter": [[67, 2, 1, "", "build"]], "kqcircuits.elements.waveguide_coplanar_straight": [[68, 1, 1, "", "WaveguideCoplanarStraight"]], "kqcircuits.elements.waveguide_coplanar_straight.WaveguideCoplanarStraight": [[68, 2, 1, "", "add_waveguide_path"], [68, 2, 1, "", "build"], [68, 2, 1, "", "build_geometry"]], "kqcircuits.elements.waveguide_coplanar_taper": [[69, 1, 1, "", "WaveguideCoplanarTaper"]], "kqcircuits.elements.waveguide_coplanar_taper.WaveguideCoplanarTaper": [[69, 2, 1, "", "build"]], "kqcircuits.junctions": [[71, 0, 0, "-", "junction"], [72, 0, 0, "-", "manhattan"], [73, 0, 0, "-", "manhattan_single_junction"], [74, 0, 0, "-", "no_squid"], [75, 0, 0, "-", "sim"], [76, 0, 0, "-", "squid"]], "kqcircuits.junctions.junction": [[71, 1, 1, "", "Junction"]], "kqcircuits.junctions.junction.Junction": [[71, 3, 1, "", "LIBRARY_DESCRIPTION"], [71, 3, 1, "", "LIBRARY_NAME"], [71, 3, 1, "", "LIBRARY_PATH"], [71, 2, 1, "", "create"], [71, 3, 1, "", "default_type"]], "kqcircuits.junctions.manhattan": [[72, 1, 1, "", "Manhattan"]], "kqcircuits.junctions.manhattan.Manhattan": [[72, 2, 1, "", "build"], [72, 2, 1, "", "produce_contact_pads"], [72, 2, 1, "", "produce_manhattan_squid"], [72, 2, 1, "", "produce_tp_large"], [72, 2, 1, "", "produce_tp_small"]], "kqcircuits.junctions.manhattan_single_junction": [[73, 1, 1, "", "ManhattanSingleJunction"]], "kqcircuits.junctions.manhattan_single_junction.ManhattanSingleJunction": [[73, 2, 1, "", "build"], [73, 2, 1, "", "produce_manhattan_junction"]], "kqcircuits.junctions.no_squid": [[74, 1, 1, "", "NoSquid"]], "kqcircuits.junctions.no_squid.NoSquid": [[74, 2, 1, "", "build"]], "kqcircuits.junctions.sim": [[75, 1, 1, "", "Sim"]], "kqcircuits.junctions.sim.Sim": [[75, 2, 1, "", "build"]], "kqcircuits.junctions.squid": [[76, 1, 1, "", "Squid"]], "kqcircuits.klayout_view": [[77, 1, 1, "", "KLayoutView"], [77, 6, 1, "", "MissingUILibraryException"], [77, 4, 1, "", "resolve_default_layer_info"]], "kqcircuits.klayout_view.KLayoutView": [[77, 5, 1, "", "active_cell"], [77, 2, 1, "", "add_default_layers"], [77, 5, 1, "", "cell_view"], [77, 2, 1, "", "clear_layers"], [77, 2, 1, "", "close"], [77, 2, 1, "", "create_top_cell"], [77, 2, 1, "", "export_all_layers_bitmap"], [77, 2, 1, "", "export_layers_bitmaps"], [77, 2, 1, "", "export_pcell_png"], [77, 2, 1, "", "focus"], [77, 2, 1, "", "get_active_cell"], [77, 2, 1, "", "get_active_cell_view"], [77, 2, 1, "", "get_active_layout"], [77, 2, 1, "", "get_pixels"], [77, 2, 1, "", "insert_cell"], [77, 5, 1, "", "layout"], [77, 3, 1, "", "layout_view"], [77, 2, 1, "", "load_layout"], [77, 2, 1, "", "save_layout"], [77, 2, 1, "", "show"], [77, 5, 1, "", "top_cell"]], "kqcircuits.layer_cluster": [[78, 1, 1, "", "LayerCluster"]], "kqcircuits.layer_cluster.LayerCluster": [[78, 2, 1, "", "all_layers"], [78, 3, 1, "", "extra_layers"], [78, 3, 1, "", "face_id"], [78, 3, 1, "", "main_layers"]], "kqcircuits.layer_config": [[80, 0, 0, "-", "default_layer_config"], [81, 0, 0, "-", "example_layer_config"]], "kqcircuits.masks": [[83, 0, 0, "-", "mask_export"], [84, 0, 0, "-", "mask_layout"], [85, 0, 0, "-", "mask_set"], [86, 0, 0, "-", "multi_face_mask_layout"]], "kqcircuits.masks.mask_export": [[83, 4, 1, "", "export_bitmaps"], [83, 4, 1, "", "export_chip"], [83, 4, 1, "", "export_designs"], [83, 4, 1, "", "export_docs"], [83, 4, 1, "", "export_junction_parameters"], [83, 4, 1, "", "export_mask"], [83, 4, 1, "", "export_mask_set"], [83, 4, 1, "", "export_masks_of_face"], [83, 4, 1, "", "get_mask_layout_full_name"]], "kqcircuits.masks.mask_layout": [[84, 1, 1, "", "MaskLayout"]], "kqcircuits.masks.mask_layout.MaskLayout": [[84, 2, 1, "", "add_chips_map"], [84, 3, 1, "", "added_chips"], [84, 3, 1, "", "align_to"], [84, 3, 1, "", "bbox_face_ids"], [84, 2, 1, "", "build"], [84, 3, 1, "", "chip_box_offset"], [84, 3, 1, "", "chip_copies"], [84, 3, 1, "", "chip_size"], [84, 3, 1, "", "chip_trans"], [84, 3, 1, "", "chips_map"], [84, 3, 1, "", "chips_map_legend"], [84, 3, 1, "", "chips_map_offset"], [84, 3, 1, "", "chips_placed_by_position_label"], [84, 3, 1, "", "covered_region_excluded_layers"], [84, 3, 1, "", "dice_width"], [84, 3, 1, "", "edge_clearance"], [84, 3, 1, "", "extra_chips"], [84, 3, 1, "", "extra_id"], [84, 2, 1, "", "face"], [84, 3, 1, "", "face_id"], [84, 2, 1, "", "generate_and_insert_chip_copy_labels"], [84, 2, 1, "", "generate_position_label"], [84, 2, 1, "", "insert_chip_copy_labels"], [84, 2, 1, "", "insert_chips"], [84, 3, 1, "", "layers_to_mask"], [84, 3, 1, "", "layout"], [84, 3, 1, "", "mask_export_density_layers"], [84, 3, 1, "", "mask_export_layers"], [84, 3, 1, "", "mask_marker_offset"], [84, 3, 1, "", "mask_markers_dict"], [84, 3, 1, "", "mask_name_box_margin"], [84, 3, 1, "", "mask_name_offset"], [84, 3, 1, "", "mask_name_scale"], [84, 3, 1, "", "mask_text_scale"], [84, 3, 1, "", "mirror_labels"], [84, 3, 1, "", "name"], [84, 2, 1, "", "position_label_to_two_coordinates"], [84, 3, 1, "", "remove_chips"], [84, 3, 1, "", "submasks"], [84, 3, 1, "", "text_margin"], [84, 3, 1, "", "top_cell"], [84, 2, 1, "", "two_coordinates_to_position_label"], [84, 3, 1, "", "version"], [84, 3, 1, "", "wafer_bottom_flat_length"], [84, 3, 1, "", "wafer_center"], [84, 3, 1, "", "wafer_rad"], [84, 3, 1, "", "wafer_top_flat_length"], [84, 3, 1, "", "with_grid"]], "kqcircuits.masks.mask_set": [[85, 1, 1, "", "MaskSet"]], "kqcircuits.masks.mask_set.MaskSet": [[85, 2, 1, "", "add_chip"], [85, 2, 1, "", "add_mask_layout"], [85, 2, 1, "", "add_multi_face_mask_layout"], [85, 2, 1, "", "build"], [85, 2, 1, "", "chips_map_from_box_map"], [85, 3, 1, "", "chips_map_legend"], [85, 2, 1, "", "export"], [85, 3, 1, "", "export_drc"], [85, 3, 1, "", "export_path"], [85, 3, 1, "", "layout"], [85, 3, 1, "", "mask_export_layers"], [85, 3, 1, "", "mask_layouts"], [85, 3, 1, "", "name"], [85, 3, 1, "", "used_chips"], [85, 3, 1, "", "version"], [85, 3, 1, "", "view"], [85, 3, 1, "", "with_grid"]], "kqcircuits.masks.multi_face_mask_layout": [[86, 1, 1, "", "MultiFaceMaskLayout"]], "kqcircuits.masks.multi_face_mask_layout.MultiFaceMaskLayout": [[86, 2, 1, "", "add_chips_map"], [86, 3, 1, "", "face_ids"], [86, 3, 1, "", "mask_layouts"]], "kqcircuits.pya_resolver": [[87, 4, 1, "", "is_standalone_session"], [87, 4, 1, "", "klayout_executable_command"]], "kqcircuits.qubits": [[89, 0, 0, "-", "circular_transmon_single_island"], [90, 0, 0, "-", "concentric_transmon"], [91, 0, 0, "-", "double_pads"], [92, 0, 0, "-", "double_pads_splines"], [93, 0, 0, "-", "qubit"], [94, 0, 0, "-", "swissmon"]], "kqcircuits.qubits.circular_transmon_single_island": [[89, 1, 1, "", "CircularTransmonSingleIsland"]], "kqcircuits.qubits.circular_transmon_single_island.CircularTransmonSingleIsland": [[89, 2, 1, "", "build"], [89, 2, 1, "", "get_sim_ports"]], "kqcircuits.qubits.concentric_transmon": [[90, 1, 1, "", "ConcentricTransmon"]], "kqcircuits.qubits.concentric_transmon.ConcentricTransmon": [[90, 2, 1, "", "build"], [90, 2, 1, "", "get_sim_ports"]], "kqcircuits.qubits.double_pads": [[91, 1, 1, "", "DoublePads"]], "kqcircuits.qubits.double_pads.DoublePads": [[91, 2, 1, "", "build"], [91, 2, 1, "", "get_sim_ports"]], "kqcircuits.qubits.double_pads_splines": [[92, 1, 1, "", "DoublePadsSplines"]], "kqcircuits.qubits.qubit": [[93, 1, 1, "", "Qubit"]], "kqcircuits.qubits.qubit.Qubit": [[93, 3, 1, "", "LIBRARY_DESCRIPTION"], [93, 3, 1, "", "LIBRARY_NAME"], [93, 3, 1, "", "LIBRARY_PATH"], [93, 2, 1, "", "produce_fluxline"], [93, 2, 1, "", "produce_squid"]], "kqcircuits.qubits.swissmon": [[94, 1, 1, "", "Swissmon"]], "kqcircuits.qubits.swissmon.Swissmon": [[94, 2, 1, "", "build"], [94, 2, 1, "", "get_sim_ports"]], "kqcircuits.run": [[95, 4, 1, "", "argument_parser"], [95, 4, 1, "", "run"], [95, 4, 1, "", "run_kqc"]], "kqcircuits.simulations": [[97, 0, 0, "-", "airbridges_sim"], [98, 0, 0, "-", "cross_section_simulation"], [99, 0, 0, "-", "empty_simulation"], [108, 0, 0, "-", "export"], [130, 0, 0, "-", "partition_region"], [131, 0, 0, "-", "port"], [132, 0, 0, "-", "post_process"], [133, 0, 0, "-", "simulation"], [134, 0, 0, "-", "single_element_simulation"], [135, 0, 0, "-", "single_xmons_full_chip_sim"], [136, 0, 0, "-", "waveguides_sim"], [137, 0, 0, "-", "xmons_direct_coupling_full_chip_sim"], [138, 0, 0, "-", "xmons_direct_coupling_sim"]], "kqcircuits.simulations.airbridges_sim": [[97, 1, 1, "", "AirbridgesSim"]], "kqcircuits.simulations.airbridges_sim.AirbridgesSim": [[97, 2, 1, "", "build"]], "kqcircuits.simulations.cross_section_simulation": [[98, 1, 1, "", "CrossSectionSimulation"]], "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation": [[98, 3, 1, "", "LIBRARY_NAME"], [98, 2, 1, "", "build"], [98, 2, 1, "", "get_dict_by_layers"], [98, 2, 1, "", "get_layers"], [98, 2, 1, "", "get_new_layers_format"], [98, 2, 1, "", "get_parameters"], [98, 2, 1, "", "get_schema"], [98, 2, 1, "", "get_sim_layer"], [98, 2, 1, "", "get_simulation_data"], [98, 2, 1, "", "process_layers"], [98, 2, 1, "", "register_cell_layers_as_sim_layers"], [98, 2, 1, "", "set_permittivity"]], "kqcircuits.simulations.empty_simulation": [[99, 1, 1, "", "EmptySimulation"]], "kqcircuits.simulations.empty_simulation.EmptySimulation": [[99, 2, 1, "", "build"]], "kqcircuits.simulations.epr": [[101, 0, 0, "-", "circular_capacitor"], [102, 0, 0, "-", "example"], [103, 0, 0, "-", "gui_config"], [104, 0, 0, "-", "smooth_capacitor"], [105, 0, 0, "-", "spiral_capacitor"], [106, 0, 0, "-", "swissmon"], [107, 0, 0, "-", "util"]], "kqcircuits.simulations.epr.circular_capacitor": [[101, 4, 1, "", "correction_cuts"], [101, 4, 1, "", "extract_circular_capacitor_from"], [101, 4, 1, "", "partition_regions"]], "kqcircuits.simulations.epr.example": [[102, 4, 1, "", "correction_cuts"], [102, 4, 1, "", "extract_from"], [102, 4, 1, "", "partition_regions"]], "kqcircuits.simulations.epr.smooth_capacitor": [[104, 4, 1, "", "correction_cuts"], [104, 4, 1, "", "partition_regions"]], "kqcircuits.simulations.epr.spiral_capacitor": [[105, 4, 1, "", "correction_cuts"], [105, 4, 1, "", "partition_regions"]], "kqcircuits.simulations.epr.swissmon": [[106, 4, 1, "", "correction_cuts"], [106, 4, 1, "", "extract_swissmon_from"], [106, 4, 1, "", "partition_regions"]], "kqcircuits.simulations.epr.util": [[107, 4, 1, "", "extract_child_simulation"], [107, 4, 1, "", "get_mer_z"], [107, 4, 1, "", "in_gui"]], "kqcircuits.simulations.export": [[109, 0, 0, "-", "ansys"], [112, 0, 0, "-", "cross_section"], [117, 0, 0, "-", "elmer"], [120, 0, 0, "-", "export_and_run"], [121, 0, 0, "-", "export_singularity"], [122, 0, 0, "-", "remote_export_and_run"], [123, 0, 0, "-", "simulation_export"], [124, 0, 0, "-", "simulation_validate"], [125, 0, 0, "-", "solution"], [126, 0, 0, "-", "sonnet"], [129, 0, 0, "-", "util"]], "kqcircuits.simulations.export.ansys": [[110, 0, 0, "-", "ansys_export"], [111, 0, 0, "-", "ansys_solution"]], "kqcircuits.simulations.export.ansys.ansys_export": [[110, 4, 1, "", "export_ansys"], [110, 4, 1, "", "export_ansys_bat"], [110, 4, 1, "", "export_ansys_json"]], "kqcircuits.simulations.export.ansys.ansys_solution": [[111, 1, 1, "", "AnsysCrossSectionSolution"], [111, 1, 1, "", "AnsysCurrentSolution"], [111, 1, 1, "", "AnsysEigenmodeSolution"], [111, 1, 1, "", "AnsysHfssSolution"], [111, 1, 1, "", "AnsysQ3dSolution"], [111, 1, 1, "", "AnsysSolution"], [111, 1, 1, "", "AnsysVoltageSolution"], [111, 4, 1, "", "get_ansys_solution"]], "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCrossSectionSolution": [[111, 3, 1, "", "ansys_tool"], [111, 3, 1, "", "frequency"], [111, 2, 1, "", "get_solution_data"], [111, 3, 1, "", "integrate_energies"], [111, 3, 1, "", "percent_error"]], "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCurrentSolution": [[111, 3, 1, "", "ansys_tool"], [111, 3, 1, "", "frequency"], [111, 2, 1, "", "get_solution_data"], [111, 3, 1, "", "integrate_energies"], [111, 3, 1, "", "integrate_magnetic_flux"], [111, 3, 1, "", "max_delta_e"]], "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution": [[111, 3, 1, "", "ansys_tool"], [111, 2, 1, "", "get_solution_data"], [111, 3, 1, "", "integrate_energies"], [111, 3, 1, "", "integrate_magnetic_flux"], [111, 3, 1, "", "max_delta_f"], [111, 3, 1, "", "min_frequency"], [111, 3, 1, "", "n_modes"]], "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution": [[111, 3, 1, "", "ansys_tool"], [111, 3, 1, "", "capacitance_export"], [111, 3, 1, "", "frequency"], [111, 2, 1, "", "get_solution_data"], [111, 3, 1, "", "integrate_energies"], [111, 3, 1, "", "integrate_magnetic_flux"], [111, 3, 1, "", "max_delta_s"], [111, 3, 1, "", "sweep_count"], [111, 3, 1, "", "sweep_enabled"], [111, 3, 1, "", "sweep_end"], [111, 3, 1, "", "sweep_start"], [111, 3, 1, "", "sweep_type"]], "kqcircuits.simulations.export.ansys.ansys_solution.AnsysQ3dSolution": [[111, 3, 1, "", "ansys_tool"], [111, 3, 1, "", "frequency"], [111, 2, 1, "", "get_solution_data"], [111, 3, 1, "", "percent_error"]], "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution": [[111, 3, 1, "", "ansys_project_template"], [111, 3, 1, "", "ansys_tool"], [111, 3, 1, "", "frequency_units"], [111, 2, 1, "", "get_solution_data"], [111, 3, 1, "", "maximum_passes"], [111, 3, 1, "", "mesh_size"], [111, 3, 1, "", "minimum_converged_passes"], [111, 3, 1, "", "minimum_passes"], [111, 3, 1, "", "percent_refinement"], [111, 3, 1, "", "simulation_flags"]], "kqcircuits.simulations.export.ansys.ansys_solution.AnsysVoltageSolution": [[111, 3, 1, "", "ansys_tool"], [111, 3, 1, "", "frequency"], [111, 2, 1, "", "get_solution_data"], [111, 3, 1, "", "integrate_energies"], [111, 3, 1, "", "integrate_magnetic_flux"], [111, 3, 1, "", "max_delta_e"]], "kqcircuits.simulations.export.cross_section": [[113, 0, 0, "-", "cross_section_export"], [114, 0, 0, "-", "cross_section_profile"], [115, 0, 0, "-", "epr_correction_export"], [116, 0, 0, "-", "xsection_export"]], "kqcircuits.simulations.export.cross_section.cross_section_export": [[113, 4, 1, "", "create_cross_sections_from_simulations"], [113, 4, 1, "", "find_layer_by_name"], [113, 4, 1, "", "free_layer_slots"], [113, 4, 1, "", "produce_intersection_shapes"], [113, 4, 1, "", "take_cross_section"], [113, 4, 1, "", "visualise_cross_section_cut_on_original_layout"]], "kqcircuits.simulations.export.cross_section.cross_section_profile": [[114, 1, 1, "", "CrossSectionProfile"], [114, 4, 1, "", "get_cross_section_profile"], [114, 4, 1, "", "get_flip_chip_cross_section_profile"], [114, 4, 1, "", "get_single_face_cross_section_profile"]], "kqcircuits.simulations.export.cross_section.cross_section_profile.CrossSectionProfile": [[114, 2, 1, "", "add_face"], [114, 2, 1, "", "change_layer"], [114, 2, 1, "", "get_dominant_layer_regex"], [114, 2, 1, "", "get_invisible_layers"], [114, 2, 1, "", "get_layers"], [114, 2, 1, "", "get_level"], [114, 2, 1, "", "level"], [114, 2, 1, "", "priority"]], "kqcircuits.simulations.export.cross_section.epr_correction_export": [[115, 4, 1, "", "get_epr_correction_elmer_solution"], [115, 4, 1, "", "get_epr_correction_simulations"]], "kqcircuits.simulations.export.cross_section.xsection_export": [[116, 4, 1, "", "create_xsections_from_simulations"], [116, 4, 1, "", "xsection_call"]], "kqcircuits.simulations.export.elmer": [[118, 0, 0, "-", "elmer_export"], [119, 0, 0, "-", "elmer_solution"]], "kqcircuits.simulations.export.elmer.elmer_export": [[118, 4, 1, "", "export_elmer"], [118, 4, 1, "", "export_elmer_json"], [118, 4, 1, "", "export_elmer_script"]], "kqcircuits.simulations.export.elmer.elmer_solution": [[119, 1, 1, "", "ElmerCapacitanceSolution"], [119, 1, 1, "", "ElmerCrossSectionSolution"], [119, 1, 1, "", "ElmerEPR3DSolution"], [119, 1, 1, "", "ElmerSolution"], [119, 1, 1, "", "ElmerVectorHelmholtzSolution"], [119, 4, 1, "", "get_elmer_solution"]], "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCapacitanceSolution": [[119, 3, 1, "", "convergence_tolerance"], [119, 3, 1, "", "integrate_energies"], [119, 3, 1, "", "linear_system_method"], [119, 3, 1, "", "linear_system_preconditioning"], [119, 3, 1, "", "max_iterations"], [119, 3, 1, "", "p_element_order"], [119, 3, 1, "", "tool"]], "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution": [[119, 3, 1, "", "boundary_conditions"], [119, 3, 1, "", "convergence_tolerance"], [119, 3, 1, "", "integrate_energies"], [119, 3, 1, "", "linear_system_method"], [119, 3, 1, "", "linear_system_preconditioning"], [119, 3, 1, "", "max_iterations"], [119, 3, 1, "", "p_element_order"], [119, 3, 1, "", "run_inductance_sim"], [119, 3, 1, "", "tool"], [119, 3, 1, "", "voltage_excitations"]], "kqcircuits.simulations.export.elmer.elmer_solution.ElmerEPR3DSolution": [[119, 3, 1, "", "convergence_tolerance"], [119, 3, 1, "", "linear_system_method"], [119, 3, 1, "", "linear_system_preconditioning"], [119, 3, 1, "", "max_iterations"], [119, 3, 1, "", "p_element_order"], [119, 3, 1, "", "tool"], [119, 3, 1, "", "voltage_excitations"]], "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution": [[119, 2, 1, "", "get_solution_data"], [119, 3, 1, "", "is_axisymmetric"], [119, 3, 1, "", "max_error_scale"], [119, 3, 1, "", "max_outlier_fraction"], [119, 3, 1, "", "maximum_passes"], [119, 3, 1, "", "mesh_levels"], [119, 3, 1, "", "mesh_size"], [119, 3, 1, "", "minimum_passes"], [119, 3, 1, "", "percent_error"], [119, 3, 1, "", "tool"], [119, 3, 1, "", "vtu_output"]], "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution": [[119, 3, 1, "", "conductivity"], [119, 3, 1, "", "convergence_tolerance"], [119, 3, 1, "", "frequency"], [119, 3, 1, "", "frequency_batch"], [119, 3, 1, "", "london_penetration_depth"], [119, 3, 1, "", "max_delta_s"], [119, 3, 1, "", "max_iterations"], [119, 3, 1, "", "nested_iteration"], [119, 3, 1, "", "quadratic_approximation"], [119, 3, 1, "", "second_kind_basis"], [119, 3, 1, "", "sweep_type"], [119, 3, 1, "", "tool"], [119, 3, 1, "", "use_av"]], "kqcircuits.simulations.export.export_and_run": [[120, 4, 1, "", "export_and_run"], [120, 4, 1, "", "run_export_script"], [120, 4, 1, "", "run_simulations"]], "kqcircuits.simulations.export.export_singularity": [[121, 4, 1, "", "export_singularity"]], "kqcircuits.simulations.export.remote_export_and_run": [[122, 4, 1, "", "remote_export_and_run"], [122, 4, 1, "", "remote_run_only"]], "kqcircuits.simulations.export.simulation_export": [[123, 4, 1, "", "copy_content_into_directory"], [123, 4, 1, "", "cross_combine"], [123, 4, 1, "", "cross_sweep_simulation"], [123, 4, 1, "", "cross_sweep_solution"], [123, 4, 1, "", "export_simulation_json"], [123, 4, 1, "", "export_simulation_oas"], [123, 4, 1, "", "get_combined_parameters"], [123, 4, 1, "", "get_post_process_command_lines"], [123, 4, 1, "", "sweep_simulation"], [123, 4, 1, "", "sweep_solution"]], "kqcircuits.simulations.export.simulation_validate": [[124, 6, 1, "", "ValidateSimError"], [124, 4, 1, "", "flux_integration_layer_exists_if_needed"], [124, 4, 1, "", "get_port_names"], [124, 4, 1, "", "has_edgeport_when_forbidden"], [124, 4, 1, "", "has_no_ports_when_required"], [124, 4, 1, "", "simulation_and_solution_types_match"], [124, 4, 1, "", "validate_simulation"]], "kqcircuits.simulations.export.solution": [[125, 1, 1, "", "Solution"]], "kqcircuits.simulations.export.solution.Solution": [[125, 2, 1, "", "get_parameters"], [125, 3, 1, "", "name"]], "kqcircuits.simulations.export.sonnet": [[127, 0, 0, "-", "parser"], [128, 0, 0, "-", "sonnet_export"]], "kqcircuits.simulations.export.sonnet.parser": [[127, 4, 1, "", "apply_template"], [127, 4, 1, "", "box"], [127, 4, 1, "", "control"], [127, 4, 1, "", "polygon_head"], [127, 4, 1, "", "polygons"], [127, 4, 1, "", "port"], [127, 4, 1, "", "refplane"], [127, 4, 1, "", "refplanes"], [127, 4, 1, "", "symmetry"], [127, 4, 1, "", "via"]], "kqcircuits.simulations.export.sonnet.sonnet_export": [[128, 4, 1, "", "export_sonnet"], [128, 4, 1, "", "export_sonnet_son"], [128, 4, 1, "", "poly_and_edge_indices"]], "kqcircuits.simulations.export.util": [[129, 4, 1, "", "find_edge_from_point_in_polygons"], [129, 4, 1, "", "get_enclosing_polygon"]], "kqcircuits.simulations.partition_region": [[130, 1, 1, "", "PartitionRegion"], [130, 4, 1, "", "get_list_of_two"]], "kqcircuits.simulations.partition_region.PartitionRegion": [[130, 2, 1, "", "limit_box"], [130, 2, 1, "", "limit_face"]], "kqcircuits.simulations.port": [[131, 1, 1, "", "EdgePort"], [131, 1, 1, "", "InternalPort"], [131, 1, 1, "", "Port"]], "kqcircuits.simulations.port.InternalPort": [[131, 2, 1, "", "get_etch_polygon"]], "kqcircuits.simulations.port.Port": [[131, 2, 1, "", "as_dict"]], "kqcircuits.simulations.post_process": [[132, 1, 1, "", "PostProcess"]], "kqcircuits.simulations.post_process.PostProcess": [[132, 2, 1, "", "get_command_line"]], "kqcircuits.simulations.simulation": [[133, 1, 1, "", "Simulation"], [133, 4, 1, "", "get_simulation_layer_by_name"], [133, 4, 1, "", "to_1d_list"]], "kqcircuits.simulations.simulation.Simulation": [[133, 3, 1, "", "LIBRARY_NAME"], [133, 2, 1, "", "add_element"], [133, 2, 1, "", "build"], [133, 2, 1, "", "create_simulation_layers"], [133, 2, 1, "", "delete_instances"], [133, 2, 1, "", "etched_line"], [133, 2, 1, "", "face"], [133, 2, 1, "", "face_stack_list_of_lists"], [133, 2, 1, "", "face_z_levels"], [133, 2, 1, "", "from_cell"], [133, 2, 1, "", "get_layer"], [133, 2, 1, "", "get_layers"], [133, 2, 1, "", "get_parameters"], [133, 2, 1, "", "get_partition_regions"], [133, 2, 1, "", "get_port_data"], [133, 2, 1, "", "get_refpoints"], [133, 2, 1, "", "get_schema"], [133, 2, 1, "", "get_simulation_data"], [133, 2, 1, "", "ground_grid_region"], [133, 2, 1, "", "insert_cell"], [133, 2, 1, "", "insert_layer"], [133, 2, 1, "", "insert_layers_between_faces"], [133, 2, 1, "", "insert_stacked_up_layers"], [133, 2, 1, "", "is_metal"], [133, 2, 1, "", "ith_value"], [133, 2, 1, "", "pcell_params_by_name"], [133, 3, 1, "", "ports"], [133, 2, 1, "", "produce_layers"], [133, 2, 1, "", "produce_waveguide_to_port"], [133, 2, 1, "", "region_from_layer"], [133, 2, 1, "", "simplified_region"], [133, 2, 1, "", "split_metal_layers_by_excitation"], [133, 2, 1, "", "visualise_region"], [133, 2, 1, "", "warn_of_small_shapes"]], "kqcircuits.simulations.single_element_simulation": [[134, 4, 1, "", "get_single_element_sim_class"]], "kqcircuits.simulations.single_xmons_full_chip_sim": [[135, 1, 1, "", "SingleXmonsFullChipSim"]], "kqcircuits.simulations.single_xmons_full_chip_sim.SingleXmonsFullChipSim": [[135, 2, 1, "", "build"]], "kqcircuits.simulations.waveguides_sim": [[136, 1, 1, "", "WaveGuidesSim"]], "kqcircuits.simulations.waveguides_sim.WaveGuidesSim": [[136, 2, 1, "", "build"], [136, 2, 1, "", "produce_ground_bumps"], [136, 2, 1, "", "produce_guides"]], "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim": [[137, 1, 1, "", "XMonsDirectCouplingFullChipSim"]], "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim": [[137, 2, 1, "", "build"], [137, 2, 1, "", "produce_launcher"], [137, 2, 1, "", "produce_launchers_SMA8"], [137, 2, 1, "", "produce_qubit"], [137, 2, 1, "", "produce_readout_resonator"], [137, 2, 1, "", "produce_waveguide"]], "kqcircuits.simulations.xmons_direct_coupling_sim": [[138, 1, 1, "", "XMonsDirectCouplingSim"]], "kqcircuits.simulations.xmons_direct_coupling_sim.XMonsDirectCouplingSim": [[138, 2, 1, "", "build"], [138, 2, 1, "", "produce_qubits"]], "kqcircuits.test_structures": [[140, 0, 0, "-", "airbridge_dc"], [141, 0, 0, "-", "cross_test"], [142, 0, 0, "-", "junction_test_pads"], [145, 0, 0, "-", "stripes_test"], [146, 0, 0, "-", "stripes_test_increasing_width"], [147, 0, 0, "-", "test_structure"], [148, 0, 0, "-", "tsv_test_pattern"]], "kqcircuits.test_structures.airbridge_dc": [[140, 1, 1, "", "AirbridgeDC"]], "kqcircuits.test_structures.airbridge_dc.AirbridgeDC": [[140, 2, 1, "", "build"]], "kqcircuits.test_structures.cross_test": [[141, 1, 1, "", "CrossTest"]], "kqcircuits.test_structures.cross_test.CrossTest": [[141, 2, 1, "", "build"]], "kqcircuits.test_structures.junction_test_pads": [[143, 0, 0, "-", "junction_test_pads"], [144, 0, 0, "-", "junction_test_pads_simple"]], "kqcircuits.test_structures.junction_test_pads.junction_test_pads": [[143, 1, 1, "", "JunctionTestPads"]], "kqcircuits.test_structures.junction_test_pads.junction_test_pads.JunctionTestPads": [[143, 2, 1, "", "create"], [143, 3, 1, "", "default_type"], [143, 2, 1, "", "produce_squid"]], "kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple": [[144, 1, 1, "", "JunctionTestPadsSimple"]], "kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple.JunctionTestPadsSimple": [[144, 2, 1, "", "build"]], "kqcircuits.test_structures.stripes_test": [[145, 1, 1, "", "StripesTest"]], "kqcircuits.test_structures.stripes_test.StripesTest": [[145, 2, 1, "", "build"]], "kqcircuits.test_structures.stripes_test_increasing_width": [[146, 1, 1, "", "StripesTestIncreasingWidth"]], "kqcircuits.test_structures.stripes_test_increasing_width.StripesTestIncreasingWidth": [[146, 2, 1, "", "build"]], "kqcircuits.test_structures.test_structure": [[147, 1, 1, "", "TestStructure"]], "kqcircuits.test_structures.test_structure.TestStructure": [[147, 3, 1, "", "LIBRARY_DESCRIPTION"], [147, 3, 1, "", "LIBRARY_NAME"], [147, 3, 1, "", "LIBRARY_PATH"], [147, 2, 1, "", "produce_etched_region"], [147, 2, 1, "", "produce_four_point_pads"], [147, 2, 1, "", "produce_pad"]], "kqcircuits.test_structures.tsv_test_pattern": [[148, 1, 1, "", "TsvTestPattern"]], "kqcircuits.test_structures.tsv_test_pattern.TsvTestPattern": [[148, 2, 1, "", "build"]], "kqcircuits.util": [[150, 0, 0, "-", "area"], [151, 0, 0, "-", "count_instances"], [152, 0, 0, "-", "coupler_lib"], [153, 0, 0, "-", "deep_delete"], [154, 0, 0, "-", "defaults_helper"], [155, 0, 0, "-", "dependencies"], [156, 0, 0, "-", "edit_node_plugin"], [157, 0, 0, "-", "export_helper"], [158, 0, 0, "-", "geometry_helper"], [159, 0, 0, "-", "geometry_json_encoder"], [160, 0, 0, "-", "groundgrid"], [161, 0, 0, "-", "gui_helper"], [162, 0, 0, "-", "import_helper"], [163, 0, 0, "-", "label"], [164, 0, 0, "-", "label_polygons"], [165, 0, 0, "-", "layout_to_code"], [166, 0, 0, "-", "library_helper"], [167, 0, 0, "-", "load_save_layout"], [168, 0, 0, "-", "log_router"], [169, 0, 0, "-", "merge"], [170, 0, 0, "-", "netlist_extraction"], [171, 0, 0, "-", "netlist_graph"], [172, 0, 0, "-", "parameters"], [173, 0, 0, "-", "plugin_startup"], [174, 0, 0, "-", "refpoints"], [175, 0, 0, "-", "replace_junctions"], [176, 0, 0, "-", "symmetric_polygons"]], "kqcircuits.util.area": [[150, 1, 1, "", "AreaReceiver"], [150, 4, 1, "", "get_area_and_density"]], "kqcircuits.util.area.AreaReceiver": [[150, 2, 1, "", "put"]], "kqcircuits.util.count_instances": [[151, 4, 1, "", "count_instances_in_cell"]], "kqcircuits.util.coupler_lib": [[152, 4, 1, "", "cap_params"]], "kqcircuits.util.deep_delete": [[153, 4, 1, "", "deep_delete_all"], [153, 4, 1, "", "deep_delete_pcells"]], "kqcircuits.util.defaults_helper": [[154, 4, 1, "", "find_ansys_executable"]], "kqcircuits.util.dependencies": [[155, 4, 1, "", "install_kqc_gui_dependencies"]], "kqcircuits.util.edit_node_plugin": [[156, 1, 1, "", "EditNodePlugin"], [156, 1, 1, "", "EditNodePluginFactory"]], "kqcircuits.util.edit_node_plugin.EditNodePlugin": [[156, 2, 1, "", "activated"], [156, 2, 1, "", "create_dialog"], [156, 2, 1, "", "deactivated"], [156, 2, 1, "", "deselect"], [156, 2, 1, "", "has_tracking_position"], [156, 2, 1, "", "mouse_click_event"], [156, 2, 1, "", "mouse_moved_event"], [156, 2, 1, "", "select"], [156, 2, 1, "", "tracking_position"], [156, 2, 1, "", "update"], [156, 2, 1, "", "update_form_from_node"], [156, 2, 1, "", "update_node_from_form"]], "kqcircuits.util.edit_node_plugin.EditNodePluginFactory": [[156, 2, 1, "", "create_plugin"]], "kqcircuits.util.export_helper": [[157, 4, 1, "", "create_or_empty_tmp_directory"], [157, 4, 1, "", "export_drc_report"], [157, 4, 1, "", "generate_probepoints_from_file"], [157, 4, 1, "", "generate_probepoints_json"], [157, 4, 1, "", "get_active_or_new_layout"], [157, 4, 1, "", "get_klayout_version"], [157, 4, 1, "", "get_simulation_directory"], [157, 4, 1, "", "open_with_klayout_or_default_application"], [157, 4, 1, "", "write_commit_reference_file"], [157, 4, 1, "", "write_export_machine_versions_file"]], "kqcircuits.util.geometry_helper": [[158, 4, 1, "", "arc_points"], [158, 4, 1, "", "bezier_points"], [158, 4, 1, "", "bspline_points"], [158, 4, 1, "", "circle_polygon"], [158, 4, 1, "", "force_rounded_corners"], [158, 4, 1, "", "get_angle"], [158, 4, 1, "", "get_cell_path_length"], [158, 4, 1, "", "get_direction"], [158, 4, 1, "", "get_object_path_length"], [158, 4, 1, "", "is_clockwise"], [158, 4, 1, "", "merge_points_and_match_on_edges"], [158, 4, 1, "", "point_shift_along_vector"], [158, 4, 1, "", "region_with_merged_points"], [158, 4, 1, "", "region_with_merged_polygons"], [158, 4, 1, "", "simple_region"], [158, 4, 1, "", "vector_length_and_direction"]], "kqcircuits.util.geometry_json_encoder": [[159, 1, 1, "", "GeometryJsonDecoder"], [159, 1, 1, "", "GeometryJsonEncoder"], [159, 4, 1, "", "decode_dict_as_python_obj"], [159, 4, 1, "", "encode_python_obj_as_dict"]], "kqcircuits.util.geometry_json_encoder.GeometryJsonEncoder": [[159, 2, 1, "", "default"]], "kqcircuits.util.groundgrid": [[160, 4, 1, "", "make_grid"]], "kqcircuits.util.gui_helper": [[161, 4, 1, "", "get_all_node_elements"], [161, 4, 1, "", "get_nodes_near_position"], [161, 4, 1, "", "get_valid_node_elements"], [161, 4, 1, "", "node_from_text"], [161, 4, 1, "", "node_to_text"], [161, 4, 1, "", "replace_node"]], "kqcircuits.util.import_helper": [[162, 4, 1, "", "module_from_file"]], "kqcircuits.util.label": [[163, 1, 1, "", "LabelOrigin"], [163, 4, 1, "", "produce_label"]], "kqcircuits.util.label.LabelOrigin": [[163, 3, 1, "", "BOTTOMLEFT"], [163, 3, 1, "", "BOTTOMRIGHT"], [163, 3, 1, "", "TOPLEFT"], [163, 3, 1, "", "TOPRIGHT"]], "kqcircuits.util.label_polygons": [[164, 4, 1, "", "get_text_polygon"], [164, 4, 1, "", "load_font_polygons"]], "kqcircuits.util.layout_to_code": [[165, 4, 1, "", "convert_cells_to_code"], [165, 4, 1, "", "extract_pcell_data_from_views"], [165, 4, 1, "", "get_node_params"], [165, 4, 1, "", "restore_pcells_to_views"]], "kqcircuits.util.library_helper": [[166, 4, 1, "", "delete_all_libraries"], [166, 4, 1, "", "delete_library"], [166, 4, 1, "", "element_by_class_name"], [166, 4, 1, "", "get_library_paths"], [166, 4, 1, "", "load_libraries"], [166, 4, 1, "", "to_library_name"], [166, 4, 1, "", "to_module_name"]], "kqcircuits.util.load_save_layout": [[167, 4, 1, "", "load_layout"], [167, 4, 1, "", "save_layout"]], "kqcircuits.util.log_router": [[168, 4, 1, "", "route_log"]], "kqcircuits.util.merge": [[169, 4, 1, "", "convert_child_instances_to_static"], [169, 4, 1, "", "merge_layers"], [169, 4, 1, "", "merge_layout_layers_on_face"]], "kqcircuits.util.netlist_extraction": [[170, 4, 1, "", "export_cell_netlist"], [170, 4, 1, "", "extract_circuits"], [170, 4, 1, "", "extract_nets"]], "kqcircuits.util.netlist_graph": [[171, 4, 1, "", "draw_graph"], [171, 4, 1, "", "network_as_graph"]], "kqcircuits.util.parameters": [[172, 1, 1, "", "Param"], [172, 4, 1, "", "add_parameter"], [172, 4, 1, "", "add_parameters_from"], [172, 1, 1, "", "pdt"]], "kqcircuits.util.parameters.Param": [[172, 2, 1, "", "get_all"]], "kqcircuits.util.parameters.pdt": [[172, 3, 1, "", "TypeBoolean"], [172, 3, 1, "", "TypeDouble"], [172, 3, 1, "", "TypeInt"], [172, 3, 1, "", "TypeLayer"], [172, 3, 1, "", "TypeList"], [172, 3, 1, "", "TypeNone"], [172, 3, 1, "", "TypeShape"], [172, 3, 1, "", "TypeString"]], "kqcircuits.util.plugin_startup": [[173, 4, 1, "", "register_plugins"]], "kqcircuits.util.refpoints": [[174, 1, 1, "", "JunctionSimPort"], [174, 1, 1, "", "RefpointToEdgePort"], [174, 1, 1, "", "RefpointToInternalPort"], [174, 1, 1, "", "RefpointToSimPort"], [174, 1, 1, "", "Refpoints"], [174, 1, 1, "", "WaveguideToSimPort"]], "kqcircuits.util.refpoints.JunctionSimPort": [[174, 3, 1, "", "face"], [174, 3, 1, "", "floating"], [174, 3, 1, "", "other_refpoint"], [174, 3, 1, "", "refpoint"]], "kqcircuits.util.refpoints.RefpointToSimPort": [[174, 3, 1, "", "face"], [174, 3, 1, "", "refpoint"]], "kqcircuits.util.refpoints.Refpoints": [[174, 3, 1, "", "cell"], [174, 2, 1, "", "dict"], [174, 2, 1, "", "items"], [174, 2, 1, "", "keys"], [174, 3, 1, "", "layer"], [174, 3, 1, "", "rec_levels"], [174, 3, 1, "", "trans"], [174, 2, 1, "", "values"]], "kqcircuits.util.refpoints.WaveguideToSimPort": [[174, 3, 1, "", "a"], [174, 3, 1, "", "airbridge"], [174, 3, 1, "", "b"], [174, 3, 1, "", "deembed_cross_section"], [174, 3, 1, "", "face"], [174, 3, 1, "", "over_etching"], [174, 3, 1, "", "refpoint"], [174, 3, 1, "", "side"], [174, 3, 1, "", "term1"], [174, 3, 1, "", "towards"], [174, 3, 1, "", "turn_radius"], [174, 3, 1, "", "use_internal_ports"], [174, 3, 1, "", "waveguide_length"]], "kqcircuits.util.replace_junctions": [[175, 1, 1, "", "JunctionEntry"], [175, 4, 1, "", "check_static_cell_has_junctions"], [175, 4, 1, "", "convert_cells_to_static"], [175, 4, 1, "", "copy_one_layer_of_cell"], [175, 4, 1, "", "extract_junctions"], [175, 4, 1, "", "get_tuned_junction_json"], [175, 4, 1, "", "place_junctions"], [175, 4, 1, "", "replace_squid"], [175, 4, 1, "", "replace_squids"]], "kqcircuits.util.symmetric_polygons": [[176, 4, 1, "", "polygon_with_hsym"], [176, 4, 1, "", "polygon_with_sym"], [176, 4, 1, "", "polygon_with_vsym"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function", "5": "py:property", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"about": 0, "api": 1, "document": [1, 182, 203], "modul": [1, 2, 28, 30, 40, 44, 51, 60, 70, 79, 82, 88, 96, 108, 109, 112, 117, 126, 139, 142, 149, 185], "content": [1, 2, 28, 30, 40, 44, 51, 60, 70, 79, 82, 88, 96, 108, 109, 112, 117, 126, 139, 142, 149], "kqcircuit": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 185, 190, 197, 202, 210], "chip": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 191, 198, 199, 211, 214], "airbridge_cross": 3, "airbridge_dc_test": 4, "crossing_twofac": 6, "daisy_woven": 7, "dc_test": 8, "demo": [9, 191], "demo_twofac": 10, "empti": 11, "junction_test": 12, "junction_test2": 13, "launcher": [14, 49], "lithography_test": 15, "lithography_test_twofac": 16, "munch_qubit": 17, "quality_factor": 18, "quality_factor_twofac": 19, "sample_holder_test": 20, "shape": [21, 191, 195], "simpl": 22, "single_xmon": 23, "stripe": 24, "tsv_test": 25, "xmons_direct_coupl": 26, "default": 27, "element": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 179, 187, 188, 189, 191, 195, 198, 199, 200, 211, 219], "airbridge_connect": 29, "airbridg": [30, 31, 32, 33], "airbridge_multi_fac": 32, "airbridge_rectangular": 33, "capacitive_x_coupl": 34, "chip_fram": 35, "circular_capacitor": [36, 101], "finger_capacitor_squar": 38, "finger_capacitor_tap": 39, "flip_chip_connector": [40, 41, 42, 43], "flip_chip_connector_dc": 42, "flip_chip_connector_rf": 43, "fluxlin": [44, 45, 46, 47], "fluxline_standard": 46, "fluxline_straight": 47, "hanger_reson": 48, "launcher_dc": 50, "marker": [51, 52, 53, 54], "marker_standard": 53, "mask_marker_fc": 54, "meander": 55, "quarter_wave_cpw_reson": 56, "smooth_capacitor": [57, 104], "spiral_capacitor": [58, 105], "spiral_resonator_polygon": 59, "tsv": [60, 61, 62, 63], "tsv_ellips": 62, "tsv_standard": 63, "waveguide_composit": 64, "waveguide_coplanar": 65, "waveguide_coplanar_curv": 66, "waveguide_coplanar_splitt": 67, "waveguide_coplanar_straight": 68, "waveguide_coplanar_tap": 69, "junction": [70, 71, 72, 73, 74, 75, 76], "manhattan": 72, "manhattan_single_junct": 73, "no_squid": 74, "sim": 75, "squid": 76, "klayout_view": 77, "layer_clust": 78, "layer_config": [79, 80, 81], "default_layer_config": 80, "example_layer_config": 81, "mask": [82, 83, 84, 85, 86, 214], "mask_export": 83, "mask_layout": 84, "mask_set": 85, "multi_face_mask_layout": 86, "pya_resolv": 87, "qubit": [88, 89, 90, 91, 92, 93, 94], "circular_transmon_single_island": 89, "concentric_transmon": 90, "double_pad": 91, "double_pads_splin": 92, "swissmon": [94, 106], "run": [95, 213, 216], "simul": [96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 215, 218, 219, 221], "airbridges_sim": 97, "cross_section_simul": 98, "empty_simul": 99, "epr": [100, 101, 102, 103, 104, 105, 106, 107], "exampl": [102, 198, 213], "gui_config": 103, "util": [107, 129, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 211], "export": [108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 214, 216, 217, 220], "ansi": [109, 110, 111, 220], "ansys_export": 110, "ansys_solut": 111, "cross_sect": [112, 113, 114, 115, 116], "cross_section_export": 113, "cross_section_profil": 114, "epr_correction_export": 115, "xsection_export": 116, "elmer": [117, 118, 119, 215, 217, 220], "elmer_export": 118, "elmer_solut": 119, "export_and_run": 120, "export_singular": 121, "remote_export_and_run": 122, "simulation_export": 123, "simulation_valid": 124, "solut": 125, "sonnet": [126, 127, 128, 220], "parser": 127, "sonnet_export": 128, "partition_region": 130, "port": [131, 201, 219], "post_process": 132, "single_element_simul": 134, "single_xmons_full_chip_sim": 135, "waveguides_sim": 136, "xmons_direct_coupling_full_chip_sim": 137, "xmons_direct_coupling_sim": 138, "test_structur": [139, 140, 141, 142, 143, 144, 145, 146, 147, 148], "airbridge_dc": 140, "cross_test": 141, "junction_test_pad": [142, 143, 144], "junction_test_pads_simpl": 144, "stripes_test": 145, "stripes_test_increasing_width": 146, "tsv_test_pattern": 148, "area": 150, "count_inst": 151, "coupler_lib": 152, "deep_delet": 153, "defaults_help": 154, "depend": [155, 184, 185], "edit_node_plugin": 156, "export_help": 157, "geometry_help": 158, "geometry_json_encod": 159, "groundgrid": 160, "gui_help": 161, "import_help": 162, "label": 163, "label_polygon": 164, "layout_to_cod": 165, "library_help": 166, "load_save_layout": 167, "log_rout": 168, "merg": 169, "netlist_extract": 170, "netlist_graph": 171, "paramet": [172, 179, 188, 191, 200, 218], "plugin_startup": 173, "refpoint": [174, 201], "replace_junct": 175, "symmetric_polygon": 176, "cite": 177, "contribut": 178, "version": [178, 206], "architectur": 179, "pcell": 179, "librari": [179, 200, 213], "pya": 179, "resolv": 179, "code": [180, 189, 200, 210], "style": 180, "contain": 181, "cli": 181, "usag": [181, 185, 223], "docker": 181, "ci": 181, "singular": 181, "develop": [183, 184, 185, 213], "guid": [183, 212], "gui": [184, 189, 193, 210, 220], "setup": [184, 185], "prerequisit": [184, 185], "python": [184, 185, 196, 206], "sourc": 184, "instal": [184, 185, 202, 204, 205, 206], "unlink": 184, "updat": [184, 185], "secondari": 184, "manual": [184, 191, 206], "symlink": 184, "linux": 184, "maco": 184, "window": 184, "standalon": 185, "1": 185, "basic": [185, 214], "2": 185, "reproduc": 185, "secur": 185, "3": 185, "exclus": 185, "environ": 185, "extens": 185, "pypi": 185, "jupyt": 185, "notebook": 185, "requir": 185, "test": 186, "unit": 186, "first": [187, 213], "look": 187, "around": 187, "introduct": 187, "place": [188, 189, 195], "modifi": [188, 191, 192, 214], "convert": [189, 191], "us": [190, 192, 195, 201, 213], "command": 190, "hotkei": 190, "menu": 190, "workflow": [191, 196, 215], "tutori": [191, 214], "gener": [191, 211, 219], "cell": 191, "static": 191, "chang": 191, "waveguid": [191, 192], "locat": 191, "an": [191, 198, 211], "add": 191, "new": [191, 209, 213], "ad": [191, 209, 214], "ground": [191, 214], "grid": [191, 214], "edit": 192, "waveguidecomposit": 192, "node": 192, "featur": [193, 218], "get": [194, 199], "start": [194, 199], "face": [195, 209, 214, 219], "creat": [195, 210, 213], "layer": [197, 209], "detail": 198, "defin": [198, 199], "insert": 198, "custom": [199, 209], "structur": [200, 211], "class": [200, 219], "build": 200, "salt": 202, "packag": [202, 206], "set": 202, "up": 202, "user": [202, 212], "directori": 202, "upgrad": 202, "remov": 202, "releas": 202, "note": 202, "kqc": [203, 210], "logo": 203, "indic": 203, "tabl": 203, "klayout": [205, 206, 210, 213, 220], "known": 206, "issu": 206, "differ": 206, "support": 207, "trademark": 208, "configur": 209, "sampl": 209, "holder": 209, "file": [209, 210, 211], "cross": [210, 218], "section": [210, 218], "In": 210, "xsection": 210, "tool": [210, 221], "call": 210, "process": 210, "x": 210, "miscellan": 211, "system": 211, "hierarchi": 211, "open": 211, "from": [211, 220], "id": 211, "macro": 213, "script": [213, 214], "interact": 213, "applic": 213, "panel": 213, "access": 213, "current": 213, "activ": 213, "klayoutview": 213, "debugg": 213, "reload": 213, "multi": 214, "composit": 214, "map": 214, "remot": 215, "one": 216, "line": 216, "gmsh": 217, "": 218, "matrix": 218, "capacit": 218, "eigenmod": 218, "energi": 218, "integr": 218, "particip": 218, "ratio": 218, "pyepr": 218, "object": 219, "The": 219, "box": 219, "stack": 219, "subclass": 219, "singl": 219, "geometri": [219, 220], "sweep": 219, "function": 220, "extern": 221, "terminologi": 222}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"About": [[0, "about"]], "API documentation": [[1, "api-documentation"]], "Module contents": [[1, "module-kqcircuits"], [2, "module-kqcircuits.chips"], [28, "module-kqcircuits.elements"], [30, "module-kqcircuits.elements.airbridges"], [40, "module-kqcircuits.elements.flip_chip_connectors"], [44, "module-kqcircuits.elements.fluxlines"], [51, "module-kqcircuits.elements.markers"], [60, "module-kqcircuits.elements.tsvs"], [70, "module-kqcircuits.junctions"], [79, "module-kqcircuits.layer_config"], [82, "module-kqcircuits.masks"], [88, "module-kqcircuits.qubits"], [96, "module-kqcircuits.simulations"], [108, "module-kqcircuits.simulations.export"], [109, "module-kqcircuits.simulations.export.ansys"], [112, "module-kqcircuits.simulations.export.cross_section"], [117, "module-kqcircuits.simulations.export.elmer"], [126, "module-kqcircuits.simulations.export.sonnet"], [139, "module-kqcircuits.test_structures"], [142, "module-kqcircuits.test_structures.junction_test_pads"], [149, "module-kqcircuits.util"]], "kqcircuits.chips": [[2, "kqcircuits-chips"]], "kqcircuits.chips.airbridge_crossings": [[3, "module-kqcircuits.chips.airbridge_crossings"]], "kqcircuits.chips.airbridge_dc_test": [[4, "module-kqcircuits.chips.airbridge_dc_test"]], "kqcircuits.chips.chip": [[5, "module-kqcircuits.chips.chip"]], "kqcircuits.chips.crossing_twoface": [[6, "module-kqcircuits.chips.crossing_twoface"]], "kqcircuits.chips.daisy_woven": [[7, "module-kqcircuits.chips.daisy_woven"]], "kqcircuits.chips.dc_test": [[8, "module-kqcircuits.chips.dc_test"]], "kqcircuits.chips.demo": [[9, "module-kqcircuits.chips.demo"]], "kqcircuits.chips.demo_twoface": [[10, "module-kqcircuits.chips.demo_twoface"]], "kqcircuits.chips.empty": [[11, "module-kqcircuits.chips.empty"]], "kqcircuits.chips.junction_test": [[12, "module-kqcircuits.chips.junction_test"]], "kqcircuits.chips.junction_test2": [[13, "module-kqcircuits.chips.junction_test2"]], "kqcircuits.chips.launchers": [[14, "module-kqcircuits.chips.launchers"]], "kqcircuits.chips.lithography_test": [[15, "module-kqcircuits.chips.lithography_test"]], "kqcircuits.chips.lithography_test_twoface": [[16, "module-kqcircuits.chips.lithography_test_twoface"]], "kqcircuits.chips.munch_qubits": [[17, "module-kqcircuits.chips.munch_qubits"]], "kqcircuits.chips.quality_factor": [[18, "module-kqcircuits.chips.quality_factor"]], "kqcircuits.chips.quality_factor_twoface": [[19, "module-kqcircuits.chips.quality_factor_twoface"]], "kqcircuits.chips.sample_holder_test": [[20, "module-kqcircuits.chips.sample_holder_test"]], "kqcircuits.chips.shaping": [[21, "module-kqcircuits.chips.shaping"]], "kqcircuits.chips.simple": [[22, "module-kqcircuits.chips.simple"]], "kqcircuits.chips.single_xmons": [[23, "module-kqcircuits.chips.single_xmons"]], "kqcircuits.chips.stripes": [[24, "module-kqcircuits.chips.stripes"]], "kqcircuits.chips.tsv_test": [[25, "module-kqcircuits.chips.tsv_test"]], "kqcircuits.chips.xmons_direct_coupling": [[26, "module-kqcircuits.chips.xmons_direct_coupling"]], "kqcircuits.defaults": [[27, "module-kqcircuits.defaults"]], "kqcircuits.elements": [[28, "kqcircuits-elements"]], "kqcircuits.elements.airbridge_connection": [[29, "module-kqcircuits.elements.airbridge_connection"]], "kqcircuits.elements.airbridges": [[30, "kqcircuits-elements-airbridges"]], "kqcircuits.elements.airbridges.airbridge": [[31, "module-kqcircuits.elements.airbridges.airbridge"]], "kqcircuits.elements.airbridges.airbridge_multi_face": [[32, "module-kqcircuits.elements.airbridges.airbridge_multi_face"]], "kqcircuits.elements.airbridges.airbridge_rectangular": [[33, "module-kqcircuits.elements.airbridges.airbridge_rectangular"]], "kqcircuits.elements.capacitive_x_coupler": [[34, "module-kqcircuits.elements.capacitive_x_coupler"]], "kqcircuits.elements.chip_frame": [[35, "module-kqcircuits.elements.chip_frame"]], "kqcircuits.elements.circular_capacitor": [[36, "module-kqcircuits.elements.circular_capacitor"]], "kqcircuits.elements.element": [[37, "module-kqcircuits.elements.element"]], "kqcircuits.elements.finger_capacitor_square": [[38, "module-kqcircuits.elements.finger_capacitor_square"]], "kqcircuits.elements.finger_capacitor_taper": [[39, "module-kqcircuits.elements.finger_capacitor_taper"]], "kqcircuits.elements.flip_chip_connectors": [[40, "kqcircuits-elements-flip-chip-connectors"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector": [[41, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc": [[42, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf": [[43, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf"]], "kqcircuits.elements.fluxlines": [[44, "kqcircuits-elements-fluxlines"]], "kqcircuits.elements.fluxlines.fluxline": [[45, "module-kqcircuits.elements.fluxlines.fluxline"]], "kqcircuits.elements.fluxlines.fluxline_standard": [[46, "module-kqcircuits.elements.fluxlines.fluxline_standard"]], "kqcircuits.elements.fluxlines.fluxline_straight": [[47, "module-kqcircuits.elements.fluxlines.fluxline_straight"]], "kqcircuits.elements.hanger_resonator": [[48, "module-kqcircuits.elements.hanger_resonator"]], "kqcircuits.elements.launcher": [[49, "module-kqcircuits.elements.launcher"]], "kqcircuits.elements.launcher_dc": [[50, "module-kqcircuits.elements.launcher_dc"]], "kqcircuits.elements.markers": [[51, "kqcircuits-elements-markers"]], "kqcircuits.elements.markers.marker": [[52, "module-kqcircuits.elements.markers.marker"]], "kqcircuits.elements.markers.marker_standard": [[53, "module-kqcircuits.elements.markers.marker_standard"]], "kqcircuits.elements.markers.mask_marker_fc": [[54, "module-kqcircuits.elements.markers.mask_marker_fc"]], "kqcircuits.elements.meander": [[55, "module-kqcircuits.elements.meander"]], "kqcircuits.elements.quarter_wave_cpw_resonator": [[56, "module-kqcircuits.elements.quarter_wave_cpw_resonator"]], "kqcircuits.elements.smooth_capacitor": [[57, "module-kqcircuits.elements.smooth_capacitor"]], "kqcircuits.elements.spiral_capacitor": [[58, "module-kqcircuits.elements.spiral_capacitor"]], "kqcircuits.elements.spiral_resonator_polygon": [[59, "module-kqcircuits.elements.spiral_resonator_polygon"]], "kqcircuits.elements.tsvs": [[60, "kqcircuits-elements-tsvs"]], "kqcircuits.elements.tsvs.tsv": [[61, "module-kqcircuits.elements.tsvs.tsv"]], "kqcircuits.elements.tsvs.tsv_ellipse": [[62, "module-kqcircuits.elements.tsvs.tsv_ellipse"]], "kqcircuits.elements.tsvs.tsv_standard": [[63, "module-kqcircuits.elements.tsvs.tsv_standard"]], "kqcircuits.elements.waveguide_composite": [[64, "module-kqcircuits.elements.waveguide_composite"]], "kqcircuits.elements.waveguide_coplanar": [[65, "module-kqcircuits.elements.waveguide_coplanar"]], "kqcircuits.elements.waveguide_coplanar_curved": [[66, "module-kqcircuits.elements.waveguide_coplanar_curved"]], "kqcircuits.elements.waveguide_coplanar_splitter": [[67, "module-kqcircuits.elements.waveguide_coplanar_splitter"]], "kqcircuits.elements.waveguide_coplanar_straight": [[68, "module-kqcircuits.elements.waveguide_coplanar_straight"]], "kqcircuits.elements.waveguide_coplanar_taper": [[69, "module-kqcircuits.elements.waveguide_coplanar_taper"]], "kqcircuits.junctions": [[70, "kqcircuits-junctions"]], "kqcircuits.junctions.junction": [[71, "module-kqcircuits.junctions.junction"]], "kqcircuits.junctions.manhattan": [[72, "module-kqcircuits.junctions.manhattan"]], "kqcircuits.junctions.manhattan_single_junction": [[73, "module-kqcircuits.junctions.manhattan_single_junction"]], "kqcircuits.junctions.no_squid": [[74, "module-kqcircuits.junctions.no_squid"]], "kqcircuits.junctions.sim": [[75, "module-kqcircuits.junctions.sim"]], "kqcircuits.junctions.squid": [[76, "module-kqcircuits.junctions.squid"]], "kqcircuits.klayout_view": [[77, "module-kqcircuits.klayout_view"]], "kqcircuits.layer_cluster": [[78, "module-kqcircuits.layer_cluster"]], "kqcircuits.layer_config": [[79, "kqcircuits-layer-config"]], "kqcircuits.layer_config.default_layer_config": [[80, "module-kqcircuits.layer_config.default_layer_config"]], "kqcircuits.layer_config.example_layer_config": [[81, "module-kqcircuits.layer_config.example_layer_config"]], "kqcircuits.masks": [[82, "kqcircuits-masks"]], "kqcircuits.masks.mask_export": [[83, "module-kqcircuits.masks.mask_export"]], "kqcircuits.masks.mask_layout": [[84, "module-kqcircuits.masks.mask_layout"]], "kqcircuits.masks.mask_set": [[85, "module-kqcircuits.masks.mask_set"]], "kqcircuits.masks.multi_face_mask_layout": [[86, "module-kqcircuits.masks.multi_face_mask_layout"]], "kqcircuits.pya_resolver": [[87, "module-kqcircuits.pya_resolver"]], "kqcircuits.qubits": [[88, "kqcircuits-qubits"]], "kqcircuits.qubits.circular_transmon_single_island": [[89, "module-kqcircuits.qubits.circular_transmon_single_island"]], "kqcircuits.qubits.concentric_transmon": [[90, "module-kqcircuits.qubits.concentric_transmon"]], "kqcircuits.qubits.double_pads": [[91, "module-kqcircuits.qubits.double_pads"]], "kqcircuits.qubits.double_pads_splines": [[92, "module-kqcircuits.qubits.double_pads_splines"]], "kqcircuits.qubits.qubit": [[93, "module-kqcircuits.qubits.qubit"]], "kqcircuits.qubits.swissmon": [[94, "module-kqcircuits.qubits.swissmon"]], "kqcircuits.run": [[95, "module-kqcircuits.run"]], "kqcircuits.simulations": [[96, "kqcircuits-simulations"]], "kqcircuits.simulations.airbridges_sim": [[97, "module-kqcircuits.simulations.airbridges_sim"]], "kqcircuits.simulations.cross_section_simulation": [[98, "module-kqcircuits.simulations.cross_section_simulation"]], "kqcircuits.simulations.empty_simulation": [[99, "module-kqcircuits.simulations.empty_simulation"]], "kqcircuits.simulations.epr": [[100, "kqcircuits-simulations-epr"]], "kqcircuits.simulations.epr.circular_capacitor": [[101, "module-kqcircuits.simulations.epr.circular_capacitor"]], "kqcircuits.simulations.epr.example": [[102, "module-kqcircuits.simulations.epr.example"]], "kqcircuits.simulations.epr.gui_config": [[103, "module-kqcircuits.simulations.epr.gui_config"]], "kqcircuits.simulations.epr.smooth_capacitor": [[104, "module-kqcircuits.simulations.epr.smooth_capacitor"]], "kqcircuits.simulations.epr.spiral_capacitor": [[105, "module-kqcircuits.simulations.epr.spiral_capacitor"]], "kqcircuits.simulations.epr.swissmon": [[106, "module-kqcircuits.simulations.epr.swissmon"]], "kqcircuits.simulations.epr.util": [[107, "module-kqcircuits.simulations.epr.util"]], "kqcircuits.simulations.export": [[108, "kqcircuits-simulations-export"]], "kqcircuits.simulations.export.ansys": [[109, "kqcircuits-simulations-export-ansys"]], "kqcircuits.simulations.export.ansys.ansys_export": [[110, "module-kqcircuits.simulations.export.ansys.ansys_export"]], "kqcircuits.simulations.export.ansys.ansys_solution": [[111, "module-kqcircuits.simulations.export.ansys.ansys_solution"]], "kqcircuits.simulations.export.cross_section": [[112, "kqcircuits-simulations-export-cross-section"]], "kqcircuits.simulations.export.cross_section.cross_section_export": [[113, "module-kqcircuits.simulations.export.cross_section.cross_section_export"]], "kqcircuits.simulations.export.cross_section.cross_section_profile": [[114, "module-kqcircuits.simulations.export.cross_section.cross_section_profile"]], "kqcircuits.simulations.export.cross_section.epr_correction_export": [[115, "module-kqcircuits.simulations.export.cross_section.epr_correction_export"]], "kqcircuits.simulations.export.cross_section.xsection_export": [[116, "module-kqcircuits.simulations.export.cross_section.xsection_export"]], "kqcircuits.simulations.export.elmer": [[117, "kqcircuits-simulations-export-elmer"]], "kqcircuits.simulations.export.elmer.elmer_export": [[118, "module-kqcircuits.simulations.export.elmer.elmer_export"]], "kqcircuits.simulations.export.elmer.elmer_solution": [[119, "module-kqcircuits.simulations.export.elmer.elmer_solution"]], "kqcircuits.simulations.export.export_and_run": [[120, "module-kqcircuits.simulations.export.export_and_run"]], "kqcircuits.simulations.export.export_singularity": [[121, "module-kqcircuits.simulations.export.export_singularity"]], "kqcircuits.simulations.export.remote_export_and_run": [[122, "module-kqcircuits.simulations.export.remote_export_and_run"]], "kqcircuits.simulations.export.simulation_export": [[123, "module-kqcircuits.simulations.export.simulation_export"]], "kqcircuits.simulations.export.simulation_validate": [[124, "module-kqcircuits.simulations.export.simulation_validate"]], "kqcircuits.simulations.export.solution": [[125, "module-kqcircuits.simulations.export.solution"]], "kqcircuits.simulations.export.sonnet": [[126, "kqcircuits-simulations-export-sonnet"]], "kqcircuits.simulations.export.sonnet.parser": [[127, "module-kqcircuits.simulations.export.sonnet.parser"]], "kqcircuits.simulations.export.sonnet.sonnet_export": [[128, "module-kqcircuits.simulations.export.sonnet.sonnet_export"]], "kqcircuits.simulations.export.util": [[129, "module-kqcircuits.simulations.export.util"]], "kqcircuits.simulations.partition_region": [[130, "module-kqcircuits.simulations.partition_region"]], "kqcircuits.simulations.port": [[131, "module-kqcircuits.simulations.port"]], "kqcircuits.simulations.post_process": [[132, "module-kqcircuits.simulations.post_process"]], "kqcircuits.simulations.simulation": [[133, "module-kqcircuits.simulations.simulation"]], "kqcircuits.simulations.single_element_simulation": [[134, "module-kqcircuits.simulations.single_element_simulation"]], "kqcircuits.simulations.single_xmons_full_chip_sim": [[135, "module-kqcircuits.simulations.single_xmons_full_chip_sim"]], "kqcircuits.simulations.waveguides_sim": [[136, "module-kqcircuits.simulations.waveguides_sim"]], "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim": [[137, "module-kqcircuits.simulations.xmons_direct_coupling_full_chip_sim"]], "kqcircuits.simulations.xmons_direct_coupling_sim": [[138, "module-kqcircuits.simulations.xmons_direct_coupling_sim"]], "kqcircuits.test_structures": [[139, "kqcircuits-test-structures"]], "kqcircuits.test_structures.airbridge_dc": [[140, "module-kqcircuits.test_structures.airbridge_dc"]], "kqcircuits.test_structures.cross_test": [[141, "module-kqcircuits.test_structures.cross_test"]], "kqcircuits.test_structures.junction_test_pads": [[142, "kqcircuits-test-structures-junction-test-pads"]], "kqcircuits.test_structures.junction_test_pads.junction_test_pads": [[143, "module-kqcircuits.test_structures.junction_test_pads.junction_test_pads"]], "kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple": [[144, "module-kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple"]], "kqcircuits.test_structures.stripes_test": [[145, "module-kqcircuits.test_structures.stripes_test"]], "kqcircuits.test_structures.stripes_test_increasing_width": [[146, "module-kqcircuits.test_structures.stripes_test_increasing_width"]], "kqcircuits.test_structures.test_structure": [[147, "module-kqcircuits.test_structures.test_structure"]], "kqcircuits.test_structures.tsv_test_pattern": [[148, "module-kqcircuits.test_structures.tsv_test_pattern"]], "kqcircuits.util": [[149, "kqcircuits-util"]], "kqcircuits.util.area": [[150, "module-kqcircuits.util.area"]], "kqcircuits.util.count_instances": [[151, "module-kqcircuits.util.count_instances"]], "kqcircuits.util.coupler_lib": [[152, "module-kqcircuits.util.coupler_lib"]], "kqcircuits.util.deep_delete": [[153, "module-kqcircuits.util.deep_delete"]], "kqcircuits.util.defaults_helper": [[154, "module-kqcircuits.util.defaults_helper"]], "kqcircuits.util.dependencies": [[155, "module-kqcircuits.util.dependencies"]], "kqcircuits.util.edit_node_plugin": [[156, "module-kqcircuits.util.edit_node_plugin"]], "kqcircuits.util.export_helper": [[157, "module-kqcircuits.util.export_helper"]], "kqcircuits.util.geometry_helper": [[158, "module-kqcircuits.util.geometry_helper"]], "kqcircuits.util.geometry_json_encoder": [[159, "module-kqcircuits.util.geometry_json_encoder"]], "kqcircuits.util.groundgrid": [[160, "module-kqcircuits.util.groundgrid"]], "kqcircuits.util.gui_helper": [[161, "module-kqcircuits.util.gui_helper"]], "kqcircuits.util.import_helper": [[162, "module-kqcircuits.util.import_helper"]], "kqcircuits.util.label": [[163, "module-kqcircuits.util.label"]], "kqcircuits.util.label_polygons": [[164, "module-kqcircuits.util.label_polygons"]], "kqcircuits.util.layout_to_code": [[165, "module-kqcircuits.util.layout_to_code"]], "kqcircuits.util.library_helper": [[166, "module-kqcircuits.util.library_helper"]], "kqcircuits.util.load_save_layout": [[167, "module-kqcircuits.util.load_save_layout"]], "kqcircuits.util.log_router": [[168, "module-kqcircuits.util.log_router"]], "kqcircuits.util.merge": [[169, "module-kqcircuits.util.merge"]], "kqcircuits.util.netlist_extraction": [[170, "module-kqcircuits.util.netlist_extraction"]], "kqcircuits.util.netlist_graph": [[171, "module-kqcircuits.util.netlist_graph"]], "kqcircuits.util.parameters": [[172, "module-kqcircuits.util.parameters"]], "kqcircuits.util.plugin_startup": [[173, "module-kqcircuits.util.plugin_startup"]], "kqcircuits.util.refpoints": [[174, "module-kqcircuits.util.refpoints"]], "kqcircuits.util.replace_junctions": [[175, "module-kqcircuits.util.replace_junctions"]], "kqcircuits.util.symmetric_polygons": [[176, "module-kqcircuits.util.symmetric_polygons"]], "Citing": [[177, "citing"]], "Contributing": [[178, "contributing"]], "Versioning": [[178, "versioning"]], "Architecture": [[179, "architecture"]], "Elements": [[179, "elements"]], "PCell parameters": [[179, "pcell-parameters"]], "Libraries": [[179, "libraries"], [200, "libraries"]], "pya resolver": [[179, "pya-resolver"]], "Coding Style": [[180, "coding-style"]], "Containers": [[181, "containers"]], "CLI usage": [[181, "cli-usage"]], "Docker CI usage": [[181, "docker-ci-usage"]], "Singularity usage": [[181, "singularity-usage"]], "Documentation": [[182, "documentation"], [203, "documentation"]], "Developer Guide": [[183, "developer-guide"]], "Developer GUI Setup": [[184, "developer-gui-setup"]], "Prerequisites": [[184, "prerequisites"], [185, "prerequisites"]], "Python": [[184, "python"]], "Sources": [[184, "sources"]], "Install": [[184, "install"]], "Unlinking": [[184, "unlinking"]], "Update": [[184, "update"]], "Secondary install": [[184, "secondary-install"]], "Manual installation": [[184, "manual-installation"]], "Symlinks in Linux or MacOS": [[184, "symlinks-in-linux-or-macos"]], "Symlinks in Windows": [[184, "symlinks-in-windows"]], "Installing dependencies": [[184, "installing-dependencies"]], "Developer Standalone module Setup": [[185, "developer-standalone-module-setup"]], "Installation": [[185, "installation"], [204, "installation"]], "1. Basic installation": [[185, "basic-installation"]], "2. Reproducible, Secure Installation": [[185, "reproducible-secure-installation"]], "3. KQCircuits exclusive python environment": [[185, "kqcircuits-exclusive-python-environment"]], "Dependency extensions": [[185, "dependency-extensions"]], "PyPI Installation": [[185, "pypi-installation"]], "Usage": [[185, "usage"], [223, "usage"]], "Jupyter notebook usage": [[185, "jupyter-notebook-usage"]], "Updating the required dependencies": [[185, "updating-the-required-dependencies"]], "Testing": [[186, "testing"]], "Unit tests": [[186, "unit-tests"]], "First look around": [[187, "first-look-around"]], "Introduction to Elements": [[187, "introduction-to-elements"]], "Placing Elements": [[188, "placing-elements"]], "Modifying Element parameters": [[188, "modifying-element-parameters"]], "Converting elements placed in GUI into code": [[189, "converting-elements-placed-in-gui-into-code"]], "Useful commands": [[190, "useful-commands"]], "Hotkeys": [[190, "hotkeys"]], "KQCircuits menu": [[190, "kqcircuits-menu"]], "Manual workflow tutorial": [[191, "manual-workflow-tutorial"]], "Generate Demo chip": [[191, "generate-demo-chip"]], "Convert the chip cell to static": [[191, "convert-the-chip-cell-to-static"]], "Change the shape of a waveguide": [[191, "change-the-shape-of-a-waveguide"]], "Change the location of an element": [[191, "change-the-location-of-an-element"]], "Modify element parameters": [[191, "modify-element-parameters"]], "Add new elements": [[191, "add-new-elements"]], "Adding ground grid": [[191, "adding-ground-grid"]], "Using waveguides": [[192, "using-waveguides"]], "Modifying waveguides": [[192, "modifying-waveguides"]], "Editing WaveguideComposite Nodes": [[192, "editing-waveguidecomposite-nodes"]], "GUI Features": [[193, "gui-features"]], "Getting started": [[194, "getting-started"], [199, "getting-started"]], "Faces": [[195, "faces"]], "Using faces": [[195, "using-faces"]], "Creating shapes in faces": [[195, "creating-shapes-in-faces"]], "Placing elements on faces": [[195, "placing-elements-on-faces"]], "Python workflow": [[196, "python-workflow"]], "KQCircuits Layers": [[197, "kqcircuits-layers"]], "Detailed examples": [[198, "detailed-examples"]], "Example of defining an Element": [[198, "example-of-defining-an-element"]], "Example of defining a Chip and inserting elements into it": [[198, "example-of-defining-a-chip-and-inserting-elements-into-it"]], "Defining a custom element": [[199, "defining-a-custom-element"]], "Defining a custom chip": [[199, "defining-a-custom-chip"]], "Structure of Element code": [[200, "structure-of-element-code"]], "Element class": [[200, "element-class"]], "Parameters": [[200, "parameters"]], "Build": [[200, "build"]], "Refpoints": [[201, "refpoints"]], "Using refpoints": [[201, "using-refpoints"]], "Port refpoints": [[201, "port-refpoints"]], "KQCircuits Salt package": [[202, "kqcircuits-salt-package"]], "Installing KQCircuits Salt Package": [[202, "installing-kqcircuits-salt-package"]], "Setting up a user package directory": [[202, "setting-up-a-user-package-directory"]], "Upgrading or Removing Salt Package": [[202, "upgrading-or-removing-salt-package"]], "Release Notes": [[202, "release-notes"]], "KQC logo": [[203, "logo"]], "Indices and tables": [[203, "indices-and-tables"]], "Installing KLayout": [[205, "installing-klayout"]], "Known installation issues": [[206, "known-installation-issues"]], "Installing different Python package versions to KLayout manually": [[206, "installing-different-python-package-versions-to-klayout-manually"]], "Support": [[207, "support"]], "Trademarks": [[208, "trademarks"]], "Custom configuration": [[209, "custom-configuration"]], "Configuring sample holders": [[209, "configuring-sample-holders"]], "Configuring faces": [[209, "configuring-faces"]], "Layer configuration files": [[209, "layer-configuration-files"]], "Adding a new face": [[209, "adding-a-new-face"]], "Cross sections": [[210, "cross-sections"]], "Creating cross sections with KQCircuits": [[210, "creating-cross-sections-with-kqcircuits"]], "In GUI": [[210, "in-gui"]], "In KQC code": [[210, "in-kqc-code"]], "XSection tool": [[210, "xsection-tool"]], "KLayout GUI XSection tool": [[210, "klayout-gui-xsection-tool"]], "XSection call in KQC code": [[210, "xsection-call-in-kqc-code"]], "Process files (.xs)": [[210, "process-files-xs"]], "General Structure and Miscellaneous Utilities": [[211, "general-structure-and-miscellaneous-utilities"]], "File system hierarchy": [[211, "file-system-hierarchy"]], "Miscellaneous Utilities": [[211, "miscellaneous-utilities"]], "Opening Element or Chip from an IDE": [[211, "opening-element-or-chip-from-an-ide"]], "User Guide": [[212, "user-guide"]], "Macro and script development": [[213, "macro-and-script-development"]], "Running the first example": [[213, "running-the-first-example"]], "Interacting with the KLayout application": [[213, "interacting-with-the-klayout-application"]], "Creating a new panel": [[213, "creating-a-new-panel"]], "Accessing the currently active panel": [[213, "accessing-the-currently-active-panel"]], "Using KLayoutView": [[213, "using-klayoutview"]], "Debugger": [[213, "debugger"]], "Reloading libraries": [[213, "reloading-libraries"]], "Examples": [[213, "examples"]], "Mask export": [[214, "mask-export"]], "Tutorial": [[214, "tutorial"]], "Basic mask script and export": [[214, "basic-mask-script-and-export"]], "Ground grid": [[214, "ground-grid"]], "Adding and modifying chips": [[214, "adding-and-modifying-chips"]], "Multi-face masks": [[214, "multi-face-masks"]], "Composite mask maps": [[214, "composite-mask-maps"]], "Elmer remote simulations workflow": [[215, "elmer-remote-simulations-workflow"]], "Run and export in one line": [[216, "run-and-export-in-one-line"]], "Gmsh/Elmer export": [[217, "gmsh-elmer-export"]], "Simulation features": [[218, "simulation-features"]], "S-parameter matrix": [[218, "s-parameter-matrix"]], "Capacitance matrix": [[218, "capacitance-matrix"]], "Eigenmode": [[218, "eigenmode"]], "Energy integrals and participation ratio": [[218, "energy-integrals-and-participation-ratio"]], "Cross-sectional simulations": [[218, "cross-sectional-simulations"]], "pyEPR": [[218, "pyepr"]], "Simulation objects": [[219, "simulation-objects"]], "The Simulation class": [[219, "the-simulation-class"]], "Box": [[219, "box"]], "Ports": [[219, "ports"]], "Face stack": [[219, "face-stack"]], "Simulation subclass": [[219, "simulation-subclass"]], "Single element subclass": [[219, "single-element-subclass"]], "General subclass": [[219, "general-subclass"]], "Geometry sweeps": [[219, "geometry-sweeps"]], "Export functions": [[220, "export-functions"]], "Ansys export": [[220, "ansys-export"]], "Elmer export": [[220, "elmer-export"]], "Sonnet export": [[220, "sonnet-export"]], "Geometry from Klayout GUI": [[220, "geometry-from-klayout-gui"]], "External simulation tools": [[221, "external-simulation-tools"]], "Terminology": [[222, "terminology"]]}, "indexentries": {"kqcircuits": [[1, "module-kqcircuits"]], "module": [[1, "module-kqcircuits"], [2, "module-kqcircuits.chips"], [3, "module-kqcircuits.chips.airbridge_crossings"], [4, "module-kqcircuits.chips.airbridge_dc_test"], [5, "module-kqcircuits.chips.chip"], [6, "module-kqcircuits.chips.crossing_twoface"], [7, "module-kqcircuits.chips.daisy_woven"], [8, "module-kqcircuits.chips.dc_test"], [9, "module-kqcircuits.chips.demo"], [10, "module-kqcircuits.chips.demo_twoface"], [11, "module-kqcircuits.chips.empty"], [12, "module-kqcircuits.chips.junction_test"], [13, "module-kqcircuits.chips.junction_test2"], [14, "module-kqcircuits.chips.launchers"], [15, "module-kqcircuits.chips.lithography_test"], [16, "module-kqcircuits.chips.lithography_test_twoface"], [17, "module-kqcircuits.chips.munch_qubits"], [18, "module-kqcircuits.chips.quality_factor"], [19, "module-kqcircuits.chips.quality_factor_twoface"], [20, "module-kqcircuits.chips.sample_holder_test"], [21, "module-kqcircuits.chips.shaping"], [22, "module-kqcircuits.chips.simple"], [23, "module-kqcircuits.chips.single_xmons"], [24, "module-kqcircuits.chips.stripes"], [25, "module-kqcircuits.chips.tsv_test"], [26, "module-kqcircuits.chips.xmons_direct_coupling"], [27, "module-kqcircuits.defaults"], [28, "module-kqcircuits.elements"], [29, "module-kqcircuits.elements.airbridge_connection"], [30, "module-kqcircuits.elements.airbridges"], [31, "module-kqcircuits.elements.airbridges.airbridge"], [32, "module-kqcircuits.elements.airbridges.airbridge_multi_face"], [33, "module-kqcircuits.elements.airbridges.airbridge_rectangular"], [34, "module-kqcircuits.elements.capacitive_x_coupler"], [35, "module-kqcircuits.elements.chip_frame"], [36, "module-kqcircuits.elements.circular_capacitor"], [37, "module-kqcircuits.elements.element"], [38, "module-kqcircuits.elements.finger_capacitor_square"], [39, "module-kqcircuits.elements.finger_capacitor_taper"], [40, "module-kqcircuits.elements.flip_chip_connectors"], [41, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector"], [42, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc"], [43, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf"], [44, "module-kqcircuits.elements.fluxlines"], [45, "module-kqcircuits.elements.fluxlines.fluxline"], [46, "module-kqcircuits.elements.fluxlines.fluxline_standard"], [47, "module-kqcircuits.elements.fluxlines.fluxline_straight"], [48, "module-kqcircuits.elements.hanger_resonator"], [49, "module-kqcircuits.elements.launcher"], [50, "module-kqcircuits.elements.launcher_dc"], [51, "module-kqcircuits.elements.markers"], [52, "module-kqcircuits.elements.markers.marker"], [53, "module-kqcircuits.elements.markers.marker_standard"], [54, "module-kqcircuits.elements.markers.mask_marker_fc"], [55, "module-kqcircuits.elements.meander"], [56, "module-kqcircuits.elements.quarter_wave_cpw_resonator"], [57, "module-kqcircuits.elements.smooth_capacitor"], [58, "module-kqcircuits.elements.spiral_capacitor"], [59, "module-kqcircuits.elements.spiral_resonator_polygon"], [60, "module-kqcircuits.elements.tsvs"], [61, "module-kqcircuits.elements.tsvs.tsv"], [62, "module-kqcircuits.elements.tsvs.tsv_ellipse"], [63, "module-kqcircuits.elements.tsvs.tsv_standard"], [64, "module-kqcircuits.elements.waveguide_composite"], [65, "module-kqcircuits.elements.waveguide_coplanar"], [66, "module-kqcircuits.elements.waveguide_coplanar_curved"], [67, "module-kqcircuits.elements.waveguide_coplanar_splitter"], [68, "module-kqcircuits.elements.waveguide_coplanar_straight"], [69, "module-kqcircuits.elements.waveguide_coplanar_taper"], [70, "module-kqcircuits.junctions"], [71, "module-kqcircuits.junctions.junction"], [72, "module-kqcircuits.junctions.manhattan"], [73, "module-kqcircuits.junctions.manhattan_single_junction"], [74, "module-kqcircuits.junctions.no_squid"], [75, "module-kqcircuits.junctions.sim"], [76, "module-kqcircuits.junctions.squid"], [77, "module-kqcircuits.klayout_view"], [78, "module-kqcircuits.layer_cluster"], [79, "module-kqcircuits.layer_config"], [80, "module-kqcircuits.layer_config.default_layer_config"], [81, "module-kqcircuits.layer_config.example_layer_config"], [82, "module-kqcircuits.masks"], [83, "module-kqcircuits.masks.mask_export"], [84, "module-kqcircuits.masks.mask_layout"], [85, "module-kqcircuits.masks.mask_set"], [86, "module-kqcircuits.masks.multi_face_mask_layout"], [87, "module-kqcircuits.pya_resolver"], [88, "module-kqcircuits.qubits"], [89, "module-kqcircuits.qubits.circular_transmon_single_island"], [90, "module-kqcircuits.qubits.concentric_transmon"], [91, "module-kqcircuits.qubits.double_pads"], [92, "module-kqcircuits.qubits.double_pads_splines"], [93, "module-kqcircuits.qubits.qubit"], [94, "module-kqcircuits.qubits.swissmon"], [95, "module-kqcircuits.run"], [96, "module-kqcircuits.simulations"], [97, "module-kqcircuits.simulations.airbridges_sim"], [98, "module-kqcircuits.simulations.cross_section_simulation"], [99, "module-kqcircuits.simulations.empty_simulation"], [101, "module-kqcircuits.simulations.epr.circular_capacitor"], [102, "module-kqcircuits.simulations.epr.example"], [103, "module-kqcircuits.simulations.epr.gui_config"], [104, "module-kqcircuits.simulations.epr.smooth_capacitor"], [105, "module-kqcircuits.simulations.epr.spiral_capacitor"], [106, "module-kqcircuits.simulations.epr.swissmon"], [107, "module-kqcircuits.simulations.epr.util"], [108, "module-kqcircuits.simulations.export"], [109, "module-kqcircuits.simulations.export.ansys"], [110, "module-kqcircuits.simulations.export.ansys.ansys_export"], [111, "module-kqcircuits.simulations.export.ansys.ansys_solution"], [112, "module-kqcircuits.simulations.export.cross_section"], [113, "module-kqcircuits.simulations.export.cross_section.cross_section_export"], [114, "module-kqcircuits.simulations.export.cross_section.cross_section_profile"], [115, "module-kqcircuits.simulations.export.cross_section.epr_correction_export"], [116, "module-kqcircuits.simulations.export.cross_section.xsection_export"], [117, "module-kqcircuits.simulations.export.elmer"], [118, "module-kqcircuits.simulations.export.elmer.elmer_export"], [119, "module-kqcircuits.simulations.export.elmer.elmer_solution"], [120, "module-kqcircuits.simulations.export.export_and_run"], [121, "module-kqcircuits.simulations.export.export_singularity"], [122, "module-kqcircuits.simulations.export.remote_export_and_run"], [123, "module-kqcircuits.simulations.export.simulation_export"], [124, "module-kqcircuits.simulations.export.simulation_validate"], [125, "module-kqcircuits.simulations.export.solution"], [126, "module-kqcircuits.simulations.export.sonnet"], [127, "module-kqcircuits.simulations.export.sonnet.parser"], [128, "module-kqcircuits.simulations.export.sonnet.sonnet_export"], [129, "module-kqcircuits.simulations.export.util"], [130, "module-kqcircuits.simulations.partition_region"], [131, "module-kqcircuits.simulations.port"], [132, "module-kqcircuits.simulations.post_process"], [133, "module-kqcircuits.simulations.simulation"], [134, "module-kqcircuits.simulations.single_element_simulation"], [135, "module-kqcircuits.simulations.single_xmons_full_chip_sim"], [136, "module-kqcircuits.simulations.waveguides_sim"], [137, "module-kqcircuits.simulations.xmons_direct_coupling_full_chip_sim"], [138, "module-kqcircuits.simulations.xmons_direct_coupling_sim"], [139, "module-kqcircuits.test_structures"], [140, "module-kqcircuits.test_structures.airbridge_dc"], [141, "module-kqcircuits.test_structures.cross_test"], [142, "module-kqcircuits.test_structures.junction_test_pads"], [143, "module-kqcircuits.test_structures.junction_test_pads.junction_test_pads"], [144, "module-kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple"], [145, "module-kqcircuits.test_structures.stripes_test"], [146, "module-kqcircuits.test_structures.stripes_test_increasing_width"], [147, "module-kqcircuits.test_structures.test_structure"], [148, "module-kqcircuits.test_structures.tsv_test_pattern"], [149, "module-kqcircuits.util"], [150, "module-kqcircuits.util.area"], [151, "module-kqcircuits.util.count_instances"], [152, "module-kqcircuits.util.coupler_lib"], [153, "module-kqcircuits.util.deep_delete"], [154, "module-kqcircuits.util.defaults_helper"], [155, "module-kqcircuits.util.dependencies"], [156, "module-kqcircuits.util.edit_node_plugin"], [157, "module-kqcircuits.util.export_helper"], [158, "module-kqcircuits.util.geometry_helper"], [159, "module-kqcircuits.util.geometry_json_encoder"], [160, "module-kqcircuits.util.groundgrid"], [161, "module-kqcircuits.util.gui_helper"], [162, "module-kqcircuits.util.import_helper"], [163, "module-kqcircuits.util.label"], [164, "module-kqcircuits.util.label_polygons"], [165, "module-kqcircuits.util.layout_to_code"], [166, "module-kqcircuits.util.library_helper"], [167, "module-kqcircuits.util.load_save_layout"], [168, "module-kqcircuits.util.log_router"], [169, "module-kqcircuits.util.merge"], [170, "module-kqcircuits.util.netlist_extraction"], [171, "module-kqcircuits.util.netlist_graph"], [172, "module-kqcircuits.util.parameters"], [173, "module-kqcircuits.util.plugin_startup"], [174, "module-kqcircuits.util.refpoints"], [175, "module-kqcircuits.util.replace_junctions"], [176, "module-kqcircuits.util.symmetric_polygons"]], "kqcircuits.chips": [[2, "module-kqcircuits.chips"]], "airbridgecrossings (class in kqcircuits.chips.airbridge_crossings)": [[3, "kqcircuits.chips.airbridge_crossings.AirbridgeCrossings"]], "build() (kqcircuits.chips.airbridge_crossings.airbridgecrossings method)": [[3, "kqcircuits.chips.airbridge_crossings.AirbridgeCrossings.build"]], "kqcircuits.chips.airbridge_crossings": [[3, "module-kqcircuits.chips.airbridge_crossings"]], "airbridgedctest (class in kqcircuits.chips.airbridge_dc_test)": [[4, "kqcircuits.chips.airbridge_dc_test.AirbridgeDcTest"]], "build() (kqcircuits.chips.airbridge_dc_test.airbridgedctest method)": [[4, "kqcircuits.chips.airbridge_dc_test.AirbridgeDcTest.build"]], "kqcircuits.chips.airbridge_dc_test": [[4, "module-kqcircuits.chips.airbridge_dc_test"]], "chip (class in kqcircuits.chips.chip)": [[5, "kqcircuits.chips.chip.Chip"]], "library_description (kqcircuits.chips.chip.chip attribute)": [[5, "kqcircuits.chips.chip.Chip.LIBRARY_DESCRIPTION"]], "library_name (kqcircuits.chips.chip.chip attribute)": [[5, "kqcircuits.chips.chip.Chip.LIBRARY_NAME"]], "library_path (kqcircuits.chips.chip.chip attribute)": [[5, "kqcircuits.chips.chip.Chip.LIBRARY_PATH"]], "can_create_from_shape_impl() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.can_create_from_shape_impl"]], "display_text_impl() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.display_text_impl"]], "get_box() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.get_box"]], "get_filter_regions() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.get_filter_regions"]], "get_ground_bump_locations() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.get_ground_bump_locations"]], "get_ground_tsv_locations() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.get_ground_tsv_locations"]], "get_launcher_assignments() (kqcircuits.chips.chip.chip static method)": [[5, "kqcircuits.chips.chip.Chip.get_launcher_assignments"]], "insert_filtered_elements() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.insert_filtered_elements"]], "kqcircuits.chips.chip": [[5, "module-kqcircuits.chips.chip"]], "make_grid_locations() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.make_grid_locations"]], "merge_layout_layers() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.merge_layout_layers"]], "merge_layout_layers_on_face() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.merge_layout_layers_on_face"]], "parameters_from_shape_impl() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.parameters_from_shape_impl"]], "post_build() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.post_build"]], "produce_frame() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.produce_frame"]], "produce_ground_grid() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.produce_ground_grid"]], "produce_ground_on_face_grid() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.produce_ground_on_face_grid"]], "produce_junction_tests() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.produce_junction_tests"]], "produce_launchers() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.produce_launchers"]], "produce_n_launchers() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.produce_n_launchers"]], "produce_opt_lit_tests() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.produce_opt_lit_tests"]], "produce_structures() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.produce_structures"]], "transformation_from_shape_impl() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.transformation_from_shape_impl"]], "crossingtwoface (class in kqcircuits.chips.crossing_twoface)": [[6, "kqcircuits.chips.crossing_twoface.CrossingTwoface"]], "build() (kqcircuits.chips.crossing_twoface.crossingtwoface method)": [[6, "kqcircuits.chips.crossing_twoface.CrossingTwoface.build"]], "kqcircuits.chips.crossing_twoface": [[6, "module-kqcircuits.chips.crossing_twoface"]], "daisywoven (class in kqcircuits.chips.daisy_woven)": [[7, "kqcircuits.chips.daisy_woven.DaisyWoven"]], "build() (kqcircuits.chips.daisy_woven.daisywoven method)": [[7, "kqcircuits.chips.daisy_woven.DaisyWoven.build"]], "kqcircuits.chips.daisy_woven": [[7, "module-kqcircuits.chips.daisy_woven"]], "dctest (class in kqcircuits.chips.dc_test)": [[8, "kqcircuits.chips.dc_test.DcTest"]], "build() (kqcircuits.chips.dc_test.dctest method)": [[8, "kqcircuits.chips.dc_test.DcTest.build"]], "kqcircuits.chips.dc_test": [[8, "module-kqcircuits.chips.dc_test"]], "demo (class in kqcircuits.chips.demo)": [[9, "kqcircuits.chips.demo.Demo"]], "build() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.build"]], "kqcircuits.chips.demo": [[9, "module-kqcircuits.chips.demo"]], "produce_control_lines() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_control_lines"]], "produce_coupler() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_coupler"]], "produce_couplers() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_couplers"]], "produce_driveline() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_driveline"]], "produce_fluxline() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_fluxline"]], "produce_junction_tests() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_junction_tests"]], "produce_probeline() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_probeline"]], "produce_probelines() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_probelines"]], "produce_qubit() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_qubit"]], "produce_qubits() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_qubits"]], "produce_readout_structure() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_readout_structure"]], "produce_readout_structures() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_readout_structures"]], "demotwoface (class in kqcircuits.chips.demo_twoface)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface"]], "build() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.build"]], "kqcircuits.chips.demo_twoface": [[10, "module-kqcircuits.chips.demo_twoface"]], "produce_control_lines() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_control_lines"]], "produce_coupler() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_coupler"]], "produce_couplers() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_couplers"]], "produce_driveline() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_driveline"]], "produce_fluxline() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_fluxline"]], "produce_probeline() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_probeline"]], "produce_probelines() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_probelines"]], "produce_qubit() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_qubit"]], "produce_qubits() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_qubits"]], "produce_readout_structure() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_readout_structure"]], "produce_readout_structures() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_readout_structures"]], "empty (class in kqcircuits.chips.empty)": [[11, "kqcircuits.chips.empty.Empty"]], "build() (kqcircuits.chips.empty.empty method)": [[11, "kqcircuits.chips.empty.Empty.build"]], "kqcircuits.chips.empty": [[11, "module-kqcircuits.chips.empty"]], "make_empty_area() (kqcircuits.chips.empty.empty method)": [[11, "kqcircuits.chips.empty.Empty.make_empty_area"]], "junctiontest (class in kqcircuits.chips.junction_test)": [[12, "kqcircuits.chips.junction_test.JunctionTest"]], "build() (kqcircuits.chips.junction_test.junctiontest method)": [[12, "kqcircuits.chips.junction_test.JunctionTest.build"]], "kqcircuits.chips.junction_test": [[12, "module-kqcircuits.chips.junction_test"]], "junctiontest2 (class in kqcircuits.chips.junction_test2)": [[13, "kqcircuits.chips.junction_test2.JunctionTest2"]], "build() (kqcircuits.chips.junction_test2.junctiontest2 method)": [[13, "kqcircuits.chips.junction_test2.JunctionTest2.build"]], "kqcircuits.chips.junction_test2": [[13, "module-kqcircuits.chips.junction_test2"]], "launchers (class in kqcircuits.chips.launchers)": [[14, "kqcircuits.chips.launchers.Launchers"]], "build() (kqcircuits.chips.launchers.launchers method)": [[14, "kqcircuits.chips.launchers.Launchers.build"]], "kqcircuits.chips.launchers": [[14, "module-kqcircuits.chips.launchers"]], "lithographytest (class in kqcircuits.chips.lithography_test)": [[15, "kqcircuits.chips.lithography_test.LithographyTest"]], "build() (kqcircuits.chips.lithography_test.lithographytest method)": [[15, "kqcircuits.chips.lithography_test.LithographyTest.build"]], "create_pattern() (kqcircuits.chips.lithography_test.lithographytest method)": [[15, "kqcircuits.chips.lithography_test.LithographyTest.create_pattern"]], "kqcircuits.chips.lithography_test": [[15, "module-kqcircuits.chips.lithography_test"]], "lithographytesttwoface (class in kqcircuits.chips.lithography_test_twoface)": [[16, "kqcircuits.chips.lithography_test_twoface.LithographyTestTwoface"]], "build() (kqcircuits.chips.lithography_test_twoface.lithographytesttwoface method)": [[16, "kqcircuits.chips.lithography_test_twoface.LithographyTestTwoface.build"]], "create_pattern() (kqcircuits.chips.lithography_test_twoface.lithographytesttwoface method)": [[16, "kqcircuits.chips.lithography_test_twoface.LithographyTestTwoface.create_pattern"]], "kqcircuits.chips.lithography_test_twoface": [[16, "module-kqcircuits.chips.lithography_test_twoface"]], "munchqubits (class in kqcircuits.chips.munch_qubits)": [[17, "kqcircuits.chips.munch_qubits.MunchQubits"]], "build() (kqcircuits.chips.munch_qubits.munchqubits method)": [[17, "kqcircuits.chips.munch_qubits.MunchQubits.build"]], "kqcircuits.chips.munch_qubits": [[17, "module-kqcircuits.chips.munch_qubits"]], "produce_coupler() (kqcircuits.chips.munch_qubits.munchqubits method)": [[17, "kqcircuits.chips.munch_qubits.MunchQubits.produce_coupler"]], "produce_drivelines() (kqcircuits.chips.munch_qubits.munchqubits method)": [[17, "kqcircuits.chips.munch_qubits.MunchQubits.produce_drivelines"]], "produce_probeline() (kqcircuits.chips.munch_qubits.munchqubits method)": [[17, "kqcircuits.chips.munch_qubits.MunchQubits.produce_probeline"]], "produce_qubits() (kqcircuits.chips.munch_qubits.munchqubits method)": [[17, "kqcircuits.chips.munch_qubits.MunchQubits.produce_qubits"]], "produce_readout_resonators() (kqcircuits.chips.munch_qubits.munchqubits method)": [[17, "kqcircuits.chips.munch_qubits.MunchQubits.produce_readout_resonators"]], "qualityfactor (class in kqcircuits.chips.quality_factor)": [[18, "kqcircuits.chips.quality_factor.QualityFactor"]], "build() (kqcircuits.chips.quality_factor.qualityfactor method)": [[18, "kqcircuits.chips.quality_factor.QualityFactor.build"]], "kqcircuits.chips.quality_factor": [[18, "module-kqcircuits.chips.quality_factor"]], "qualityfactortwoface (class in kqcircuits.chips.quality_factor_twoface)": [[19, "kqcircuits.chips.quality_factor_twoface.QualityFactorTwoface"]], "build() (kqcircuits.chips.quality_factor_twoface.qualityfactortwoface method)": [[19, "kqcircuits.chips.quality_factor_twoface.QualityFactorTwoface.build"]], "kqcircuits.chips.quality_factor_twoface": [[19, "module-kqcircuits.chips.quality_factor_twoface"]], "produce_resonator() (kqcircuits.chips.quality_factor_twoface.qualityfactortwoface method)": [[19, "kqcircuits.chips.quality_factor_twoface.QualityFactorTwoface.produce_resonator"]], "sampleholdertest (class in kqcircuits.chips.sample_holder_test)": [[20, "kqcircuits.chips.sample_holder_test.SampleHolderTest"]], "build() (kqcircuits.chips.sample_holder_test.sampleholdertest method)": [[20, "kqcircuits.chips.sample_holder_test.SampleHolderTest.build"]], "kqcircuits.chips.sample_holder_test": [[20, "module-kqcircuits.chips.sample_holder_test"]], "shaping (class in kqcircuits.chips.shaping)": [[21, "kqcircuits.chips.shaping.Shaping"]], "build() (kqcircuits.chips.shaping.shaping method)": [[21, "kqcircuits.chips.shaping.Shaping.build"]], "kqcircuits.chips.shaping": [[21, "module-kqcircuits.chips.shaping"]], "simple (class in kqcircuits.chips.simple)": [[22, "kqcircuits.chips.simple.Simple"]], "build() (kqcircuits.chips.simple.simple method)": [[22, "kqcircuits.chips.simple.Simple.build"]], "kqcircuits.chips.simple": [[22, "module-kqcircuits.chips.simple"]], "singlexmons (class in kqcircuits.chips.single_xmons)": [[23, "kqcircuits.chips.single_xmons.SingleXmons"]], "build() (kqcircuits.chips.single_xmons.singlexmons method)": [[23, "kqcircuits.chips.single_xmons.SingleXmons.build"]], "kqcircuits.chips.single_xmons": [[23, "module-kqcircuits.chips.single_xmons"]], "launchers (kqcircuits.chips.single_xmons.singlexmons attribute)": [[23, "kqcircuits.chips.single_xmons.SingleXmons.launchers"]], "qubits_refpoints (kqcircuits.chips.single_xmons.singlexmons attribute)": [[23, "kqcircuits.chips.single_xmons.SingleXmons.qubits_refpoints"]], "stripes (class in kqcircuits.chips.stripes)": [[24, "kqcircuits.chips.stripes.Stripes"]], "build() (kqcircuits.chips.stripes.stripes method)": [[24, "kqcircuits.chips.stripes.Stripes.build"]], "kqcircuits.chips.stripes": [[24, "module-kqcircuits.chips.stripes"]], "tsvtest (class in kqcircuits.chips.tsv_test)": [[25, "kqcircuits.chips.tsv_test.TsvTest"]], "build() (kqcircuits.chips.tsv_test.tsvtest method)": [[25, "kqcircuits.chips.tsv_test.TsvTest.build"]], "create_xsection() (kqcircuits.chips.tsv_test.tsvtest method)": [[25, "kqcircuits.chips.tsv_test.TsvTest.create_xsection"]], "kqcircuits.chips.tsv_test": [[25, "module-kqcircuits.chips.tsv_test"]], "xmonsdirectcoupling (class in kqcircuits.chips.xmons_direct_coupling)": [[26, "kqcircuits.chips.xmons_direct_coupling.XMonsDirectCoupling"]], "build() (kqcircuits.chips.xmons_direct_coupling.xmonsdirectcoupling method)": [[26, "kqcircuits.chips.xmons_direct_coupling.XMonsDirectCoupling.build"]], "kqcircuits.chips.xmons_direct_coupling": [[26, "module-kqcircuits.chips.xmons_direct_coupling"]], "produce_qubits() (kqcircuits.chips.xmons_direct_coupling.xmonsdirectcoupling method)": [[26, "kqcircuits.chips.xmons_direct_coupling.XMonsDirectCoupling.produce_qubits"]], "produce_readout_resonator() (kqcircuits.chips.xmons_direct_coupling.xmonsdirectcoupling method)": [[26, "kqcircuits.chips.xmons_direct_coupling.XMonsDirectCoupling.produce_readout_resonator"]], "kqcircuits.defaults": [[27, "module-kqcircuits.defaults"]], "kqcircuits.elements": [[28, "module-kqcircuits.elements"]], "airbridgeconnection (class in kqcircuits.elements.airbridge_connection)": [[29, "kqcircuits.elements.airbridge_connection.AirbridgeConnection"]], "build() (kqcircuits.elements.airbridge_connection.airbridgeconnection method)": [[29, "kqcircuits.elements.airbridge_connection.AirbridgeConnection.build"]], "kqcircuits.elements.airbridge_connection": [[29, "module-kqcircuits.elements.airbridge_connection"]], "kqcircuits.elements.airbridges": [[30, "module-kqcircuits.elements.airbridges"]], "airbridge (class in kqcircuits.elements.airbridges.airbridge)": [[31, "kqcircuits.elements.airbridges.airbridge.Airbridge"]], "create() (kqcircuits.elements.airbridges.airbridge.airbridge class method)": [[31, "kqcircuits.elements.airbridges.airbridge.Airbridge.create"]], "default_type (kqcircuits.elements.airbridges.airbridge.airbridge attribute)": [[31, "kqcircuits.elements.airbridges.airbridge.Airbridge.default_type"]], "kqcircuits.elements.airbridges.airbridge": [[31, "module-kqcircuits.elements.airbridges.airbridge"]], "transformation_from_shape_impl() (kqcircuits.elements.airbridges.airbridge.airbridge method)": [[31, "kqcircuits.elements.airbridges.airbridge.Airbridge.transformation_from_shape_impl"]], "airbridgemultiface (class in kqcircuits.elements.airbridges.airbridge_multi_face)": [[32, "kqcircuits.elements.airbridges.airbridge_multi_face.AirbridgeMultiFace"]], "build() (kqcircuits.elements.airbridges.airbridge_multi_face.airbridgemultiface method)": [[32, "kqcircuits.elements.airbridges.airbridge_multi_face.AirbridgeMultiFace.build"]], "default_type (kqcircuits.elements.airbridges.airbridge_multi_face.airbridgemultiface attribute)": [[32, "kqcircuits.elements.airbridges.airbridge_multi_face.AirbridgeMultiFace.default_type"]], "kqcircuits.elements.airbridges.airbridge_multi_face": [[32, "module-kqcircuits.elements.airbridges.airbridge_multi_face"]], "airbridgerectangular (class in kqcircuits.elements.airbridges.airbridge_rectangular)": [[33, "kqcircuits.elements.airbridges.airbridge_rectangular.AirbridgeRectangular"]], "build() (kqcircuits.elements.airbridges.airbridge_rectangular.airbridgerectangular method)": [[33, "kqcircuits.elements.airbridges.airbridge_rectangular.AirbridgeRectangular.build"]], "default_type (kqcircuits.elements.airbridges.airbridge_rectangular.airbridgerectangular attribute)": [[33, "kqcircuits.elements.airbridges.airbridge_rectangular.AirbridgeRectangular.default_type"]], "kqcircuits.elements.airbridges.airbridge_rectangular": [[33, "module-kqcircuits.elements.airbridges.airbridge_rectangular"]], "capacitivexcoupler (class in kqcircuits.elements.capacitive_x_coupler)": [[34, "kqcircuits.elements.capacitive_x_coupler.CapacitiveXCoupler"]], "build() (kqcircuits.elements.capacitive_x_coupler.capacitivexcoupler method)": [[34, "kqcircuits.elements.capacitive_x_coupler.CapacitiveXCoupler.build"]], "get_sim_ports() (kqcircuits.elements.capacitive_x_coupler.capacitivexcoupler class method)": [[34, "kqcircuits.elements.capacitive_x_coupler.CapacitiveXCoupler.get_sim_ports"]], "kqcircuits.elements.capacitive_x_coupler": [[34, "module-kqcircuits.elements.capacitive_x_coupler"]], "chipframe (class in kqcircuits.elements.chip_frame)": [[35, "kqcircuits.elements.chip_frame.ChipFrame"]], "build() (kqcircuits.elements.chip_frame.chipframe method)": [[35, "kqcircuits.elements.chip_frame.ChipFrame.build"]], "kqcircuits.elements.chip_frame": [[35, "module-kqcircuits.elements.chip_frame"]], "circularcapacitor (class in kqcircuits.elements.circular_capacitor)": [[36, "kqcircuits.elements.circular_capacitor.CircularCapacitor"]], "build() (kqcircuits.elements.circular_capacitor.circularcapacitor method)": [[36, "kqcircuits.elements.circular_capacitor.CircularCapacitor.build"]], "get_sim_ports() (kqcircuits.elements.circular_capacitor.circularcapacitor class method)": [[36, "kqcircuits.elements.circular_capacitor.CircularCapacitor.get_sim_ports"]], "kqcircuits.elements.circular_capacitor": [[36, "module-kqcircuits.elements.circular_capacitor"]], "element (class in kqcircuits.elements.element)": [[37, "kqcircuits.elements.element.Element"]], "library_description (kqcircuits.elements.element.element attribute)": [[37, "kqcircuits.elements.element.Element.LIBRARY_DESCRIPTION"]], "library_name (kqcircuits.elements.element.element attribute)": [[37, "kqcircuits.elements.element.Element.LIBRARY_NAME"]], "library_path (kqcircuits.elements.element.element attribute)": [[37, "kqcircuits.elements.element.Element.LIBRARY_PATH"]], "add_element() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.add_element"]], "add_port() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.add_port"]], "add_protection() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.add_protection"]], "build() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.build"]], "copy_port() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.copy_port"]], "create() (kqcircuits.elements.element.element class method)": [[37, "kqcircuits.elements.element.Element.create"]], "create_cell_from_shape() (kqcircuits.elements.element.element static method)": [[37, "kqcircuits.elements.element.Element.create_cell_from_shape"]], "create_subtype() (kqcircuits.elements.element.element class method)": [[37, "kqcircuits.elements.element.Element.create_subtype"]], "create_with_refpoints() (kqcircuits.elements.element.element class method)": [[37, "kqcircuits.elements.element.Element.create_with_refpoints"]], "display_text_impl() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.display_text_impl"]], "etch_opposite_face_impl() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.etch_opposite_face_impl"]], "face() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.face"]], "get_layer() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.get_layer"]], "get_refpoints() (in module kqcircuits.elements.element)": [[37, "kqcircuits.elements.element.get_refpoints"]], "get_refpoints() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.get_refpoints"]], "get_schema() (kqcircuits.elements.element.element class method)": [[37, "kqcircuits.elements.element.Element.get_schema"]], "get_sim_ports() (kqcircuits.elements.element.element class method)": [[37, "kqcircuits.elements.element.Element.get_sim_ports"]], "insert_cell() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.insert_cell"]], "insert_cell_into() (in module kqcircuits.elements.element)": [[37, "kqcircuits.elements.element.insert_cell_into"]], "kqcircuits.elements.element": [[37, "module-kqcircuits.elements.element"]], "parameter_order_key() (in module kqcircuits.elements.element)": [[37, "kqcircuits.elements.element.parameter_order_key"]], "pcell_params_by_name() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.pcell_params_by_name"]], "post_build() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.post_build"]], "produce_impl() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.produce_impl"]], "raise_error_on_cell() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.raise_error_on_cell"]], "resolve_face() (in module kqcircuits.elements.element)": [[37, "kqcircuits.elements.element.resolve_face"]], "fingercapacitorsquare (class in kqcircuits.elements.finger_capacitor_square)": [[38, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare"]], "add_waveguides() (kqcircuits.elements.finger_capacitor_square.fingercapacitorsquare method)": [[38, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare.add_waveguides"]], "build() (kqcircuits.elements.finger_capacitor_square.fingercapacitorsquare method)": [[38, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare.build"]], "can_create_from_shape_impl() (kqcircuits.elements.finger_capacitor_square.fingercapacitorsquare method)": [[38, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare.can_create_from_shape_impl"]], "cut_region() (kqcircuits.elements.finger_capacitor_square.fingercapacitorsquare method)": [[38, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare.cut_region"]], "eval_a2() (in module kqcircuits.elements.finger_capacitor_square)": [[38, "kqcircuits.elements.finger_capacitor_square.eval_a2"]], "eval_b2() (in module kqcircuits.elements.finger_capacitor_square)": [[38, "kqcircuits.elements.finger_capacitor_square.eval_b2"]], "finger_area_length() (kqcircuits.elements.finger_capacitor_square.fingercapacitorsquare method)": [[38, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare.finger_area_length"]], "finger_area_width() (kqcircuits.elements.finger_capacitor_square.fingercapacitorsquare method)": [[38, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare.finger_area_width"]], "get_ground_region() (kqcircuits.elements.finger_capacitor_square.fingercapacitorsquare method)": [[38, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare.get_ground_region"]], "get_sim_ports() (kqcircuits.elements.finger_capacitor_square.fingercapacitorsquare class method)": [[38, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare.get_sim_ports"]], "kqcircuits.elements.finger_capacitor_square": [[38, "module-kqcircuits.elements.finger_capacitor_square"]], "fingercapacitortaper (class in kqcircuits.elements.finger_capacitor_taper)": [[39, "kqcircuits.elements.finger_capacitor_taper.FingerCapacitorTaper"]], "build() (kqcircuits.elements.finger_capacitor_taper.fingercapacitortaper method)": [[39, "kqcircuits.elements.finger_capacitor_taper.FingerCapacitorTaper.build"]], "can_create_from_shape_impl() (kqcircuits.elements.finger_capacitor_taper.fingercapacitortaper method)": [[39, "kqcircuits.elements.finger_capacitor_taper.FingerCapacitorTaper.can_create_from_shape_impl"]], "kqcircuits.elements.finger_capacitor_taper": [[39, "module-kqcircuits.elements.finger_capacitor_taper"]], "kqcircuits.elements.flip_chip_connectors": [[40, "module-kqcircuits.elements.flip_chip_connectors"]], "flipchipconnector (class in kqcircuits.elements.flip_chip_connectors.flip_chip_connector)": [[41, "kqcircuits.elements.flip_chip_connectors.flip_chip_connector.FlipChipConnector"]], "create() (kqcircuits.elements.flip_chip_connectors.flip_chip_connector.flipchipconnector class method)": [[41, "kqcircuits.elements.flip_chip_connectors.flip_chip_connector.FlipChipConnector.create"]], "default_type (kqcircuits.elements.flip_chip_connectors.flip_chip_connector.flipchipconnector attribute)": [[41, "kqcircuits.elements.flip_chip_connectors.flip_chip_connector.FlipChipConnector.default_type"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector": [[41, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector"]], "flipchipconnectordc (class in kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc)": [[42, "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc.FlipChipConnectorDc"]], "build() (kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc.flipchipconnectordc method)": [[42, "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc.FlipChipConnectorDc.build"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc": [[42, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc"]], "flipchipconnectorrf (class in kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf)": [[43, "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf.FlipChipConnectorRf"]], "build() (kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf.flipchipconnectorrf method)": [[43, "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf.FlipChipConnectorRf.build"]], "get_sim_ports() (kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf.flipchipconnectorrf class method)": [[43, "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf.FlipChipConnectorRf.get_sim_ports"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf": [[43, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf"]], "kqcircuits.elements.fluxlines": [[44, "module-kqcircuits.elements.fluxlines"]], "fluxline (class in kqcircuits.elements.fluxlines.fluxline)": [[45, "kqcircuits.elements.fluxlines.fluxline.Fluxline"]], "create() (kqcircuits.elements.fluxlines.fluxline.fluxline class method)": [[45, "kqcircuits.elements.fluxlines.fluxline.Fluxline.create"]], "default_type (kqcircuits.elements.fluxlines.fluxline.fluxline attribute)": [[45, "kqcircuits.elements.fluxlines.fluxline.Fluxline.default_type"]], "kqcircuits.elements.fluxlines.fluxline": [[45, "module-kqcircuits.elements.fluxlines.fluxline"]], "fluxlinestandard (class in kqcircuits.elements.fluxlines.fluxline_standard)": [[46, "kqcircuits.elements.fluxlines.fluxline_standard.FluxlineStandard"]], "build() (kqcircuits.elements.fluxlines.fluxline_standard.fluxlinestandard method)": [[46, "kqcircuits.elements.fluxlines.fluxline_standard.FluxlineStandard.build"]], "kqcircuits.elements.fluxlines.fluxline_standard": [[46, "module-kqcircuits.elements.fluxlines.fluxline_standard"]], "fluxlinestraight (class in kqcircuits.elements.fluxlines.fluxline_straight)": [[47, "kqcircuits.elements.fluxlines.fluxline_straight.FluxlineStraight"]], "build() (kqcircuits.elements.fluxlines.fluxline_straight.fluxlinestraight method)": [[47, "kqcircuits.elements.fluxlines.fluxline_straight.FluxlineStraight.build"]], "kqcircuits.elements.fluxlines.fluxline_straight": [[47, "module-kqcircuits.elements.fluxlines.fluxline_straight"]], "hangerresonator (class in kqcircuits.elements.hanger_resonator)": [[48, "kqcircuits.elements.hanger_resonator.HangerResonator"]], "build() (kqcircuits.elements.hanger_resonator.hangerresonator method)": [[48, "kqcircuits.elements.hanger_resonator.HangerResonator.build"]], "get_sim_ports() (kqcircuits.elements.hanger_resonator.hangerresonator class method)": [[48, "kqcircuits.elements.hanger_resonator.HangerResonator.get_sim_ports"]], "kqcircuits.elements.hanger_resonator": [[48, "module-kqcircuits.elements.hanger_resonator"]], "launcher (class in kqcircuits.elements.launcher)": [[49, "kqcircuits.elements.launcher.Launcher"]], "build() (kqcircuits.elements.launcher.launcher method)": [[49, "kqcircuits.elements.launcher.Launcher.build"]], "kqcircuits.elements.launcher": [[49, "module-kqcircuits.elements.launcher"]], "launcherdc (class in kqcircuits.elements.launcher_dc)": [[50, "kqcircuits.elements.launcher_dc.LauncherDC"]], "build() (kqcircuits.elements.launcher_dc.launcherdc method)": [[50, "kqcircuits.elements.launcher_dc.LauncherDC.build"]], "kqcircuits.elements.launcher_dc": [[50, "module-kqcircuits.elements.launcher_dc"]], "kqcircuits.elements.markers": [[51, "module-kqcircuits.elements.markers"]], "marker (class in kqcircuits.elements.markers.marker)": [[52, "kqcircuits.elements.markers.marker.Marker"]], "create() (kqcircuits.elements.markers.marker.marker class method)": [[52, "kqcircuits.elements.markers.marker.Marker.create"]], "default_type (kqcircuits.elements.markers.marker.marker attribute)": [[52, "kqcircuits.elements.markers.marker.Marker.default_type"]], "get_marker_locations() (kqcircuits.elements.markers.marker.marker class method)": [[52, "kqcircuits.elements.markers.marker.Marker.get_marker_locations"]], "get_marker_region() (kqcircuits.elements.markers.marker.marker class method)": [[52, "kqcircuits.elements.markers.marker.Marker.get_marker_region"]], "kqcircuits.elements.markers.marker": [[52, "module-kqcircuits.elements.markers.marker"]], "produce_geometry() (kqcircuits.elements.markers.marker.marker method)": [[52, "kqcircuits.elements.markers.marker.Marker.produce_geometry"]], "markerstandard (class in kqcircuits.elements.markers.marker_standard)": [[53, "kqcircuits.elements.markers.marker_standard.MarkerStandard"]], "build() (kqcircuits.elements.markers.marker_standard.markerstandard method)": [[53, "kqcircuits.elements.markers.marker_standard.MarkerStandard.build"]], "kqcircuits.elements.markers.marker_standard": [[53, "module-kqcircuits.elements.markers.marker_standard"]], "maskmarkerfc (class in kqcircuits.elements.markers.mask_marker_fc)": [[54, "kqcircuits.elements.markers.mask_marker_fc.MaskMarkerFc"]], "build() (kqcircuits.elements.markers.mask_marker_fc.maskmarkerfc method)": [[54, "kqcircuits.elements.markers.mask_marker_fc.MaskMarkerFc.build"]], "create_cross() (kqcircuits.elements.markers.mask_marker_fc.maskmarkerfc static method)": [[54, "kqcircuits.elements.markers.mask_marker_fc.MaskMarkerFc.create_cross"]], "get_marker_locations() (kqcircuits.elements.markers.mask_marker_fc.maskmarkerfc class method)": [[54, "kqcircuits.elements.markers.mask_marker_fc.MaskMarkerFc.get_marker_locations"]], "get_marker_region() (kqcircuits.elements.markers.mask_marker_fc.maskmarkerfc class method)": [[54, "kqcircuits.elements.markers.mask_marker_fc.MaskMarkerFc.get_marker_region"]], "kqcircuits.elements.markers.mask_marker_fc": [[54, "module-kqcircuits.elements.markers.mask_marker_fc"]], "meander (class in kqcircuits.elements.meander)": [[55, "kqcircuits.elements.meander.Meander"]], "build() (kqcircuits.elements.meander.meander method)": [[55, "kqcircuits.elements.meander.Meander.build"]], "can_create_from_shape_impl() (kqcircuits.elements.meander.meander method)": [[55, "kqcircuits.elements.meander.Meander.can_create_from_shape_impl"]], "kqcircuits.elements.meander": [[55, "module-kqcircuits.elements.meander"]], "parameters_from_shape_impl() (kqcircuits.elements.meander.meander method)": [[55, "kqcircuits.elements.meander.Meander.parameters_from_shape_impl"]], "quarterwavecpwresonator (class in kqcircuits.elements.quarter_wave_cpw_resonator)": [[56, "kqcircuits.elements.quarter_wave_cpw_resonator.QuarterWaveCpwResonator"]], "build() (kqcircuits.elements.quarter_wave_cpw_resonator.quarterwavecpwresonator method)": [[56, "kqcircuits.elements.quarter_wave_cpw_resonator.QuarterWaveCpwResonator.build"]], "get_sim_ports() (kqcircuits.elements.quarter_wave_cpw_resonator.quarterwavecpwresonator class method)": [[56, "kqcircuits.elements.quarter_wave_cpw_resonator.QuarterWaveCpwResonator.get_sim_ports"]], "kqcircuits.elements.quarter_wave_cpw_resonator": [[56, "module-kqcircuits.elements.quarter_wave_cpw_resonator"]], "smoothcapacitor (class in kqcircuits.elements.smooth_capacitor)": [[57, "kqcircuits.elements.smooth_capacitor.SmoothCapacitor"]], "build() (kqcircuits.elements.smooth_capacitor.smoothcapacitor method)": [[57, "kqcircuits.elements.smooth_capacitor.SmoothCapacitor.build"]], "can_create_from_shape_impl() (kqcircuits.elements.smooth_capacitor.smoothcapacitor method)": [[57, "kqcircuits.elements.smooth_capacitor.SmoothCapacitor.can_create_from_shape_impl"]], "finger_polygon() (kqcircuits.elements.smooth_capacitor.smoothcapacitor method)": [[57, "kqcircuits.elements.smooth_capacitor.SmoothCapacitor.finger_polygon"]], "get_finger_regions() (kqcircuits.elements.smooth_capacitor.smoothcapacitor method)": [[57, "kqcircuits.elements.smooth_capacitor.SmoothCapacitor.get_finger_regions"]], "get_sim_ports() (kqcircuits.elements.smooth_capacitor.smoothcapacitor class method)": [[57, "kqcircuits.elements.smooth_capacitor.SmoothCapacitor.get_sim_ports"]], "insert_wg_joint() (kqcircuits.elements.smooth_capacitor.smoothcapacitor method)": [[57, "kqcircuits.elements.smooth_capacitor.SmoothCapacitor.insert_wg_joint"]], "kqcircuits.elements.smooth_capacitor": [[57, "module-kqcircuits.elements.smooth_capacitor"]], "middle_gap_fill() (kqcircuits.elements.smooth_capacitor.smoothcapacitor method)": [[57, "kqcircuits.elements.smooth_capacitor.SmoothCapacitor.middle_gap_fill"]], "segment_points() (in module kqcircuits.elements.smooth_capacitor)": [[57, "kqcircuits.elements.smooth_capacitor.segment_points"]], "super_smoothen_region() (kqcircuits.elements.smooth_capacitor.smoothcapacitor method)": [[57, "kqcircuits.elements.smooth_capacitor.SmoothCapacitor.super_smoothen_region"]], "t_poly() (kqcircuits.elements.smooth_capacitor.smoothcapacitor method)": [[57, "kqcircuits.elements.smooth_capacitor.SmoothCapacitor.t_poly"]], "unit_vector() (in module kqcircuits.elements.smooth_capacitor)": [[57, "kqcircuits.elements.smooth_capacitor.unit_vector"]], "spiralcapacitor (class in kqcircuits.elements.spiral_capacitor)": [[58, "kqcircuits.elements.spiral_capacitor.SpiralCapacitor"]], "build() (kqcircuits.elements.spiral_capacitor.spiralcapacitor method)": [[58, "kqcircuits.elements.spiral_capacitor.SpiralCapacitor.build"]], "can_create_from_shape_impl() (kqcircuits.elements.spiral_capacitor.spiralcapacitor method)": [[58, "kqcircuits.elements.spiral_capacitor.SpiralCapacitor.can_create_from_shape_impl"]], "get_sim_ports() (kqcircuits.elements.spiral_capacitor.spiralcapacitor class method)": [[58, "kqcircuits.elements.spiral_capacitor.SpiralCapacitor.get_sim_ports"]], "kqcircuits.elements.spiral_capacitor": [[58, "module-kqcircuits.elements.spiral_capacitor"]], "spiralresonatorpolygon (class in kqcircuits.elements.spiral_resonator_polygon)": [[59, "kqcircuits.elements.spiral_resonator_polygon.SpiralResonatorPolygon"]], "build() (kqcircuits.elements.spiral_resonator_polygon.spiralresonatorpolygon method)": [[59, "kqcircuits.elements.spiral_resonator_polygon.SpiralResonatorPolygon.build"]], "kqcircuits.elements.spiral_resonator_polygon": [[59, "module-kqcircuits.elements.spiral_resonator_polygon"]], "rectangular_parameters() (in module kqcircuits.elements.spiral_resonator_polygon)": [[59, "kqcircuits.elements.spiral_resonator_polygon.rectangular_parameters"]], "kqcircuits.elements.tsvs": [[60, "module-kqcircuits.elements.tsvs"]], "tsv (class in kqcircuits.elements.tsvs.tsv)": [[61, "kqcircuits.elements.tsvs.tsv.Tsv"]], "create() (kqcircuits.elements.tsvs.tsv.tsv class method)": [[61, "kqcircuits.elements.tsvs.tsv.Tsv.create"]], "default_type (kqcircuits.elements.tsvs.tsv.tsv attribute)": [[61, "kqcircuits.elements.tsvs.tsv.Tsv.default_type"]], "kqcircuits.elements.tsvs.tsv": [[61, "module-kqcircuits.elements.tsvs.tsv"]], "tsvellipse (class in kqcircuits.elements.tsvs.tsv_ellipse)": [[62, "kqcircuits.elements.tsvs.tsv_ellipse.TsvEllipse"]], "create_tsv_connector() (kqcircuits.elements.tsvs.tsv_ellipse.tsvellipse method)": [[62, "kqcircuits.elements.tsvs.tsv_ellipse.TsvEllipse.create_tsv_connector"]], "kqcircuits.elements.tsvs.tsv_ellipse": [[62, "module-kqcircuits.elements.tsvs.tsv_ellipse"]], "produce_impl() (kqcircuits.elements.tsvs.tsv_ellipse.tsvellipse method)": [[62, "kqcircuits.elements.tsvs.tsv_ellipse.TsvEllipse.produce_impl"]], "tsvstandard (class in kqcircuits.elements.tsvs.tsv_standard)": [[63, "kqcircuits.elements.tsvs.tsv_standard.TsvStandard"]], "build() (kqcircuits.elements.tsvs.tsv_standard.tsvstandard method)": [[63, "kqcircuits.elements.tsvs.tsv_standard.TsvStandard.build"]], "kqcircuits.elements.tsvs.tsv_standard": [[63, "module-kqcircuits.elements.tsvs.tsv_standard"]], "node (class in kqcircuits.elements.waveguide_composite)": [[64, "kqcircuits.elements.waveguide_composite.Node"]], "waveguidecomposite (class in kqcircuits.elements.waveguide_composite)": [[64, "kqcircuits.elements.waveguide_composite.WaveguideComposite"]], "align (kqcircuits.elements.waveguide_composite.node attribute)": [[64, "kqcircuits.elements.waveguide_composite.Node.align"]], "angle (kqcircuits.elements.waveguide_composite.node attribute)": [[64, "kqcircuits.elements.waveguide_composite.Node.angle"]], "build() (kqcircuits.elements.waveguide_composite.waveguidecomposite method)": [[64, "kqcircuits.elements.waveguide_composite.WaveguideComposite.build"]], "check_node_type() (kqcircuits.elements.waveguide_composite.waveguidecomposite method)": [[64, "kqcircuits.elements.waveguide_composite.WaveguideComposite.check_node_type"]], "coerce_parameters_impl() (kqcircuits.elements.waveguide_composite.waveguidecomposite method)": [[64, "kqcircuits.elements.waveguide_composite.WaveguideComposite.coerce_parameters_impl"]], "create() (kqcircuits.elements.waveguide_composite.waveguidecomposite class method)": [[64, "kqcircuits.elements.waveguide_composite.WaveguideComposite.create"]], "deserialize() (kqcircuits.elements.waveguide_composite.node class method)": [[64, "kqcircuits.elements.waveguide_composite.Node.deserialize"]], "element (kqcircuits.elements.waveguide_composite.node attribute)": [[64, "kqcircuits.elements.waveguide_composite.Node.element"]], "get_segment_cells() (kqcircuits.elements.waveguide_composite.waveguidecomposite static method)": [[64, "kqcircuits.elements.waveguide_composite.WaveguideComposite.get_segment_cells"]], "get_segment_lengths() (kqcircuits.elements.waveguide_composite.waveguidecomposite static method)": [[64, "kqcircuits.elements.waveguide_composite.WaveguideComposite.get_segment_lengths"]], "inst_name (kqcircuits.elements.waveguide_composite.node attribute)": [[64, "kqcircuits.elements.waveguide_composite.Node.inst_name"]], "kqcircuits.elements.waveguide_composite": [[64, "module-kqcircuits.elements.waveguide_composite"]], "length_before (kqcircuits.elements.waveguide_composite.node attribute)": [[64, "kqcircuits.elements.waveguide_composite.Node.length_before"]], "length_increment (kqcircuits.elements.waveguide_composite.node attribute)": [[64, "kqcircuits.elements.waveguide_composite.Node.length_increment"]], "meander_direction (kqcircuits.elements.waveguide_composite.node attribute)": [[64, "kqcircuits.elements.waveguide_composite.Node.meander_direction"]], "nodes_from_string() (kqcircuits.elements.waveguide_composite.node static method)": [[64, "kqcircuits.elements.waveguide_composite.Node.nodes_from_string"]], "position (kqcircuits.elements.waveguide_composite.node attribute)": [[64, "kqcircuits.elements.waveguide_composite.Node.position"]], "produce_fixed_length_bend() (in module kqcircuits.elements.waveguide_composite)": [[64, "kqcircuits.elements.waveguide_composite.produce_fixed_length_bend"]], "produce_fixed_length_waveguide() (kqcircuits.elements.waveguide_composite.waveguidecomposite static method)": [[64, "kqcircuits.elements.waveguide_composite.WaveguideComposite.produce_fixed_length_waveguide"]], "snap_point() (kqcircuits.elements.waveguide_composite.waveguidecomposite method)": [[64, "kqcircuits.elements.waveguide_composite.WaveguideComposite.snap_point"]], "waveguidecoplanar (class in kqcircuits.elements.waveguide_coplanar)": [[65, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar"]], "build() (kqcircuits.elements.waveguide_coplanar.waveguidecoplanar method)": [[65, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar.build"]], "can_create_from_shape_impl() (kqcircuits.elements.waveguide_coplanar.waveguidecoplanar method)": [[65, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar.can_create_from_shape_impl"]], "get_corner_data() (kqcircuits.elements.waveguide_coplanar.waveguidecoplanar static method)": [[65, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar.get_corner_data"]], "is_continuous() (kqcircuits.elements.waveguide_coplanar.waveguidecoplanar static method)": [[65, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar.is_continuous"]], "kqcircuits.elements.waveguide_coplanar": [[65, "module-kqcircuits.elements.waveguide_coplanar"]], "parameters_from_shape_impl() (kqcircuits.elements.waveguide_coplanar.waveguidecoplanar method)": [[65, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar.parameters_from_shape_impl"]], "produce_end_termination() (kqcircuits.elements.waveguide_coplanar.waveguidecoplanar static method)": [[65, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar.produce_end_termination"]], "produce_waveguide() (kqcircuits.elements.waveguide_coplanar.waveguidecoplanar method)": [[65, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar.produce_waveguide"]], "transformation_from_shape_impl() (kqcircuits.elements.waveguide_coplanar.waveguidecoplanar method)": [[65, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar.transformation_from_shape_impl"]], "waveguidecoplanarcurved (class in kqcircuits.elements.waveguide_coplanar_curved)": [[66, "kqcircuits.elements.waveguide_coplanar_curved.WaveguideCoplanarCurved"]], "arc() (in module kqcircuits.elements.waveguide_coplanar_curved)": [[66, "kqcircuits.elements.waveguide_coplanar_curved.arc"]], "build() (kqcircuits.elements.waveguide_coplanar_curved.waveguidecoplanarcurved method)": [[66, "kqcircuits.elements.waveguide_coplanar_curved.WaveguideCoplanarCurved.build"]], "build_geometry() (kqcircuits.elements.waveguide_coplanar_curved.waveguidecoplanarcurved static method)": [[66, "kqcircuits.elements.waveguide_coplanar_curved.WaveguideCoplanarCurved.build_geometry"]], "coerce_parameters_impl() (kqcircuits.elements.waveguide_coplanar_curved.waveguidecoplanarcurved method)": [[66, "kqcircuits.elements.waveguide_coplanar_curved.WaveguideCoplanarCurved.coerce_parameters_impl"]], "create_curve_arcs() (kqcircuits.elements.waveguide_coplanar_curved.waveguidecoplanarcurved static method)": [[66, "kqcircuits.elements.waveguide_coplanar_curved.WaveguideCoplanarCurved.create_curve_arcs"]], "kqcircuits.elements.waveguide_coplanar_curved": [[66, "module-kqcircuits.elements.waveguide_coplanar_curved"]], "produce_curve_termination() (kqcircuits.elements.waveguide_coplanar_curved.waveguidecoplanarcurved static method)": [[66, "kqcircuits.elements.waveguide_coplanar_curved.WaveguideCoplanarCurved.produce_curve_termination"]], "waveguidecoplanarsplitter (class in kqcircuits.elements.waveguide_coplanar_splitter)": [[67, "kqcircuits.elements.waveguide_coplanar_splitter.WaveguideCoplanarSplitter"]], "build() (kqcircuits.elements.waveguide_coplanar_splitter.waveguidecoplanarsplitter method)": [[67, "kqcircuits.elements.waveguide_coplanar_splitter.WaveguideCoplanarSplitter.build"]], "kqcircuits.elements.waveguide_coplanar_splitter": [[67, "module-kqcircuits.elements.waveguide_coplanar_splitter"]], "t_cross_parameters() (in module kqcircuits.elements.waveguide_coplanar_splitter)": [[67, "kqcircuits.elements.waveguide_coplanar_splitter.t_cross_parameters"]], "waveguidecoplanarstraight (class in kqcircuits.elements.waveguide_coplanar_straight)": [[68, "kqcircuits.elements.waveguide_coplanar_straight.WaveguideCoplanarStraight"]], "add_waveguide_path() (kqcircuits.elements.waveguide_coplanar_straight.waveguidecoplanarstraight static method)": [[68, "kqcircuits.elements.waveguide_coplanar_straight.WaveguideCoplanarStraight.add_waveguide_path"]], "build() (kqcircuits.elements.waveguide_coplanar_straight.waveguidecoplanarstraight method)": [[68, "kqcircuits.elements.waveguide_coplanar_straight.WaveguideCoplanarStraight.build"]], "build_geometry() (kqcircuits.elements.waveguide_coplanar_straight.waveguidecoplanarstraight static method)": [[68, "kqcircuits.elements.waveguide_coplanar_straight.WaveguideCoplanarStraight.build_geometry"]], "kqcircuits.elements.waveguide_coplanar_straight": [[68, "module-kqcircuits.elements.waveguide_coplanar_straight"]], "waveguidecoplanartaper (class in kqcircuits.elements.waveguide_coplanar_taper)": [[69, "kqcircuits.elements.waveguide_coplanar_taper.WaveguideCoplanarTaper"]], "build() (kqcircuits.elements.waveguide_coplanar_taper.waveguidecoplanartaper method)": [[69, "kqcircuits.elements.waveguide_coplanar_taper.WaveguideCoplanarTaper.build"]], "kqcircuits.elements.waveguide_coplanar_taper": [[69, "module-kqcircuits.elements.waveguide_coplanar_taper"]], "kqcircuits.junctions": [[70, "module-kqcircuits.junctions"]], "junction (class in kqcircuits.junctions.junction)": [[71, "kqcircuits.junctions.junction.Junction"]], "library_description (kqcircuits.junctions.junction.junction attribute)": [[71, "kqcircuits.junctions.junction.Junction.LIBRARY_DESCRIPTION"]], "library_name (kqcircuits.junctions.junction.junction attribute)": [[71, "kqcircuits.junctions.junction.Junction.LIBRARY_NAME"]], "library_path (kqcircuits.junctions.junction.junction attribute)": [[71, "kqcircuits.junctions.junction.Junction.LIBRARY_PATH"]], "create() (kqcircuits.junctions.junction.junction class method)": [[71, "kqcircuits.junctions.junction.Junction.create"]], "default_type (kqcircuits.junctions.junction.junction attribute)": [[71, "kqcircuits.junctions.junction.Junction.default_type"]], "kqcircuits.junctions.junction": [[71, "module-kqcircuits.junctions.junction"]], "manhattan (class in kqcircuits.junctions.manhattan)": [[72, "kqcircuits.junctions.manhattan.Manhattan"]], "build() (kqcircuits.junctions.manhattan.manhattan method)": [[72, "kqcircuits.junctions.manhattan.Manhattan.build"]], "kqcircuits.junctions.manhattan": [[72, "module-kqcircuits.junctions.manhattan"]], "produce_contact_pads() (kqcircuits.junctions.manhattan.manhattan method)": [[72, "kqcircuits.junctions.manhattan.Manhattan.produce_contact_pads"]], "produce_manhattan_squid() (kqcircuits.junctions.manhattan.manhattan method)": [[72, "kqcircuits.junctions.manhattan.Manhattan.produce_manhattan_squid"]], "produce_tp_large() (kqcircuits.junctions.manhattan.manhattan method)": [[72, "kqcircuits.junctions.manhattan.Manhattan.produce_tp_large"]], "produce_tp_small() (kqcircuits.junctions.manhattan.manhattan method)": [[72, "kqcircuits.junctions.manhattan.Manhattan.produce_tp_small"]], "manhattansinglejunction (class in kqcircuits.junctions.manhattan_single_junction)": [[73, "kqcircuits.junctions.manhattan_single_junction.ManhattanSingleJunction"]], "build() (kqcircuits.junctions.manhattan_single_junction.manhattansinglejunction method)": [[73, "kqcircuits.junctions.manhattan_single_junction.ManhattanSingleJunction.build"]], "kqcircuits.junctions.manhattan_single_junction": [[73, "module-kqcircuits.junctions.manhattan_single_junction"]], "produce_manhattan_junction() (kqcircuits.junctions.manhattan_single_junction.manhattansinglejunction method)": [[73, "kqcircuits.junctions.manhattan_single_junction.ManhattanSingleJunction.produce_manhattan_junction"]], "nosquid (class in kqcircuits.junctions.no_squid)": [[74, "kqcircuits.junctions.no_squid.NoSquid"]], "build() (kqcircuits.junctions.no_squid.nosquid method)": [[74, "kqcircuits.junctions.no_squid.NoSquid.build"]], "kqcircuits.junctions.no_squid": [[74, "module-kqcircuits.junctions.no_squid"]], "sim (class in kqcircuits.junctions.sim)": [[75, "kqcircuits.junctions.sim.Sim"]], "build() (kqcircuits.junctions.sim.sim method)": [[75, "kqcircuits.junctions.sim.Sim.build"]], "kqcircuits.junctions.sim": [[75, "module-kqcircuits.junctions.sim"]], "squid (class in kqcircuits.junctions.squid)": [[76, "kqcircuits.junctions.squid.Squid"]], "kqcircuits.junctions.squid": [[76, "module-kqcircuits.junctions.squid"]], "klayoutview (class in kqcircuits.klayout_view)": [[77, "kqcircuits.klayout_view.KLayoutView"]], "missinguilibraryexception": [[77, "kqcircuits.klayout_view.MissingUILibraryException"]], "active_cell (kqcircuits.klayout_view.klayoutview property)": [[77, "kqcircuits.klayout_view.KLayoutView.active_cell"]], "add_default_layers() (kqcircuits.klayout_view.klayoutview method)": [[77, "kqcircuits.klayout_view.KLayoutView.add_default_layers"]], "cell_view (kqcircuits.klayout_view.klayoutview property)": [[77, "kqcircuits.klayout_view.KLayoutView.cell_view"]], "clear_layers() (kqcircuits.klayout_view.klayoutview method)": [[77, "kqcircuits.klayout_view.KLayoutView.clear_layers"]], "close() (kqcircuits.klayout_view.klayoutview method)": [[77, "kqcircuits.klayout_view.KLayoutView.close"]], "create_top_cell() (kqcircuits.klayout_view.klayoutview method)": [[77, "kqcircuits.klayout_view.KLayoutView.create_top_cell"]], "export_all_layers_bitmap() (kqcircuits.klayout_view.klayoutview method)": [[77, "kqcircuits.klayout_view.KLayoutView.export_all_layers_bitmap"]], "export_layers_bitmaps() (kqcircuits.klayout_view.klayoutview method)": [[77, "kqcircuits.klayout_view.KLayoutView.export_layers_bitmaps"]], "export_pcell_png() (kqcircuits.klayout_view.klayoutview method)": [[77, "kqcircuits.klayout_view.KLayoutView.export_pcell_png"]], "focus() (kqcircuits.klayout_view.klayoutview method)": [[77, "kqcircuits.klayout_view.KLayoutView.focus"]], "get_active_cell() (kqcircuits.klayout_view.klayoutview static method)": [[77, "kqcircuits.klayout_view.KLayoutView.get_active_cell"]], "get_active_cell_view() (kqcircuits.klayout_view.klayoutview static method)": [[77, "kqcircuits.klayout_view.KLayoutView.get_active_cell_view"]], "get_active_layout() (kqcircuits.klayout_view.klayoutview static method)": [[77, "kqcircuits.klayout_view.KLayoutView.get_active_layout"]], "get_pixels() (kqcircuits.klayout_view.klayoutview method)": [[77, "kqcircuits.klayout_view.KLayoutView.get_pixels"]], "insert_cell() (kqcircuits.klayout_view.klayoutview method)": [[77, "kqcircuits.klayout_view.KLayoutView.insert_cell"]], "kqcircuits.klayout_view": [[77, "module-kqcircuits.klayout_view"]], "layout (kqcircuits.klayout_view.klayoutview property)": [[77, "kqcircuits.klayout_view.KLayoutView.layout"]], "layout_view (kqcircuits.klayout_view.klayoutview attribute)": [[77, "kqcircuits.klayout_view.KLayoutView.layout_view"]], "load_layout() (kqcircuits.klayout_view.klayoutview method)": [[77, "kqcircuits.klayout_view.KLayoutView.load_layout"]], "resolve_default_layer_info() (in module kqcircuits.klayout_view)": [[77, "kqcircuits.klayout_view.resolve_default_layer_info"]], "save_layout() (kqcircuits.klayout_view.klayoutview method)": [[77, "kqcircuits.klayout_view.KLayoutView.save_layout"]], "show() (kqcircuits.klayout_view.klayoutview method)": [[77, "kqcircuits.klayout_view.KLayoutView.show"]], "top_cell (kqcircuits.klayout_view.klayoutview property)": [[77, "kqcircuits.klayout_view.KLayoutView.top_cell"]], "layercluster (class in kqcircuits.layer_cluster)": [[78, "kqcircuits.layer_cluster.LayerCluster"]], "all_layers() (kqcircuits.layer_cluster.layercluster method)": [[78, "kqcircuits.layer_cluster.LayerCluster.all_layers"]], "extra_layers (kqcircuits.layer_cluster.layercluster attribute)": [[78, "kqcircuits.layer_cluster.LayerCluster.extra_layers"]], "face_id (kqcircuits.layer_cluster.layercluster attribute)": [[78, "kqcircuits.layer_cluster.LayerCluster.face_id"]], "kqcircuits.layer_cluster": [[78, "module-kqcircuits.layer_cluster"]], "main_layers (kqcircuits.layer_cluster.layercluster attribute)": [[78, "kqcircuits.layer_cluster.LayerCluster.main_layers"]], "kqcircuits.layer_config": [[79, "module-kqcircuits.layer_config"]], "kqcircuits.layer_config.default_layer_config": [[80, "module-kqcircuits.layer_config.default_layer_config"]], "kqcircuits.layer_config.example_layer_config": [[81, "module-kqcircuits.layer_config.example_layer_config"]], "kqcircuits.masks": [[82, "module-kqcircuits.masks"]], "export_bitmaps() (in module kqcircuits.masks.mask_export)": [[83, "kqcircuits.masks.mask_export.export_bitmaps"]], "export_chip() (in module kqcircuits.masks.mask_export)": [[83, "kqcircuits.masks.mask_export.export_chip"]], "export_designs() (in module kqcircuits.masks.mask_export)": [[83, "kqcircuits.masks.mask_export.export_designs"]], "export_docs() (in module kqcircuits.masks.mask_export)": [[83, "kqcircuits.masks.mask_export.export_docs"]], "export_junction_parameters() (in module kqcircuits.masks.mask_export)": [[83, "kqcircuits.masks.mask_export.export_junction_parameters"]], "export_mask() (in module kqcircuits.masks.mask_export)": [[83, "kqcircuits.masks.mask_export.export_mask"]], "export_mask_set() (in module kqcircuits.masks.mask_export)": [[83, "kqcircuits.masks.mask_export.export_mask_set"]], "export_masks_of_face() (in module kqcircuits.masks.mask_export)": [[83, "kqcircuits.masks.mask_export.export_masks_of_face"]], "get_mask_layout_full_name() (in module kqcircuits.masks.mask_export)": [[83, "kqcircuits.masks.mask_export.get_mask_layout_full_name"]], "kqcircuits.masks.mask_export": [[83, "module-kqcircuits.masks.mask_export"]], "masklayout (class in kqcircuits.masks.mask_layout)": [[84, "kqcircuits.masks.mask_layout.MaskLayout"]], "add_chips_map() (kqcircuits.masks.mask_layout.masklayout method)": [[84, "kqcircuits.masks.mask_layout.MaskLayout.add_chips_map"]], "added_chips (kqcircuits.masks.mask_layout.masklayout attribute)": [[84, "kqcircuits.masks.mask_layout.MaskLayout.added_chips"]], "align_to (kqcircuits.masks.mask_layout.masklayout attribute)": [[84, "kqcircuits.masks.mask_layout.MaskLayout.align_to"]], "bbox_face_ids (kqcircuits.masks.mask_layout.masklayout attribute)": [[84, "kqcircuits.masks.mask_layout.MaskLayout.bbox_face_ids"]], "build() (kqcircuits.masks.mask_layout.masklayout method)": [[84, "kqcircuits.masks.mask_layout.MaskLayout.build"]], "chip_box_offset (kqcircuits.masks.mask_layout.masklayout attribute)": [[84, "kqcircuits.masks.mask_layout.MaskLayout.chip_box_offset"]], "chip_copies (kqcircuits.masks.mask_layout.masklayout attribute)": [[84, "kqcircuits.masks.mask_layout.MaskLayout.chip_copies"]], "chip_size (kqcircuits.masks.mask_layout.masklayout attribute)": [[84, "kqcircuits.masks.mask_layout.MaskLayout.chip_size"]], "chip_trans (kqcircuits.masks.mask_layout.masklayout attribute)": [[84, "kqcircuits.masks.mask_layout.MaskLayout.chip_trans"]], "chips_map (kqcircuits.masks.mask_layout.masklayout attribute)": [[84, "kqcircuits.masks.mask_layout.MaskLayout.chips_map"]], "chips_map_legend (kqcircuits.masks.mask_layout.masklayout attribute)": [[84, "kqcircuits.masks.mask_layout.MaskLayout.chips_map_legend"]], "chips_map_offset (kqcircuits.masks.mask_layout.masklayout attribute)": [[84, "kqcircuits.masks.mask_layout.MaskLayout.chips_map_offset"]], "chips_placed_by_position_label (kqcircuits.masks.mask_layout.masklayout attribute)": [[84, "kqcircuits.masks.mask_layout.MaskLayout.chips_placed_by_position_label"]], "covered_region_excluded_layers (kqcircuits.masks.mask_layout.masklayout attribute)": [[84, "kqcircuits.masks.mask_layout.MaskLayout.covered_region_excluded_layers"]], "dice_width (kqcircuits.masks.mask_layout.masklayout attribute)": [[84, "kqcircuits.masks.mask_layout.MaskLayout.dice_width"]], "edge_clearance (kqcircuits.masks.mask_layout.masklayout attribute)": [[84, "kqcircuits.masks.mask_layout.MaskLayout.edge_clearance"]], "extra_chips (kqcircuits.masks.mask_layout.masklayout attribute)": [[84, "kqcircuits.masks.mask_layout.MaskLayout.extra_chips"]], "extra_id (kqcircuits.masks.mask_layout.masklayout attribute)": [[84, "kqcircuits.masks.mask_layout.MaskLayout.extra_id"]], "face() (kqcircuits.masks.mask_layout.masklayout method)": [[84, "kqcircuits.masks.mask_layout.MaskLayout.face"]], "face_id (kqcircuits.masks.mask_layout.masklayout attribute)": [[84, "kqcircuits.masks.mask_layout.MaskLayout.face_id"]], "generate_and_insert_chip_copy_labels() (kqcircuits.masks.mask_layout.masklayout method)": [[84, "kqcircuits.masks.mask_layout.MaskLayout.generate_and_insert_chip_copy_labels"]], "generate_position_label() (kqcircuits.masks.mask_layout.masklayout static method)": [[84, "kqcircuits.masks.mask_layout.MaskLayout.generate_position_label"]], "insert_chip_copy_labels() (kqcircuits.masks.mask_layout.masklayout method)": [[84, "kqcircuits.masks.mask_layout.MaskLayout.insert_chip_copy_labels"]], "insert_chips() (kqcircuits.masks.mask_layout.masklayout method)": [[84, "kqcircuits.masks.mask_layout.MaskLayout.insert_chips"]], "kqcircuits.masks.mask_layout": [[84, "module-kqcircuits.masks.mask_layout"]], "layers_to_mask (kqcircuits.masks.mask_layout.masklayout attribute)": [[84, "kqcircuits.masks.mask_layout.MaskLayout.layers_to_mask"]], "layout (kqcircuits.masks.mask_layout.masklayout attribute)": [[84, "kqcircuits.masks.mask_layout.MaskLayout.layout"]], "mask_export_density_layers (kqcircuits.masks.mask_layout.masklayout attribute)": [[84, "kqcircuits.masks.mask_layout.MaskLayout.mask_export_density_layers"]], "mask_export_layers (kqcircuits.masks.mask_layout.masklayout attribute)": [[84, "kqcircuits.masks.mask_layout.MaskLayout.mask_export_layers"]], "mask_marker_offset (kqcircuits.masks.mask_layout.masklayout attribute)": [[84, "kqcircuits.masks.mask_layout.MaskLayout.mask_marker_offset"]], "mask_markers_dict (kqcircuits.masks.mask_layout.masklayout attribute)": [[84, "kqcircuits.masks.mask_layout.MaskLayout.mask_markers_dict"]], "mask_name_box_margin (kqcircuits.masks.mask_layout.masklayout attribute)": [[84, "kqcircuits.masks.mask_layout.MaskLayout.mask_name_box_margin"]], "mask_name_offset (kqcircuits.masks.mask_layout.masklayout attribute)": [[84, "kqcircuits.masks.mask_layout.MaskLayout.mask_name_offset"]], "mask_name_scale (kqcircuits.masks.mask_layout.masklayout attribute)": [[84, "kqcircuits.masks.mask_layout.MaskLayout.mask_name_scale"]], "mask_text_scale (kqcircuits.masks.mask_layout.masklayout attribute)": [[84, "kqcircuits.masks.mask_layout.MaskLayout.mask_text_scale"]], "mirror_labels (kqcircuits.masks.mask_layout.masklayout attribute)": [[84, "kqcircuits.masks.mask_layout.MaskLayout.mirror_labels"]], "name (kqcircuits.masks.mask_layout.masklayout attribute)": [[84, "kqcircuits.masks.mask_layout.MaskLayout.name"]], "position_label_to_two_coordinates() (kqcircuits.masks.mask_layout.masklayout static method)": [[84, "kqcircuits.masks.mask_layout.MaskLayout.position_label_to_two_coordinates"]], "remove_chips (kqcircuits.masks.mask_layout.masklayout attribute)": [[84, "kqcircuits.masks.mask_layout.MaskLayout.remove_chips"]], "submasks (kqcircuits.masks.mask_layout.masklayout attribute)": [[84, "kqcircuits.masks.mask_layout.MaskLayout.submasks"]], "text_margin (kqcircuits.masks.mask_layout.masklayout attribute)": [[84, "kqcircuits.masks.mask_layout.MaskLayout.text_margin"]], "top_cell (kqcircuits.masks.mask_layout.masklayout attribute)": [[84, "kqcircuits.masks.mask_layout.MaskLayout.top_cell"]], "two_coordinates_to_position_label() (kqcircuits.masks.mask_layout.masklayout static method)": [[84, "kqcircuits.masks.mask_layout.MaskLayout.two_coordinates_to_position_label"]], "version (kqcircuits.masks.mask_layout.masklayout attribute)": [[84, "kqcircuits.masks.mask_layout.MaskLayout.version"]], "wafer_bottom_flat_length (kqcircuits.masks.mask_layout.masklayout attribute)": [[84, "kqcircuits.masks.mask_layout.MaskLayout.wafer_bottom_flat_length"]], "wafer_center (kqcircuits.masks.mask_layout.masklayout attribute)": [[84, "kqcircuits.masks.mask_layout.MaskLayout.wafer_center"]], "wafer_rad (kqcircuits.masks.mask_layout.masklayout attribute)": [[84, "kqcircuits.masks.mask_layout.MaskLayout.wafer_rad"]], "wafer_top_flat_length (kqcircuits.masks.mask_layout.masklayout attribute)": [[84, "kqcircuits.masks.mask_layout.MaskLayout.wafer_top_flat_length"]], "with_grid (kqcircuits.masks.mask_layout.masklayout attribute)": [[84, "kqcircuits.masks.mask_layout.MaskLayout.with_grid"]], "maskset (class in kqcircuits.masks.mask_set)": [[85, "kqcircuits.masks.mask_set.MaskSet"]], "add_chip() (kqcircuits.masks.mask_set.maskset method)": [[85, "kqcircuits.masks.mask_set.MaskSet.add_chip"]], "add_mask_layout() (kqcircuits.masks.mask_set.maskset method)": [[85, "kqcircuits.masks.mask_set.MaskSet.add_mask_layout"]], "add_multi_face_mask_layout() (kqcircuits.masks.mask_set.maskset method)": [[85, "kqcircuits.masks.mask_set.MaskSet.add_multi_face_mask_layout"]], "build() (kqcircuits.masks.mask_set.maskset method)": [[85, "kqcircuits.masks.mask_set.MaskSet.build"]], "chips_map_from_box_map() (kqcircuits.masks.mask_set.maskset static method)": [[85, "kqcircuits.masks.mask_set.MaskSet.chips_map_from_box_map"]], "chips_map_legend (kqcircuits.masks.mask_set.maskset attribute)": [[85, "kqcircuits.masks.mask_set.MaskSet.chips_map_legend"]], "export() (kqcircuits.masks.mask_set.maskset method)": [[85, "kqcircuits.masks.mask_set.MaskSet.export"]], "export_drc (kqcircuits.masks.mask_set.maskset attribute)": [[85, "kqcircuits.masks.mask_set.MaskSet.export_drc"]], "export_path (kqcircuits.masks.mask_set.maskset attribute)": [[85, "kqcircuits.masks.mask_set.MaskSet.export_path"]], "kqcircuits.masks.mask_set": [[85, "module-kqcircuits.masks.mask_set"]], "layout (kqcircuits.masks.mask_set.maskset attribute)": [[85, "kqcircuits.masks.mask_set.MaskSet.layout"]], "mask_export_layers (kqcircuits.masks.mask_set.maskset attribute)": [[85, "kqcircuits.masks.mask_set.MaskSet.mask_export_layers"]], "mask_layouts (kqcircuits.masks.mask_set.maskset attribute)": [[85, "kqcircuits.masks.mask_set.MaskSet.mask_layouts"]], "name (kqcircuits.masks.mask_set.maskset attribute)": [[85, "kqcircuits.masks.mask_set.MaskSet.name"]], "used_chips (kqcircuits.masks.mask_set.maskset attribute)": [[85, "kqcircuits.masks.mask_set.MaskSet.used_chips"]], "version (kqcircuits.masks.mask_set.maskset attribute)": [[85, "kqcircuits.masks.mask_set.MaskSet.version"]], "view (kqcircuits.masks.mask_set.maskset attribute)": [[85, "kqcircuits.masks.mask_set.MaskSet.view"]], "with_grid (kqcircuits.masks.mask_set.maskset attribute)": [[85, "kqcircuits.masks.mask_set.MaskSet.with_grid"]], "multifacemasklayout (class in kqcircuits.masks.multi_face_mask_layout)": [[86, "kqcircuits.masks.multi_face_mask_layout.MultiFaceMaskLayout"]], "add_chips_map() (kqcircuits.masks.multi_face_mask_layout.multifacemasklayout method)": [[86, "kqcircuits.masks.multi_face_mask_layout.MultiFaceMaskLayout.add_chips_map"]], "face_ids (kqcircuits.masks.multi_face_mask_layout.multifacemasklayout attribute)": [[86, "kqcircuits.masks.multi_face_mask_layout.MultiFaceMaskLayout.face_ids"]], "kqcircuits.masks.multi_face_mask_layout": [[86, "module-kqcircuits.masks.multi_face_mask_layout"]], "mask_layouts (kqcircuits.masks.multi_face_mask_layout.multifacemasklayout attribute)": [[86, "kqcircuits.masks.multi_face_mask_layout.MultiFaceMaskLayout.mask_layouts"]], "is_standalone_session() (in module kqcircuits.pya_resolver)": [[87, "kqcircuits.pya_resolver.is_standalone_session"]], "klayout_executable_command() (in module kqcircuits.pya_resolver)": [[87, "kqcircuits.pya_resolver.klayout_executable_command"]], "kqcircuits.pya_resolver": [[87, "module-kqcircuits.pya_resolver"]], "kqcircuits.qubits": [[88, "module-kqcircuits.qubits"]], "circulartransmonsingleisland (class in kqcircuits.qubits.circular_transmon_single_island)": [[89, "kqcircuits.qubits.circular_transmon_single_island.CircularTransmonSingleIsland"]], "build() (kqcircuits.qubits.circular_transmon_single_island.circulartransmonsingleisland method)": [[89, "kqcircuits.qubits.circular_transmon_single_island.CircularTransmonSingleIsland.build"]], "get_sim_ports() (kqcircuits.qubits.circular_transmon_single_island.circulartransmonsingleisland class method)": [[89, "kqcircuits.qubits.circular_transmon_single_island.CircularTransmonSingleIsland.get_sim_ports"]], "kqcircuits.qubits.circular_transmon_single_island": [[89, "module-kqcircuits.qubits.circular_transmon_single_island"]], "concentrictransmon (class in kqcircuits.qubits.concentric_transmon)": [[90, "kqcircuits.qubits.concentric_transmon.ConcentricTransmon"]], "build() (kqcircuits.qubits.concentric_transmon.concentrictransmon method)": [[90, "kqcircuits.qubits.concentric_transmon.ConcentricTransmon.build"]], "get_sim_ports() (kqcircuits.qubits.concentric_transmon.concentrictransmon class method)": [[90, "kqcircuits.qubits.concentric_transmon.ConcentricTransmon.get_sim_ports"]], "kqcircuits.qubits.concentric_transmon": [[90, "module-kqcircuits.qubits.concentric_transmon"]], "doublepads (class in kqcircuits.qubits.double_pads)": [[91, "kqcircuits.qubits.double_pads.DoublePads"]], "build() (kqcircuits.qubits.double_pads.doublepads method)": [[91, "kqcircuits.qubits.double_pads.DoublePads.build"]], "get_sim_ports() (kqcircuits.qubits.double_pads.doublepads class method)": [[91, "kqcircuits.qubits.double_pads.DoublePads.get_sim_ports"]], "kqcircuits.qubits.double_pads": [[91, "module-kqcircuits.qubits.double_pads"]], "doublepadssplines (class in kqcircuits.qubits.double_pads_splines)": [[92, "kqcircuits.qubits.double_pads_splines.DoublePadsSplines"]], "kqcircuits.qubits.double_pads_splines": [[92, "module-kqcircuits.qubits.double_pads_splines"]], "library_description (kqcircuits.qubits.qubit.qubit attribute)": [[93, "kqcircuits.qubits.qubit.Qubit.LIBRARY_DESCRIPTION"]], "library_name (kqcircuits.qubits.qubit.qubit attribute)": [[93, "kqcircuits.qubits.qubit.Qubit.LIBRARY_NAME"]], "library_path (kqcircuits.qubits.qubit.qubit attribute)": [[93, "kqcircuits.qubits.qubit.Qubit.LIBRARY_PATH"]], "qubit (class in kqcircuits.qubits.qubit)": [[93, "kqcircuits.qubits.qubit.Qubit"]], "kqcircuits.qubits.qubit": [[93, "module-kqcircuits.qubits.qubit"]], "produce_fluxline() (kqcircuits.qubits.qubit.qubit method)": [[93, "kqcircuits.qubits.qubit.Qubit.produce_fluxline"]], "produce_squid() (kqcircuits.qubits.qubit.qubit method)": [[93, "kqcircuits.qubits.qubit.Qubit.produce_squid"]], "swissmon (class in kqcircuits.qubits.swissmon)": [[94, "kqcircuits.qubits.swissmon.Swissmon"]], "build() (kqcircuits.qubits.swissmon.swissmon method)": [[94, "kqcircuits.qubits.swissmon.Swissmon.build"]], "get_sim_ports() (kqcircuits.qubits.swissmon.swissmon class method)": [[94, "kqcircuits.qubits.swissmon.Swissmon.get_sim_ports"]], "kqcircuits.qubits.swissmon": [[94, "module-kqcircuits.qubits.swissmon"]], "argument_parser() (in module kqcircuits.run)": [[95, "kqcircuits.run.argument_parser"]], "kqcircuits.run": [[95, "module-kqcircuits.run"]], "run() (in module kqcircuits.run)": [[95, "kqcircuits.run.run"]], "run_kqc() (in module kqcircuits.run)": [[95, "kqcircuits.run.run_kqc"]], "kqcircuits.simulations": [[96, "module-kqcircuits.simulations"]], "airbridgessim (class in kqcircuits.simulations.airbridges_sim)": [[97, "kqcircuits.simulations.airbridges_sim.AirbridgesSim"]], "build() (kqcircuits.simulations.airbridges_sim.airbridgessim method)": [[97, "kqcircuits.simulations.airbridges_sim.AirbridgesSim.build"]], "kqcircuits.simulations.airbridges_sim": [[97, "module-kqcircuits.simulations.airbridges_sim"]], "crosssectionsimulation (class in kqcircuits.simulations.cross_section_simulation)": [[98, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation"]], "library_name (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation attribute)": [[98, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.LIBRARY_NAME"]], "build() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[98, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.build"]], "get_dict_by_layers() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[98, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.get_dict_by_layers"]], "get_layers() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[98, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.get_layers"]], "get_new_layers_format() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[98, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.get_new_layers_format"]], "get_parameters() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[98, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.get_parameters"]], "get_schema() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation class method)": [[98, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.get_schema"]], "get_sim_layer() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[98, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.get_sim_layer"]], "get_simulation_data() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[98, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.get_simulation_data"]], "kqcircuits.simulations.cross_section_simulation": [[98, "module-kqcircuits.simulations.cross_section_simulation"]], "process_layers() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[98, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.process_layers"]], "register_cell_layers_as_sim_layers() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[98, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.register_cell_layers_as_sim_layers"]], "set_permittivity() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[98, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.set_permittivity"]], "emptysimulation (class in kqcircuits.simulations.empty_simulation)": [[99, "kqcircuits.simulations.empty_simulation.EmptySimulation"]], "build() (kqcircuits.simulations.empty_simulation.emptysimulation method)": [[99, "kqcircuits.simulations.empty_simulation.EmptySimulation.build"]], "kqcircuits.simulations.empty_simulation": [[99, "module-kqcircuits.simulations.empty_simulation"]], "correction_cuts() (in module kqcircuits.simulations.epr.circular_capacitor)": [[101, "kqcircuits.simulations.epr.circular_capacitor.correction_cuts"]], "extract_circular_capacitor_from() (in module kqcircuits.simulations.epr.circular_capacitor)": [[101, "kqcircuits.simulations.epr.circular_capacitor.extract_circular_capacitor_from"]], "kqcircuits.simulations.epr.circular_capacitor": [[101, "module-kqcircuits.simulations.epr.circular_capacitor"]], "partition_regions() (in module kqcircuits.simulations.epr.circular_capacitor)": [[101, "kqcircuits.simulations.epr.circular_capacitor.partition_regions"]], "correction_cuts() (in module kqcircuits.simulations.epr.example)": [[102, "kqcircuits.simulations.epr.example.correction_cuts"]], "extract_from() (in module kqcircuits.simulations.epr.example)": [[102, "kqcircuits.simulations.epr.example.extract_from"]], "kqcircuits.simulations.epr.example": [[102, "module-kqcircuits.simulations.epr.example"]], "partition_regions() (in module kqcircuits.simulations.epr.example)": [[102, "kqcircuits.simulations.epr.example.partition_regions"]], "kqcircuits.simulations.epr.gui_config": [[103, "module-kqcircuits.simulations.epr.gui_config"]], "correction_cuts() (in module kqcircuits.simulations.epr.smooth_capacitor)": [[104, "kqcircuits.simulations.epr.smooth_capacitor.correction_cuts"]], "kqcircuits.simulations.epr.smooth_capacitor": [[104, "module-kqcircuits.simulations.epr.smooth_capacitor"]], "partition_regions() (in module kqcircuits.simulations.epr.smooth_capacitor)": [[104, "kqcircuits.simulations.epr.smooth_capacitor.partition_regions"]], "correction_cuts() (in module kqcircuits.simulations.epr.spiral_capacitor)": [[105, "kqcircuits.simulations.epr.spiral_capacitor.correction_cuts"]], "kqcircuits.simulations.epr.spiral_capacitor": [[105, "module-kqcircuits.simulations.epr.spiral_capacitor"]], "partition_regions() (in module kqcircuits.simulations.epr.spiral_capacitor)": [[105, "kqcircuits.simulations.epr.spiral_capacitor.partition_regions"]], "correction_cuts() (in module kqcircuits.simulations.epr.swissmon)": [[106, "kqcircuits.simulations.epr.swissmon.correction_cuts"]], "extract_swissmon_from() (in module kqcircuits.simulations.epr.swissmon)": [[106, "kqcircuits.simulations.epr.swissmon.extract_swissmon_from"]], "kqcircuits.simulations.epr.swissmon": [[106, "module-kqcircuits.simulations.epr.swissmon"]], "partition_regions() (in module kqcircuits.simulations.epr.swissmon)": [[106, "kqcircuits.simulations.epr.swissmon.partition_regions"]], "extract_child_simulation() (in module kqcircuits.simulations.epr.util)": [[107, "kqcircuits.simulations.epr.util.extract_child_simulation"]], "get_mer_z() (in module kqcircuits.simulations.epr.util)": [[107, "kqcircuits.simulations.epr.util.get_mer_z"]], "in_gui() (in module kqcircuits.simulations.epr.util)": [[107, "kqcircuits.simulations.epr.util.in_gui"]], "kqcircuits.simulations.epr.util": [[107, "module-kqcircuits.simulations.epr.util"]], "kqcircuits.simulations.export": [[108, "module-kqcircuits.simulations.export"]], "kqcircuits.simulations.export.ansys": [[109, "module-kqcircuits.simulations.export.ansys"]], "export_ansys() (in module kqcircuits.simulations.export.ansys.ansys_export)": [[110, "kqcircuits.simulations.export.ansys.ansys_export.export_ansys"]], "export_ansys_bat() (in module kqcircuits.simulations.export.ansys.ansys_export)": [[110, "kqcircuits.simulations.export.ansys.ansys_export.export_ansys_bat"]], "export_ansys_json() (in module kqcircuits.simulations.export.ansys.ansys_export)": [[110, "kqcircuits.simulations.export.ansys.ansys_export.export_ansys_json"]], "kqcircuits.simulations.export.ansys.ansys_export": [[110, "module-kqcircuits.simulations.export.ansys.ansys_export"]], "ansyscrosssectionsolution (class in kqcircuits.simulations.export.ansys.ansys_solution)": [[111, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCrossSectionSolution"]], "ansyscurrentsolution (class in kqcircuits.simulations.export.ansys.ansys_solution)": [[111, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCurrentSolution"]], "ansyseigenmodesolution (class in kqcircuits.simulations.export.ansys.ansys_solution)": [[111, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution"]], "ansyshfsssolution (class in kqcircuits.simulations.export.ansys.ansys_solution)": [[111, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution"]], "ansysq3dsolution (class in kqcircuits.simulations.export.ansys.ansys_solution)": [[111, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysQ3dSolution"]], "ansyssolution (class in kqcircuits.simulations.export.ansys.ansys_solution)": [[111, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution"]], "ansysvoltagesolution (class in kqcircuits.simulations.export.ansys.ansys_solution)": [[111, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysVoltageSolution"]], "ansys_project_template (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution attribute)": [[111, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.ansys_project_template"]], "ansys_tool (kqcircuits.simulations.export.ansys.ansys_solution.ansyscrosssectionsolution attribute)": [[111, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCrossSectionSolution.ansys_tool"]], "ansys_tool (kqcircuits.simulations.export.ansys.ansys_solution.ansyscurrentsolution attribute)": [[111, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCurrentSolution.ansys_tool"]], "ansys_tool (kqcircuits.simulations.export.ansys.ansys_solution.ansyseigenmodesolution attribute)": [[111, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution.ansys_tool"]], "ansys_tool (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[111, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.ansys_tool"]], "ansys_tool (kqcircuits.simulations.export.ansys.ansys_solution.ansysq3dsolution attribute)": [[111, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysQ3dSolution.ansys_tool"]], "ansys_tool (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution attribute)": [[111, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.ansys_tool"]], "ansys_tool (kqcircuits.simulations.export.ansys.ansys_solution.ansysvoltagesolution attribute)": [[111, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysVoltageSolution.ansys_tool"]], "capacitance_export (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[111, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.capacitance_export"]], "frequency (kqcircuits.simulations.export.ansys.ansys_solution.ansyscrosssectionsolution attribute)": [[111, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCrossSectionSolution.frequency"]], "frequency (kqcircuits.simulations.export.ansys.ansys_solution.ansyscurrentsolution attribute)": [[111, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCurrentSolution.frequency"]], "frequency (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[111, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.frequency"]], "frequency (kqcircuits.simulations.export.ansys.ansys_solution.ansysq3dsolution attribute)": [[111, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysQ3dSolution.frequency"]], "frequency (kqcircuits.simulations.export.ansys.ansys_solution.ansysvoltagesolution attribute)": [[111, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysVoltageSolution.frequency"]], "frequency_units (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution attribute)": [[111, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.frequency_units"]], "get_ansys_solution() (in module kqcircuits.simulations.export.ansys.ansys_solution)": [[111, "kqcircuits.simulations.export.ansys.ansys_solution.get_ansys_solution"]], "get_solution_data() (kqcircuits.simulations.export.ansys.ansys_solution.ansyscrosssectionsolution method)": [[111, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCrossSectionSolution.get_solution_data"]], "get_solution_data() (kqcircuits.simulations.export.ansys.ansys_solution.ansyscurrentsolution method)": [[111, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCurrentSolution.get_solution_data"]], "get_solution_data() (kqcircuits.simulations.export.ansys.ansys_solution.ansyseigenmodesolution method)": [[111, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution.get_solution_data"]], "get_solution_data() (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution method)": [[111, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.get_solution_data"]], "get_solution_data() (kqcircuits.simulations.export.ansys.ansys_solution.ansysq3dsolution method)": [[111, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysQ3dSolution.get_solution_data"]], "get_solution_data() (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution method)": [[111, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.get_solution_data"]], "get_solution_data() (kqcircuits.simulations.export.ansys.ansys_solution.ansysvoltagesolution method)": [[111, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysVoltageSolution.get_solution_data"]], "integrate_energies (kqcircuits.simulations.export.ansys.ansys_solution.ansyscrosssectionsolution attribute)": [[111, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCrossSectionSolution.integrate_energies"]], "integrate_energies (kqcircuits.simulations.export.ansys.ansys_solution.ansyscurrentsolution attribute)": [[111, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCurrentSolution.integrate_energies"]], "integrate_energies (kqcircuits.simulations.export.ansys.ansys_solution.ansyseigenmodesolution attribute)": [[111, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution.integrate_energies"]], "integrate_energies (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[111, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.integrate_energies"]], "integrate_energies (kqcircuits.simulations.export.ansys.ansys_solution.ansysvoltagesolution attribute)": [[111, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysVoltageSolution.integrate_energies"]], "integrate_magnetic_flux (kqcircuits.simulations.export.ansys.ansys_solution.ansyscurrentsolution attribute)": [[111, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCurrentSolution.integrate_magnetic_flux"]], "integrate_magnetic_flux (kqcircuits.simulations.export.ansys.ansys_solution.ansyseigenmodesolution attribute)": [[111, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution.integrate_magnetic_flux"]], "integrate_magnetic_flux (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[111, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.integrate_magnetic_flux"]], "integrate_magnetic_flux (kqcircuits.simulations.export.ansys.ansys_solution.ansysvoltagesolution attribute)": [[111, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysVoltageSolution.integrate_magnetic_flux"]], "kqcircuits.simulations.export.ansys.ansys_solution": [[111, "module-kqcircuits.simulations.export.ansys.ansys_solution"]], "max_delta_e (kqcircuits.simulations.export.ansys.ansys_solution.ansyscurrentsolution attribute)": [[111, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCurrentSolution.max_delta_e"]], "max_delta_e (kqcircuits.simulations.export.ansys.ansys_solution.ansysvoltagesolution attribute)": [[111, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysVoltageSolution.max_delta_e"]], "max_delta_f (kqcircuits.simulations.export.ansys.ansys_solution.ansyseigenmodesolution attribute)": [[111, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution.max_delta_f"]], "max_delta_s (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[111, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.max_delta_s"]], "maximum_passes (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution attribute)": [[111, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.maximum_passes"]], "mesh_size (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution attribute)": [[111, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.mesh_size"]], "min_frequency (kqcircuits.simulations.export.ansys.ansys_solution.ansyseigenmodesolution attribute)": [[111, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution.min_frequency"]], "minimum_converged_passes (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution attribute)": [[111, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.minimum_converged_passes"]], "minimum_passes (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution attribute)": [[111, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.minimum_passes"]], "n_modes (kqcircuits.simulations.export.ansys.ansys_solution.ansyseigenmodesolution attribute)": [[111, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution.n_modes"]], "percent_error (kqcircuits.simulations.export.ansys.ansys_solution.ansyscrosssectionsolution attribute)": [[111, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCrossSectionSolution.percent_error"]], "percent_error (kqcircuits.simulations.export.ansys.ansys_solution.ansysq3dsolution attribute)": [[111, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysQ3dSolution.percent_error"]], "percent_refinement (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution attribute)": [[111, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.percent_refinement"]], "simulation_flags (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution attribute)": [[111, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.simulation_flags"]], "sweep_count (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[111, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.sweep_count"]], "sweep_enabled (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[111, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.sweep_enabled"]], "sweep_end (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[111, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.sweep_end"]], "sweep_start (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[111, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.sweep_start"]], "sweep_type (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[111, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.sweep_type"]], "kqcircuits.simulations.export.cross_section": [[112, "module-kqcircuits.simulations.export.cross_section"]], "create_cross_sections_from_simulations() (in module kqcircuits.simulations.export.cross_section.cross_section_export)": [[113, "kqcircuits.simulations.export.cross_section.cross_section_export.create_cross_sections_from_simulations"]], "find_layer_by_name() (in module kqcircuits.simulations.export.cross_section.cross_section_export)": [[113, "kqcircuits.simulations.export.cross_section.cross_section_export.find_layer_by_name"]], "free_layer_slots() (in module kqcircuits.simulations.export.cross_section.cross_section_export)": [[113, "kqcircuits.simulations.export.cross_section.cross_section_export.free_layer_slots"]], "kqcircuits.simulations.export.cross_section.cross_section_export": [[113, "module-kqcircuits.simulations.export.cross_section.cross_section_export"]], "produce_intersection_shapes() (in module kqcircuits.simulations.export.cross_section.cross_section_export)": [[113, "kqcircuits.simulations.export.cross_section.cross_section_export.produce_intersection_shapes"]], "take_cross_section() (in module kqcircuits.simulations.export.cross_section.cross_section_export)": [[113, "kqcircuits.simulations.export.cross_section.cross_section_export.take_cross_section"]], "visualise_cross_section_cut_on_original_layout() (in module kqcircuits.simulations.export.cross_section.cross_section_export)": [[113, "kqcircuits.simulations.export.cross_section.cross_section_export.visualise_cross_section_cut_on_original_layout"]], "crosssectionprofile (class in kqcircuits.simulations.export.cross_section.cross_section_profile)": [[114, "kqcircuits.simulations.export.cross_section.cross_section_profile.CrossSectionProfile"]], "add_face() (kqcircuits.simulations.export.cross_section.cross_section_profile.crosssectionprofile method)": [[114, "kqcircuits.simulations.export.cross_section.cross_section_profile.CrossSectionProfile.add_face"]], "change_layer() (kqcircuits.simulations.export.cross_section.cross_section_profile.crosssectionprofile method)": [[114, "kqcircuits.simulations.export.cross_section.cross_section_profile.CrossSectionProfile.change_layer"]], "get_cross_section_profile() (in module kqcircuits.simulations.export.cross_section.cross_section_profile)": [[114, "kqcircuits.simulations.export.cross_section.cross_section_profile.get_cross_section_profile"]], "get_dominant_layer_regex() (kqcircuits.simulations.export.cross_section.cross_section_profile.crosssectionprofile method)": [[114, "kqcircuits.simulations.export.cross_section.cross_section_profile.CrossSectionProfile.get_dominant_layer_regex"]], "get_flip_chip_cross_section_profile() (in module kqcircuits.simulations.export.cross_section.cross_section_profile)": [[114, "kqcircuits.simulations.export.cross_section.cross_section_profile.get_flip_chip_cross_section_profile"]], "get_invisible_layers() (kqcircuits.simulations.export.cross_section.cross_section_profile.crosssectionprofile method)": [[114, "kqcircuits.simulations.export.cross_section.cross_section_profile.CrossSectionProfile.get_invisible_layers"]], "get_layers() (kqcircuits.simulations.export.cross_section.cross_section_profile.crosssectionprofile method)": [[114, "kqcircuits.simulations.export.cross_section.cross_section_profile.CrossSectionProfile.get_layers"]], "get_level() (kqcircuits.simulations.export.cross_section.cross_section_profile.crosssectionprofile method)": [[114, "kqcircuits.simulations.export.cross_section.cross_section_profile.CrossSectionProfile.get_level"]], "get_single_face_cross_section_profile() (in module kqcircuits.simulations.export.cross_section.cross_section_profile)": [[114, "kqcircuits.simulations.export.cross_section.cross_section_profile.get_single_face_cross_section_profile"]], "kqcircuits.simulations.export.cross_section.cross_section_profile": [[114, "module-kqcircuits.simulations.export.cross_section.cross_section_profile"]], "level() (kqcircuits.simulations.export.cross_section.cross_section_profile.crosssectionprofile method)": [[114, "kqcircuits.simulations.export.cross_section.cross_section_profile.CrossSectionProfile.level"]], "priority() (kqcircuits.simulations.export.cross_section.cross_section_profile.crosssectionprofile method)": [[114, "kqcircuits.simulations.export.cross_section.cross_section_profile.CrossSectionProfile.priority"]], "get_epr_correction_elmer_solution() (in module kqcircuits.simulations.export.cross_section.epr_correction_export)": [[115, "kqcircuits.simulations.export.cross_section.epr_correction_export.get_epr_correction_elmer_solution"]], "get_epr_correction_simulations() (in module kqcircuits.simulations.export.cross_section.epr_correction_export)": [[115, "kqcircuits.simulations.export.cross_section.epr_correction_export.get_epr_correction_simulations"]], "kqcircuits.simulations.export.cross_section.epr_correction_export": [[115, "module-kqcircuits.simulations.export.cross_section.epr_correction_export"]], "create_xsections_from_simulations() (in module kqcircuits.simulations.export.cross_section.xsection_export)": [[116, "kqcircuits.simulations.export.cross_section.xsection_export.create_xsections_from_simulations"]], "kqcircuits.simulations.export.cross_section.xsection_export": [[116, "module-kqcircuits.simulations.export.cross_section.xsection_export"]], "xsection_call() (in module kqcircuits.simulations.export.cross_section.xsection_export)": [[116, "kqcircuits.simulations.export.cross_section.xsection_export.xsection_call"]], "kqcircuits.simulations.export.elmer": [[117, "module-kqcircuits.simulations.export.elmer"]], "export_elmer() (in module kqcircuits.simulations.export.elmer.elmer_export)": [[118, "kqcircuits.simulations.export.elmer.elmer_export.export_elmer"]], "export_elmer_json() (in module kqcircuits.simulations.export.elmer.elmer_export)": [[118, "kqcircuits.simulations.export.elmer.elmer_export.export_elmer_json"]], "export_elmer_script() (in module kqcircuits.simulations.export.elmer.elmer_export)": [[118, "kqcircuits.simulations.export.elmer.elmer_export.export_elmer_script"]], "kqcircuits.simulations.export.elmer.elmer_export": [[118, "module-kqcircuits.simulations.export.elmer.elmer_export"]], "elmercapacitancesolution (class in kqcircuits.simulations.export.elmer.elmer_solution)": [[119, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCapacitanceSolution"]], "elmercrosssectionsolution (class in kqcircuits.simulations.export.elmer.elmer_solution)": [[119, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution"]], "elmerepr3dsolution (class in kqcircuits.simulations.export.elmer.elmer_solution)": [[119, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerEPR3DSolution"]], "elmersolution (class in kqcircuits.simulations.export.elmer.elmer_solution)": [[119, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution"]], "elmervectorhelmholtzsolution (class in kqcircuits.simulations.export.elmer.elmer_solution)": [[119, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution"]], "boundary_conditions (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[119, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.boundary_conditions"]], "conductivity (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[119, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.conductivity"]], "convergence_tolerance (kqcircuits.simulations.export.elmer.elmer_solution.elmercapacitancesolution attribute)": [[119, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCapacitanceSolution.convergence_tolerance"]], "convergence_tolerance (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[119, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.convergence_tolerance"]], "convergence_tolerance (kqcircuits.simulations.export.elmer.elmer_solution.elmerepr3dsolution attribute)": [[119, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerEPR3DSolution.convergence_tolerance"]], "convergence_tolerance (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[119, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.convergence_tolerance"]], "frequency (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[119, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.frequency"]], "frequency_batch (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[119, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.frequency_batch"]], "get_elmer_solution() (in module kqcircuits.simulations.export.elmer.elmer_solution)": [[119, "kqcircuits.simulations.export.elmer.elmer_solution.get_elmer_solution"]], "get_solution_data() (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution method)": [[119, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.get_solution_data"]], "integrate_energies (kqcircuits.simulations.export.elmer.elmer_solution.elmercapacitancesolution attribute)": [[119, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCapacitanceSolution.integrate_energies"]], "integrate_energies (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[119, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.integrate_energies"]], "is_axisymmetric (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[119, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.is_axisymmetric"]], "kqcircuits.simulations.export.elmer.elmer_solution": [[119, "module-kqcircuits.simulations.export.elmer.elmer_solution"]], "linear_system_method (kqcircuits.simulations.export.elmer.elmer_solution.elmercapacitancesolution attribute)": [[119, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCapacitanceSolution.linear_system_method"]], "linear_system_method (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[119, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.linear_system_method"]], "linear_system_method (kqcircuits.simulations.export.elmer.elmer_solution.elmerepr3dsolution attribute)": [[119, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerEPR3DSolution.linear_system_method"]], "linear_system_preconditioning (kqcircuits.simulations.export.elmer.elmer_solution.elmercapacitancesolution attribute)": [[119, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCapacitanceSolution.linear_system_preconditioning"]], "linear_system_preconditioning (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[119, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.linear_system_preconditioning"]], "linear_system_preconditioning (kqcircuits.simulations.export.elmer.elmer_solution.elmerepr3dsolution attribute)": [[119, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerEPR3DSolution.linear_system_preconditioning"]], "london_penetration_depth (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[119, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.london_penetration_depth"]], "max_delta_s (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[119, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.max_delta_s"]], "max_error_scale (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[119, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.max_error_scale"]], "max_iterations (kqcircuits.simulations.export.elmer.elmer_solution.elmercapacitancesolution attribute)": [[119, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCapacitanceSolution.max_iterations"]], "max_iterations (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[119, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.max_iterations"]], "max_iterations (kqcircuits.simulations.export.elmer.elmer_solution.elmerepr3dsolution attribute)": [[119, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerEPR3DSolution.max_iterations"]], "max_iterations (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[119, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.max_iterations"]], "max_outlier_fraction (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[119, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.max_outlier_fraction"]], "maximum_passes (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[119, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.maximum_passes"]], "mesh_levels (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[119, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.mesh_levels"]], "mesh_size (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[119, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.mesh_size"]], "minimum_passes (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[119, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.minimum_passes"]], "nested_iteration (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[119, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.nested_iteration"]], "p_element_order (kqcircuits.simulations.export.elmer.elmer_solution.elmercapacitancesolution attribute)": [[119, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCapacitanceSolution.p_element_order"]], "p_element_order (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[119, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.p_element_order"]], "p_element_order (kqcircuits.simulations.export.elmer.elmer_solution.elmerepr3dsolution attribute)": [[119, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerEPR3DSolution.p_element_order"]], "percent_error (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[119, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.percent_error"]], "quadratic_approximation (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[119, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.quadratic_approximation"]], "run_inductance_sim (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[119, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.run_inductance_sim"]], "second_kind_basis (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[119, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.second_kind_basis"]], "sweep_type (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[119, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.sweep_type"]], "tool (kqcircuits.simulations.export.elmer.elmer_solution.elmercapacitancesolution attribute)": [[119, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCapacitanceSolution.tool"]], "tool (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[119, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.tool"]], "tool (kqcircuits.simulations.export.elmer.elmer_solution.elmerepr3dsolution attribute)": [[119, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerEPR3DSolution.tool"]], "tool (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[119, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.tool"]], "tool (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[119, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.tool"]], "use_av (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[119, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.use_av"]], "voltage_excitations (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[119, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.voltage_excitations"]], "voltage_excitations (kqcircuits.simulations.export.elmer.elmer_solution.elmerepr3dsolution attribute)": [[119, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerEPR3DSolution.voltage_excitations"]], "vtu_output (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[119, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.vtu_output"]], "export_and_run() (in module kqcircuits.simulations.export.export_and_run)": [[120, "kqcircuits.simulations.export.export_and_run.export_and_run"]], "kqcircuits.simulations.export.export_and_run": [[120, "module-kqcircuits.simulations.export.export_and_run"]], "run_export_script() (in module kqcircuits.simulations.export.export_and_run)": [[120, "kqcircuits.simulations.export.export_and_run.run_export_script"]], "run_simulations() (in module kqcircuits.simulations.export.export_and_run)": [[120, "kqcircuits.simulations.export.export_and_run.run_simulations"]], "export_singularity() (in module kqcircuits.simulations.export.export_singularity)": [[121, "kqcircuits.simulations.export.export_singularity.export_singularity"]], "kqcircuits.simulations.export.export_singularity": [[121, "module-kqcircuits.simulations.export.export_singularity"]], "kqcircuits.simulations.export.remote_export_and_run": [[122, "module-kqcircuits.simulations.export.remote_export_and_run"]], "remote_export_and_run() (in module kqcircuits.simulations.export.remote_export_and_run)": [[122, "kqcircuits.simulations.export.remote_export_and_run.remote_export_and_run"]], "remote_run_only() (in module kqcircuits.simulations.export.remote_export_and_run)": [[122, "kqcircuits.simulations.export.remote_export_and_run.remote_run_only"]], "copy_content_into_directory() (in module kqcircuits.simulations.export.simulation_export)": [[123, "kqcircuits.simulations.export.simulation_export.copy_content_into_directory"]], "cross_combine() (in module kqcircuits.simulations.export.simulation_export)": [[123, "kqcircuits.simulations.export.simulation_export.cross_combine"]], "cross_sweep_simulation() (in module kqcircuits.simulations.export.simulation_export)": [[123, "kqcircuits.simulations.export.simulation_export.cross_sweep_simulation"]], "cross_sweep_solution() (in module kqcircuits.simulations.export.simulation_export)": [[123, "kqcircuits.simulations.export.simulation_export.cross_sweep_solution"]], "export_simulation_json() (in module kqcircuits.simulations.export.simulation_export)": [[123, "kqcircuits.simulations.export.simulation_export.export_simulation_json"]], "export_simulation_oas() (in module kqcircuits.simulations.export.simulation_export)": [[123, "kqcircuits.simulations.export.simulation_export.export_simulation_oas"]], "get_combined_parameters() (in module kqcircuits.simulations.export.simulation_export)": [[123, "kqcircuits.simulations.export.simulation_export.get_combined_parameters"]], "get_post_process_command_lines() (in module kqcircuits.simulations.export.simulation_export)": [[123, "kqcircuits.simulations.export.simulation_export.get_post_process_command_lines"]], "kqcircuits.simulations.export.simulation_export": [[123, "module-kqcircuits.simulations.export.simulation_export"]], "sweep_simulation() (in module kqcircuits.simulations.export.simulation_export)": [[123, "kqcircuits.simulations.export.simulation_export.sweep_simulation"]], "sweep_solution() (in module kqcircuits.simulations.export.simulation_export)": [[123, "kqcircuits.simulations.export.simulation_export.sweep_solution"]], "validatesimerror": [[124, "kqcircuits.simulations.export.simulation_validate.ValidateSimError"]], "flux_integration_layer_exists_if_needed() (in module kqcircuits.simulations.export.simulation_validate)": [[124, "kqcircuits.simulations.export.simulation_validate.flux_integration_layer_exists_if_needed"]], "get_port_names() (in module kqcircuits.simulations.export.simulation_validate)": [[124, "kqcircuits.simulations.export.simulation_validate.get_port_names"]], "has_edgeport_when_forbidden() (in module kqcircuits.simulations.export.simulation_validate)": [[124, "kqcircuits.simulations.export.simulation_validate.has_edgeport_when_forbidden"]], "has_no_ports_when_required() (in module kqcircuits.simulations.export.simulation_validate)": [[124, "kqcircuits.simulations.export.simulation_validate.has_no_ports_when_required"]], "kqcircuits.simulations.export.simulation_validate": [[124, "module-kqcircuits.simulations.export.simulation_validate"]], "simulation_and_solution_types_match() (in module kqcircuits.simulations.export.simulation_validate)": [[124, "kqcircuits.simulations.export.simulation_validate.simulation_and_solution_types_match"]], "validate_simulation() (in module kqcircuits.simulations.export.simulation_validate)": [[124, "kqcircuits.simulations.export.simulation_validate.validate_simulation"]], "solution (class in kqcircuits.simulations.export.solution)": [[125, "kqcircuits.simulations.export.solution.Solution"]], "get_parameters() (kqcircuits.simulations.export.solution.solution method)": [[125, "kqcircuits.simulations.export.solution.Solution.get_parameters"]], "kqcircuits.simulations.export.solution": [[125, "module-kqcircuits.simulations.export.solution"]], "name (kqcircuits.simulations.export.solution.solution attribute)": [[125, "kqcircuits.simulations.export.solution.Solution.name"]], "kqcircuits.simulations.export.sonnet": [[126, "module-kqcircuits.simulations.export.sonnet"]], "apply_template() (in module kqcircuits.simulations.export.sonnet.parser)": [[127, "kqcircuits.simulations.export.sonnet.parser.apply_template"]], "box() (in module kqcircuits.simulations.export.sonnet.parser)": [[127, "kqcircuits.simulations.export.sonnet.parser.box"]], "control() (in module kqcircuits.simulations.export.sonnet.parser)": [[127, "kqcircuits.simulations.export.sonnet.parser.control"]], "kqcircuits.simulations.export.sonnet.parser": [[127, "module-kqcircuits.simulations.export.sonnet.parser"]], "polygon_head() (in module kqcircuits.simulations.export.sonnet.parser)": [[127, "kqcircuits.simulations.export.sonnet.parser.polygon_head"]], "polygons() (in module kqcircuits.simulations.export.sonnet.parser)": [[127, "kqcircuits.simulations.export.sonnet.parser.polygons"]], "port() (in module kqcircuits.simulations.export.sonnet.parser)": [[127, "kqcircuits.simulations.export.sonnet.parser.port"]], "refplane() (in module kqcircuits.simulations.export.sonnet.parser)": [[127, "kqcircuits.simulations.export.sonnet.parser.refplane"]], "refplanes() (in module kqcircuits.simulations.export.sonnet.parser)": [[127, "kqcircuits.simulations.export.sonnet.parser.refplanes"]], "symmetry() (in module kqcircuits.simulations.export.sonnet.parser)": [[127, "kqcircuits.simulations.export.sonnet.parser.symmetry"]], "via() (in module kqcircuits.simulations.export.sonnet.parser)": [[127, "kqcircuits.simulations.export.sonnet.parser.via"]], "export_sonnet() (in module kqcircuits.simulations.export.sonnet.sonnet_export)": [[128, "kqcircuits.simulations.export.sonnet.sonnet_export.export_sonnet"]], "export_sonnet_son() (in module kqcircuits.simulations.export.sonnet.sonnet_export)": [[128, "kqcircuits.simulations.export.sonnet.sonnet_export.export_sonnet_son"]], "kqcircuits.simulations.export.sonnet.sonnet_export": [[128, "module-kqcircuits.simulations.export.sonnet.sonnet_export"]], "poly_and_edge_indices() (in module kqcircuits.simulations.export.sonnet.sonnet_export)": [[128, "kqcircuits.simulations.export.sonnet.sonnet_export.poly_and_edge_indices"]], "find_edge_from_point_in_polygons() (in module kqcircuits.simulations.export.util)": [[129, "kqcircuits.simulations.export.util.find_edge_from_point_in_polygons"]], "get_enclosing_polygon() (in module kqcircuits.simulations.export.util)": [[129, "kqcircuits.simulations.export.util.get_enclosing_polygon"]], "kqcircuits.simulations.export.util": [[129, "module-kqcircuits.simulations.export.util"]], "partitionregion (class in kqcircuits.simulations.partition_region)": [[130, "kqcircuits.simulations.partition_region.PartitionRegion"]], "get_list_of_two() (in module kqcircuits.simulations.partition_region)": [[130, "kqcircuits.simulations.partition_region.get_list_of_two"]], "kqcircuits.simulations.partition_region": [[130, "module-kqcircuits.simulations.partition_region"]], "limit_box() (kqcircuits.simulations.partition_region.partitionregion method)": [[130, "kqcircuits.simulations.partition_region.PartitionRegion.limit_box"]], "limit_face() (kqcircuits.simulations.partition_region.partitionregion method)": [[130, "kqcircuits.simulations.partition_region.PartitionRegion.limit_face"]], "edgeport (class in kqcircuits.simulations.port)": [[131, "kqcircuits.simulations.port.EdgePort"]], "internalport (class in kqcircuits.simulations.port)": [[131, "kqcircuits.simulations.port.InternalPort"]], "port (class in kqcircuits.simulations.port)": [[131, "kqcircuits.simulations.port.Port"]], "as_dict() (kqcircuits.simulations.port.port method)": [[131, "kqcircuits.simulations.port.Port.as_dict"]], "get_etch_polygon() (kqcircuits.simulations.port.internalport method)": [[131, "kqcircuits.simulations.port.InternalPort.get_etch_polygon"]], "kqcircuits.simulations.port": [[131, "module-kqcircuits.simulations.port"]], "postprocess (class in kqcircuits.simulations.post_process)": [[132, "kqcircuits.simulations.post_process.PostProcess"]], "get_command_line() (kqcircuits.simulations.post_process.postprocess method)": [[132, "kqcircuits.simulations.post_process.PostProcess.get_command_line"]], "kqcircuits.simulations.post_process": [[132, "module-kqcircuits.simulations.post_process"]], "library_name (kqcircuits.simulations.simulation.simulation attribute)": [[133, "kqcircuits.simulations.simulation.Simulation.LIBRARY_NAME"]], "simulation (class in kqcircuits.simulations.simulation)": [[133, "kqcircuits.simulations.simulation.Simulation"]], "add_element() (kqcircuits.simulations.simulation.simulation method)": [[133, "kqcircuits.simulations.simulation.Simulation.add_element"]], "build() (kqcircuits.simulations.simulation.simulation method)": [[133, "kqcircuits.simulations.simulation.Simulation.build"]], "create_simulation_layers() (kqcircuits.simulations.simulation.simulation method)": [[133, "kqcircuits.simulations.simulation.Simulation.create_simulation_layers"]], "delete_instances() (kqcircuits.simulations.simulation.simulation static method)": [[133, "kqcircuits.simulations.simulation.Simulation.delete_instances"]], "etched_line() (kqcircuits.simulations.simulation.simulation method)": [[133, "kqcircuits.simulations.simulation.Simulation.etched_line"]], "face() (kqcircuits.simulations.simulation.simulation method)": [[133, "kqcircuits.simulations.simulation.Simulation.face"]], "face_stack_list_of_lists() (kqcircuits.simulations.simulation.simulation method)": [[133, "kqcircuits.simulations.simulation.Simulation.face_stack_list_of_lists"]], "face_z_levels() (kqcircuits.simulations.simulation.simulation method)": [[133, "kqcircuits.simulations.simulation.Simulation.face_z_levels"]], "from_cell() (kqcircuits.simulations.simulation.simulation class method)": [[133, "kqcircuits.simulations.simulation.Simulation.from_cell"]], "get_layer() (kqcircuits.simulations.simulation.simulation method)": [[133, "kqcircuits.simulations.simulation.Simulation.get_layer"]], "get_layers() (kqcircuits.simulations.simulation.simulation method)": [[133, "kqcircuits.simulations.simulation.Simulation.get_layers"]], "get_parameters() (kqcircuits.simulations.simulation.simulation method)": [[133, "kqcircuits.simulations.simulation.Simulation.get_parameters"]], "get_partition_regions() (kqcircuits.simulations.simulation.simulation method)": [[133, "kqcircuits.simulations.simulation.Simulation.get_partition_regions"]], "get_port_data() (kqcircuits.simulations.simulation.simulation method)": [[133, "kqcircuits.simulations.simulation.Simulation.get_port_data"]], "get_refpoints() (kqcircuits.simulations.simulation.simulation method)": [[133, "kqcircuits.simulations.simulation.Simulation.get_refpoints"]], "get_schema() (kqcircuits.simulations.simulation.simulation class method)": [[133, "kqcircuits.simulations.simulation.Simulation.get_schema"]], "get_simulation_data() (kqcircuits.simulations.simulation.simulation method)": [[133, "kqcircuits.simulations.simulation.Simulation.get_simulation_data"]], "get_simulation_layer_by_name() (in module kqcircuits.simulations.simulation)": [[133, "kqcircuits.simulations.simulation.get_simulation_layer_by_name"]], "ground_grid_region() (kqcircuits.simulations.simulation.simulation method)": [[133, "kqcircuits.simulations.simulation.Simulation.ground_grid_region"]], "insert_cell() (kqcircuits.simulations.simulation.simulation method)": [[133, "kqcircuits.simulations.simulation.Simulation.insert_cell"]], "insert_layer() (kqcircuits.simulations.simulation.simulation method)": [[133, "kqcircuits.simulations.simulation.Simulation.insert_layer"]], "insert_layers_between_faces() (kqcircuits.simulations.simulation.simulation method)": [[133, "kqcircuits.simulations.simulation.Simulation.insert_layers_between_faces"]], "insert_stacked_up_layers() (kqcircuits.simulations.simulation.simulation method)": [[133, "kqcircuits.simulations.simulation.Simulation.insert_stacked_up_layers"]], "is_metal() (kqcircuits.simulations.simulation.simulation method)": [[133, "kqcircuits.simulations.simulation.Simulation.is_metal"]], "ith_value() (kqcircuits.simulations.simulation.simulation static method)": [[133, "kqcircuits.simulations.simulation.Simulation.ith_value"]], "kqcircuits.simulations.simulation": [[133, "module-kqcircuits.simulations.simulation"]], "pcell_params_by_name() (kqcircuits.simulations.simulation.simulation method)": [[133, "kqcircuits.simulations.simulation.Simulation.pcell_params_by_name"]], "ports (kqcircuits.simulations.simulation.simulation attribute)": [[133, "kqcircuits.simulations.simulation.Simulation.ports"]], "produce_layers() (kqcircuits.simulations.simulation.simulation method)": [[133, "kqcircuits.simulations.simulation.Simulation.produce_layers"]], "produce_waveguide_to_port() (kqcircuits.simulations.simulation.simulation method)": [[133, "kqcircuits.simulations.simulation.Simulation.produce_waveguide_to_port"]], "region_from_layer() (kqcircuits.simulations.simulation.simulation method)": [[133, "kqcircuits.simulations.simulation.Simulation.region_from_layer"]], "simplified_region() (kqcircuits.simulations.simulation.simulation method)": [[133, "kqcircuits.simulations.simulation.Simulation.simplified_region"]], "split_metal_layers_by_excitation() (kqcircuits.simulations.simulation.simulation method)": [[133, "kqcircuits.simulations.simulation.Simulation.split_metal_layers_by_excitation"]], "to_1d_list() (in module kqcircuits.simulations.simulation)": [[133, "kqcircuits.simulations.simulation.to_1d_list"]], "visualise_region() (kqcircuits.simulations.simulation.simulation method)": [[133, "kqcircuits.simulations.simulation.Simulation.visualise_region"]], "warn_of_small_shapes() (kqcircuits.simulations.simulation.simulation method)": [[133, "kqcircuits.simulations.simulation.Simulation.warn_of_small_shapes"]], "get_single_element_sim_class() (in module kqcircuits.simulations.single_element_simulation)": [[134, "kqcircuits.simulations.single_element_simulation.get_single_element_sim_class"]], "kqcircuits.simulations.single_element_simulation": [[134, "module-kqcircuits.simulations.single_element_simulation"]], "singlexmonsfullchipsim (class in kqcircuits.simulations.single_xmons_full_chip_sim)": [[135, "kqcircuits.simulations.single_xmons_full_chip_sim.SingleXmonsFullChipSim"]], "build() (kqcircuits.simulations.single_xmons_full_chip_sim.singlexmonsfullchipsim method)": [[135, "kqcircuits.simulations.single_xmons_full_chip_sim.SingleXmonsFullChipSim.build"]], "kqcircuits.simulations.single_xmons_full_chip_sim": [[135, "module-kqcircuits.simulations.single_xmons_full_chip_sim"]], "waveguidessim (class in kqcircuits.simulations.waveguides_sim)": [[136, "kqcircuits.simulations.waveguides_sim.WaveGuidesSim"]], "build() (kqcircuits.simulations.waveguides_sim.waveguidessim method)": [[136, "kqcircuits.simulations.waveguides_sim.WaveGuidesSim.build"]], "kqcircuits.simulations.waveguides_sim": [[136, "module-kqcircuits.simulations.waveguides_sim"]], "produce_ground_bumps() (kqcircuits.simulations.waveguides_sim.waveguidessim method)": [[136, "kqcircuits.simulations.waveguides_sim.WaveGuidesSim.produce_ground_bumps"]], "produce_guides() (kqcircuits.simulations.waveguides_sim.waveguidessim method)": [[136, "kqcircuits.simulations.waveguides_sim.WaveGuidesSim.produce_guides"]], "xmonsdirectcouplingfullchipsim (class in kqcircuits.simulations.xmons_direct_coupling_full_chip_sim)": [[137, "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim"]], "build() (kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.xmonsdirectcouplingfullchipsim method)": [[137, "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim.build"]], "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim": [[137, "module-kqcircuits.simulations.xmons_direct_coupling_full_chip_sim"]], "produce_launcher() (kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.xmonsdirectcouplingfullchipsim method)": [[137, "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim.produce_launcher"]], "produce_launchers_sma8() (kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.xmonsdirectcouplingfullchipsim method)": [[137, "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim.produce_launchers_SMA8"]], "produce_qubit() (kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.xmonsdirectcouplingfullchipsim method)": [[137, "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim.produce_qubit"]], "produce_readout_resonator() (kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.xmonsdirectcouplingfullchipsim method)": [[137, "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim.produce_readout_resonator"]], "produce_waveguide() (kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.xmonsdirectcouplingfullchipsim method)": [[137, "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim.produce_waveguide"]], "xmonsdirectcouplingsim (class in kqcircuits.simulations.xmons_direct_coupling_sim)": [[138, "kqcircuits.simulations.xmons_direct_coupling_sim.XMonsDirectCouplingSim"]], "build() (kqcircuits.simulations.xmons_direct_coupling_sim.xmonsdirectcouplingsim method)": [[138, "kqcircuits.simulations.xmons_direct_coupling_sim.XMonsDirectCouplingSim.build"]], "kqcircuits.simulations.xmons_direct_coupling_sim": [[138, "module-kqcircuits.simulations.xmons_direct_coupling_sim"]], "produce_qubits() (kqcircuits.simulations.xmons_direct_coupling_sim.xmonsdirectcouplingsim method)": [[138, "kqcircuits.simulations.xmons_direct_coupling_sim.XMonsDirectCouplingSim.produce_qubits"]], "kqcircuits.test_structures": [[139, "module-kqcircuits.test_structures"]], "airbridgedc (class in kqcircuits.test_structures.airbridge_dc)": [[140, "kqcircuits.test_structures.airbridge_dc.AirbridgeDC"]], "build() (kqcircuits.test_structures.airbridge_dc.airbridgedc method)": [[140, "kqcircuits.test_structures.airbridge_dc.AirbridgeDC.build"]], "kqcircuits.test_structures.airbridge_dc": [[140, "module-kqcircuits.test_structures.airbridge_dc"]], "crosstest (class in kqcircuits.test_structures.cross_test)": [[141, "kqcircuits.test_structures.cross_test.CrossTest"]], "build() (kqcircuits.test_structures.cross_test.crosstest method)": [[141, "kqcircuits.test_structures.cross_test.CrossTest.build"]], "kqcircuits.test_structures.cross_test": [[141, "module-kqcircuits.test_structures.cross_test"]], "kqcircuits.test_structures.junction_test_pads": [[142, "module-kqcircuits.test_structures.junction_test_pads"]], "junctiontestpads (class in kqcircuits.test_structures.junction_test_pads.junction_test_pads)": [[143, "kqcircuits.test_structures.junction_test_pads.junction_test_pads.JunctionTestPads"]], "create() (kqcircuits.test_structures.junction_test_pads.junction_test_pads.junctiontestpads class method)": [[143, "kqcircuits.test_structures.junction_test_pads.junction_test_pads.JunctionTestPads.create"]], "default_type (kqcircuits.test_structures.junction_test_pads.junction_test_pads.junctiontestpads attribute)": [[143, "kqcircuits.test_structures.junction_test_pads.junction_test_pads.JunctionTestPads.default_type"]], "kqcircuits.test_structures.junction_test_pads.junction_test_pads": [[143, "module-kqcircuits.test_structures.junction_test_pads.junction_test_pads"]], "produce_squid() (kqcircuits.test_structures.junction_test_pads.junction_test_pads.junctiontestpads method)": [[143, "kqcircuits.test_structures.junction_test_pads.junction_test_pads.JunctionTestPads.produce_squid"]], "junctiontestpadssimple (class in kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple)": [[144, "kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple.JunctionTestPadsSimple"]], "build() (kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple.junctiontestpadssimple method)": [[144, "kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple.JunctionTestPadsSimple.build"]], "kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple": [[144, "module-kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple"]], "stripestest (class in kqcircuits.test_structures.stripes_test)": [[145, "kqcircuits.test_structures.stripes_test.StripesTest"]], "build() (kqcircuits.test_structures.stripes_test.stripestest method)": [[145, "kqcircuits.test_structures.stripes_test.StripesTest.build"]], "kqcircuits.test_structures.stripes_test": [[145, "module-kqcircuits.test_structures.stripes_test"]], "stripestestincreasingwidth (class in kqcircuits.test_structures.stripes_test_increasing_width)": [[146, "kqcircuits.test_structures.stripes_test_increasing_width.StripesTestIncreasingWidth"]], "build() (kqcircuits.test_structures.stripes_test_increasing_width.stripestestincreasingwidth method)": [[146, "kqcircuits.test_structures.stripes_test_increasing_width.StripesTestIncreasingWidth.build"]], "kqcircuits.test_structures.stripes_test_increasing_width": [[146, "module-kqcircuits.test_structures.stripes_test_increasing_width"]], "library_description (kqcircuits.test_structures.test_structure.teststructure attribute)": [[147, "kqcircuits.test_structures.test_structure.TestStructure.LIBRARY_DESCRIPTION"]], "library_name (kqcircuits.test_structures.test_structure.teststructure attribute)": [[147, "kqcircuits.test_structures.test_structure.TestStructure.LIBRARY_NAME"]], "library_path (kqcircuits.test_structures.test_structure.teststructure attribute)": [[147, "kqcircuits.test_structures.test_structure.TestStructure.LIBRARY_PATH"]], "teststructure (class in kqcircuits.test_structures.test_structure)": [[147, "kqcircuits.test_structures.test_structure.TestStructure"]], "kqcircuits.test_structures.test_structure": [[147, "module-kqcircuits.test_structures.test_structure"]], "produce_etched_region() (kqcircuits.test_structures.test_structure.teststructure method)": [[147, "kqcircuits.test_structures.test_structure.TestStructure.produce_etched_region"]], "produce_four_point_pads() (kqcircuits.test_structures.test_structure.teststructure method)": [[147, "kqcircuits.test_structures.test_structure.TestStructure.produce_four_point_pads"]], "produce_pad() (kqcircuits.test_structures.test_structure.teststructure method)": [[147, "kqcircuits.test_structures.test_structure.TestStructure.produce_pad"]], "tsvtestpattern (class in kqcircuits.test_structures.tsv_test_pattern)": [[148, "kqcircuits.test_structures.tsv_test_pattern.TsvTestPattern"]], "build() (kqcircuits.test_structures.tsv_test_pattern.tsvtestpattern method)": [[148, "kqcircuits.test_structures.tsv_test_pattern.TsvTestPattern.build"]], "kqcircuits.test_structures.tsv_test_pattern": [[148, "module-kqcircuits.test_structures.tsv_test_pattern"]], "kqcircuits.util": [[149, "module-kqcircuits.util"]], "areareceiver (class in kqcircuits.util.area)": [[150, "kqcircuits.util.area.AreaReceiver"]], "get_area_and_density() (in module kqcircuits.util.area)": [[150, "kqcircuits.util.area.get_area_and_density"]], "kqcircuits.util.area": [[150, "module-kqcircuits.util.area"]], "put() (kqcircuits.util.area.areareceiver method)": [[150, "kqcircuits.util.area.AreaReceiver.put"]], "count_instances_in_cell() (in module kqcircuits.util.count_instances)": [[151, "kqcircuits.util.count_instances.count_instances_in_cell"]], "kqcircuits.util.count_instances": [[151, "module-kqcircuits.util.count_instances"]], "cap_params() (in module kqcircuits.util.coupler_lib)": [[152, "kqcircuits.util.coupler_lib.cap_params"]], "kqcircuits.util.coupler_lib": [[152, "module-kqcircuits.util.coupler_lib"]], "deep_delete_all() (in module kqcircuits.util.deep_delete)": [[153, "kqcircuits.util.deep_delete.deep_delete_all"]], "deep_delete_pcells() (in module kqcircuits.util.deep_delete)": [[153, "kqcircuits.util.deep_delete.deep_delete_pcells"]], "kqcircuits.util.deep_delete": [[153, "module-kqcircuits.util.deep_delete"]], "find_ansys_executable() (in module kqcircuits.util.defaults_helper)": [[154, "kqcircuits.util.defaults_helper.find_ansys_executable"]], "kqcircuits.util.defaults_helper": [[154, "module-kqcircuits.util.defaults_helper"]], "install_kqc_gui_dependencies() (in module kqcircuits.util.dependencies)": [[155, "kqcircuits.util.dependencies.install_kqc_gui_dependencies"]], "kqcircuits.util.dependencies": [[155, "module-kqcircuits.util.dependencies"]], "editnodeplugin (class in kqcircuits.util.edit_node_plugin)": [[156, "kqcircuits.util.edit_node_plugin.EditNodePlugin"]], "editnodepluginfactory (class in kqcircuits.util.edit_node_plugin)": [[156, "kqcircuits.util.edit_node_plugin.EditNodePluginFactory"]], "activated() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[156, "kqcircuits.util.edit_node_plugin.EditNodePlugin.activated"]], "create_dialog() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[156, "kqcircuits.util.edit_node_plugin.EditNodePlugin.create_dialog"]], "create_plugin() (kqcircuits.util.edit_node_plugin.editnodepluginfactory method)": [[156, "kqcircuits.util.edit_node_plugin.EditNodePluginFactory.create_plugin"]], "deactivated() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[156, "kqcircuits.util.edit_node_plugin.EditNodePlugin.deactivated"]], "deselect() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[156, "kqcircuits.util.edit_node_plugin.EditNodePlugin.deselect"]], "has_tracking_position() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[156, "kqcircuits.util.edit_node_plugin.EditNodePlugin.has_tracking_position"]], "kqcircuits.util.edit_node_plugin": [[156, "module-kqcircuits.util.edit_node_plugin"]], "mouse_click_event() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[156, "kqcircuits.util.edit_node_plugin.EditNodePlugin.mouse_click_event"]], "mouse_moved_event() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[156, "kqcircuits.util.edit_node_plugin.EditNodePlugin.mouse_moved_event"]], "select() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[156, "kqcircuits.util.edit_node_plugin.EditNodePlugin.select"]], "tracking_position() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[156, "kqcircuits.util.edit_node_plugin.EditNodePlugin.tracking_position"]], "update() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[156, "kqcircuits.util.edit_node_plugin.EditNodePlugin.update"]], "update_form_from_node() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[156, "kqcircuits.util.edit_node_plugin.EditNodePlugin.update_form_from_node"]], "update_node_from_form() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[156, "kqcircuits.util.edit_node_plugin.EditNodePlugin.update_node_from_form"]], "create_or_empty_tmp_directory() (in module kqcircuits.util.export_helper)": [[157, "kqcircuits.util.export_helper.create_or_empty_tmp_directory"]], "export_drc_report() (in module kqcircuits.util.export_helper)": [[157, "kqcircuits.util.export_helper.export_drc_report"]], "generate_probepoints_from_file() (in module kqcircuits.util.export_helper)": [[157, "kqcircuits.util.export_helper.generate_probepoints_from_file"]], "generate_probepoints_json() (in module kqcircuits.util.export_helper)": [[157, "kqcircuits.util.export_helper.generate_probepoints_json"]], "get_active_or_new_layout() (in module kqcircuits.util.export_helper)": [[157, "kqcircuits.util.export_helper.get_active_or_new_layout"]], "get_klayout_version() (in module kqcircuits.util.export_helper)": [[157, "kqcircuits.util.export_helper.get_klayout_version"]], "get_simulation_directory() (in module kqcircuits.util.export_helper)": [[157, "kqcircuits.util.export_helper.get_simulation_directory"]], "kqcircuits.util.export_helper": [[157, "module-kqcircuits.util.export_helper"]], "open_with_klayout_or_default_application() (in module kqcircuits.util.export_helper)": [[157, "kqcircuits.util.export_helper.open_with_klayout_or_default_application"]], "write_commit_reference_file() (in module kqcircuits.util.export_helper)": [[157, "kqcircuits.util.export_helper.write_commit_reference_file"]], "write_export_machine_versions_file() (in module kqcircuits.util.export_helper)": [[157, "kqcircuits.util.export_helper.write_export_machine_versions_file"]], "arc_points() (in module kqcircuits.util.geometry_helper)": [[158, "kqcircuits.util.geometry_helper.arc_points"]], "bezier_points() (in module kqcircuits.util.geometry_helper)": [[158, "kqcircuits.util.geometry_helper.bezier_points"]], "bspline_points() (in module kqcircuits.util.geometry_helper)": [[158, "kqcircuits.util.geometry_helper.bspline_points"]], "circle_polygon() (in module kqcircuits.util.geometry_helper)": [[158, "kqcircuits.util.geometry_helper.circle_polygon"]], "force_rounded_corners() (in module kqcircuits.util.geometry_helper)": [[158, "kqcircuits.util.geometry_helper.force_rounded_corners"]], "get_angle() (in module kqcircuits.util.geometry_helper)": [[158, "kqcircuits.util.geometry_helper.get_angle"]], "get_cell_path_length() (in module kqcircuits.util.geometry_helper)": [[158, "kqcircuits.util.geometry_helper.get_cell_path_length"]], "get_direction() (in module kqcircuits.util.geometry_helper)": [[158, "kqcircuits.util.geometry_helper.get_direction"]], "get_object_path_length() (in module kqcircuits.util.geometry_helper)": [[158, "kqcircuits.util.geometry_helper.get_object_path_length"]], "is_clockwise() (in module kqcircuits.util.geometry_helper)": [[158, "kqcircuits.util.geometry_helper.is_clockwise"]], "kqcircuits.util.geometry_helper": [[158, "module-kqcircuits.util.geometry_helper"]], "merge_points_and_match_on_edges() (in module kqcircuits.util.geometry_helper)": [[158, "kqcircuits.util.geometry_helper.merge_points_and_match_on_edges"]], "point_shift_along_vector() (in module kqcircuits.util.geometry_helper)": [[158, "kqcircuits.util.geometry_helper.point_shift_along_vector"]], "region_with_merged_points() (in module kqcircuits.util.geometry_helper)": [[158, "kqcircuits.util.geometry_helper.region_with_merged_points"]], "region_with_merged_polygons() (in module kqcircuits.util.geometry_helper)": [[158, "kqcircuits.util.geometry_helper.region_with_merged_polygons"]], "simple_region() (in module kqcircuits.util.geometry_helper)": [[158, "kqcircuits.util.geometry_helper.simple_region"]], "vector_length_and_direction() (in module kqcircuits.util.geometry_helper)": [[158, "kqcircuits.util.geometry_helper.vector_length_and_direction"]], "geometryjsondecoder (class in kqcircuits.util.geometry_json_encoder)": [[159, "kqcircuits.util.geometry_json_encoder.GeometryJsonDecoder"]], "geometryjsonencoder (class in kqcircuits.util.geometry_json_encoder)": [[159, "kqcircuits.util.geometry_json_encoder.GeometryJsonEncoder"]], "decode_dict_as_python_obj() (in module kqcircuits.util.geometry_json_encoder)": [[159, "kqcircuits.util.geometry_json_encoder.decode_dict_as_python_obj"]], "default() (kqcircuits.util.geometry_json_encoder.geometryjsonencoder method)": [[159, "kqcircuits.util.geometry_json_encoder.GeometryJsonEncoder.default"]], "encode_python_obj_as_dict() (in module kqcircuits.util.geometry_json_encoder)": [[159, "kqcircuits.util.geometry_json_encoder.encode_python_obj_as_dict"]], "kqcircuits.util.geometry_json_encoder": [[159, "module-kqcircuits.util.geometry_json_encoder"]], "kqcircuits.util.groundgrid": [[160, "module-kqcircuits.util.groundgrid"]], "make_grid() (in module kqcircuits.util.groundgrid)": [[160, "kqcircuits.util.groundgrid.make_grid"]], "get_all_node_elements() (in module kqcircuits.util.gui_helper)": [[161, "kqcircuits.util.gui_helper.get_all_node_elements"]], "get_nodes_near_position() (in module kqcircuits.util.gui_helper)": [[161, "kqcircuits.util.gui_helper.get_nodes_near_position"]], "get_valid_node_elements() (in module kqcircuits.util.gui_helper)": [[161, "kqcircuits.util.gui_helper.get_valid_node_elements"]], "kqcircuits.util.gui_helper": [[161, "module-kqcircuits.util.gui_helper"]], "node_from_text() (in module kqcircuits.util.gui_helper)": [[161, "kqcircuits.util.gui_helper.node_from_text"]], "node_to_text() (in module kqcircuits.util.gui_helper)": [[161, "kqcircuits.util.gui_helper.node_to_text"]], "replace_node() (in module kqcircuits.util.gui_helper)": [[161, "kqcircuits.util.gui_helper.replace_node"]], "kqcircuits.util.import_helper": [[162, "module-kqcircuits.util.import_helper"]], "module_from_file() (in module kqcircuits.util.import_helper)": [[162, "kqcircuits.util.import_helper.module_from_file"]], "bottomleft (kqcircuits.util.label.labelorigin attribute)": [[163, "kqcircuits.util.label.LabelOrigin.BOTTOMLEFT"]], "bottomright (kqcircuits.util.label.labelorigin attribute)": [[163, "kqcircuits.util.label.LabelOrigin.BOTTOMRIGHT"]], "labelorigin (class in kqcircuits.util.label)": [[163, "kqcircuits.util.label.LabelOrigin"]], "topleft (kqcircuits.util.label.labelorigin attribute)": [[163, "kqcircuits.util.label.LabelOrigin.TOPLEFT"]], "topright (kqcircuits.util.label.labelorigin attribute)": [[163, "kqcircuits.util.label.LabelOrigin.TOPRIGHT"]], "kqcircuits.util.label": [[163, "module-kqcircuits.util.label"]], "produce_label() (in module kqcircuits.util.label)": [[163, "kqcircuits.util.label.produce_label"]], "get_text_polygon() (in module kqcircuits.util.label_polygons)": [[164, "kqcircuits.util.label_polygons.get_text_polygon"]], "kqcircuits.util.label_polygons": [[164, "module-kqcircuits.util.label_polygons"]], "load_font_polygons() (in module kqcircuits.util.label_polygons)": [[164, "kqcircuits.util.label_polygons.load_font_polygons"]], "convert_cells_to_code() (in module kqcircuits.util.layout_to_code)": [[165, "kqcircuits.util.layout_to_code.convert_cells_to_code"]], "extract_pcell_data_from_views() (in module kqcircuits.util.layout_to_code)": [[165, "kqcircuits.util.layout_to_code.extract_pcell_data_from_views"]], "get_node_params() (in module kqcircuits.util.layout_to_code)": [[165, "kqcircuits.util.layout_to_code.get_node_params"]], "kqcircuits.util.layout_to_code": [[165, "module-kqcircuits.util.layout_to_code"]], "restore_pcells_to_views() (in module kqcircuits.util.layout_to_code)": [[165, "kqcircuits.util.layout_to_code.restore_pcells_to_views"]], "delete_all_libraries() (in module kqcircuits.util.library_helper)": [[166, "kqcircuits.util.library_helper.delete_all_libraries"]], "delete_library() (in module kqcircuits.util.library_helper)": [[166, "kqcircuits.util.library_helper.delete_library"]], "element_by_class_name() (in module kqcircuits.util.library_helper)": [[166, "kqcircuits.util.library_helper.element_by_class_name"]], "get_library_paths() (in module kqcircuits.util.library_helper)": [[166, "kqcircuits.util.library_helper.get_library_paths"]], "kqcircuits.util.library_helper": [[166, "module-kqcircuits.util.library_helper"]], "load_libraries() (in module kqcircuits.util.library_helper)": [[166, "kqcircuits.util.library_helper.load_libraries"]], "to_library_name() (in module kqcircuits.util.library_helper)": [[166, "kqcircuits.util.library_helper.to_library_name"]], "to_module_name() (in module kqcircuits.util.library_helper)": [[166, "kqcircuits.util.library_helper.to_module_name"]], "kqcircuits.util.load_save_layout": [[167, "module-kqcircuits.util.load_save_layout"]], "load_layout() (in module kqcircuits.util.load_save_layout)": [[167, "kqcircuits.util.load_save_layout.load_layout"]], "save_layout() (in module kqcircuits.util.load_save_layout)": [[167, "kqcircuits.util.load_save_layout.save_layout"]], "kqcircuits.util.log_router": [[168, "module-kqcircuits.util.log_router"]], "route_log() (in module kqcircuits.util.log_router)": [[168, "kqcircuits.util.log_router.route_log"]], "convert_child_instances_to_static() (in module kqcircuits.util.merge)": [[169, "kqcircuits.util.merge.convert_child_instances_to_static"]], "kqcircuits.util.merge": [[169, "module-kqcircuits.util.merge"]], "merge_layers() (in module kqcircuits.util.merge)": [[169, "kqcircuits.util.merge.merge_layers"]], "merge_layout_layers_on_face() (in module kqcircuits.util.merge)": [[169, "kqcircuits.util.merge.merge_layout_layers_on_face"]], "export_cell_netlist() (in module kqcircuits.util.netlist_extraction)": [[170, "kqcircuits.util.netlist_extraction.export_cell_netlist"]], "extract_circuits() (in module kqcircuits.util.netlist_extraction)": [[170, "kqcircuits.util.netlist_extraction.extract_circuits"]], "extract_nets() (in module kqcircuits.util.netlist_extraction)": [[170, "kqcircuits.util.netlist_extraction.extract_nets"]], "kqcircuits.util.netlist_extraction": [[170, "module-kqcircuits.util.netlist_extraction"]], "draw_graph() (in module kqcircuits.util.netlist_graph)": [[171, "kqcircuits.util.netlist_graph.draw_graph"]], "kqcircuits.util.netlist_graph": [[171, "module-kqcircuits.util.netlist_graph"]], "network_as_graph() (in module kqcircuits.util.netlist_graph)": [[171, "kqcircuits.util.netlist_graph.network_as_graph"]], "param (class in kqcircuits.util.parameters)": [[172, "kqcircuits.util.parameters.Param"]], "typeboolean (kqcircuits.util.parameters.pdt attribute)": [[172, "kqcircuits.util.parameters.pdt.TypeBoolean"]], "typedouble (kqcircuits.util.parameters.pdt attribute)": [[172, "kqcircuits.util.parameters.pdt.TypeDouble"]], "typeint (kqcircuits.util.parameters.pdt attribute)": [[172, "kqcircuits.util.parameters.pdt.TypeInt"]], "typelayer (kqcircuits.util.parameters.pdt attribute)": [[172, "kqcircuits.util.parameters.pdt.TypeLayer"]], "typelist (kqcircuits.util.parameters.pdt attribute)": [[172, "kqcircuits.util.parameters.pdt.TypeList"]], "typenone (kqcircuits.util.parameters.pdt attribute)": [[172, "kqcircuits.util.parameters.pdt.TypeNone"]], "typeshape (kqcircuits.util.parameters.pdt attribute)": [[172, "kqcircuits.util.parameters.pdt.TypeShape"]], "typestring (kqcircuits.util.parameters.pdt attribute)": [[172, "kqcircuits.util.parameters.pdt.TypeString"]], "add_parameter() (in module kqcircuits.util.parameters)": [[172, "kqcircuits.util.parameters.add_parameter"]], "add_parameters_from() (in module kqcircuits.util.parameters)": [[172, "kqcircuits.util.parameters.add_parameters_from"]], "get_all() (kqcircuits.util.parameters.param class method)": [[172, "kqcircuits.util.parameters.Param.get_all"]], "kqcircuits.util.parameters": [[172, "module-kqcircuits.util.parameters"]], "pdt (class in kqcircuits.util.parameters)": [[172, "kqcircuits.util.parameters.pdt"]], "kqcircuits.util.plugin_startup": [[173, "module-kqcircuits.util.plugin_startup"]], "register_plugins() (in module kqcircuits.util.plugin_startup)": [[173, "kqcircuits.util.plugin_startup.register_plugins"]], "junctionsimport (class in kqcircuits.util.refpoints)": [[174, "kqcircuits.util.refpoints.JunctionSimPort"]], "refpointtoedgeport (class in kqcircuits.util.refpoints)": [[174, "kqcircuits.util.refpoints.RefpointToEdgePort"]], "refpointtointernalport (class in kqcircuits.util.refpoints)": [[174, "kqcircuits.util.refpoints.RefpointToInternalPort"]], "refpointtosimport (class in kqcircuits.util.refpoints)": [[174, "kqcircuits.util.refpoints.RefpointToSimPort"]], "refpoints (class in kqcircuits.util.refpoints)": [[174, "kqcircuits.util.refpoints.Refpoints"]], "waveguidetosimport (class in kqcircuits.util.refpoints)": [[174, "kqcircuits.util.refpoints.WaveguideToSimPort"]], "a (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[174, "kqcircuits.util.refpoints.WaveguideToSimPort.a"]], "airbridge (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[174, "kqcircuits.util.refpoints.WaveguideToSimPort.airbridge"]], "b (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[174, "kqcircuits.util.refpoints.WaveguideToSimPort.b"]], "cell (kqcircuits.util.refpoints.refpoints attribute)": [[174, "kqcircuits.util.refpoints.Refpoints.cell"]], "deembed_cross_section (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[174, "kqcircuits.util.refpoints.WaveguideToSimPort.deembed_cross_section"]], "dict() (kqcircuits.util.refpoints.refpoints method)": [[174, "kqcircuits.util.refpoints.Refpoints.dict"]], "face (kqcircuits.util.refpoints.junctionsimport attribute)": [[174, "kqcircuits.util.refpoints.JunctionSimPort.face"]], "face (kqcircuits.util.refpoints.refpointtosimport attribute)": [[174, "kqcircuits.util.refpoints.RefpointToSimPort.face"]], "face (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[174, "kqcircuits.util.refpoints.WaveguideToSimPort.face"]], "floating (kqcircuits.util.refpoints.junctionsimport attribute)": [[174, "kqcircuits.util.refpoints.JunctionSimPort.floating"]], "items() (kqcircuits.util.refpoints.refpoints method)": [[174, "kqcircuits.util.refpoints.Refpoints.items"]], "keys() (kqcircuits.util.refpoints.refpoints method)": [[174, "kqcircuits.util.refpoints.Refpoints.keys"]], "kqcircuits.util.refpoints": [[174, "module-kqcircuits.util.refpoints"]], "layer (kqcircuits.util.refpoints.refpoints attribute)": [[174, "kqcircuits.util.refpoints.Refpoints.layer"]], "other_refpoint (kqcircuits.util.refpoints.junctionsimport attribute)": [[174, "kqcircuits.util.refpoints.JunctionSimPort.other_refpoint"]], "over_etching (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[174, "kqcircuits.util.refpoints.WaveguideToSimPort.over_etching"]], "rec_levels (kqcircuits.util.refpoints.refpoints attribute)": [[174, "kqcircuits.util.refpoints.Refpoints.rec_levels"]], "refpoint (kqcircuits.util.refpoints.junctionsimport attribute)": [[174, "kqcircuits.util.refpoints.JunctionSimPort.refpoint"]], "refpoint (kqcircuits.util.refpoints.refpointtosimport attribute)": [[174, "kqcircuits.util.refpoints.RefpointToSimPort.refpoint"]], "refpoint (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[174, "kqcircuits.util.refpoints.WaveguideToSimPort.refpoint"]], "side (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[174, "kqcircuits.util.refpoints.WaveguideToSimPort.side"]], "term1 (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[174, "kqcircuits.util.refpoints.WaveguideToSimPort.term1"]], "towards (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[174, "kqcircuits.util.refpoints.WaveguideToSimPort.towards"]], "trans (kqcircuits.util.refpoints.refpoints attribute)": [[174, "kqcircuits.util.refpoints.Refpoints.trans"]], "turn_radius (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[174, "kqcircuits.util.refpoints.WaveguideToSimPort.turn_radius"]], "use_internal_ports (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[174, "kqcircuits.util.refpoints.WaveguideToSimPort.use_internal_ports"]], "values() (kqcircuits.util.refpoints.refpoints method)": [[174, "kqcircuits.util.refpoints.Refpoints.values"]], "waveguide_length (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[174, "kqcircuits.util.refpoints.WaveguideToSimPort.waveguide_length"]], "junctionentry (class in kqcircuits.util.replace_junctions)": [[175, "kqcircuits.util.replace_junctions.JunctionEntry"]], "check_static_cell_has_junctions() (in module kqcircuits.util.replace_junctions)": [[175, "kqcircuits.util.replace_junctions.check_static_cell_has_junctions"]], "convert_cells_to_static() (in module kqcircuits.util.replace_junctions)": [[175, "kqcircuits.util.replace_junctions.convert_cells_to_static"]], "copy_one_layer_of_cell() (in module kqcircuits.util.replace_junctions)": [[175, "kqcircuits.util.replace_junctions.copy_one_layer_of_cell"]], "extract_junctions() (in module kqcircuits.util.replace_junctions)": [[175, "kqcircuits.util.replace_junctions.extract_junctions"]], "get_tuned_junction_json() (in module kqcircuits.util.replace_junctions)": [[175, "kqcircuits.util.replace_junctions.get_tuned_junction_json"]], "kqcircuits.util.replace_junctions": [[175, "module-kqcircuits.util.replace_junctions"]], "place_junctions() (in module kqcircuits.util.replace_junctions)": [[175, "kqcircuits.util.replace_junctions.place_junctions"]], "replace_squid() (in module kqcircuits.util.replace_junctions)": [[175, "kqcircuits.util.replace_junctions.replace_squid"]], "replace_squids() (in module kqcircuits.util.replace_junctions)": [[175, "kqcircuits.util.replace_junctions.replace_squids"]], "kqcircuits.util.symmetric_polygons": [[176, "module-kqcircuits.util.symmetric_polygons"]], "polygon_with_hsym() (in module kqcircuits.util.symmetric_polygons)": [[176, "kqcircuits.util.symmetric_polygons.polygon_with_hsym"]], "polygon_with_sym() (in module kqcircuits.util.symmetric_polygons)": [[176, "kqcircuits.util.symmetric_polygons.polygon_with_sym"]], "polygon_with_vsym() (in module kqcircuits.util.symmetric_polygons)": [[176, "kqcircuits.util.symmetric_polygons.polygon_with_vsym"]]}})