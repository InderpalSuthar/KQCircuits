Search.setIndex({"docnames": ["about", "api/kqcircuits", "api/kqcircuits.chips", "api/kqcircuits.chips.airbridge_crossings", "api/kqcircuits.chips.airbridge_dc_test", "api/kqcircuits.chips.chip", "api/kqcircuits.chips.crossing_twoface", "api/kqcircuits.chips.daisy_woven", "api/kqcircuits.chips.dc_test", "api/kqcircuits.chips.demo", "api/kqcircuits.chips.demo_twoface", "api/kqcircuits.chips.empty", "api/kqcircuits.chips.junction_test", "api/kqcircuits.chips.junction_test2", "api/kqcircuits.chips.launchers", "api/kqcircuits.chips.lithography_test", "api/kqcircuits.chips.lithography_test_twoface", "api/kqcircuits.chips.munch_qubits", "api/kqcircuits.chips.quality_factor", "api/kqcircuits.chips.quality_factor_twoface", "api/kqcircuits.chips.sample_holder_test", "api/kqcircuits.chips.shaping", "api/kqcircuits.chips.simple", "api/kqcircuits.chips.single_xmons", "api/kqcircuits.chips.stripes", "api/kqcircuits.chips.tsv_test", "api/kqcircuits.chips.xmons_direct_coupling", "api/kqcircuits.defaults", "api/kqcircuits.elements", "api/kqcircuits.elements.airbridge_connection", "api/kqcircuits.elements.airbridges", "api/kqcircuits.elements.airbridges.airbridge", "api/kqcircuits.elements.airbridges.airbridge_multi_face", "api/kqcircuits.elements.airbridges.airbridge_rectangular", "api/kqcircuits.elements.capacitive_x_coupler", "api/kqcircuits.elements.chip_frame", "api/kqcircuits.elements.circular_capacitor", "api/kqcircuits.elements.element", "api/kqcircuits.elements.finger_capacitor_square", "api/kqcircuits.elements.finger_capacitor_taper", "api/kqcircuits.elements.flip_chip_connectors", "api/kqcircuits.elements.flip_chip_connectors.flip_chip_connector", "api/kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc", "api/kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf", "api/kqcircuits.elements.fluxlines", "api/kqcircuits.elements.fluxlines.fluxline", "api/kqcircuits.elements.fluxlines.fluxline_standard", "api/kqcircuits.elements.fluxlines.fluxline_straight", "api/kqcircuits.elements.hanger_resonator", "api/kqcircuits.elements.launcher", "api/kqcircuits.elements.launcher_dc", "api/kqcircuits.elements.markers", "api/kqcircuits.elements.markers.marker", "api/kqcircuits.elements.markers.marker_standard", "api/kqcircuits.elements.markers.mask_marker_fc", "api/kqcircuits.elements.meander", "api/kqcircuits.elements.quarter_wave_cpw_resonator", "api/kqcircuits.elements.smooth_capacitor", "api/kqcircuits.elements.spiral_resonator_polygon", "api/kqcircuits.elements.tsvs", "api/kqcircuits.elements.tsvs.tsv", "api/kqcircuits.elements.tsvs.tsv_ellipse", "api/kqcircuits.elements.tsvs.tsv_standard", "api/kqcircuits.elements.waveguide_composite", "api/kqcircuits.elements.waveguide_coplanar", "api/kqcircuits.elements.waveguide_coplanar_curved", "api/kqcircuits.elements.waveguide_coplanar_splitter", "api/kqcircuits.elements.waveguide_coplanar_straight", "api/kqcircuits.elements.waveguide_coplanar_taper", "api/kqcircuits.junctions", "api/kqcircuits.junctions.junction", "api/kqcircuits.junctions.manhattan", "api/kqcircuits.junctions.manhattan_single_junction", "api/kqcircuits.junctions.no_squid", "api/kqcircuits.junctions.sim", "api/kqcircuits.junctions.squid", "api/kqcircuits.klayout_view", "api/kqcircuits.layer_cluster", "api/kqcircuits.layer_config", "api/kqcircuits.layer_config.default_layer_config", "api/kqcircuits.layer_config.example_layer_config", "api/kqcircuits.masks", "api/kqcircuits.masks.mask_export", "api/kqcircuits.masks.mask_layout", "api/kqcircuits.masks.mask_set", "api/kqcircuits.masks.multi_face_mask_layout", "api/kqcircuits.pya_resolver", "api/kqcircuits.qubits", "api/kqcircuits.qubits.circular_transmon_single_island", "api/kqcircuits.qubits.concentric_transmon", "api/kqcircuits.qubits.double_pads", "api/kqcircuits.qubits.double_pads_splines", "api/kqcircuits.qubits.qubit", "api/kqcircuits.qubits.swissmon", "api/kqcircuits.run", "api/kqcircuits.simulations", "api/kqcircuits.simulations.airbridges_sim", "api/kqcircuits.simulations.cross_section_simulation", "api/kqcircuits.simulations.empty_simulation", "api/kqcircuits.simulations.epr", "api/kqcircuits.simulations.epr.example", "api/kqcircuits.simulations.epr.smooth_capacitor", "api/kqcircuits.simulations.epr.swissmon", "api/kqcircuits.simulations.epr.utils", "api/kqcircuits.simulations.export", "api/kqcircuits.simulations.export.ansys", "api/kqcircuits.simulations.export.ansys.ansys_export", "api/kqcircuits.simulations.export.ansys.ansys_solution", "api/kqcircuits.simulations.export.elmer", "api/kqcircuits.simulations.export.elmer.elmer_export", "api/kqcircuits.simulations.export.elmer.elmer_solution", "api/kqcircuits.simulations.export.export_and_run", "api/kqcircuits.simulations.export.export_singularity", "api/kqcircuits.simulations.export.remote_export_and_run", "api/kqcircuits.simulations.export.simulation_export", "api/kqcircuits.simulations.export.simulation_validate", "api/kqcircuits.simulations.export.solution", "api/kqcircuits.simulations.export.sonnet", "api/kqcircuits.simulations.export.sonnet.parser", "api/kqcircuits.simulations.export.sonnet.sonnet_export", "api/kqcircuits.simulations.export.util", "api/kqcircuits.simulations.export.xsection", "api/kqcircuits.simulations.export.xsection.epr_correction_export", "api/kqcircuits.simulations.export.xsection.xsection_export", "api/kqcircuits.simulations.partition_region", "api/kqcircuits.simulations.port", "api/kqcircuits.simulations.post_process", "api/kqcircuits.simulations.simulation", "api/kqcircuits.simulations.single_element_simulation", "api/kqcircuits.simulations.single_xmons_full_chip_sim", "api/kqcircuits.simulations.waveguides_sim", "api/kqcircuits.simulations.xmons_direct_coupling_full_chip_sim", "api/kqcircuits.simulations.xmons_direct_coupling_sim", "api/kqcircuits.test_structures", "api/kqcircuits.test_structures.airbridge_dc", "api/kqcircuits.test_structures.cross_test", "api/kqcircuits.test_structures.junction_test_pads", "api/kqcircuits.test_structures.junction_test_pads.junction_test_pads", "api/kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple", "api/kqcircuits.test_structures.stripes_test", "api/kqcircuits.test_structures.stripes_test_increasing_width", "api/kqcircuits.test_structures.test_structure", "api/kqcircuits.test_structures.tsv_test_pattern", "api/kqcircuits.util", "api/kqcircuits.util.area", "api/kqcircuits.util.count_instances", "api/kqcircuits.util.coupler_lib", "api/kqcircuits.util.deep_delete", "api/kqcircuits.util.defaults_helper", "api/kqcircuits.util.dependencies", "api/kqcircuits.util.edit_node_plugin", "api/kqcircuits.util.export_helper", "api/kqcircuits.util.geometry_helper", "api/kqcircuits.util.geometry_json_encoder", "api/kqcircuits.util.groundgrid", "api/kqcircuits.util.gui_helper", "api/kqcircuits.util.import_helper", "api/kqcircuits.util.label", "api/kqcircuits.util.label_polygons", "api/kqcircuits.util.layout_to_code", "api/kqcircuits.util.library_helper", "api/kqcircuits.util.log_router", "api/kqcircuits.util.merge", "api/kqcircuits.util.netlist_extraction", "api/kqcircuits.util.netlist_graph", "api/kqcircuits.util.parameters", "api/kqcircuits.util.plugin_startup", "api/kqcircuits.util.refpoints", "api/kqcircuits.util.replace_junctions", "api/kqcircuits.util.symmetric_polygons", "citing", "contributing", "developer/architecture", "developer/coding_style", "developer/containers", "developer/documentation", "developer/index", "developer/setup", "developer/standalone", "developer/testing", "index", "installation", "salt", "support", "trademarks", "user_guide/file_system_and_utilities", "user_guide/gui_features", "user_guide/gui_workflow", "user_guide/index", "user_guide/macro_workflow", "user_guide/mask_export", "user_guide/python_workflow", "user_guide/simulation/elmer_remote_workflow", "user_guide/simulation/export_and_run", "user_guide/simulation/gmsh_elmer_export", "user_guide/simulation/simulation_features", "user_guide/simulation/simulation_objects", "user_guide/simulation/simulation_scripts", "user_guide/simulations", "user_guide/terminology", "user_guide/usage", "user_guide/xsection"], "filenames": ["about.rst", "api/kqcircuits.rst", "api/kqcircuits.chips.rst", "api/kqcircuits.chips.airbridge_crossings.rst", "api/kqcircuits.chips.airbridge_dc_test.rst", "api/kqcircuits.chips.chip.rst", "api/kqcircuits.chips.crossing_twoface.rst", "api/kqcircuits.chips.daisy_woven.rst", "api/kqcircuits.chips.dc_test.rst", "api/kqcircuits.chips.demo.rst", "api/kqcircuits.chips.demo_twoface.rst", "api/kqcircuits.chips.empty.rst", "api/kqcircuits.chips.junction_test.rst", "api/kqcircuits.chips.junction_test2.rst", "api/kqcircuits.chips.launchers.rst", "api/kqcircuits.chips.lithography_test.rst", "api/kqcircuits.chips.lithography_test_twoface.rst", "api/kqcircuits.chips.munch_qubits.rst", "api/kqcircuits.chips.quality_factor.rst", "api/kqcircuits.chips.quality_factor_twoface.rst", "api/kqcircuits.chips.sample_holder_test.rst", "api/kqcircuits.chips.shaping.rst", "api/kqcircuits.chips.simple.rst", "api/kqcircuits.chips.single_xmons.rst", "api/kqcircuits.chips.stripes.rst", "api/kqcircuits.chips.tsv_test.rst", "api/kqcircuits.chips.xmons_direct_coupling.rst", "api/kqcircuits.defaults.rst", "api/kqcircuits.elements.rst", "api/kqcircuits.elements.airbridge_connection.rst", "api/kqcircuits.elements.airbridges.rst", "api/kqcircuits.elements.airbridges.airbridge.rst", "api/kqcircuits.elements.airbridges.airbridge_multi_face.rst", "api/kqcircuits.elements.airbridges.airbridge_rectangular.rst", "api/kqcircuits.elements.capacitive_x_coupler.rst", "api/kqcircuits.elements.chip_frame.rst", "api/kqcircuits.elements.circular_capacitor.rst", "api/kqcircuits.elements.element.rst", "api/kqcircuits.elements.finger_capacitor_square.rst", "api/kqcircuits.elements.finger_capacitor_taper.rst", "api/kqcircuits.elements.flip_chip_connectors.rst", "api/kqcircuits.elements.flip_chip_connectors.flip_chip_connector.rst", "api/kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc.rst", "api/kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf.rst", "api/kqcircuits.elements.fluxlines.rst", "api/kqcircuits.elements.fluxlines.fluxline.rst", "api/kqcircuits.elements.fluxlines.fluxline_standard.rst", "api/kqcircuits.elements.fluxlines.fluxline_straight.rst", "api/kqcircuits.elements.hanger_resonator.rst", "api/kqcircuits.elements.launcher.rst", "api/kqcircuits.elements.launcher_dc.rst", "api/kqcircuits.elements.markers.rst", "api/kqcircuits.elements.markers.marker.rst", "api/kqcircuits.elements.markers.marker_standard.rst", "api/kqcircuits.elements.markers.mask_marker_fc.rst", "api/kqcircuits.elements.meander.rst", "api/kqcircuits.elements.quarter_wave_cpw_resonator.rst", "api/kqcircuits.elements.smooth_capacitor.rst", "api/kqcircuits.elements.spiral_resonator_polygon.rst", "api/kqcircuits.elements.tsvs.rst", "api/kqcircuits.elements.tsvs.tsv.rst", "api/kqcircuits.elements.tsvs.tsv_ellipse.rst", "api/kqcircuits.elements.tsvs.tsv_standard.rst", "api/kqcircuits.elements.waveguide_composite.rst", "api/kqcircuits.elements.waveguide_coplanar.rst", "api/kqcircuits.elements.waveguide_coplanar_curved.rst", "api/kqcircuits.elements.waveguide_coplanar_splitter.rst", "api/kqcircuits.elements.waveguide_coplanar_straight.rst", "api/kqcircuits.elements.waveguide_coplanar_taper.rst", "api/kqcircuits.junctions.rst", "api/kqcircuits.junctions.junction.rst", "api/kqcircuits.junctions.manhattan.rst", "api/kqcircuits.junctions.manhattan_single_junction.rst", "api/kqcircuits.junctions.no_squid.rst", "api/kqcircuits.junctions.sim.rst", "api/kqcircuits.junctions.squid.rst", "api/kqcircuits.klayout_view.rst", "api/kqcircuits.layer_cluster.rst", "api/kqcircuits.layer_config.rst", "api/kqcircuits.layer_config.default_layer_config.rst", "api/kqcircuits.layer_config.example_layer_config.rst", "api/kqcircuits.masks.rst", "api/kqcircuits.masks.mask_export.rst", "api/kqcircuits.masks.mask_layout.rst", "api/kqcircuits.masks.mask_set.rst", "api/kqcircuits.masks.multi_face_mask_layout.rst", "api/kqcircuits.pya_resolver.rst", "api/kqcircuits.qubits.rst", "api/kqcircuits.qubits.circular_transmon_single_island.rst", "api/kqcircuits.qubits.concentric_transmon.rst", "api/kqcircuits.qubits.double_pads.rst", "api/kqcircuits.qubits.double_pads_splines.rst", "api/kqcircuits.qubits.qubit.rst", "api/kqcircuits.qubits.swissmon.rst", "api/kqcircuits.run.rst", "api/kqcircuits.simulations.rst", "api/kqcircuits.simulations.airbridges_sim.rst", "api/kqcircuits.simulations.cross_section_simulation.rst", "api/kqcircuits.simulations.empty_simulation.rst", "api/kqcircuits.simulations.epr.rst", "api/kqcircuits.simulations.epr.example.rst", "api/kqcircuits.simulations.epr.smooth_capacitor.rst", "api/kqcircuits.simulations.epr.swissmon.rst", "api/kqcircuits.simulations.epr.utils.rst", "api/kqcircuits.simulations.export.rst", "api/kqcircuits.simulations.export.ansys.rst", "api/kqcircuits.simulations.export.ansys.ansys_export.rst", "api/kqcircuits.simulations.export.ansys.ansys_solution.rst", "api/kqcircuits.simulations.export.elmer.rst", "api/kqcircuits.simulations.export.elmer.elmer_export.rst", "api/kqcircuits.simulations.export.elmer.elmer_solution.rst", "api/kqcircuits.simulations.export.export_and_run.rst", "api/kqcircuits.simulations.export.export_singularity.rst", "api/kqcircuits.simulations.export.remote_export_and_run.rst", "api/kqcircuits.simulations.export.simulation_export.rst", "api/kqcircuits.simulations.export.simulation_validate.rst", "api/kqcircuits.simulations.export.solution.rst", "api/kqcircuits.simulations.export.sonnet.rst", "api/kqcircuits.simulations.export.sonnet.parser.rst", "api/kqcircuits.simulations.export.sonnet.sonnet_export.rst", "api/kqcircuits.simulations.export.util.rst", "api/kqcircuits.simulations.export.xsection.rst", "api/kqcircuits.simulations.export.xsection.epr_correction_export.rst", "api/kqcircuits.simulations.export.xsection.xsection_export.rst", "api/kqcircuits.simulations.partition_region.rst", "api/kqcircuits.simulations.port.rst", "api/kqcircuits.simulations.post_process.rst", "api/kqcircuits.simulations.simulation.rst", "api/kqcircuits.simulations.single_element_simulation.rst", "api/kqcircuits.simulations.single_xmons_full_chip_sim.rst", "api/kqcircuits.simulations.waveguides_sim.rst", "api/kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.rst", "api/kqcircuits.simulations.xmons_direct_coupling_sim.rst", "api/kqcircuits.test_structures.rst", "api/kqcircuits.test_structures.airbridge_dc.rst", "api/kqcircuits.test_structures.cross_test.rst", "api/kqcircuits.test_structures.junction_test_pads.rst", "api/kqcircuits.test_structures.junction_test_pads.junction_test_pads.rst", "api/kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple.rst", "api/kqcircuits.test_structures.stripes_test.rst", "api/kqcircuits.test_structures.stripes_test_increasing_width.rst", "api/kqcircuits.test_structures.test_structure.rst", "api/kqcircuits.test_structures.tsv_test_pattern.rst", "api/kqcircuits.util.rst", "api/kqcircuits.util.area.rst", "api/kqcircuits.util.count_instances.rst", "api/kqcircuits.util.coupler_lib.rst", "api/kqcircuits.util.deep_delete.rst", "api/kqcircuits.util.defaults_helper.rst", "api/kqcircuits.util.dependencies.rst", "api/kqcircuits.util.edit_node_plugin.rst", "api/kqcircuits.util.export_helper.rst", "api/kqcircuits.util.geometry_helper.rst", "api/kqcircuits.util.geometry_json_encoder.rst", "api/kqcircuits.util.groundgrid.rst", "api/kqcircuits.util.gui_helper.rst", "api/kqcircuits.util.import_helper.rst", "api/kqcircuits.util.label.rst", "api/kqcircuits.util.label_polygons.rst", "api/kqcircuits.util.layout_to_code.rst", "api/kqcircuits.util.library_helper.rst", "api/kqcircuits.util.log_router.rst", "api/kqcircuits.util.merge.rst", "api/kqcircuits.util.netlist_extraction.rst", "api/kqcircuits.util.netlist_graph.rst", "api/kqcircuits.util.parameters.rst", "api/kqcircuits.util.plugin_startup.rst", "api/kqcircuits.util.refpoints.rst", "api/kqcircuits.util.replace_junctions.rst", "api/kqcircuits.util.symmetric_polygons.rst", "citing.rst", "contributing.rst", "developer/architecture.rst", "developer/coding_style.rst", "developer/containers.rst", "developer/documentation.rst", "developer/index.rst", "developer/setup.rst", "developer/standalone.rst", "developer/testing.rst", "index.rst", "installation.rst", "salt.rst", "support.rst", "trademarks.rst", "user_guide/file_system_and_utilities.rst", "user_guide/gui_features.rst", "user_guide/gui_workflow.rst", "user_guide/index.rst", "user_guide/macro_workflow.rst", "user_guide/mask_export.rst", "user_guide/python_workflow.rst", "user_guide/simulation/elmer_remote_workflow.rst", "user_guide/simulation/export_and_run.rst", "user_guide/simulation/gmsh_elmer_export.rst", "user_guide/simulation/simulation_features.rst", "user_guide/simulation/simulation_objects.rst", "user_guide/simulation/simulation_scripts.rst", "user_guide/simulations.rst", "user_guide/terminology.rst", "user_guide/usage.rst", "user_guide/xsection.rst"], "titles": ["About", "API documentation", "kqcircuits.chips", "kqcircuits.chips.airbridge_crossings", "kqcircuits.chips.airbridge_dc_test", "kqcircuits.chips.chip", "kqcircuits.chips.crossing_twoface", "kqcircuits.chips.daisy_woven", "kqcircuits.chips.dc_test", "kqcircuits.chips.demo", "kqcircuits.chips.demo_twoface", "kqcircuits.chips.empty", "kqcircuits.chips.junction_test", "kqcircuits.chips.junction_test2", "kqcircuits.chips.launchers", "kqcircuits.chips.lithography_test", "kqcircuits.chips.lithography_test_twoface", "kqcircuits.chips.munch_qubits", "kqcircuits.chips.quality_factor", "kqcircuits.chips.quality_factor_twoface", "kqcircuits.chips.sample_holder_test", "kqcircuits.chips.shaping", "kqcircuits.chips.simple", "kqcircuits.chips.single_xmons", "kqcircuits.chips.stripes", "kqcircuits.chips.tsv_test", "kqcircuits.chips.xmons_direct_coupling", "kqcircuits.defaults", "kqcircuits.elements", "kqcircuits.elements.airbridge_connection", "kqcircuits.elements.airbridges", "kqcircuits.elements.airbridges.airbridge", "kqcircuits.elements.airbridges.airbridge_multi_face", "kqcircuits.elements.airbridges.airbridge_rectangular", "kqcircuits.elements.capacitive_x_coupler", "kqcircuits.elements.chip_frame", "kqcircuits.elements.circular_capacitor", "kqcircuits.elements.element", "kqcircuits.elements.finger_capacitor_square", "kqcircuits.elements.finger_capacitor_taper", "kqcircuits.elements.flip_chip_connectors", "kqcircuits.elements.flip_chip_connectors.flip_chip_connector", "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc", "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf", "kqcircuits.elements.fluxlines", "kqcircuits.elements.fluxlines.fluxline", "kqcircuits.elements.fluxlines.fluxline_standard", "kqcircuits.elements.fluxlines.fluxline_straight", "kqcircuits.elements.hanger_resonator", "kqcircuits.elements.launcher", "kqcircuits.elements.launcher_dc", "kqcircuits.elements.markers", "kqcircuits.elements.markers.marker", "kqcircuits.elements.markers.marker_standard", "kqcircuits.elements.markers.mask_marker_fc", "kqcircuits.elements.meander", "kqcircuits.elements.quarter_wave_cpw_resonator", "kqcircuits.elements.smooth_capacitor", "kqcircuits.elements.spiral_resonator_polygon", "kqcircuits.elements.tsvs", "kqcircuits.elements.tsvs.tsv", "kqcircuits.elements.tsvs.tsv_ellipse", "kqcircuits.elements.tsvs.tsv_standard", "kqcircuits.elements.waveguide_composite", "kqcircuits.elements.waveguide_coplanar", "kqcircuits.elements.waveguide_coplanar_curved", "kqcircuits.elements.waveguide_coplanar_splitter", "kqcircuits.elements.waveguide_coplanar_straight", "kqcircuits.elements.waveguide_coplanar_taper", "kqcircuits.junctions", "kqcircuits.junctions.junction", "kqcircuits.junctions.manhattan", "kqcircuits.junctions.manhattan_single_junction", "kqcircuits.junctions.no_squid", "kqcircuits.junctions.sim", "kqcircuits.junctions.squid", "kqcircuits.klayout_view", "kqcircuits.layer_cluster", "kqcircuits.layer_config", "kqcircuits.layer_config.default_layer_config", "kqcircuits.layer_config.example_layer_config", "kqcircuits.masks", "kqcircuits.masks.mask_export", "kqcircuits.masks.mask_layout", "kqcircuits.masks.mask_set", "kqcircuits.masks.multi_face_mask_layout", "kqcircuits.pya_resolver", "kqcircuits.qubits", "kqcircuits.qubits.circular_transmon_single_island", "kqcircuits.qubits.concentric_transmon", "kqcircuits.qubits.double_pads", "kqcircuits.qubits.double_pads_splines", "kqcircuits.qubits.qubit", "kqcircuits.qubits.swissmon", "kqcircuits.run", "kqcircuits.simulations", "kqcircuits.simulations.airbridges_sim", "kqcircuits.simulations.cross_section_simulation", "kqcircuits.simulations.empty_simulation", "kqcircuits.simulations.epr", "kqcircuits.simulations.epr.example", "kqcircuits.simulations.epr.smooth_capacitor", "kqcircuits.simulations.epr.swissmon", "kqcircuits.simulations.epr.utils", "kqcircuits.simulations.export", "kqcircuits.simulations.export.ansys", "kqcircuits.simulations.export.ansys.ansys_export", "kqcircuits.simulations.export.ansys.ansys_solution", "kqcircuits.simulations.export.elmer", "kqcircuits.simulations.export.elmer.elmer_export", "kqcircuits.simulations.export.elmer.elmer_solution", "kqcircuits.simulations.export.export_and_run", "kqcircuits.simulations.export.export_singularity", "kqcircuits.simulations.export.remote_export_and_run", "kqcircuits.simulations.export.simulation_export", "kqcircuits.simulations.export.simulation_validate", "kqcircuits.simulations.export.solution", "kqcircuits.simulations.export.sonnet", "kqcircuits.simulations.export.sonnet.parser", "kqcircuits.simulations.export.sonnet.sonnet_export", "kqcircuits.simulations.export.util", "kqcircuits.simulations.export.xsection", "kqcircuits.simulations.export.xsection.epr_correction_export", "kqcircuits.simulations.export.xsection.xsection_export", "kqcircuits.simulations.partition_region", "kqcircuits.simulations.port", "kqcircuits.simulations.post_process", "kqcircuits.simulations.simulation", "kqcircuits.simulations.single_element_simulation", "kqcircuits.simulations.single_xmons_full_chip_sim", "kqcircuits.simulations.waveguides_sim", "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim", "kqcircuits.simulations.xmons_direct_coupling_sim", "kqcircuits.test_structures", "kqcircuits.test_structures.airbridge_dc", "kqcircuits.test_structures.cross_test", "kqcircuits.test_structures.junction_test_pads", "kqcircuits.test_structures.junction_test_pads.junction_test_pads", "kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple", "kqcircuits.test_structures.stripes_test", "kqcircuits.test_structures.stripes_test_increasing_width", "kqcircuits.test_structures.test_structure", "kqcircuits.test_structures.tsv_test_pattern", "kqcircuits.util", "kqcircuits.util.area", "kqcircuits.util.count_instances", "kqcircuits.util.coupler_lib", "kqcircuits.util.deep_delete", "kqcircuits.util.defaults_helper", "kqcircuits.util.dependencies", "kqcircuits.util.edit_node_plugin", "kqcircuits.util.export_helper", "kqcircuits.util.geometry_helper", "kqcircuits.util.geometry_json_encoder", "kqcircuits.util.groundgrid", "kqcircuits.util.gui_helper", "kqcircuits.util.import_helper", "kqcircuits.util.label", "kqcircuits.util.label_polygons", "kqcircuits.util.layout_to_code", "kqcircuits.util.library_helper", "kqcircuits.util.log_router", "kqcircuits.util.merge", "kqcircuits.util.netlist_extraction", "kqcircuits.util.netlist_graph", "kqcircuits.util.parameters", "kqcircuits.util.plugin_startup", "kqcircuits.util.refpoints", "kqcircuits.util.replace_junctions", "kqcircuits.util.symmetric_polygons", "Citing", "Contributing", "Architecture", "Coding Style", "Containers", "Documentation", "Developer Guide", "Developer GUI Setup", "Developer Standalone module Setup", "Testing", "KQCircuits documentation", "Installation", "Getting started (Salt package)", "Support", "Trademarks", "General Structure and Miscellaneous Utilities", "GUI Features", "Point-and-click workflow tutorial", "User Guide", "Macro development", "Mask export", "Python workflow tutorial", "Elmer remote simulations workflow", "Run and export in one line", "Gmsh/Elmer export", "Simulation features", "Simulation objects", "Export functions", "External simulation tools", "Terminology", "Usage", "Creating cross section images"], "terms": {"kqcircuit": [0, 1, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "develop": [0, 171, 179, 180, 181, 182, 188, 191, 193, 197], "wa": [0, 37, 83, 97, 127, 159, 167, 180, 181, 182, 189, 190, 194, 196, 200], "start": [0, 5, 13, 19, 35, 55, 58, 63, 64, 65, 66, 79, 88, 89, 113, 120, 127, 137, 152, 159, 165, 168, 175, 178, 180, 181, 183, 189, 191, 192, 194, 196], "johann": [0, 170], "heinsoo": [0, 170], "aalto": [0, 69, 195], "univers": [0, 195], "The": [0, 3, 5, 6, 12, 13, 14, 18, 19, 20, 21, 22, 23, 24, 26, 29, 32, 33, 35, 36, 37, 38, 39, 41, 43, 49, 50, 52, 53, 54, 55, 57, 58, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 76, 79, 81, 82, 83, 84, 85, 87, 88, 89, 92, 93, 95, 96, 97, 98, 103, 106, 107, 109, 119, 120, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 134, 145, 151, 152, 153, 155, 156, 159, 162, 163, 164, 165, 168, 171, 172, 174, 175, 177, 178, 179, 181, 182, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 197, 198, 199, 200, 201], "final": [0, 63, 79, 84, 127, 191, 197], "kqc": [0, 94, 97, 111, 113, 164, 166, 167, 171, 172, 174, 177, 178, 181, 182, 185, 186, 188, 189, 190, 191, 192, 193, 194, 200], "version": [0, 1, 81, 82, 83, 84, 85, 153, 170, 174, 176, 177, 178, 182, 185, 187, 190, 191, 192, 194, 197, 201], "correspond": [0, 17, 19, 26, 37, 63, 79, 83, 85, 88, 89, 110, 124, 127, 132, 152, 156, 157, 159, 163, 172, 174, 178, 179, 182, 185, 186, 189, 191, 195, 196, 198, 199], "v0": [0, 181], "0": [0, 5, 6, 7, 10, 13, 16, 17, 18, 19, 23, 28, 29, 31, 35, 36, 37, 38, 47, 55, 56, 57, 58, 63, 64, 65, 66, 70, 71, 72, 76, 79, 88, 90, 91, 92, 93, 97, 107, 110, 118, 119, 120, 122, 123, 125, 127, 131, 137, 141, 144, 152, 153, 158, 159, 162, 165, 166, 167, 168, 174, 178, 181, 182, 187, 190, 191, 195, 196], "tag": [0, 163, 171, 174, 178, 199], "iqm": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "github": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "repositori": [0, 151, 174, 176, 178, 181, 182, 185, 195], "sinc": [0, 155, 178, 186, 191, 196], "ha": [0, 5, 20, 23, 36, 37, 38, 57, 63, 71, 84, 88, 89, 93, 97, 107, 115, 127, 151, 155, 159, 164, 165, 168, 174, 177, 178, 181, 182, 186, 189, 190, 191, 192, 194, 196], "been": [0, 63, 84, 127, 160, 174, 182, 190], "see": [0, 2, 19, 37, 63, 79, 84, 96, 98, 103, 107, 110, 119, 123, 127, 129, 130, 131, 132, 133, 168, 171, 172, 174, 177, 178, 181, 182, 184, 186, 187, 189, 190, 191, 192, 194, 195, 196, 197, 200], "cite": [0, 180], "section": [0, 97, 107, 110, 123, 163, 172, 177, 178, 180, 182, 186, 188, 190, 191, 193, 196, 198], "other": [0, 2, 5, 13, 28, 34, 37, 38, 63, 64, 65, 71, 72, 76, 77, 79, 90, 92, 97, 110, 113, 119, 127, 137, 146, 152, 161, 167, 168, 169, 170, 171, 172, 174, 178, 179, 180, 181, 185, 186, 189, 190, 191, 194, 195, 196, 197, 199, 200, 201], "author": [0, 170], "http": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "com": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "finland": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "chip": [1, 28, 29, 32, 35, 37, 38, 40, 41, 42, 43, 49, 54, 58, 63, 79, 81, 82, 83, 84, 85, 90, 127, 130, 131, 137, 142, 151, 159, 163, 164, 168, 172, 174, 180, 185, 186, 187, 188, 189, 196, 199, 200], "airbridge_cross": [1, 2], "airbridgecross": [1, 2, 3], "build": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 81, 83, 84, 87, 88, 89, 90, 93, 95, 96, 97, 98, 103, 127, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 142, 159, 160, 172, 174, 175, 177, 181, 182, 186, 188, 190, 192, 194, 195, 196, 197, 198], "airbridge_dc_test": [1, 2], "airbridgedctest": [1, 2, 4], "library_nam": [1, 2, 5, 28, 37, 63, 69, 70, 87, 92, 95, 97, 127, 133, 141, 160, 172], "library_descript": [1, 2, 5, 28, 37, 69, 70, 87, 92, 133, 141, 172], "library_path": [1, 2, 5, 28, 37, 69, 70, 87, 92, 133, 141, 160], "display_text_impl": [1, 2, 5, 28, 37], "can_create_from_shape_impl": [1, 2, 5, 28, 38, 39, 55, 57, 64], "parameters_from_shape_impl": [1, 2, 5, 28, 55, 64], "transformation_from_shape_impl": [1, 2, 5, 28, 30, 31, 64], "get_launcher_assign": [1, 2, 5], "produce_junction_test": [1, 2, 5, 9], "produce_opt_lit_test": [1, 2, 5], "produce_ground_grid": [1, 2, 5], "produce_ground_on_face_grid": [1, 2, 5], "produce_fram": [1, 2, 5], "merge_layout_layers_on_fac": [1, 2, 5, 143, 162], "merge_layout_lay": [1, 2, 5], "produce_structur": [1, 2, 5], "get_box": [1, 2, 5], "get_filter_region": [1, 2, 5], "insert_filtered_el": [1, 2, 5], "get_ground_bump_loc": [1, 2, 5], "post_build": [1, 2, 5, 28, 37], "produce_launch": [1, 2, 5, 95, 131, 191], "produce_n_launch": [1, 2, 5], "make_grid_loc": [1, 2, 5], "get_ground_tsv_loc": [1, 2, 5], "crossing_twofac": [1, 2], "crossingtwofac": [1, 2, 6], "daisy_woven": [1, 2], "daisywoven": [1, 2, 7], "dc_test": [1, 2], "dctest": [1, 2, 8], "demo": [1, 2, 187, 189, 190, 191], "produce_qubit": [1, 2, 9, 10, 17, 26, 95, 131, 132], "produce_coupl": [1, 2, 9, 10, 17], "produce_control_lin": [1, 2, 9, 10], "produce_drivelin": [1, 2, 9, 10, 17], "produce_fluxlin": [1, 2, 9, 10, 87, 92], "produce_readout_structur": [1, 2, 9, 10], "produce_probelin": [1, 2, 9, 10, 17], "demo_twofac": [1, 2, 190], "demotwofac": [1, 2, 10, 190], "empti": [1, 2, 5, 13, 25, 29, 32, 34, 36, 37, 38, 43, 48, 56, 57, 58, 63, 66, 84, 85, 88, 89, 90, 93, 97, 127, 137, 142, 155, 164, 165, 179, 186, 195, 196, 197], "make_empty_area": [1, 2, 11], "junction_test": [1, 2], "junctiontest": [1, 2, 12], "junction_test2": [1, 2], "junctiontest2": [1, 2, 13], "coerce_parameters_impl": [1, 2, 13, 28, 37, 44, 45, 63, 65, 69, 70, 87, 92, 133, 136, 137], "launcher": [1, 2, 5, 7, 8, 18, 20, 23, 28, 50, 93, 129, 131, 163, 187, 191], "lithography_test": [1, 2], "lithographytest": [1, 2, 15], "create_pattern": [1, 2, 15, 16], "lithography_test_twofac": [1, 2], "lithographytesttwofac": [1, 2, 16], "munch_qubit": [1, 2], "munchqubit": [1, 2, 17], "produce_readout_reson": [1, 2, 17, 26, 95, 131], "quality_factor": [1, 2, 160, 190], "qualityfactor": [1, 2, 18, 84, 160, 190], "quality_factor_twofac": [1, 2], "qualityfactortwofac": [1, 2, 19], "produce_reson": [1, 2, 19], "sample_holder_test": [1, 2], "sampleholdertest": [1, 2, 20], "shape": [1, 2, 5, 13, 18, 25, 28, 29, 31, 32, 33, 35, 37, 38, 43, 55, 58, 63, 64, 77, 82, 84, 88, 89, 90, 92, 97, 123, 127, 137, 141, 142, 157, 162, 168, 186, 187, 189, 191, 196, 197, 199, 201], "simpl": [1, 2, 13, 84, 86, 119, 127, 137, 138, 174, 190, 194], "single_xmon": [1, 2], "singlexmon": [1, 2, 23], "qubits_refpoint": [1, 2, 23], "stripe": [1, 2, 5, 15, 16, 139, 140], "tsv_test": [1, 2], "tsvtest": [1, 2, 25], "create_xsect": [1, 2, 25], "xmons_direct_coupl": [1, 2], "xmonsdirectcoupl": [1, 2, 26], "element": [1, 2, 3, 5, 13, 22, 23, 25, 27, 70, 72, 76, 83, 84, 88, 89, 90, 92, 93, 100, 103, 107, 110, 125, 127, 128, 133, 137, 141, 142, 143, 146, 152, 153, 155, 159, 160, 162, 163, 164, 165, 167, 168, 174, 176, 178, 180, 185, 188, 189, 190, 195, 197, 198, 200], "airbridg": [1, 3, 4, 18, 19, 28, 29, 37, 52, 54, 55, 56, 58, 63, 66, 127, 134, 143, 160, 167, 186, 196], "default_typ": [1, 28, 30, 31, 32, 33, 40, 41, 44, 45, 51, 52, 59, 60, 69, 70, 133, 136, 137], "creat": [1, 2, 5, 28, 30, 31, 32, 37, 40, 41, 44, 45, 51, 52, 59, 60, 63, 64, 65, 69, 70, 75, 76, 79, 83, 84, 85, 86, 92, 96, 97, 98, 103, 106, 109, 114, 123, 127, 128, 129, 130, 131, 132, 133, 136, 137, 144, 150, 151, 155, 159, 160, 162, 166, 167, 172, 175, 177, 178, 179, 180, 182, 183, 185, 186, 187, 188, 190, 191, 194, 195, 196, 197, 199], "airbridge_multi_fac": [1, 28, 30], "airbridgemultifac": [1, 28, 30, 32], "airbridge_rectangular": [1, 28, 30], "airbridgerectangular": [1, 28, 30, 33], "flip_chip_connector": [1, 28], "flipchipconnector": [1, 28, 40, 41, 42, 63], "flip_chip_connector_dc": [1, 28, 40], "flipchipconnectordc": [1, 28, 40, 42], "flip_chip_connector_rf": [1, 28, 40], "flipchipconnectorrf": [1, 28, 40, 43, 191], "get_sim_port": [1, 28, 34, 36, 37, 38, 40, 43, 48, 56, 57, 87, 88, 89, 90, 93, 196], "fluxlin": [1, 9, 23, 26, 28, 37, 87, 92, 93, 132], "fluxline_standard": [1, 28, 44], "fluxlinestandard": [1, 28, 44, 46], "fluxline_straight": [1, 28, 44], "fluxlinestraight": [1, 28, 44, 47], "marker": [1, 5, 13, 28, 35, 55, 83, 135, 151, 168], "produce_geometri": [1, 28, 51, 52], "get_marker_loc": [1, 28, 51, 52, 54], "get_marker_region": [1, 28, 51, 52, 54], "marker_standard": [1, 28, 51], "markerstandard": [1, 28, 51, 53], "mask_marker_fc": [1, 28, 51], "maskmarkerfc": [1, 28, 51, 54], "create_cross": [1, 28, 51, 54], "tsv": [1, 5, 25, 28, 37, 127, 142], "tsv_ellips": [1, 28, 59], "tsvellips": [1, 28, 59, 61], "produce_impl": [1, 28, 37, 59, 61, 172], "create_tsv_connector": [1, 28, 59, 61], "tsv_standard": [1, 28, 59], "tsvstandard": [1, 28, 59, 62], "airbridge_connect": [1, 28], "airbridgeconnect": [1, 28, 29, 63], "capacitive_x_coupl": [1, 28], "capacitivexcoupl": [1, 28, 34], "chip_fram": [1, 28], "chipfram": [1, 5, 6, 7, 10, 16, 19, 28, 35], "circular_capacitor": [1, 28], "circularcapacitor": [1, 28, 36], "get_refpoint": [1, 28, 37, 95, 127], "insert_cell_into": [1, 28, 37], "resolve_fac": [1, 28, 37], "create_cell_from_shap": [1, 28, 37], "create_subtyp": [1, 28, 37], "create_with_refpoint": [1, 28, 37], "add_el": [1, 28, 37, 70, 75, 95, 127, 146, 172, 191], "insert_cel": [1, 26, 28, 37, 76, 95, 127, 132, 146, 159, 172, 189, 191, 196], "face": [1, 5, 6, 7, 10, 13, 16, 19, 25, 28, 29, 31, 32, 35, 37, 38, 41, 43, 56, 58, 61, 62, 63, 64, 65, 66, 76, 79, 81, 82, 83, 84, 85, 90, 95, 97, 123, 124, 125, 127, 130, 137, 142, 143, 151, 162, 163, 167, 168, 182, 186, 188, 198], "pcell_params_by_nam": [1, 28, 37, 95, 127], "add_port": [1, 28, 37], "copy_port": [1, 28, 37], "get_schema": [1, 28, 37, 95, 97, 127], "get_lay": [1, 28, 37, 92, 95, 97, 127, 191], "raise_error_on_cel": [1, 28, 37], "add_protect": [1, 28, 37], "sync_paramet": [1, 28, 37], "left_and_right_waveguid": [1, 28, 37], "face_changer_waveguid": [1, 28, 37], "finger_capacitor_squar": [1, 28, 191], "fingercapacitorsquar": [1, 28, 38, 146, 191], "get_ground_region": [1, 28, 38], "finger_area_width": [1, 28, 38], "finger_area_length": [1, 28, 38], "cut_region": [1, 28, 38], "add_waveguid": [1, 28, 38], "finger_capacitor_tap": [1, 28], "fingercapacitortap": [1, 28, 39], "hanger_reson": [1, 28], "hangerreson": [1, 28, 48], "launcher_dc": [1, 28], "launcherdc": [1, 28, 50], "meander": [1, 3, 6, 18, 28, 56, 63, 119, 155, 186], "quarter_wave_cpw_reson": [1, 28], "quarterwavecpwreson": [1, 28, 56], "smooth_capacitor": [1, 28, 95, 99], "smoothcapacitor": [1, 19, 28, 57, 146], "spiral_resonator_polygon": [1, 28], "spiralresonatorpolygon": [1, 28, 58], "rectangular_paramet": [1, 28, 58], "waveguide_composit": [1, 28], "node": [1, 28, 63, 150, 155, 159, 164, 187, 188, 191, 194], "posit": [1, 17, 23, 25, 28, 31, 37, 55, 63, 64, 65, 83, 88, 89, 92, 93, 118, 151, 155, 157, 159, 164, 167, 186, 190, 191], "align": [1, 28, 37, 54, 63, 76, 83, 92, 127, 135, 151, 155, 168, 186, 190, 191], "inst_nam": [1, 9, 10, 28, 37, 63, 76, 127, 155, 168, 191], "angl": [1, 17, 28, 36, 63, 64, 65, 66, 88, 89, 152, 155], "length_befor": [1, 28, 63, 155], "length_incr": [1, 28, 63, 155], "meander_direct": [1, 28, 55, 63], "deseri": [1, 28, 63, 153], "nodes_from_str": [1, 28, 63], "waveguidecomposit": [1, 28, 63, 155, 159, 188, 191], "get_segment_cel": [1, 28, 63], "get_segment_length": [1, 28, 63], "produce_fixed_length_waveguid": [1, 28, 63], "snap_point": [1, 28, 63], "check_node_typ": [1, 28, 63], "produce_fixed_length_bend": [1, 28, 63], "waveguide_coplanar": [1, 28, 191], "waveguidecoplanar": [1, 28, 63, 64, 159, 186, 191], "produce_waveguid": [1, 28, 64, 95, 131], "get_corner_data": [1, 28, 64], "produce_end_termin": [1, 28, 64], "is_continu": [1, 28, 64], "waveguide_coplanar_curv": [1, 28], "arc": [1, 17, 28, 65, 88, 89, 152], "waveguidecoplanarcurv": [1, 28, 65], "build_geometri": [1, 28, 65, 67], "create_curve_arc": [1, 28, 65], "produce_curve_termin": [1, 28, 65], "waveguide_coplanar_splitt": [1, 28], "waveguidecoplanarsplitt": [1, 28, 66], "t_cross_paramet": [1, 28, 66], "waveguide_coplanar_straight": [1, 28], "waveguidecoplanarstraight": [1, 28, 67], "waveguide_coplanar_tap": [1, 28], "waveguidecoplanartap": [1, 28, 63, 68], "junction": [1, 5, 9, 10, 13, 23, 26, 82, 88, 89, 90, 91, 92, 125, 127, 132, 136, 137, 138, 167, 168, 172, 180, 182, 191, 195, 196], "manhattan": [1, 5, 10, 13, 23, 26, 69, 70, 72, 90, 92, 132, 137], "produce_manhattan_squid": [1, 69, 71], "produce_tp_smal": [1, 69, 71], "produce_tp_larg": [1, 69, 71], "produce_contact_pad": [1, 69, 71], "manhattan_single_junct": [1, 69], "manhattansinglejunct": [1, 69, 72], "produce_manhattan_junct": [1, 69, 72], "no_squid": [1, 69], "nosquid": [1, 69, 73], "sim": [1, 10, 13, 23, 26, 69, 70, 90, 92, 122, 128, 132, 137, 178, 181, 192, 193, 194, 196, 197], "squid": [1, 10, 13, 23, 26, 69, 70, 71, 73, 74, 87, 90, 91, 92, 93, 125, 132, 137, 168], "layer_config": [1, 180, 191], "default_layer_config": [1, 78, 191], "example_layer_config": [1, 78, 191], "mask": [1, 5, 35, 52, 54, 143, 174, 178, 180, 181, 185, 188, 191, 199], "mask_export": [1, 81], "export_mask_set": [1, 81, 82], "export_design": [1, 81, 82], "export_chip": [1, 81, 82], "export_masks_of_fac": [1, 81, 82], "export_mask": [1, 81, 82], "export_doc": [1, 81, 82], "export_bitmap": [1, 81, 82], "get_mask_layout_full_nam": [1, 81, 82], "export_junction_paramet": [1, 81, 82], "mask_layout": [1, 81, 82, 84, 85, 190], "masklayout": [1, 81, 82, 83, 84, 85], "layout": [1, 25, 26, 28, 31, 37, 41, 45, 52, 60, 63, 70, 76, 81, 82, 83, 84, 85, 95, 96, 97, 98, 114, 120, 123, 124, 127, 129, 130, 131, 132, 137, 142, 151, 152, 160, 162, 163, 164, 166, 168, 172, 178, 180, 181, 186, 187, 189, 190, 191, 195, 196, 197, 198, 200, 201], "name": [1, 5, 7, 9, 10, 13, 17, 19, 22, 23, 25, 26, 29, 32, 35, 37, 38, 58, 61, 63, 66, 70, 75, 76, 77, 79, 81, 82, 83, 84, 85, 90, 92, 95, 97, 103, 104, 106, 107, 109, 110, 113, 114, 115, 116, 122, 124, 126, 127, 131, 137, 141, 142, 144, 151, 155, 159, 160, 161, 162, 163, 164, 165, 167, 168, 172, 174, 175, 177, 181, 182, 187, 189, 190, 191, 192, 196, 197, 198], "with_grid": [1, 5, 81, 83, 84, 85, 127, 190], "face_id": [1, 5, 13, 15, 16, 19, 25, 28, 29, 32, 37, 38, 58, 63, 76, 77, 81, 83, 84, 85, 90, 127, 137, 142, 191], "layers_to_mask": [1, 81, 83, 190], "covered_region_excluded_lay": [1, 81, 83], "chips_map": [1, 81, 83, 84, 85], "align_to": [1, 37, 76, 81, 83, 127, 190, 191], "chips_map_legend": [1, 81, 83, 84], "wafer_rad": [1, 81, 83], "wafer_cent": [1, 81, 83], "chips_map_offset": [1, 81, 83], "wafer_top_flat_length": [1, 81, 83], "wafer_bottom_flat_length": [1, 81, 83], "dice_width": [1, 35, 81, 83], "text_margin": [1, 35, 81, 83], "chip_siz": [1, 81, 83, 190], "edge_clear": [1, 81, 83, 190], "remove_chip": [1, 81, 83], "chip_box_offset": [1, 81, 83], "chip_tran": [1, 81, 83], "mask_name_offset": [1, 81, 83], "mask_name_scal": [1, 81, 83], "mask_name_box_margin": [1, 81, 83], "mask_text_scal": [1, 81, 83], "mask_markers_dict": [1, 81, 83], "mask_marker_offset": [1, 81, 83], "mask_export_lay": [1, 79, 81, 83, 84], "mask_export_density_lay": [1, 81, 83], "submask": [1, 81, 83], "extra_id": [1, 81, 83], "extra_chip": [1, 81, 83], "top_cel": [1, 76, 81, 83, 155, 159, 168, 189, 199], "added_chip": [1, 81, 83], "chips_placed_by_position_label": [1, 81, 83], "chip_copi": [1, 81, 83], "mirror_label": [1, 81, 83], "bbox_face_id": [1, 81, 83, 84, 85], "add_chips_map": [1, 81, 83, 85, 190], "overwrite_chips_by_position_label": [1, 81, 83], "insert_chip": [1, 81, 83], "insert_chip_copy_label": [1, 81, 83], "two_coordinates_to_position_label": [1, 81, 83], "position_label_to_two_coordin": [1, 81, 83], "mask_set": [1, 81, 82, 190], "maskset": [1, 81, 82, 84, 85, 190], "export_drc": [1, 81, 82, 84], "used_chip": [1, 81, 84], "export_path": [1, 81, 84, 111, 164, 190], "add_mask_layout": [1, 81, 84, 190], "add_multi_face_mask_layout": [1, 81, 84, 85], "add_chip": [1, 81, 84, 190], "export": [1, 76, 77, 79, 81, 82, 83, 84, 95, 96, 98, 103, 127, 129, 130, 131, 132, 151, 159, 163, 164, 168, 178, 180, 181, 182, 188, 189, 192, 195, 196, 198, 199, 201], "chips_map_from_box_map": [1, 81, 84], "multi_face_mask_layout": [1, 81], "multifacemasklayout": [1, 81, 84, 85], "qubit": [1, 9, 10, 17, 23, 26, 69, 103, 131, 132, 172, 180, 182, 186, 187, 191, 195, 196, 197], "circular_transmon_single_island": [1, 87], "circulartransmonsingleisland": [1, 87, 88], "concentric_transmon": [1, 87], "concentrictransmon": [1, 87, 89], "double_pad": [1, 87], "doublepad": [1, 87, 90, 91], "double_pads_splin": [1, 87], "doublepadssplin": [1, 87, 91], "produce_squid": [1, 87, 92, 133, 136, 137], "swissmon": [1, 87, 95, 99, 187, 196, 197], "simul": [1, 26, 34, 36, 37, 38, 43, 48, 56, 57, 74, 79, 88, 89, 90, 92, 93, 143, 167, 174, 178, 180, 181, 182, 185, 188, 191, 193, 194, 197, 201], "epr": [1, 56, 95, 110, 122, 125, 127, 195], "exampl": [1, 5, 28, 37, 63, 76, 77, 79, 84, 95, 99, 103, 110, 127, 153, 160, 164, 168, 172, 174, 177, 178, 179, 181, 182, 186, 188, 190, 192, 194, 195, 196, 197, 201], "partition_region": [1, 95, 99, 100, 101, 102, 122, 127], "correction_cut": [1, 95, 99, 100, 101, 102, 122], "extract_from": [1, 95, 99, 100], "extract_swissmon_from": [1, 95, 99, 102], "util": [1, 58, 66, 95, 99, 104, 178, 179, 180, 188, 191, 196, 197], "extract_child_simul": [1, 95, 99, 103], "ansi": [1, 95, 104, 116, 127, 148, 188, 194, 195, 196, 198], "ansys_export": [1, 95, 104, 105, 195, 197], "export_ansys_json": [1, 95, 104, 105, 106], "export_ansys_bat": [1, 95, 104, 105, 106], "export_ansi": [1, 95, 104, 105, 106, 195, 197, 198], "ansys_solut": [1, 95, 104, 105], "ansyssolut": [1, 95, 104, 105, 106, 107], "ansys_tool": [1, 95, 104, 105, 107, 195], "percent_refin": [1, 95, 104, 105, 107, 195], "maximum_pass": [1, 95, 104, 105, 107, 108, 110, 195], "minimum_pass": [1, 95, 104, 105, 107, 108, 110, 195], "minimum_converged_pass": [1, 95, 104, 105, 107, 195], "frequency_unit": [1, 95, 104, 105, 107, 195], "mesh_siz": [1, 95, 104, 105, 107, 108, 110], "simulation_flag": [1, 95, 104, 105, 107, 195], "ansys_project_templ": [1, 95, 104, 105, 107], "get_solution_data": [1, 95, 104, 105, 107, 108, 110], "ansyshfsssolut": [1, 95, 104, 105, 107], "frequenc": [1, 95, 104, 105, 107, 108, 110, 194, 195], "max_delta_": [1, 95, 104, 105, 107, 108, 110, 195], "sweep_en": [1, 95, 104, 105, 107, 195], "sweep_start": [1, 95, 104, 105, 107, 195], "sweep_end": [1, 95, 104, 105, 107, 195], "sweep_count": [1, 95, 104, 105, 107, 195], "sweep_typ": [1, 95, 104, 105, 107, 108, 110, 195], "capacitance_export": [1, 95, 104, 105, 107, 195], "integrate_energi": [1, 95, 104, 105, 107, 108, 110, 195], "integrate_magnetic_flux": [1, 95, 104, 105, 107], "ansysq3dsolut": [1, 95, 104, 105, 107], "percent_error": [1, 95, 104, 105, 107, 108, 110, 195], "ansyseigenmodesolut": [1, 95, 104, 105, 107], "min_frequ": [1, 95, 104, 105, 107, 195], "max_delta_f": [1, 95, 104, 105, 107, 195], "n_mode": [1, 95, 104, 105, 107, 195], "ansyscurrentsolut": [1, 95, 104, 105, 107], "ansysvoltagesolut": [1, 95, 104, 105, 107], "ansyscrosssectionsolut": [1, 95, 104, 105, 107], "get_ansys_solut": [1, 95, 104, 105, 107], "elmer": [1, 95, 104, 116, 174, 188, 193, 195, 196, 198], "elmer_export": [1, 95, 104, 108, 195, 197], "export_elmer_json": [1, 95, 104, 108, 109], "export_elmer_script": [1, 95, 104, 108, 109], "export_elm": [1, 95, 104, 108, 109, 194, 195, 197, 198], "elmer_solut": [1, 95, 104, 108], "elmersolut": [1, 95, 104, 108, 109, 110], "tool": [1, 55, 64, 95, 97, 104, 108, 110, 163, 178, 179, 180, 182, 186, 187, 188, 195, 196, 197, 200], "max_error_scal": [1, 95, 104, 108, 110], "max_outlier_fract": [1, 95, 104, 108, 110], "is_axisymmetr": [1, 95, 104, 108, 110], "mesh_level": [1, 95, 104, 108, 110], "vtu_output": [1, 95, 104, 108, 110], "elmervectorhelmholtzsolut": [1, 95, 104, 108, 110], "frequency_batch": [1, 95, 104, 108, 110], "london_penetration_depth": [1, 95, 97, 104, 108, 110, 123], "quadratic_approxim": [1, 95, 104, 108, 110], "second_kind_basi": [1, 95, 104, 108, 110], "use_av": [1, 95, 104, 108, 110], "conduct": [1, 95, 104, 108, 110], "nested_iter": [1, 95, 104, 108, 110], "convergence_toler": [1, 95, 104, 108, 110], "max_iter": [1, 95, 104, 108, 110], "elmercapacitancesolut": [1, 95, 104, 108, 110], "p_element_ord": [1, 95, 104, 108, 110], "linear_system_method": [1, 95, 104, 108, 110], "linear_system_precondit": [1, 95, 104, 108, 110], "elmercrosssectionsolut": [1, 95, 104, 108, 110, 122], "boundary_condit": [1, 95, 104, 108, 110], "run_inductance_sim": [1, 95, 104, 108, 110], "elmerepr3dsolut": [1, 95, 104, 108, 110, 127], "sequential_signal_excit": [1, 95, 104, 108, 110], "get_elmer_solut": [1, 95, 104, 108, 110], "sonnet": [1, 95, 104, 188, 198], "parser": [1, 95, 104, 117, 153], "apply_templ": [1, 95, 104, 117, 118], "polygon_head": [1, 95, 104, 117, 118], "symmetri": [1, 95, 104, 117, 118, 169], "box": [1, 5, 18, 19, 35, 52, 55, 76, 83, 84, 92, 95, 97, 104, 110, 117, 118, 123, 124, 127, 128, 135, 137, 154, 157, 163, 167, 182, 186, 187, 188, 190, 191, 198, 199], "refplan": [1, 95, 104, 117, 118], "port": [1, 5, 13, 17, 31, 34, 36, 37, 38, 39, 43, 48, 49, 56, 57, 63, 66, 88, 89, 90, 92, 93, 95, 96, 98, 104, 110, 115, 117, 118, 119, 127, 128, 129, 130, 131, 132, 137, 163, 167, 186, 187, 188, 191, 195, 197, 198], "control": [1, 17, 91, 95, 104, 117, 118, 119, 146, 152, 153, 165, 175, 176, 177, 178, 181, 191, 192, 194], "polygon": [1, 58, 64, 65, 95, 104, 117, 118, 119, 120, 123, 125, 127, 152, 169, 186, 191, 196, 199], "via": [1, 5, 25, 95, 104, 117, 118, 142, 192, 194, 196], "sonnet_export": [1, 95, 104, 117, 197], "poly_and_edge_indic": [1, 95, 104, 117, 119], "export_sonnet_son": [1, 95, 104, 117, 119, 197], "export_sonnet": [1, 95, 104, 117, 119, 197, 198], "xsection": [1, 95, 97, 104, 185, 188, 195], "epr_correction_export": [1, 95, 104, 121], "get_epr_correction_elmer_solut": [1, 95, 104, 121, 122], "get_epr_correction_simul": [1, 95, 100, 104, 121, 122], "xsection_export": [1, 95, 104, 121, 201], "xsection_cal": [1, 95, 104, 121, 123, 201], "create_xsections_from_simul": [1, 95, 104, 121, 123, 201], "separate_signal_layer_shap": [1, 95, 104, 121, 123], "find_layer_by_nam": [1, 95, 104, 121, 123], "free_layer_slot": [1, 95, 104, 121, 123], "visualise_xsection_cut_on_original_layout": [1, 95, 104, 121, 123], "export_and_run": [1, 95, 104, 193], "run_export_script": [1, 95, 104, 111], "run_simul": [1, 95, 104, 111], "export_singular": [1, 95, 104], "remote_export_and_run": [1, 95, 104], "remote_run_onli": [1, 95, 104, 113], "simulation_export": [1, 95, 104, 196, 197], "get_combined_paramet": [1, 95, 104, 114], "copy_content_into_directori": [1, 95, 104, 114], "get_post_process_command_lin": [1, 95, 104, 114], "export_simulation_json": [1, 95, 104, 114], "export_simulation_oa": [1, 95, 104, 114, 197], "sweep_simul": [1, 95, 104, 114, 196], "cross_sweep_simul": [1, 95, 104, 114, 196], "sweep_solut": [1, 95, 104, 114], "cross_sweep_solut": [1, 95, 104, 114], "cross_combin": [1, 95, 104, 114], "simulation_valid": [1, 95, 104], "validate_simul": [1, 95, 104, 115], "simulation_and_solution_types_match": [1, 95, 104, 115], "has_no_ports_when_requir": [1, 95, 104, 115], "has_edgeport_when_forbidden": [1, 95, 104, 115], "flux_integration_layer_exists_if_need": [1, 95, 104, 115], "get_port_nam": [1, 95, 104, 115], "validatesimerror": [1, 95, 104, 115], "solut": [1, 95, 104, 106, 107, 109, 110, 114, 115, 122, 177, 182, 195], "get_paramet": [1, 95, 97, 104, 116, 127], "export_lay": [1, 95, 104, 120], "find_edge_from_point_in_cel": [1, 95, 104, 120], "find_edge_from_point_in_polygon": [1, 95, 104, 120], "get_enclosing_polygon": [1, 95, 104, 120], "airbridges_sim": [1, 95], "airbridgessim": [1, 95, 96], "cross_section_simul": [1, 95, 123], "crosssectionsimul": [1, 95, 97, 106, 109, 123, 195, 196, 198], "process_lay": [1, 95, 97], "register_cell_layers_as_sim_lay": [1, 95, 97], "get_sim_lay": [1, 95, 97], "set_permitt": [1, 95, 97], "get_dict_by_lay": [1, 95, 97], "get_simulation_data": [1, 95, 97, 127], "empty_simul": [1, 95], "emptysimul": [1, 95, 98], "get_list_of_two": [1, 95, 124], "partitionregion": [1, 95, 100, 101, 102, 110, 124, 127, 128], "limit_box": [1, 95, 124], "limit_fac": [1, 95, 124], "as_dict": [1, 95, 125], "internalport": [1, 95, 125, 127, 167, 196], "get_etch_polygon": [1, 95, 125], "edgeport": [1, 95, 115, 125, 167, 195, 196], "post_process": [1, 95, 106, 109, 114, 122, 197], "postprocess": [1, 95, 106, 109, 114, 122, 126], "get_command_lin": [1, 95, 126], "get_simulation_layer_by_nam": [1, 95, 127], "to_1d_list": [1, 95, 127], "from_cel": [1, 95, 96, 98, 127, 129, 130, 131, 132, 196, 197], "face_stack_list_of_list": [1, 95, 127], "ith_valu": [1, 95, 127], "face_z_level": [1, 95, 127], "region_from_lay": [1, 95, 127], "simplified_region": [1, 95, 127], "insert_lay": [1, 95, 127], "insert_stacked_up_lay": [1, 95, 127], "insert_layers_between_fac": [1, 95, 127], "create_simulation_lay": [1, 95, 96, 98, 127, 129, 130, 131, 132], "produce_lay": [1, 95, 127], "ground_grid_region": [1, 95, 127], "produce_waveguide_to_port": [1, 95, 127, 191, 196], "etched_lin": [1, 95, 127], "get_port_data": [1, 95, 127], "get_partition_region": [1, 95, 100, 124, 127], "delete_inst": [1, 95, 127], "visualise_region": [1, 95, 127], "single_element_simul": [1, 95, 196, 197], "get_single_element_sim_class": [1, 95, 100, 128, 167, 196, 197], "single_xmons_full_chip_sim": [1, 95], "singlexmonsfullchipsim": [1, 95, 129], "waveguides_sim": [1, 95], "waveguidessim": [1, 95, 130], "produce_guid": [1, 95, 130], "produce_ground_bump": [1, 95, 130], "xmons_direct_coupling_full_chip_sim": [1, 95], "xmonsdirectcouplingfullchipsim": [1, 95, 131], "produce_launchers_sma8": [1, 95, 131], "xmons_direct_coupling_sim": [1, 95], "xmonsdirectcouplingsim": [1, 95, 132], "test_structur": [1, 180], "junction_test_pad": [1, 133], "junctiontestpad": [1, 13, 92, 133, 136, 137, 138], "junction_test_pads_simpl": [1, 133, 136], "junctiontestpadssimpl": [1, 133, 136, 138], "airbridge_dc": [1, 133], "airbridgedc": [1, 133, 134], "cross_test": [1, 133], "crosstest": [1, 133, 135], "stripes_test": [1, 133], "stripestest": [1, 15, 16, 133, 139], "stripes_test_increasing_width": [1, 133], "stripestestincreasingwidth": [1, 133, 140], "teststructur": [1, 133, 134, 135, 137, 139, 140, 141, 142, 172], "produce_pad": [1, 133, 141], "produce_four_point_pad": [1, 133, 141], "produce_etched_region": [1, 133, 141], "tsv_test_pattern": [1, 133], "tsvtestpattern": [1, 133, 142], "area": [1, 13, 43, 52, 55, 58, 63, 71, 75, 76, 83, 90, 92, 119, 124, 125, 137, 138, 141, 143, 154, 182, 186, 191, 196], "areareceiv": [1, 143, 144], "put": [1, 63, 143, 144, 174, 186, 191], "get_area_and_dens": [1, 143, 144], "count_inst": [1, 143], "count_instances_in_cel": [1, 143, 145], "coupler_lib": [1, 143], "cap_param": [1, 19, 143, 146], "deep_delet": [1, 143], "deep_delete_pcel": [1, 143, 147], "deep_delete_al": [1, 143, 147], "defaults_help": [1, 143], "find_ansys_execut": [1, 143, 148], "depend": [1, 19, 125, 138, 143, 160, 167, 172, 174, 176, 181, 185, 191, 193, 194, 196], "install_kqc_gui_depend": [1, 143, 149], "edit_node_plugin": [1, 143], "editnodeplugin": [1, 143, 150], "create_dialog": [1, 143, 150], "update_node_from_form": [1, 143, 150], "update_form_from_nod": [1, 143, 150], "deselect": [1, 143, 150], "select": [1, 13, 71, 119, 143, 150, 159, 182, 186, 187, 189, 190, 191, 196, 201], "activ": [1, 76, 125, 143, 150, 151, 178, 181, 188, 194, 195], "deactiv": [1, 143, 150], "mouse_click_ev": [1, 143, 150], "mouse_moved_ev": [1, 143, 150], "has_tracking_posit": [1, 143, 150], "tracking_posit": [1, 143, 150], "updat": [1, 37, 127, 143, 150, 172, 176, 181, 185, 186, 189, 195, 201], "editnodepluginfactori": [1, 143, 150], "create_plugin": [1, 143, 150], "export_help": [1, 143, 196, 197], "generate_probepoints_json": [1, 143, 151], "generate_probepoints_from_fil": [1, 143, 151], "create_or_empty_tmp_directori": [1, 111, 143, 151, 197], "get_simulation_directori": [1, 143, 151], "get_active_or_new_layout": [1, 143, 151, 196, 197], "write_commit_reference_fil": [1, 143, 151], "write_export_machine_versions_fil": [1, 143, 151], "open_with_klayout_or_default_appl": [1, 143, 151, 197], "get_klayout_vers": [1, 143, 151], "export_drc_report": [1, 143, 151], "geometry_help": [1, 143], "vector_length_and_direct": [1, 143, 152], "point_shift_along_vector": [1, 143, 152], "get_direct": [1, 143, 152], "get_angl": [1, 143, 152], "get_cell_path_length": [1, 143, 152], "get_object_path_length": [1, 143, 152], "simple_region": [1, 143, 152], "region_with_merged_point": [1, 127, 143, 152], "region_with_merged_polygon": [1, 127, 143, 152], "merge_points_and_match_on_edg": [1, 143, 152], "is_clockwis": [1, 143, 152], "circle_polygon": [1, 143, 152], "arc_point": [1, 143, 152], "bspline_point": [1, 143, 152], "bezier_point": [1, 143, 152], "round_dpath_width": [1, 143, 152], "geometry_json_encod": [1, 143], "geometryjsonencod": [1, 143, 153], "default": [1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 78, 79, 83, 84, 85, 88, 89, 90, 91, 92, 93, 96, 97, 106, 109, 110, 119, 122, 123, 127, 129, 130, 131, 132, 134, 135, 137, 138, 139, 140, 142, 143, 146, 148, 151, 152, 153, 155, 157, 161, 162, 163, 164, 165, 167, 172, 174, 177, 180, 181, 182, 186, 187, 190, 191, 192, 195, 196, 197, 200, 201], "geometryjsondecod": [1, 143, 153], "encode_python_obj_as_dict": [1, 143, 153], "decode_dict_as_python_obj": [1, 143, 153], "groundgrid": [1, 143], "make_grid": [1, 143, 154], "gui_help": [1, 143], "get_nodes_near_posit": [1, 143, 155], "node_to_text": [1, 143, 155], "node_from_text": [1, 143, 155], "replace_nod": [1, 143, 155], "get_all_node_el": [1, 143, 155], "get_valid_node_el": [1, 143, 155], "import_help": [1, 143], "module_from_fil": [1, 143, 156], "label": [1, 5, 35, 37, 66, 76, 83, 127, 143, 158, 164, 171, 190], "labelorigin": [1, 143, 157], "bottomleft": [1, 143, 157], "bottomright": [1, 143, 157], "topleft": [1, 143, 157], "topright": [1, 143, 157], "produce_label": [1, 143, 157], "label_polygon": [1, 143], "get_text_polygon": [1, 143, 158], "load_font_polygon": [1, 143, 158], "layout_to_cod": [1, 143], "convert_cells_to_cod": [1, 143, 159], "get_node_param": [1, 143, 159], "extract_pcell_data_from_view": [1, 143, 159], "restore_pcells_to_view": [1, 143, 159], "library_help": [1, 143, 172, 179, 191], "load_librari": [1, 143, 160], "get_library_path": [1, 143, 160], "delete_all_librari": [1, 143, 160], "delete_librari": [1, 143, 160], "element_by_class_nam": [1, 143, 160], "to_module_nam": [1, 143, 160], "to_library_nam": [1, 143, 160], "log_rout": [1, 143], "route_log": [1, 143, 161], "merg": [1, 5, 63, 127, 143, 152, 171, 172, 191], "merge_lay": [1, 143, 162], "convert_child_instances_to_stat": [1, 143, 162], "netlist_extract": [1, 143], "export_cell_netlist": [1, 84, 143, 163], "extract_net": [1, 143, 163], "extract_circuit": [1, 143, 163], "netlist_graph": [1, 143], "network_as_graph": [1, 143, 164], "draw_graph": [1, 143, 164], "paramet": [1, 3, 4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 96, 97, 98, 100, 103, 106, 107, 109, 110, 111, 113, 114, 115, 116, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 167, 168, 169, 175, 176, 180, 187, 188, 189, 190, 194, 196, 197, 198, 200, 201], "add_parameters_from": [1, 143, 165, 172, 196], "add_paramet": [1, 143, 165, 172, 196], "pdt": [1, 143, 165, 191], "typedoubl": [1, 143, 165, 191], "typeint": [1, 143, 165], "typelist": [1, 143, 165], "typestr": [1, 143, 165], "typeshap": [1, 143, 165], "typeboolean": [1, 143, 165], "typelay": [1, 143, 165], "typenon": [1, 143, 165], "param": [1, 37, 63, 115, 127, 143, 165, 168, 172, 191], "get_al": [1, 143, 165], "plugin_startup": [1, 143], "register_plugin": [1, 143, 166], "refpoint": [1, 19, 23, 28, 33, 34, 36, 37, 38, 43, 48, 56, 57, 61, 63, 76, 79, 88, 89, 90, 91, 92, 93, 100, 103, 127, 128, 137, 141, 143, 151, 155, 159, 186, 188, 196], "layer": [1, 5, 13, 25, 27, 28, 29, 32, 33, 35, 37, 38, 52, 54, 58, 61, 63, 64, 65, 68, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 90, 92, 97, 107, 110, 115, 120, 122, 123, 124, 125, 127, 135, 137, 139, 140, 141, 142, 143, 144, 152, 157, 162, 163, 167, 168, 180, 182, 185, 186, 187, 188, 189, 195, 196, 201], "cell": [1, 5, 15, 16, 31, 34, 36, 37, 38, 41, 43, 45, 48, 52, 55, 56, 57, 60, 63, 64, 70, 75, 76, 82, 83, 84, 88, 89, 90, 92, 93, 95, 96, 97, 98, 120, 123, 127, 128, 129, 130, 131, 132, 137, 143, 144, 145, 146, 147, 151, 152, 155, 157, 159, 160, 162, 163, 167, 168, 172, 178, 186, 187, 189, 190, 191, 196, 197, 199], "tran": [1, 5, 9, 10, 37, 65, 67, 76, 83, 127, 141, 143, 167, 168, 196], "rec_level": [1, 37, 76, 127, 143, 167, 191], "dict": [1, 5, 63, 83, 92, 97, 100, 101, 102, 107, 109, 110, 122, 137, 143, 151, 153, 158, 160, 167, 168, 196], "item": [1, 122, 127, 143, 153, 164, 167, 182], "kei": [1, 5, 23, 37, 79, 83, 84, 85, 107, 110, 114, 122, 127, 131, 143, 146, 151, 153, 159, 160, 162, 163, 167, 168, 174, 186, 192, 194], "valu": [1, 5, 13, 23, 27, 29, 34, 36, 37, 38, 43, 48, 56, 57, 58, 63, 68, 76, 79, 82, 83, 84, 88, 89, 90, 93, 97, 107, 110, 119, 122, 123, 125, 127, 131, 137, 143, 151, 152, 153, 155, 157, 159, 160, 162, 163, 165, 167, 168, 172, 174, 180, 185, 186, 187, 189, 191, 195, 196, 201], "refpointtosimport": [1, 34, 36, 37, 38, 43, 48, 56, 57, 88, 89, 90, 93, 143, 167, 196], "refpointtointernalport": [1, 143, 167], "refpointtoedgeport": [1, 143, 167], "waveguidetosimport": [1, 143, 167, 196], "toward": [1, 63, 127, 143, 167, 196], "side": [1, 3, 5, 6, 18, 19, 29, 34, 36, 37, 38, 43, 48, 56, 57, 61, 62, 66, 83, 88, 89, 90, 93, 123, 125, 127, 128, 141, 143, 159, 167, 169, 172, 190, 191, 195, 196], "use_internal_port": [1, 56, 127, 143, 167, 196], "waveguide_length": [1, 127, 132, 143, 152, 167, 196], "term1": [1, 58, 63, 64, 127, 131, 143, 167], "turn_radiu": [1, 127, 131, 143, 167], "b": [1, 13, 19, 25, 29, 31, 32, 36, 37, 38, 39, 43, 49, 57, 58, 63, 66, 68, 79, 90, 91, 127, 131, 137, 142, 143, 152, 167], "over_etch": [1, 127, 143, 167], "junctionsimport": [1, 143, 167, 196], "other_refpoint": [1, 143, 167], "float": [1, 5, 17, 63, 83, 107, 110, 118, 120, 122, 123, 125, 127, 143, 144, 152, 153, 155, 167, 195, 196], "replace_junct": [1, 143], "junctionentri": [1, 143, 168], "extract_junct": [1, 143, 168], "check_static_cell_has_junct": [1, 143, 168], "place_junct": [1, 143, 168], "get_tuned_junction_json": [1, 143, 168], "copy_one_layer_of_cel": [1, 143, 168], "replace_squid": [1, 143, 168], "convert_cells_to_stat": [1, 143, 168], "symmetric_polygon": [1, 143, 191], "polygon_with_hsym": [1, 143, 169], "polygon_with_vsym": [1, 143, 169, 191], "polygon_with_sym": [1, 143, 169], "klayout_view": [1, 178, 180, 189], "klayoutview": [1, 76, 178, 188], "layout_view": [1, 76, 189], "focu": [1, 76, 189], "show": [1, 76, 139, 140, 164, 178, 182, 186, 187, 189, 190, 191, 196, 197], "close": [1, 52, 64, 76, 106, 152, 159, 182, 190], "cell_view": [1, 76, 189], "active_cel": [1, 76, 189], "clear_lay": [1, 76], "add_default_lay": [1, 76], "create_top_cel": [1, 76], "export_layers_bitmap": [1, 76], "export_all_layers_bitmap": [1, 76], "export_pcell_png": [1, 76, 189], "get_pixel": [1, 76], "get_active_cell_view": [1, 76], "get_active_layout": [1, 76], "get_active_cel": [1, 76], "missinguilibraryexcept": [1, 76], "resolve_default_layer_info": [1, 76], "layer_clust": [1, 180], "layerclust": [1, 77], "main_lay": [1, 77], "extra_lay": [1, 77], "all_lay": [1, 77], "pya_resolv": [1, 172, 180, 191, 196], "is_standalone_sess": [1, 86], "klayout_executable_command": [1, 86], "run": [1, 63, 76, 79, 86, 106, 109, 110, 111, 113, 123, 126, 149, 151, 174, 175, 177, 178, 179, 180, 181, 182, 185, 187, 188, 190, 191, 192, 194, 195, 197, 198, 199, 200, 201], "argument_pars": [1, 94], "run_kqc": [1, 94], "pcell": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 84, 87, 88, 89, 90, 91, 92, 93, 96, 97, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 155, 157, 158, 159, 160, 162, 163, 164, 165, 168, 175, 176, 185, 186, 187, 189, 191, 196, 199], "declar": [2, 3, 5, 6, 7, 12, 13, 14, 18, 19, 20, 21, 22, 23, 24, 26, 28, 29, 32, 33, 35, 36, 37, 38, 39, 42, 43, 49, 50, 53, 54, 55, 57, 58, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 87, 88, 89, 93, 133, 134, 135, 139, 140, 141, 142], "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 100, 107, 110, 115, 116, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 150, 153, 155, 157, 159, 160, 165, 167, 168, 172, 173, 175, 182, 185, 188, 189, 195, 197, 198], "consist": [2, 15, 16, 25, 35, 63, 64, 65, 79, 81, 84, 88, 89, 90, 91, 100, 138, 151, 153, 173, 180, 186, 194, 198], "thei": [2, 3, 6, 28, 63, 69, 79, 83, 85, 88, 89, 97, 120, 152, 162, 164, 168, 172, 174, 182, 189, 191, 195], "ar": [2, 3, 5, 6, 20, 23, 28, 30, 33, 37, 49, 63, 64, 65, 66, 69, 76, 79, 81, 83, 84, 85, 92, 97, 100, 103, 104, 107, 110, 111, 113, 115, 119, 122, 123, 124, 127, 131, 133, 141, 143, 145, 151, 152, 153, 155, 159, 160, 161, 162, 163, 164, 165, 166, 168, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201], "themselv": 2, "A": [2, 5, 9, 23, 26, 37, 52, 58, 63, 64, 65, 66, 76, 83, 84, 85, 88, 89, 90, 91, 103, 107, 110, 114, 115, 116, 119, 123, 127, 131, 132, 151, 152, 160, 164, 165, 167, 174, 178, 186, 187, 189, 190, 191, 195, 196, 199], "frame": [2, 5, 35, 49, 83, 186], "i": [2, 3, 5, 6, 7, 10, 16, 19, 23, 28, 29, 31, 32, 33, 34, 36, 37, 38, 39, 41, 43, 48, 49, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 68, 70, 75, 76, 79, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 96, 97, 98, 100, 103, 106, 107, 109, 110, 111, 114, 115, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 138, 139, 140, 141, 146, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 162, 163, 164, 165, 167, 168, 170, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201], "alwai": [2, 110, 163, 178, 182, 191, 195], "method": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 32, 33, 34, 36, 37, 38, 39, 42, 43, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 76, 88, 89, 90, 93, 96, 97, 98, 110, 127, 129, 130, 131, 132, 134, 135, 138, 139, 140, 142, 153, 159, 172, 173, 178, 179, 182, 189, 191, 195, 196, 197, 201], "place": [2, 5, 18, 28, 34, 36, 37, 38, 43, 48, 52, 55, 56, 57, 58, 63, 64, 65, 76, 79, 83, 88, 89, 90, 93, 127, 128, 152, 153, 159, 161, 167, 168, 172, 175, 179, 182, 187, 188, 189, 190, 191, 196, 197], "some": [2, 5, 13, 25, 28, 29, 32, 37, 38, 58, 63, 77, 84, 85, 90, 103, 106, 109, 115, 119, 127, 137, 142, 151, 152, 165, 168, 172, 175, 177, 178, 179, 181, 182, 186, 187, 189, 190, 191, 192, 195, 196, 199], "test": [2, 3, 4, 5, 9, 11, 13, 15, 16, 23, 25, 34, 69, 129, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 153, 168, 174, 176, 177, 178, 180, 181, 182, 185, 190, 191, 194, 197], "structur": [2, 5, 28, 69, 125, 133, 134, 137, 138, 141, 142, 164, 168, 178, 179, 180, 182, 188, 190, 195, 199], "after": [2, 13, 28, 63, 64, 71, 72, 79, 83, 90, 106, 109, 114, 123, 127, 128, 137, 165, 174, 177, 182, 185, 187, 189, 190, 191, 194, 197], "ad": [2, 19, 37, 63, 76, 83, 114, 125, 126, 127, 131, 151, 152, 157, 159, 163, 164, 165, 172, 174, 188, 196], "ground": [2, 5, 11, 17, 18, 35, 36, 37, 38, 39, 43, 48, 52, 55, 56, 57, 63, 64, 65, 67, 83, 84, 85, 88, 89, 90, 97, 110, 119, 125, 127, 130, 146, 154, 157, 186, 187, 188, 191, 195, 196], "grid": [2, 5, 18, 35, 37, 55, 56, 63, 64, 65, 67, 83, 84, 85, 127, 141, 154, 157, 159, 186, 187, 188, 191], "which": [2, 5, 6, 7, 10, 16, 19, 23, 28, 34, 36, 37, 38, 43, 48, 56, 57, 63, 64, 65, 76, 77, 79, 81, 83, 84, 85, 87, 88, 89, 90, 93, 95, 96, 97, 98, 103, 110, 113, 114, 119, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 138, 139, 140, 141, 142, 143, 145, 146, 151, 152, 153, 154, 155, 157, 160, 162, 167, 168, 172, 174, 175, 177, 178, 179, 181, 185, 186, 189, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201], "avoid": [2, 5, 13, 19, 25, 29, 32, 35, 37, 38, 58, 63, 64, 65, 90, 127, 137, 141, 142, 154, 157, 161, 162, 180, 186, 190, 191, 195], "can": [2, 5, 19, 23, 28, 36, 37, 52, 55, 58, 63, 64, 69, 70, 75, 76, 79, 81, 82, 84, 85, 87, 88, 89, 96, 97, 98, 100, 103, 110, 114, 115, 119, 122, 123, 124, 125, 127, 129, 130, 131, 132, 138, 151, 152, 153, 155, 159, 164, 167, 168, 170, 172, 174, 177, 178, 179, 181, 182, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "produc": [2, 5, 9, 13, 19, 23, 31, 35, 45, 52, 58, 63, 64, 65, 66, 70, 75, 83, 92, 107, 110, 122, 123, 125, 127, 129, 131, 137, 138, 141, 146, 155, 157, 179, 190, 191, 194, 196, 197, 199, 201], "document": [2, 81, 82, 84, 95, 133, 172, 173, 176, 178, 179, 181, 182, 185, 186, 189, 190, 191, 199], "gener": [2, 5, 13, 30, 37, 55, 61, 64, 69, 70, 75, 76, 81, 83, 84, 85, 87, 90, 92, 97, 111, 123, 127, 133, 137, 152, 154, 155, 158, 159, 163, 165, 168, 174, 175, 178, 180, 186, 187, 188, 189, 190, 191, 194, 195, 197, 198, 201], "descript": [2, 133, 165, 172, 191, 199], "sourc": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 176, 178, 179, 181, 184, 185, 195, 196], "base": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 83, 84, 85, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 107, 110, 111, 115, 116, 124, 125, 126, 127, 129, 130, 131, 132, 134, 135, 137, 138, 139, 140, 141, 142, 144, 150, 152, 153, 157, 165, 167, 168, 172, 185, 190, 191, 194, 195, 196], "an": [3, 5, 26, 28, 29, 31, 32, 36, 37, 42, 43, 63, 64, 65, 76, 79, 83, 84, 85, 92, 103, 107, 109, 110, 114, 115, 123, 127, 128, 134, 138, 146, 151, 152, 153, 155, 159, 163, 164, 165, 167, 168, 169, 172, 177, 178, 181, 182, 186, 188, 189, 190, 192, 194, 195, 196, 197, 198, 199, 200, 201], "On": [3, 6, 177, 181, 187, 191, 192, 193], "left": [3, 5, 6, 13, 19, 23, 35, 37, 43, 48, 58, 65, 82, 83, 91, 97, 120, 123, 125, 127, 167, 182, 187, 190, 191, 196], "straight": [3, 6, 26, 45, 47, 58, 63, 64, 67, 92, 127, 132, 191], "vertic": [3, 6, 13, 24, 25, 32, 33, 47, 58, 83, 124, 127, 137, 142, 168, 169, 201], "waveguid": [3, 6, 17, 19, 20, 29, 37, 43, 48, 49, 55, 58, 63, 64, 65, 66, 67, 68, 88, 89, 90, 93, 97, 125, 127, 130, 132, 152, 155, 159, 163, 164, 167, 187, 188, 191, 195, 196], "cross": [3, 6, 23, 58, 66, 97, 107, 110, 114, 123, 135, 180, 186, 188, 191, 196, 198], "multipl": [3, 6, 63, 79, 84, 85, 88, 89, 100, 103, 123, 151, 162, 164, 168, 172, 177, 180, 182, 186, 189, 190, 191, 194, 196, 199], "time": [3, 6, 37, 106, 109, 110, 114, 119, 123, 152, 167, 175, 180, 181, 182, 187, 189, 190, 192, 194, 196], "There": [3, 6, 23, 91, 138, 139, 140, 172, 175, 178, 181, 186, 190, 191, 192, 194, 195, 196], "right": [3, 6, 19, 23, 29, 37, 58, 68, 82, 83, 123, 125, 127, 167, 182, 186, 187, 189, 190, 191, 196], "likewis": [3, 6], "do": [3, 6, 37, 63, 79, 110, 127, 159, 173, 174, 177, 178, 179, 187, 189, 190, 191, 193, 194, 195, 196, 197], "ani": [3, 6, 19, 63, 64, 70, 75, 76, 84, 85, 96, 97, 98, 100, 102, 103, 110, 122, 127, 128, 129, 130, 131, 132, 138, 155, 160, 166, 171, 172, 177, 178, 182, 183, 186, 190, 191, 194, 195, 196, 197, 198], "point": [3, 4, 5, 6, 13, 25, 29, 32, 33, 36, 37, 38, 39, 55, 58, 63, 64, 65, 76, 83, 88, 89, 90, 91, 94, 120, 123, 127, 131, 132, 134, 137, 142, 151, 152, 159, 162, 164, 167, 169, 175, 179, 180, 186, 188, 189, 191, 194, 196, 199], "In": [3, 43, 63, 76, 79, 84, 96, 98, 114, 123, 127, 129, 130, 131, 132, 152, 172, 174, 177, 182, 185, 186, 187, 189, 190, 191, 195, 196, 197], "center": [3, 5, 13, 17, 18, 19, 23, 25, 29, 32, 33, 36, 37, 38, 41, 43, 48, 58, 61, 62, 63, 64, 65, 66, 73, 74, 83, 88, 89, 90, 91, 92, 93, 125, 127, 137, 141, 142, 152, 163, 167, 187, 190, 196], "arrai": [3, 5, 25, 83, 84, 138, 153, 199], "mechan": 3, "differ": [3, 5, 6, 13, 15, 16, 28, 36, 37, 43, 52, 58, 83, 84, 85, 97, 107, 123, 127, 137, 151, 163, 168, 172, 177, 179, 180, 185, 186, 190, 191, 194, 195, 196, 197], "length": [3, 5, 6, 9, 10, 12, 13, 15, 16, 17, 18, 19, 23, 24, 26, 29, 31, 32, 34, 35, 36, 38, 39, 48, 49, 55, 56, 57, 58, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 83, 90, 92, 93, 97, 107, 110, 118, 123, 125, 127, 130, 131, 132, 135, 137, 139, 140, 146, 152, 154, 155, 159, 162, 167, 186, 187, 191, 195, 196], "width": [3, 4, 5, 13, 17, 18, 19, 20, 25, 26, 29, 31, 32, 34, 35, 36, 37, 38, 39, 43, 45, 47, 48, 49, 50, 56, 57, 58, 61, 63, 64, 66, 70, 71, 72, 74, 76, 83, 88, 89, 90, 92, 93, 123, 125, 127, 131, 132, 134, 135, 137, 139, 140, 141, 142, 152, 167, 191, 196], "child": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 29, 32, 33, 34, 36, 37, 38, 39, 42, 43, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 62, 64, 65, 66, 67, 68, 71, 72, 73, 74, 84, 88, 89, 90, 93, 103, 134, 135, 138, 139, 140, 142, 145, 155, 159, 162, 167, 191, 196], "re": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 29, 32, 33, 34, 36, 37, 38, 39, 42, 43, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 62, 64, 65, 66, 67, 68, 71, 72, 73, 74, 88, 89, 90, 93, 118, 125, 134, 135, 138, 139, 140, 142, 159, 165, 172, 189, 194], "defin": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 29, 32, 33, 34, 36, 37, 38, 39, 42, 43, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 79, 88, 89, 90, 91, 92, 93, 97, 100, 103, 106, 123, 127, 128, 134, 135, 138, 139, 140, 141, 142, 151, 152, 153, 161, 163, 165, 168, 172, 179, 180, 187, 188, 190, 192, 194, 195, 196, 201], "thi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 42, 43, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 82, 83, 84, 85, 86, 88, 89, 90, 93, 95, 96, 97, 98, 100, 106, 109, 110, 123, 124, 125, 127, 129, 130, 131, 132, 134, 135, 137, 138, 139, 140, 142, 144, 149, 150, 152, 153, 155, 159, 160, 162, 163, 164, 165, 167, 168, 172, 174, 175, 177, 178, 179, 181, 182, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197], "int": [3, 4, 5, 6, 12, 13, 18, 20, 24, 25, 29, 32, 34, 35, 37, 38, 39, 43, 52, 54, 55, 56, 58, 63, 64, 65, 83, 88, 89, 90, 91, 96, 107, 110, 113, 118, 120, 123, 125, 127, 130, 134, 135, 137, 139, 140, 142, 152, 153, 155, 158], "number": [3, 4, 5, 6, 13, 18, 19, 20, 22, 23, 25, 29, 32, 34, 35, 37, 38, 39, 43, 52, 54, 55, 56, 57, 58, 63, 65, 66, 79, 81, 84, 88, 89, 90, 91, 96, 107, 110, 119, 123, 124, 125, 127, 130, 134, 135, 137, 139, 140, 142, 145, 146, 151, 152, 153, 154, 164, 168, 171, 191, 194, 195, 196], "pair": [3, 6, 13, 17, 54, 137, 153, 155, 159, 167, 185, 186], "10": [3, 5, 13, 17, 18, 19, 23, 25, 26, 29, 32, 34, 35, 37, 38, 48, 52, 56, 57, 58, 63, 66, 68, 88, 89, 90, 93, 107, 110, 127, 131, 135, 137, 142, 152, 154, 155, 170, 177, 178, 181, 194, 195, 196], "b_number": 3, "one": [3, 12, 17, 19, 23, 24, 58, 63, 65, 79, 81, 84, 85, 88, 89, 90, 91, 97, 106, 109, 114, 115, 123, 127, 151, 152, 153, 159, 161, 162, 163, 165, 166, 167, 168, 171, 172, 174, 177, 178, 181, 186, 188, 189, 191, 194, 195, 196, 197, 198], "5": [3, 13, 18, 19, 23, 25, 29, 32, 37, 38, 39, 57, 58, 63, 72, 73, 88, 89, 90, 93, 96, 107, 110, 123, 127, 130, 137, 142, 154, 165, 182, 194, 195], "full": [4, 5, 65, 76, 79, 86, 124, 152, 159, 164, 178, 180, 182, 186, 191, 193, 194, 196, 199], "4": [4, 5, 13, 17, 18, 19, 23, 84, 88, 89, 110, 122, 123, 127, 135, 137, 138, 152, 157, 165, 181, 182, 196], "dc": [4, 5, 7, 8, 32, 41, 42, 43, 50, 58, 63, 134], "n_step": 4, "increment": [4, 5, 13, 63, 140, 155, 168], "step": [4, 13, 15, 16, 63, 137, 152, 154, 168, 177, 181, 182, 187, 189, 190, 192], "1": [4, 5, 6, 7, 10, 13, 16, 17, 18, 19, 23, 26, 28, 29, 36, 37, 38, 43, 55, 56, 57, 58, 63, 65, 68, 71, 72, 84, 88, 89, 90, 107, 110, 118, 122, 123, 124, 127, 132, 137, 139, 140, 144, 152, 157, 159, 164, 165, 176, 182, 187, 190, 191, 192, 194, 195, 196, 201], "test_width": 4, "doubl": [4, 5, 6, 13, 17, 18, 19, 20, 25, 26, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 45, 47, 48, 49, 50, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 88, 89, 90, 92, 93, 110, 127, 130, 131, 132, 134, 135, 137, 139, 140, 142, 169, 186, 187, 189, 195, 200], "singl": [4, 6, 10, 13, 17, 19, 23, 26, 57, 58, 63, 70, 72, 82, 84, 88, 90, 92, 100, 106, 109, 110, 114, 127, 128, 132, 137, 159, 160, 165, 178, 179, 182, 188, 190, 191, 192, 194, 198, 199], "2000": [4, 19, 110, 134, 191], "unit": [4, 5, 6, 9, 10, 13, 17, 18, 19, 20, 25, 26, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 45, 47, 48, 49, 50, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66, 68, 70, 71, 72, 73, 74, 75, 88, 89, 90, 92, 93, 97, 107, 110, 123, 124, 125, 127, 130, 131, 132, 134, 135, 137, 139, 140, 142, 151, 152, 154, 172, 176, 178, 180, 191, 195], "\u03bcm": [4, 5, 6, 9, 10, 13, 17, 18, 19, 20, 25, 26, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 45, 47, 48, 49, 50, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66, 68, 70, 71, 72, 75, 88, 89, 90, 92, 93, 127, 130, 131, 132, 134, 135, 137, 139, 140, 142, 167, 191], "pixel": [5, 7, 76, 152, 199], "corner": [5, 7, 13, 35, 37, 38, 39, 52, 63, 64, 65, 157, 186, 187, 191], "dice": [5, 7, 35, 83], "edg": [5, 7, 12, 19, 20, 24, 35, 36, 52, 58, 63, 64, 73, 74, 83, 89, 90, 91, 110, 119, 120, 122, 123, 124, 125, 127, 130, 131, 141, 152, 154, 167, 179, 186, 196], "option": [5, 23, 32, 37, 58, 63, 83, 84, 85, 93, 100, 107, 110, 113, 119, 122, 123, 125, 127, 128, 138, 146, 159, 163, 174, 179, 181, 186, 187, 190, 191, 192, 194, 197, 201], "all": [5, 11, 28, 31, 34, 36, 37, 38, 43, 48, 56, 57, 61, 63, 64, 66, 76, 82, 83, 84, 85, 88, 89, 90, 93, 97, 100, 103, 109, 110, 111, 113, 114, 122, 123, 127, 144, 152, 153, 155, 159, 160, 162, 165, 168, 172, 173, 174, 178, 179, 181, 182, 185, 186, 187, 189, 190, 191, 193, 194, 195, 196, 197], "contain": [5, 22, 23, 28, 34, 36, 37, 38, 43, 48, 56, 57, 63, 69, 76, 77, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95, 97, 100, 103, 106, 109, 110, 111, 113, 114, 122, 123, 127, 128, 135, 139, 140, 142, 144, 151, 153, 155, 157, 162, 163, 164, 167, 168, 172, 175, 176, 177, 178, 179, 180, 185, 186, 189, 190, 191, 194, 196, 197, 199, 201], "connector": [5, 19, 32, 37, 40, 41, 42, 43, 58, 61, 62, 63, 186], "between": [5, 6, 9, 10, 12, 13, 17, 18, 19, 23, 24, 25, 29, 32, 34, 35, 37, 38, 39, 41, 43, 57, 58, 61, 62, 63, 64, 79, 90, 93, 110, 123, 125, 127, 132, 135, 137, 139, 140, 141, 142, 144, 152, 154, 163, 180, 186, 195, 196], "librari": [5, 28, 31, 37, 41, 45, 52, 60, 63, 70, 76, 90, 91, 92, 93, 137, 141, 155, 160, 176, 177, 178, 180, 181, 182, 185, 186, 187, 188, 199, 200], "superconduct": [5, 37, 123, 141, 180], "quantum": [5, 28, 37, 69, 141, 180, 199], "circuit": [5, 28, 37, 141, 163, 180, 191, 199], "implement": [5, 13, 28, 31, 34, 36, 37, 38, 39, 43, 45, 48, 52, 55, 56, 57, 63, 64, 65, 70, 88, 89, 90, 92, 93, 97, 100, 127, 137, 151, 152, 153, 159, 167, 171, 191, 192, 194, 196, 199], "static": [5, 37, 54, 63, 64, 65, 67, 76, 83, 84, 127, 158, 162, 168, 186, 187], "chip_cel": [5, 82, 83], "return": [5, 34, 36, 37, 38, 43, 48, 52, 56, 57, 58, 63, 64, 65, 66, 76, 77, 83, 84, 86, 88, 89, 90, 92, 93, 97, 100, 103, 106, 107, 109, 110, 111, 114, 115, 116, 119, 120, 122, 123, 124, 125, 126, 127, 128, 131, 137, 144, 145, 146, 148, 151, 152, 153, 154, 155, 156, 158, 159, 160, 164, 165, 167, 168, 169, 189, 190, 191, 196], "dictionari": [5, 23, 37, 58, 66, 79, 83, 84, 85, 97, 107, 110, 114, 116, 122, 125, 127, 131, 146, 153, 160, 162, 163, 164, 165, 167, 191, 196], "assign": [5, 122, 167, 186, 191], "port_id": 5, "launcher_id": 5, "object": [5, 26, 34, 36, 37, 38, 43, 45, 48, 52, 56, 57, 63, 76, 77, 79, 82, 83, 84, 85, 88, 89, 90, 92, 93, 95, 97, 103, 104, 106, 109, 110, 114, 115, 116, 122, 123, 124, 125, 126, 127, 128, 132, 144, 150, 151, 152, 153, 155, 162, 163, 165, 167, 168, 172, 178, 180, 186, 187, 188, 189, 190, 191, 194, 195, 197, 198, 199, 200, 201], "junction_typ": [5, 9, 10, 13, 23, 26, 70, 71, 72, 73, 74, 75, 90, 92, 132, 137, 168, 196], "pad": [5, 9, 13, 29, 31, 32, 33, 34, 36, 38, 49, 50, 58, 71, 72, 74, 89, 90, 92, 93, 127, 134, 136, 137, 138, 141, 191, 196], "string": [5, 6, 7, 9, 10, 13, 14, 15, 16, 17, 19, 22, 23, 24, 25, 26, 29, 31, 32, 33, 34, 35, 37, 38, 41, 43, 45, 46, 47, 56, 58, 60, 61, 62, 63, 66, 70, 71, 72, 73, 74, 83, 84, 90, 92, 97, 107, 110, 111, 113, 114, 126, 127, 128, 130, 132, 137, 138, 142, 146, 151, 153, 155, 158, 159, 160, 161, 163, 164, 167, 190, 191], "type": [5, 9, 10, 13, 14, 15, 16, 18, 19, 23, 25, 26, 27, 29, 31, 32, 33, 35, 37, 41, 43, 45, 46, 47, 52, 56, 58, 60, 61, 62, 63, 66, 70, 71, 72, 73, 74, 79, 84, 86, 90, 92, 93, 110, 115, 119, 123, 125, 127, 128, 129, 132, 137, 138, 142, 144, 145, 146, 151, 152, 153, 155, 159, 163, 165, 168, 178, 179, 186, 188, 193, 195, 196, 201], "us": [5, 9, 11, 19, 23, 26, 28, 29, 34, 35, 36, 37, 38, 43, 48, 49, 52, 55, 56, 57, 58, 63, 64, 66, 68, 70, 75, 76, 79, 82, 83, 84, 85, 86, 88, 89, 90, 92, 93, 96, 97, 98, 100, 103, 104, 106, 107, 109, 110, 111, 113, 114, 119, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 137, 141, 146, 151, 152, 153, 154, 155, 158, 159, 160, 162, 163, 164, 165, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 187, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201], "optic": [5, 15, 16, 135, 139, 140, 180, 199], "lithographi": [5, 15, 16, 127, 135, 139, 140, 199], "call": [5, 37, 57, 63, 84, 96, 97, 98, 100, 110, 114, 123, 124, 127, 129, 130, 131, 132, 144, 153, 160, 162, 163, 172, 179, 182, 188, 189, 190, 191, 193, 194, 195, 196, 197, 199], "overrid": [5, 13, 83, 85, 96, 97, 98, 103, 122, 125, 127, 129, 130, 131, 132, 137, 172, 174, 192], "set": [5, 19, 37, 58, 63, 76, 81, 82, 84, 85, 97, 100, 103, 107, 110, 111, 119, 122, 123, 125, 127, 131, 151, 152, 167, 171, 172, 174, 177, 178, 179, 180, 186, 187, 191, 192, 194, 195, 196, 197], "given": [5, 34, 36, 37, 38, 43, 48, 55, 56, 57, 58, 63, 64, 76, 79, 82, 84, 88, 89, 90, 92, 93, 97, 103, 107, 110, 122, 123, 124, 125, 126, 127, 128, 135, 137, 138, 139, 140, 142, 151, 152, 153, 156, 157, 158, 160, 162, 165, 167, 168, 172, 174, 190, 191, 194, 195, 196, 198], "pya": [5, 37, 52, 63, 79, 83, 84, 86, 92, 122, 123, 124, 127, 141, 152, 153, 155, 163, 165, 167, 169, 176, 190, 191, 196], "dbox": [5, 76, 92, 123, 124, 127, 190, 191, 196], "within": [5, 34, 36, 37, 38, 43, 48, 56, 57, 63, 88, 89, 90, 93, 100, 103, 110, 138, 168, 178, 179, 185, 198, 200], "id": [5, 6, 7, 10, 13, 16, 19, 25, 29, 32, 37, 38, 58, 63, 76, 79, 84, 85, 90, 127, 130, 137, 142, 151, 152, 164, 173, 178, 188, 189, 190, 200], "where": [5, 17, 19, 23, 34, 36, 37, 38, 43, 48, 56, 57, 58, 63, 64, 65, 70, 75, 83, 84, 85, 88, 89, 90, 93, 97, 100, 106, 109, 110, 111, 114, 119, 123, 124, 126, 127, 131, 151, 152, 155, 157, 159, 162, 163, 167, 168, 172, 177, 181, 186, 189, 190, 191, 192, 194, 195, 196, 198], "frame_paramet": 5, "r0": [5, 37, 127, 141], "dtran": [5, 52, 65, 83, 128, 169, 191, 196], "toler": [5, 64, 110, 120, 127, 152, 162], "004": [5, 127, 162], "base_metal_gap": [5, 79, 162, 191], "combin": [5, 37, 97, 114, 127, 162, 180, 196], "three": [5, 17, 69, 127, 162, 178, 181, 185, 189, 190, 191, 194, 196], "subtract": [5, 52, 127, 141, 162], "insert": [5, 28, 35, 37, 58, 63, 76, 83, 92, 103, 127, 137, 141, 153, 162, 167, 178, 186, 188, 196], "oper": [5, 37, 63, 151, 162, 177, 178, 181, 186, 194], "base_metal_gap_wo_grid": [5, 92, 135, 137, 139, 140, 162, 163, 182, 186, 191], "base_metal_addit": [5, 162, 191], "ground_grid": [5, 162, 191], "info": [5, 113, 119, 127, 161, 162, 174, 194], "gap": [5, 13, 17, 18, 19, 20, 23, 25, 29, 32, 34, 35, 36, 37, 38, 39, 43, 45, 47, 48, 49, 56, 57, 58, 63, 64, 65, 66, 71, 72, 74, 88, 89, 90, 93, 122, 124, 127, 137, 141, 142, 146, 152, 162, 167, 191, 196], "ignor": [5, 84, 92, 97, 127, 152, 162, 167, 177, 194], "while": [5, 23, 37, 79, 110, 162, 163, 174, 179, 181, 182, 194], "\u00b5m": [5, 17, 35, 58, 63, 73, 74, 88, 89, 90, 92, 119, 127, 162], "possibli": [5, 52, 168, 182, 190, 191], "befor": [5, 37, 63, 64, 76, 84, 110, 124, 127, 155, 166, 177, 186, 197], "get": [5, 63, 76, 97, 122, 123, 144, 153, 163, 165, 172, 174, 175, 177, 178, 179, 180, 181, 185, 189, 192], "specifi": [5, 31, 32, 33, 37, 49, 63, 76, 83, 84, 85, 97, 110, 123, 125, 127, 151, 152, 153, 155, 156, 161, 163, 164, 165, 168, 174, 175, 185, 190, 192, 196, 197], "correctli": [5, 37, 64, 83, 186, 191], "resolv": [5, 83, 176, 191], "integ": [5, 6, 7, 10, 16, 19, 83, 125, 127, 152, 153, 158, 196], "filter_layer_list": 5, "transform": [5, 37, 52, 65, 76, 83, 92, 127, 128, 137, 141, 152, 167, 191], "filter_region": 5, "tupl": [5, 23, 37, 63, 64, 65, 76, 83, 84, 106, 109, 111, 114, 122, 123, 127, 131, 144, 151, 153, 155, 159, 165], "layer_nam": [5, 37, 76, 82, 97, 123, 127], "distanc": [5, 6, 17, 18, 19, 25, 29, 35, 43, 63, 64, 66, 88, 89, 90, 110, 122, 127, 131, 132, 135, 141, 142, 152, 155], "filter": [5, 113, 179], "region": [5, 37, 38, 52, 63, 83, 100, 103, 110, 122, 123, 124, 127, 128, 141, 152, 154, 158], "element_cel": 5, "shape_lay": 5, "locat": [5, 37, 52, 63, 76, 79, 83, 103, 106, 109, 119, 122, 125, 127, 131, 148, 157, 159, 164, 167, 168, 177, 178, 179, 181, 182, 186, 187, 189, 195, 196, 197], "rotat": [5, 37, 43, 63, 76, 83, 92, 127, 190, 191], "repeat": [5, 126], "list": [5, 6, 7, 9, 10, 13, 16, 17, 18, 19, 23, 25, 26, 28, 29, 32, 34, 35, 36, 37, 38, 43, 48, 52, 55, 56, 57, 58, 63, 64, 65, 66, 76, 77, 81, 83, 84, 85, 88, 89, 90, 91, 93, 97, 100, 101, 102, 103, 106, 107, 109, 110, 111, 113, 114, 115, 119, 120, 122, 123, 124, 125, 126, 127, 128, 131, 132, 137, 142, 144, 151, 152, 153, 155, 157, 159, 160, 162, 163, 164, 165, 167, 168, 169, 174, 177, 178, 182, 185, 187, 191, 195, 196, 197, 198], "dpoint": [5, 37, 63, 64, 76, 83, 92, 120, 122, 123, 125, 127, 141, 151, 152, 155, 157, 163, 167, 190, 191, 196, 201], "degre": [5, 17, 36, 43, 63, 66, 83, 88, 89, 92, 110, 152, 190, 191], "bump_box": 5, "should": [5, 31, 34, 36, 37, 38, 43, 48, 56, 57, 58, 63, 64, 76, 77, 79, 88, 89, 90, 93, 96, 97, 98, 103, 110, 123, 124, 125, 127, 128, 129, 130, 131, 132, 149, 151, 153, 163, 165, 167, 168, 172, 173, 174, 175, 177, 178, 179, 181, 182, 186, 187, 189, 190, 191, 196, 200], "fill": [5, 97, 119, 171, 182, 186, 187, 191], "bump": [5, 32, 41, 43, 58, 63, 127, 130, 171, 196], "coordin": [5, 17, 37, 55, 63, 65, 76, 83, 90, 110, 123, 127, 141, 164, 167, 190], "mai": [5, 28, 37, 63, 76, 83, 84, 97, 125, 127, 128, 160, 162, 163, 164, 168, 172, 174, 175, 177, 178, 179, 181, 182, 185, 186, 187, 189, 190, 191, 193, 194], "post": [5, 37, 114, 123, 126, 195, 197, 198], "sampleholder_typ": [5, 14, 191], "launcher_assign": 5, "none": [5, 26, 31, 35, 37, 41, 45, 52, 60, 63, 70, 76, 82, 83, 84, 85, 86, 92, 97, 103, 106, 107, 109, 111, 113, 114, 115, 120, 122, 123, 124, 125, 126, 127, 128, 131, 132, 137, 141, 144, 146, 151, 152, 153, 159, 160, 163, 164, 165, 167, 168, 194, 196], "enabl": [5, 57, 63, 100, 107, 110, 124, 127, 131, 161, 180, 181, 186, 187, 191, 195], "typic": [5, 13, 25, 29, 32, 37, 38, 58, 63, 69, 90, 127, 137, 142, 146, 160, 163, 191, 196, 197, 198], "sampl": [5, 8, 18, 91, 131, 152], "holder": [5, 8, 18, 131], "size": [5, 29, 36, 38, 43, 57, 63, 68, 76, 83, 84, 88, 89, 110, 125, 127, 152, 157, 158, 164, 186, 190, 191], "self": [5, 37, 58, 63, 66, 70, 75, 83, 84, 92, 96, 97, 98, 127, 129, 130, 131, 132, 153, 173, 185, 191, 194, 196], "accordingli": [5, 37, 191], "wrapper": [5, 76, 131, 172], "around": [5, 19, 29, 35, 36, 37, 38, 52, 64, 65, 76, 83, 127, 151, 152, 157, 172, 180, 185, 186, 187, 190, 196], "configur": [5, 13, 20, 27, 43, 76, 78, 79, 83, 100, 115, 137, 138, 152, 172, 179, 188], "mean": [5, 29, 36, 38, 43, 55, 57, 58, 63, 64, 68, 79, 123, 124, 127, 171, 172, 190, 191, 196], "index": [5, 19, 37, 63, 64, 65, 79, 120, 125, 127, 155, 167, 168, 178, 180, 191], "head": [5, 48, 131], "from": [5, 13, 19, 20, 23, 29, 31, 34, 35, 37, 49, 52, 58, 63, 64, 65, 66, 69, 71, 72, 76, 79, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 100, 103, 107, 110, 111, 113, 114, 120, 122, 123, 124, 125, 127, 129, 130, 131, 132, 137, 141, 144, 145, 148, 151, 152, 155, 156, 157, 158, 160, 161, 163, 165, 167, 168, 171, 172, 174, 175, 177, 178, 180, 181, 182, 185, 186, 187, 188, 189, 190, 192, 194, 195, 196, 198, 199, 200, 201], "n": [5, 13, 25, 29, 32, 37, 38, 58, 63, 65, 88, 89, 90, 118, 127, 137, 142, 152, 153, 163, 179, 191, 194, 195], "launcher_typ": [5, 191], "launcher_width": [5, 20, 191], "launcher_gap": [5, 20, 191], "launcher_ind": [5, 20, 191], "pad_pitch": [5, 191], "port_id_remap": 5, "launcher_frame_gap": [5, 49], "chip_box": [5, 191], "chang": [5, 34, 36, 37, 38, 43, 48, 56, 57, 63, 88, 89, 90, 93, 128, 165, 168, 171, 172, 174, 177, 178, 179, 181, 182, 186, 187, 189, 191, 192, 196, 197, 200], "equal": [5, 124, 152, 159, 164, 167, 195], "distribut": [5, 63, 85, 181], "overridden": [5, 96, 97, 98, 127, 129, 130, 131, 132], "desir": [5, 37, 63, 64, 92, 157, 178, 186, 190, 192, 195, 196], "per": [5, 38, 57, 63, 66, 107, 138, 172, 194, 195], "disabl": [5, 13, 37, 71, 76, 90, 124, 127, 137, 167, 186, 187, 189], "argument": [5, 34, 36, 37, 38, 43, 48, 52, 56, 57, 63, 76, 84, 85, 88, 89, 90, 92, 93, 96, 97, 98, 100, 103, 107, 110, 111, 113, 122, 123, 126, 127, 128, 129, 130, 131, 132, 137, 155, 158, 165, 174, 181, 190, 191, 196, 197, 198], "If": [5, 37, 63, 66, 76, 85, 96, 97, 98, 100, 103, 107, 110, 111, 113, 122, 123, 124, 127, 128, 129, 130, 131, 132, 141, 151, 152, 153, 158, 159, 160, 161, 163, 164, 167, 168, 170, 173, 174, 175, 177, 178, 179, 181, 182, 183, 186, 189, 190, 191, 194, 196, 199, 200, 201], "neither": [5, 76], "rf": [5, 43, 179, 191], "most": [5, 120, 152, 153, 155, 167, 172, 181, 182, 185, 186, 187, 189, 191, 194, 196, 199], "top": [5, 6, 19, 33, 41, 58, 76, 79, 83, 96, 97, 98, 123, 124, 127, 129, 130, 131, 132, 151, 159, 167, 168, 172, 186, 187, 189, 190, 191, 196, 199], "clockwis": [5, 13, 19, 35, 58, 83, 120, 152, 190], "order": [5, 19, 23, 58, 63, 64, 97, 110, 120, 123, 127, 152, 153, 172, 174, 186, 195, 196], "x": [5, 17, 34, 55, 63, 64, 83, 88, 89, 92, 110, 120, 122, 123, 141, 151, 155, 163, 164, 175, 181, 186, 188, 190, 191, 194, 195, 196, 197], "y": [5, 13, 55, 63, 83, 92, 110, 118, 120, 123, 137, 141, 151, 155, 163, 164, 175, 190, 195, 196, 197], "your": [5, 52, 97, 106, 109, 125, 127, 170, 171, 173, 174, 177, 178, 179, 180, 181, 182, 191, 192, 197], "For": [5, 19, 23, 28, 37, 63, 79, 83, 92, 103, 110, 127, 151, 153, 155, 159, 160, 164, 165, 166, 168, 172, 174, 178, 179, 181, 182, 186, 187, 189, 191, 194, 195, 196, 197], "flip": [5, 6, 16, 19, 32, 37, 40, 41, 43, 54, 58, 63, 130, 151, 186, 190, 191, 196], "": [5, 12, 17, 24, 34, 36, 37, 38, 43, 48, 49, 56, 57, 63, 76, 84, 86, 88, 89, 90, 92, 93, 103, 107, 120, 127, 128, 137, 151, 152, 158, 159, 163, 165, 167, 168, 172, 175, 177, 181, 182, 185, 186, 188, 190, 191, 192, 198, 200], "axi": [5, 13, 17, 24, 64, 88, 89, 92, 110, 137, 151, 168, 169], "rang": [5, 57, 153], "delta_x": 5, "100": [5, 13, 18, 25, 29, 32, 35, 37, 38, 43, 58, 60, 63, 64, 75, 90, 91, 92, 110, 118, 127, 130, 132, 135, 137, 139, 140, 142, 152, 187, 191, 196, 197], "delta_i": 5, "x0": 5, "y0": 5, "separ": [5, 13, 37, 71, 72, 76, 84, 90, 91, 97, 110, 123, 127, 137, 153, 155, 159, 160, 162, 179, 181, 182, 186, 187, 191, 192, 196, 197], "along": [5, 58, 110, 168, 201], "dimens": [5, 20, 76, 124, 127, 175, 195, 196], "displac": [5, 92, 191], "tsv_box": 5, "boolean": [5, 9, 10, 13, 18, 21, 23, 25, 29, 32, 34, 35, 37, 38, 43, 49, 52, 54, 55, 56, 58, 63, 64, 65, 66, 67, 68, 71, 72, 74, 76, 83, 84, 90, 92, 97, 127, 129, 130, 131, 137, 141, 142, 161], "make": [5, 28, 41, 83, 84, 85, 86, 106, 109, 110, 127, 165, 171, 172, 174, 175, 177, 178, 179, 180, 181, 182, 186, 187, 189, 190, 191, 192, 196, 197, 201], "plane": [5, 36, 38, 39, 52, 88, 89, 127, 186, 187, 190, 191], "fals": [5, 13, 18, 19, 21, 25, 29, 32, 34, 35, 37, 38, 43, 49, 52, 54, 55, 56, 58, 63, 64, 65, 66, 67, 68, 71, 72, 76, 82, 83, 84, 90, 92, 97, 106, 107, 109, 110, 111, 113, 118, 119, 122, 124, 125, 126, 127, 129, 130, 137, 142, 152, 153, 157, 159, 160, 164, 167, 168, 190, 191, 194, 195, 196], "merge_base_metal_gap": 5, "a_cap": 5, "conductor": [5, 13, 17, 18, 19, 25, 29, 32, 37, 38, 43, 58, 63, 64, 66, 88, 89, 90, 127, 137, 142, 167], "cap": [5, 19], "b_cap": 5, "with_gnd_tsv": 5, "through": [5, 25, 57, 58, 64, 84, 85, 107, 142, 152, 174, 175, 189, 196], "silicon": [5, 25, 127, 142, 191, 196, 199], "with_face1_gnd_tsv": 5, "tsv_grid_spac": 5, "space": [5, 12, 13, 15, 16, 19, 24, 26, 58, 63, 97, 130, 131, 132, 135, 137, 139, 140, 155, 157, 160, 178], "300": [5, 6, 48, 49, 58, 88, 89, 127], "edge_from_tsv": 5, "clearanc": [5, 52, 63, 83], "550": [5, 17, 127], "tsv_edge_to_tsv_edge_separ": 5, "exist": [5, 76, 83, 96, 97, 98, 110, 114, 123, 127, 129, 130, 131, 132, 151, 152, 155, 160, 164, 168, 172, 177, 181, 182, 186, 191, 196, 197], "250": [5, 89, 91], "tsv_edge_to_nearest_el": 5, "with_gnd_bump": 5, "indium": [5, 127, 196], "bump_grid_spac": 5, "120": [5, 88, 89, 93, 171, 173], "edge_from_bump": 5, "bump_edge_to_bump_edge_separ": 5, "95": 5, "frames_en": [5, 6, 7, 10, 16, 19], "drawn": [5, 6, 7, 10, 16, 19, 182, 196, 199], "frames_marker_dist": 5, "each": [5, 13, 18, 23, 26, 35, 36, 37, 58, 63, 64, 65, 66, 76, 79, 81, 82, 83, 84, 85, 88, 89, 91, 93, 97, 100, 107, 110, 123, 127, 132, 138, 141, 151, 152, 155, 158, 159, 160, 162, 163, 164, 168, 172, 177, 178, 179, 182, 186, 189, 190, 191, 192, 194, 195, 196, 197, 198, 201], "1500": [5, 35], "1000": [5, 17, 18, 48, 56, 58, 76, 79, 110, 127, 191], "frames_diagonal_squar": 5, "diagon": [5, 35, 52, 195], "squar": [5, 12, 24, 35, 38, 52, 83, 84, 141, 159, 178, 182, 191], "2": [5, 13, 18, 19, 23, 25, 26, 33, 34, 38, 39, 45, 57, 63, 71, 75, 83, 90, 92, 107, 110, 123, 132, 137, 138, 142, 152, 157, 165, 176, 177, 180, 191, 192, 194, 195, 196], "frames_mirror": 5, "mirror": [5, 9, 10, 13, 19, 82, 83, 92, 137, 157, 168, 169, 190], "true": [5, 9, 10, 13, 18, 19, 23, 29, 32, 37, 56, 58, 63, 64, 71, 72, 74, 76, 83, 84, 85, 90, 97, 106, 107, 110, 111, 113, 119, 127, 129, 130, 131, 137, 145, 151, 152, 153, 155, 159, 160, 161, 162, 164, 165, 167, 168, 172, 187, 189, 190, 191, 194, 195, 196], "frames_dice_width": 5, "street": 5, "200": [5, 13, 17, 19, 25, 35, 58, 63, 93, 142, 191], "140": 5, "face_box": 5, "8500": 5, "dice_grid_margin": [5, 35], "margin": [5, 13, 19, 25, 29, 32, 35, 37, 38, 58, 60, 63, 68, 71, 72, 83, 90, 127, 137, 142, 157, 191, 196, 197], "name_mask": [5, 35], "m000": [5, 35], "name_chip": [5, 7, 9, 10, 17, 22, 35], "ctest": [5, 35], "name_copi": [5, 35, 83], "copi": [5, 35, 37, 63, 83, 114, 159, 169, 172, 191, 192, 197, 198], "name_brand": [5, 35], "brand": [5, 35], "marker_typ": [5, 13, 35, 52], "lower": [5, 13, 23, 35, 74, 92, 124, 127, 182, 195, 196], "standard": [5, 13, 25, 26, 35, 45, 46, 52, 53, 60, 62, 63, 92, 131, 132, 142, 152, 155, 161, 181, 182], "chip_dicing_in_base_met": [5, 35], "line": [5, 6, 9, 17, 18, 19, 35, 36, 48, 56, 64, 84, 90, 91, 114, 120, 126, 127, 139, 140, 142, 152, 155, 171, 175, 177, 178, 186, 187, 188, 189, 190, 191, 197, 198, 199, 200], "metal": [5, 11, 13, 25, 29, 32, 35, 37, 38, 41, 49, 58, 63, 64, 65, 67, 68, 71, 72, 74, 90, 92, 93, 97, 110, 122, 123, 124, 125, 127, 130, 137, 141, 142, 167, 191, 195, 196], "addit": [5, 13, 29, 35, 37, 49, 63, 64, 65, 67, 68, 71, 72, 79, 83, 90, 96, 98, 110, 123, 126, 127, 129, 130, 131, 132, 137, 171, 174, 186, 190, 191, 195], "bound": [5, 35, 55, 63, 83, 92, 124, 127, 137, 154, 157, 163, 186], "10000": [5, 18, 35, 97, 127, 190], "bump_typ": [5, 32, 41, 43, 58, 63], "choic": [5, 6, 10, 13, 14, 15, 16, 18, 19, 23, 25, 26, 29, 31, 32, 33, 34, 41, 43, 45, 46, 47, 56, 58, 60, 61, 62, 63, 66, 70, 71, 72, 73, 74, 90, 92, 107, 110, 132, 137, 138, 142, 165, 172, 178, 195], "tsv_type": [5, 25, 60, 61, 62, 142], "ellips": [5, 25, 60, 61, 142], "bottom": [6, 33, 41, 58, 73, 74, 79, 83, 123, 124, 127, 167, 172, 187, 190, 191, 196], "transmiss": [6, 18, 56, 64, 142], "3": [6, 17, 18, 19, 23, 26, 34, 38, 39, 47, 54, 65, 83, 88, 89, 93, 110, 123, 127, 132, 152, 157, 165, 174, 176, 177, 181, 182, 195, 196], "crossing_length": 6, "400": [6, 17, 58, 88, 89, 127, 191], "cross_talk_dist": 6, "meander_fac": 6, "two": [6, 9, 17, 35, 36, 38, 39, 41, 43, 55, 61, 62, 63, 71, 83, 89, 90, 91, 92, 123, 124, 127, 141, 151, 152, 155, 163, 167, 172, 177, 186, 190, 191, 194, 195, 196, 197, 201], "daisi": 7, "woven": 7, "includ": [7, 9, 10, 13, 18, 25, 28, 29, 32, 37, 38, 56, 58, 63, 69, 71, 72, 82, 84, 85, 90, 92, 97, 106, 109, 123, 127, 129, 137, 142, 151, 152, 153, 159, 168, 170, 174, 175, 180, 181, 185, 186, 190, 191, 195, 197, 201], "text": [7, 35, 37, 63, 79, 83, 123, 125, 127, 139, 140, 155, 157, 158, 167, 178, 187, 191], "manual": [7, 30, 58, 63, 69, 70, 75, 79, 84, 87, 100, 107, 110, 125, 149, 151, 174, 176, 180, 182, 190, 195, 196, 197, 199], "pattern": [7, 58, 180], "No": [7, 10, 13, 23, 26, 70, 73, 90, 92, 110, 132, 137, 181], "input": [7, 17, 19, 43, 58, 63, 123, 152, 155, 194, 196, 201], "demonstr": [9, 10, 17, 178, 179, 186, 187, 201], "four": [9, 23, 52, 91, 134, 141, 152, 157, 163, 190], "readout": [9, 10, 17, 23, 90, 91], "reson": [9, 10, 17, 18, 19, 23, 48, 56, 58, 129, 186, 195], "probe": [9, 17, 141, 151], "charg": [9, 187], "qubit_a_nr": [9, 10], "qubit_b_nr": [9, 10], "port_nr": [9, 127, 196], "qubit_nr": [9, 10], "cap_finger_nr": [9, 10], "probeline_nam": [9, 10], "readout_res_length": [9, 10, 17, 23, 190], "5000": [9, 10, 23, 58, 131, 190, 191], "5100": [9, 10, 23], "5200": [9, 10, 23], "5300": [9, 10, 23], "include_coupl": [9, 10, 190], "coupler": [9, 10, 17, 18, 19, 23, 26, 34, 36, 38, 56, 88, 89, 90, 91, 93, 127, 132, 146, 187, 196], "3d": [10, 28, 110, 122, 127, 186, 191, 196], "integr": [10, 28, 107, 109, 110, 115, 185, 186, 188, 191, 198], "multi": [10, 29, 31, 32, 56, 58, 63, 66, 79, 84, 85, 127, 179, 180, 188, 191], "featur": [10, 37, 63, 103, 153, 178, 179, 180, 181, 182, 187, 188, 189, 190, 191, 198], "dt": 10, "almost": [11, 163, 191], "remov": [11, 34, 52, 83, 84, 127, 130, 151, 152, 160, 161, 165, 168, 175, 177, 178, 180, 191], "ebl": [11, 77, 180, 190], "edge_len": [12, 24], "80": [12, 13, 24, 36, 66, 88, 89, 91], "inter_spac": [12, 24], "20": [12, 17, 18, 19, 24, 29, 31, 36, 38, 39, 68, 88, 89, 90, 91, 92, 139, 140, 194, 196], "pad_width": [13, 72, 90, 137, 141], "500": [13, 19, 25, 34, 48, 50, 56, 58, 63, 90, 110, 134, 137, 142, 158, 191, 196], "junctions_horizont": [13, 137], "horizont": [13, 18, 23, 25, 58, 72, 83, 90, 137, 141, 142, 169], "small_loop_area": 13, "small": [13, 22, 64, 171, 191, 194], "loop": [13, 71, 75, 90, 92, 137], "large_loop_area": 13, "larg": [13, 179, 194], "130": [13, 191], "junction_width_smal": 13, "finger": [13, 17, 18, 19, 23, 34, 38, 39, 56, 57, 71, 72, 90, 93, 137, 146], "15": [13, 88, 89, 135, 196], "junction_width_larg": 13, "08": [13, 132], "junction_width_step_increment_smal": 13, "01": [13, 107, 110, 120, 127], "junction_width_step_increment_larg": 13, "03": 13, "pads_loop": 13, "central": [13, 190], "6": [13, 17, 18, 19, 23, 25, 29, 32, 37, 38, 48, 58, 63, 66, 72, 88, 89, 90, 127, 137, 142, 152, 165], "turn": [13, 19, 25, 29, 32, 34, 36, 37, 38, 43, 48, 56, 57, 58, 63, 88, 89, 90, 93, 110, 127, 132, 137, 142, 167, 172, 186, 191], "64": [13, 25, 29, 32, 37, 38, 58, 63, 90, 127, 137, 142, 152, 181], "r": [13, 25, 29, 32, 37, 38, 43, 58, 63, 64, 65, 90, 127, 137, 142, 152, 153, 167, 174, 177, 178, 191, 194, 197, 200], "radiu": [13, 25, 29, 32, 36, 37, 38, 39, 55, 58, 63, 64, 65, 72, 83, 88, 89, 90, 93, 127, 137, 142, 152, 167, 191], "protect": [13, 25, 29, 32, 37, 38, 58, 63, 68, 90, 127, 137, 142], "1t1": [13, 25, 29, 32, 37, 38, 58, 63, 79, 83, 84, 90, 127, 130, 137, 142, 151, 182, 186, 190, 191, 196], "2b1": [13, 25, 29, 32, 37, 38, 58, 63, 79, 83, 90, 127, 137, 142, 190, 191, 196], "1b1": [13, 25, 29, 32, 37, 38, 58, 63, 90, 127, 137, 142], "2t1": [13, 25, 29, 32, 37, 38, 58, 63, 79, 83, 90, 127, 137, 142, 191], "display_nam": [13, 25, 29, 32, 37, 38, 58, 63, 90, 127, 137, 142], "displai": [13, 25, 29, 32, 37, 38, 58, 63, 76, 90, 127, 137, 142, 186, 189, 190], "gui": [13, 25, 28, 29, 32, 37, 38, 55, 58, 63, 64, 76, 79, 90, 111, 113, 127, 137, 142, 149, 151, 155, 159, 172, 176, 178, 180, 181, 182, 185, 187, 188, 189, 191, 193, 196, 198, 199, 200], "protect_opposite_fac": [13, 25, 29, 32, 37, 38, 58, 63, 90, 127, 137, 142], "appli": [13, 25, 29, 32, 37, 38, 58, 63, 65, 76, 83, 84, 85, 90, 110, 122, 124, 127, 128, 137, 141, 142, 172, 186, 196], "onli": [13, 25, 29, 32, 34, 36, 37, 38, 43, 48, 56, 57, 58, 63, 64, 70, 83, 84, 85, 88, 89, 90, 92, 93, 97, 103, 110, 111, 124, 127, 133, 137, 138, 142, 145, 149, 153, 155, 158, 162, 165, 166, 167, 168, 172, 174, 177, 178, 179, 181, 182, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 201], "signal": [13, 25, 29, 32, 37, 38, 58, 63, 90, 97, 110, 123, 125, 127, 137, 142, 167, 186, 195, 196], "carri": [13, 25, 29, 32, 37, 38, 58, 63, 90, 127, 137, 142], "opposing_face_id_group": [13, 25, 29, 32, 37, 38, 58, 63, 90, 127, 137, 142], "oppos": [13, 25, 29, 32, 37, 38, 58, 63, 90, 127, 137, 142, 196], "group": [13, 25, 29, 32, 37, 38, 58, 63, 69, 79, 90, 118, 119, 127, 137, 142, 151, 154, 182, 186, 191], "etch_opposite_fac": [13, 25, 29, 32, 37, 38, 58, 63, 90, 127, 137, 142], "etch": [13, 19, 25, 29, 32, 37, 38, 58, 63, 79, 90, 123, 124, 125, 127, 137, 142], "opposit": [13, 19, 25, 29, 32, 37, 38, 58, 63, 90, 127, 130, 137, 142, 196], "too": [13, 25, 29, 32, 37, 38, 49, 58, 63, 64, 65, 67, 68, 90, 127, 137, 142, 163, 165, 177, 178, 179], "etch_opposite_face_margin": [13, 19, 25, 29, 32, 37, 38, 58, 63, 90, 127, 137, 142], "area_height": [13, 137], "height": [13, 17, 19, 34, 72, 76, 83, 90, 122, 124, 125, 127, 134, 137, 141, 157, 196], "1900": [13, 137], "area_width": [13, 137], "1300": [13, 19, 137], "pad_spac": [13, 137], "only_pad": [13, 137], "pad_configur": [13, 137], "junction_width_step": [13, 137], "automat": [13, 39, 55, 58, 63, 71, 76, 81, 83, 86, 97, 106, 137, 159, 172, 174, 175, 177, 178, 181, 182, 185, 186, 189, 190, 191, 192, 194], "junction_width": [13, 70, 90, 92, 137], "junction_test_pads_typ": [13, 137, 138], "junction_test_pads_paramet": [13, 137], "extra": [13, 19, 29, 33, 45, 63, 64, 66, 70, 83, 90, 92, 119, 137, 157, 168, 181], "_junction_test_pads_paramet": [13, 137], "previou": [13, 45, 63, 70, 90, 92, 137, 152, 177, 178, 186, 189, 190, 191], "state": [13, 45, 70, 90, 92, 137, 192, 194], "_paramet": [13, 37, 45, 70, 90, 92, 137], "mirror_squid": [13, 92, 137], "its": [13, 37, 58, 63, 64, 83, 92, 97, 103, 110, 127, 137, 151, 152, 153, 168, 172, 174, 186, 190, 191, 192], "junction_paramet": [13, 70, 90, 92, 137], "_junction_paramet": [13, 70, 90, 92, 137], "finger_overshoot": [13, 71, 72, 90, 137], "include_base_metal_gap": [13, 71, 72, 90, 137], "shadow_margin": [13, 71, 72, 90, 137], "shadow": [13, 71, 72, 90, 137], "compact_geometri": [13, 71, 90, 137], "compact": [13, 71, 90, 137, 153], "geometri": [13, 34, 36, 37, 38, 43, 48, 52, 56, 57, 61, 62, 71, 88, 89, 90, 92, 93, 96, 97, 98, 123, 124, 127, 129, 130, 131, 132, 137, 152, 158, 163, 168, 171, 180, 182, 186, 188, 189, 191, 195, 198, 199, 201], "separate_junct": [13, 71, 72, 90, 137], "offset_compens": [13, 71, 72, 90, 137], "lead": [13, 38, 57, 71, 72, 90, 110, 137, 167, 177, 194, 196], "offset": [13, 63, 71, 72, 83, 90, 93, 137], "mirror_offset": [13, 71, 72, 90, 137], "move": [13, 55, 63, 71, 72, 90, 92, 137, 152, 174, 182, 186, 187], "finger_overlap": [13, 71, 72, 90, 137], "insid": [13, 36, 57, 58, 63, 71, 72, 90, 97, 107, 110, 123, 125, 127, 137, 153, 159, 167, 182, 186, 189, 190, 191, 196, 199], "single_junct": [13, 71, 90, 137], "second": [13, 17, 32, 37, 43, 71, 90, 110, 113, 122, 123, 127, 137, 152, 191, 192, 194, 197], "predefin": [14, 64, 123, 186], "sma8": [14, 18, 131, 191], "ard24": [14, 18], "dc24": 14, "num_strip": [15, 16, 139, 140], "min_width": [15, 16], "max_width": [15, 16], "stripe_test": [15, 16], "stripe_test_increasing_width": [15, 16], "architectur": [16, 176, 180, 181, 191], "circular": [17, 36, 62, 83, 88, 153], "island": [17, 36, 88, 89, 90, 91, 92, 93, 195, 196], "drivelin": [17, 88, 89, 90, 91], "11500": 17, "12700": 17, "8000": [17, 118], "kappa_finger_control": 17, "capacitor": [17, 18, 19, 34, 36, 38, 39, 56, 57, 63, 146, 163, 186, 191], "32": [17, 88, 89], "21": [17, 18, 19, 23], "46": 17, "coupler_length": 17, "9800": 17, "couplers_a_qb1": 17, "couplers_b_qb1": 17, "couplers_angle_qb1": 17, "0deg": [17, 88, 89], "225": 17, "315": 17, "couplers_width_qb1": 17, "radial": [17, 88, 89], "30": [17, 18, 25, 56, 60, 61, 67, 88, 89, 107, 134, 142, 191, 195], "50": [17, 25, 35, 90, 118, 125, 159, 167], "couplers_arc_amplitude_qb1": 17, "angular": [17, 88, 89], "extens": [17, 88, 89, 125, 127, 175, 176, 181, 192, 195], "25": [17, 32, 41, 58, 196], "65": 17, "couplers_a_qb2": 17, "couplers_b_qb2": 17, "couplers_angle_qb2": 17, "couplers_width_qb2": 17, "couplers_arc_amplitude_qb2": 17, "35": [17, 88, 89], "drive_line_offset": 17, "end": [17, 29, 32, 55, 58, 63, 64, 65, 106, 109, 113, 122, 124, 127, 130, 167, 168, 174, 175, 186, 189, 190, 195, 196], "drive": [17, 88, 89, 90, 131], "ground_gap": [17, 36, 57, 88, 89, 90], "1400": 17, "900": [17, 191], "coupler_ext": [17, 90], "150": [17, 88, 90, 93, 191], "island1_ext": [17, 90], "first": [17, 18, 23, 37, 43, 55, 58, 63, 64, 76, 79, 90, 122, 123, 126, 127, 152, 165, 167, 172, 175, 177, 178, 180, 181, 186, 188, 190, 191, 193, 194, 196, 197], "island2_ext": [17, 90], "drive_posit": [17, 90], "1100": 17, "island_island_gap": [17, 90], "em1": 17, "res_length": [18, 19], "physic": [18, 19, 29, 36, 38, 43, 57, 63, 68, 106, 109, 110, 164, 194, 199, 201], "5434": [18, 19], "5429": [18, 19], "5374": [18, 19], "5412": [18, 19], "5493": [18, 19], "5589": [18, 19], "n_finger": [18, 19, 23, 56], "planar": [18, 19, 97], "l_finger": [18, 19, 23, 56], "23": [18, 19, 23], "9": [18, 19, 23, 181, 190, 191], "14": [18, 19, 23, 25, 177, 178], "28": [18, 19, 166, 178, 181], "type_coupl": [18, 19, 23, 56], "interdigit": [18, 19, 23, 56, 146], "n_ab": [18, 56, 134], "res_term": [18, 56], "termin": [18, 56, 58, 63, 64, 65, 113, 127, 130, 167, 177, 178, 181, 190, 192, 195, 196], "galvan": [18, 41, 56], "res_beg": [18, 56], "begin": [18, 56, 58, 65, 140, 190, 192], "res_a": [18, 19, 48, 56], "res_b": [18, 19, 48, 56], "12": [18, 19, 29, 68, 72, 74, 90, 92, 93, 107, 127, 195], "tl_airbridg": [18, 56], "res_airbridge_typ": [18, 56], "rectangular": [18, 29, 31, 33, 49, 56, 58, 63, 64, 65, 66, 83, 93, 190], "sample_holder_typ": 18, "marker_safeti": 18, "curv": [18, 64, 65, 152], "feedline_bend_dist": 18, "feedlin": [18, 23, 36, 38], "bend": [18, 55, 63, 64, 196], "resonators_both_sid": 18, "both": [18, 19, 29, 30, 32, 37, 63, 70, 75, 86, 110, 116, 127, 167, 172, 175, 179, 190, 194, 196, 197], "max_res_len": [18, 56], "exceed": [18, 56], "becom": [18, 56, 63, 79, 126, 189, 195, 196], "1e": [18, 56, 110, 123, 132], "ground_grid_in_trac": [18, 55, 56, 63, 64, 65, 67], "trace": [18, 29, 48, 49, 56, 63, 64, 65, 67, 68, 125], "border": [18, 127], "preliminari": 19, "resonator_typ": 19, "connector_dist": [19, 58], "extra_resonator_avoid": 19, "extra_resonator_etch": 19, "spiral": [19, 58, 186], "attach": [19, 83, 160, 190], "pl_": 19, "_t_port_c": 19, "identifi": [19, 84, 103, 111, 163, 164, 171, 190, 191, 192], "long": [19, 171, 178, 191, 194, 195, 196], "same": [19, 23, 36, 37, 38, 55, 63, 76, 83, 84, 85, 97, 123, 127, 152, 159, 162, 163, 164, 165, 168, 172, 177, 178, 179, 182, 186, 189, 190, 191, 192, 194, 196], "wai": [19, 22, 37, 63, 84, 85, 120, 123, 167, 172, 178, 180, 181, 182, 185, 186, 190, 191, 196, 197], "direct": [19, 22, 32, 33, 37, 49, 55, 63, 64, 83, 92, 110, 124, 127, 131, 145, 152, 155, 167, 186, 191, 196], "_corner": [19, 167], "cpw": [19, 25, 56, 142], "exclud": [19, 165, 167], "finger_control": [19, 57], "solid": [19, 195], "twofac": 19, "ground_grid_avoid": [19, 37, 92, 191], "counter": [19, 58, 152], "resonator_fac": 19, "2100": 19, "2900": 19, "3700": 19, "4500": 19, "spiral_box_height": 19, "spiral_box_width": 19, "x_indent": 19, "indent": [19, 20, 153], "800": [19, 58], "cap_res_dist": 19, "waveguide_indent": 19, "At": [19, 152, 187], "bridge_spac": [19, 58], "parametr": [20, 180, 186], "connect": [20, 22, 23, 38, 43, 49, 50, 58, 64, 88, 89, 119, 125, 127, 138, 141, 159, 186, 187, 191, 196], "pairwis": 20, "coplanar": [20, 43, 63, 64, 65, 67, 68, 164, 186, 191, 195], "n_launcher": 20, "40": [20, 32, 36, 41, 43, 58, 63], "launcher_pitch": 20, "pitch": [20, 25, 142], "635": 20, "160": [20, 187], "96": 20, "520": 20, "tunabl": 21, "veri": [22, 64, 76, 186, 189, 191, 196, 197], "coupl": [23, 48, 187, 195], "half": [23, 91, 191], "abov": [23, 58, 127, 159, 178, 179, 182, 186, 187, 189, 194, 195, 197, 198], "below": [23, 29, 58, 74, 122, 124, 127, 145, 159, 168, 170, 177, 185, 189, 190, 191, 192, 194, 195, 196, 198], "chargelin": [23, 93], "whose": [23, 159, 162], "upper": [23, 74, 92, 124, 127, 196], "six": 23, "5400": [23, 190], "5500": [23, 190], "use_test_reson": [23, 129], "test_res_length": 23, "5600": [23, 190], "5800": 23, "metrologi": 25, "segment": [25, 58, 63, 64, 65, 67, 68, 122, 127, 186], "crossect": 25, "analysi": [25, 107, 119, 195], "array_form": 25, "array_layout": 25, "metrology_pitch": 25, "cpw_distanc": [25, 142], "placehold": [25, 142, 190], "hor_dist": [25, 142], "ver_dist": [25, 142], "tsv_diamet": [25, 60, 142], "diamet": [25, 32, 41, 58, 60, 142], "tsv_margin": [25, 60, 142], "tsv_elliptical_width": [25, 61, 142], "ellipt": [25, 61, 142], "pos_start": [26, 131], "end_i": [26, 131], "c_kappa_l_fing": 26, "dedic": [26, 123, 127, 132, 196, 198], "function": [26, 31, 37, 45, 57, 58, 63, 66, 70, 75, 79, 82, 84, 86, 92, 95, 97, 100, 103, 111, 115, 122, 123, 124, 127, 128, 131, 132, 144, 146, 149, 152, 153, 155, 162, 163, 165, 168, 171, 172, 173, 179, 188, 190, 191, 194, 195, 196, 198], "also": [26, 28, 37, 49, 55, 63, 64, 65, 67, 76, 83, 84, 85, 86, 87, 92, 93, 109, 116, 124, 127, 132, 137, 139, 140, 141, 145, 151, 152, 153, 159, 160, 161, 163, 165, 168, 172, 174, 175, 177, 178, 179, 180, 181, 182, 185, 186, 189, 190, 191, 192, 194, 195, 196, 198, 200], "assum": [26, 64, 65, 76, 84, 127, 132, 181, 187, 195, 196], "follow": [26, 58, 63, 64, 76, 79, 81, 82, 96, 97, 98, 127, 129, 130, 131, 132, 152, 153, 159, 160, 164, 170, 171, 172, 173, 174, 177, 178, 179, 181, 182, 186, 189, 190, 191, 192, 194, 195, 196, 197, 198, 201], "attribut": [26, 37, 82, 125, 132, 165, 172, 173], "arm_width_a": [26, 131, 132], "arm_width_b": [26, 131, 132], "qubit_spac": [26, 131, 132], "fluxline_typ": [26, 45, 46, 47, 92, 132, 196], "rr_cpl_width": [26, 132], "arm": [26, 38, 92, 93, 131, 132, 135, 137, 191], "24": [26, 93, 131, 132], "rr": [26, 132], "qb": [26, 132], "um": [26, 93, 125, 127, 132, 157, 164], "file": [27, 37, 69, 76, 77, 79, 81, 82, 83, 84, 106, 107, 109, 110, 111, 114, 119, 123, 126, 127, 149, 151, 156, 158, 161, 163, 164, 168, 170, 172, 174, 175, 177, 178, 179, 180, 181, 182, 186, 187, 188, 189, 190, 192, 193, 194, 195, 197, 198, 199, 200], "thing": [27, 81, 172, 182, 191, 194], "path": [27, 58, 63, 64, 76, 82, 86, 106, 107, 109, 111, 114, 119, 122, 123, 126, 131, 151, 152, 156, 160, 163, 164, 174, 178, 179, 181, 185, 186, 191, 192, 193, 194, 197, 201], "sub": [27, 37, 63, 64, 71, 83, 92, 110, 124, 127, 168, 172, 186, 190], "repres": [28, 63, 64, 65, 70, 75, 76, 81, 83, 84, 85, 123, 152, 180, 189, 196], "form": [28, 63, 97, 107, 110, 116, 120, 127, 159, 171, 172], "being": [28, 79, 177, 191], "pcelldeclarationhelp": [28, 37, 172], "load": [28, 69, 84, 87, 90, 91, 93, 156, 158, 160, 164, 168, 172, 189, 190, 191], "klayout": [28, 63, 64, 76, 79, 86, 123, 127, 149, 151, 158, 159, 160, 161, 163, 166, 172, 174, 175, 177, 178, 180, 182, 185, 186, 187, 188, 190, 191, 196, 198, 199, 200], "code": [28, 30, 34, 36, 37, 38, 43, 48, 55, 56, 57, 63, 64, 69, 70, 75, 76, 87, 88, 89, 90, 92, 93, 97, 137, 153, 159, 168, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 185, 188, 189, 196, 197, 199, 200], "share": [28, 92, 127, 152, 194], "them": [28, 97, 107, 163, 172, 177, 178, 179, 182, 185, 186, 190, 191, 196], "have": [28, 31, 34, 36, 37, 38, 43, 48, 52, 56, 57, 63, 64, 76, 79, 83, 84, 85, 87, 88, 89, 90, 93, 103, 107, 123, 127, 151, 152, 159, 160, 163, 165, 167, 168, 172, 174, 175, 177, 178, 179, 181, 182, 183, 186, 187, 189, 190, 191, 192, 193, 195, 196, 201], "easi": [28, 177, 179, 180], "support": [28, 36, 63, 76, 104, 109, 110, 119, 151, 153, 158, 178, 180, 181, 186, 191, 192, 194, 195, 196, 198, 201], "concept": [28, 186, 189, 191, 196], "belong": [28, 79, 103, 163, 191], "certain": [28, 34, 36, 37, 38, 43, 48, 56, 57, 77, 83, 84, 88, 89, 90, 93, 127, 177, 178, 179, 191, 196], "determin": [28, 37, 52, 63, 64, 83, 84, 106, 107, 110, 127, 141, 159, 161, 167, 168, 190, 191, 192, 195, 196], "actual": [28, 31, 45, 63, 64, 65, 70, 75, 83, 84, 92, 104, 174, 178, 182, 189, 190, 191, 196, 201], "refer": [28, 35, 36, 37, 38, 39, 76, 79, 82, 88, 89, 127, 151, 152, 153, 167, 170, 172, 177, 178, 179, 186, 189, 191, 197], "taper": [29, 39, 49, 63, 68, 90], "bridge_gap_width": 29, "with_side_airbridg": 29, "With": [29, 79, 172, 186, 190], "with_right_waveguid": 29, "gap_between_bridg": 29, "inner": [29, 89, 127, 196], "adjac": [29, 63, 127, 152, 154], "bridg": [29, 31, 32, 33, 55, 58, 63, 66, 96, 191], "waveguide_extra": 29, "taper_length": [29, 39, 63, 68], "31": [29, 68, 153], "41592653589793": [29, 68], "m2": [29, 68, 181], "a2": [29, 36, 37, 38, 43, 57, 63, 66, 68], "non": [29, 36, 38, 43, 55, 57, 58, 63, 68, 107, 123, 127, 152, 153, 158, 171, 195, 196], "b2": [29, 36, 37, 38, 43, 57, 63, 66, 68], "add_met": [29, 49, 63, 64, 65, 67, 68], "add": [29, 32, 37, 49, 55, 61, 63, 64, 65, 67, 68, 74, 76, 83, 84, 96, 98, 110, 119, 123, 127, 129, 130, 131, 132, 141, 165, 172, 174, 182, 187, 190, 191, 192, 196, 197], "airbridge_typ": [29, 31, 32, 33, 58, 63, 66], "bridge_width": [29, 31, 32, 58], "pad_length": [29, 31, 32, 58], "22": [29, 72, 90, 174, 177, 181], "bridge_length": [29, 31, 58, 191], "60": [29, 39, 88, 89], "without": [31, 45, 58, 63, 70, 75, 76, 83, 86, 92, 120, 127, 138, 178, 179, 181, 182, 186, 190, 191, 192, 194, 196, 200], "subclass": [31, 34, 36, 37, 38, 43, 48, 52, 56, 57, 63, 84, 85, 88, 89, 90, 92, 93, 97, 107, 110, 127, 153, 165, 188, 195, 197, 198], "otherwis": [31, 32, 33, 37, 63, 64, 76, 96, 98, 111, 113, 124, 127, 128, 129, 130, 131, 132, 153, 160, 168, 177, 181, 186, 196], "user": [31, 32, 33, 37, 61, 63, 76, 84, 92, 113, 171, 174, 175, 177, 178, 180, 181, 185, 190, 191, 192, 194, 196], "classmethod": [31, 34, 36, 37, 38, 41, 43, 45, 48, 52, 54, 56, 57, 60, 63, 70, 88, 89, 90, 93, 97, 127, 137, 165, 172, 196], "18": [31, 45], "44": [31, 58, 191], "equival": [32, 63, 153], "origin": [32, 33, 37, 41, 61, 62, 65, 66, 73, 74, 76, 83, 123, 127, 152, 157, 191], "geometr": [32, 33, 41, 61, 62, 152, 180], "include_bump": [32, 58], "ubm_diamet": [32, 41, 58], "under": [32, 37, 41, 58, 76, 84, 103, 122, 125, 127, 160, 174, 177, 182, 185, 186, 189, 191], "bump_diamet": [32, 41, 58], "part": [33, 48, 49, 58, 84, 92, 93, 110, 124, 125, 127, 137, 152, 177, 186, 187, 189, 190, 191, 194, 195], "port_a": [33, 37, 63], "port_b": [33, 37, 63, 191], "closest": [33, 35, 120, 127, 141, 151, 159, 196], "pad_extra": 33, "capacit": [34, 57, 90, 91, 107, 110, 125, 132, 167, 188, 194, 196, 198], "fem": [34, 194], "comput": [34, 69, 119, 152, 192, 194, 195], "when": [34, 36, 37, 38, 43, 48, 56, 57, 63, 64, 76, 83, 88, 89, 90, 93, 103, 110, 113, 115, 123, 124, 125, 127, 151, 152, 167, 168, 171, 172, 174, 175, 178, 181, 186, 189, 190, 191, 192, 194, 196, 199], "best": [34, 36, 37, 38, 43, 48, 56, 57, 88, 89, 90, 93, 178, 181, 191], "practic": [34, 36, 37, 38, 43, 48, 56, 57, 63, 88, 89, 90, 93, 172, 185, 196], "effect": [34, 36, 37, 38, 43, 48, 56, 57, 88, 89, 90, 93, 107, 127, 128, 131, 157, 177, 179, 195], "serv": [34, 36, 37, 38, 43, 48, 56, 57, 88, 89, 90, 93], "deriv": [34, 36, 37, 38, 43, 48, 56, 57, 63, 88, 89, 90, 93, 100, 103, 128, 145, 152, 172, 191], "noth": [34, 36, 37, 38, 43, 48, 56, 57, 88, 89, 90, 93, 165, 189], "els": [34, 36, 37, 38, 43, 48, 56, 57, 88, 89, 90, 93, 153], "cl": [34, 36, 37, 38, 43, 48, 52, 56, 57, 88, 89, 90, 93, 97, 127, 146, 165, 196], "you": [34, 36, 37, 38, 43, 48, 52, 56, 57, 58, 76, 88, 89, 90, 93, 106, 109, 123, 153, 159, 170, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 199, 200, 201], "need": [34, 36, 37, 38, 43, 48, 52, 56, 57, 58, 63, 64, 77, 79, 86, 88, 89, 90, 93, 95, 97, 100, 103, 126, 149, 151, 152, 164, 170, 171, 172, 173, 174, 177, 178, 179, 180, 181, 182, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "decid": [34, 36, 37, 38, 43, 48, 56, 57, 88, 89, 90, 93, 196], "x_coupler_length": 34, "x_coupler_height": 34, "x_coupler_vari": 34, "variant": [34, 46, 47, 81, 84, 190], "either": [34, 37, 58, 69, 70, 75, 76, 79, 84, 85, 87, 100, 127, 138, 152, 167, 177, 186, 191, 196, 198], "remove_capacitor": 34, "finger_numb": [34, 38, 39], "finger_width": [34, 38, 39, 57], "finger_gap": [34, 38, 39, 57], "finger_gap_end": [34, 38], "marker_dist": 35, "diagonal_squar": [35, 52], "use_face_prefix": 35, "prefix": [35, 37, 76, 82, 100, 101, 102, 103, 109, 114, 123, 126, 127, 141, 152, 179, 191], "chip_dicing_width": 35, "chip_dicing_line_length": 35, "chip_dicing_gap_length": 35, "dash": [35, 186], "outer": [36, 49, 83, 89, 141], "semi": 36, "fix": [36, 38, 57, 63, 127, 179, 181], "imped": [36, 88, 89, 125], "r_inner": [36, 89], "r_outer": [36, 89], "extern": [36, 89, 180, 185, 188, 191, 196, 197], "swept_angl": 36, "cover": [36, 52, 83, 124, 127, 146, 154, 167, 179, 186, 190, 195], "180": [36, 43, 63, 66, 89], "outer_island_width": [36, 89], "fixed_length": [36, 38, 57], "auto": [36, 38, 57, 191], "cell_transf": [37, 127], "extract": [37, 100, 103, 159, 163, 167, 168], "specif": [37, 52, 63, 70, 75, 76, 81, 82, 83, 84, 97, 103, 115, 127, 153, 167, 170, 172, 174, 177, 178, 181, 182, 186, 189, 191, 196, 197, 198], "convert": [37, 63, 83, 127, 153, 155, 159, 160, 162, 163, 167, 168, 185, 187, 188], "target": [37, 63, 144, 167, 178, 181], "system": [37, 79, 110, 151, 167, 174, 177, 178, 181, 182, 188, 194, 197], "recurs": [37, 76, 127, 153, 162, 167], "level": [37, 76, 124, 127, 151, 153, 159, 167, 171, 172, 179, 185, 186, 189, 191, 194, 201], "look": [37, 76, 126, 127, 128, 160, 167, 177, 180, 191], "subcel": [37, 63, 76, 92, 127, 137, 167, 191], "behav": 37, "like": [37, 63, 70, 75, 84, 100, 153, 165, 172, 174, 175, 178, 179, 181, 182, 186, 190, 191, 194, 195], "target_cel": 37, "label_tran": [37, 76, 127], "note": [37, 58, 63, 76, 83, 84, 100, 110, 155, 166, 167, 172, 174, 177, 178, 179, 180, 186, 190, 191, 192, 194, 200], "To": [37, 84, 85, 86, 100, 107, 110, 131, 153, 174, 175, 177, 181, 182, 186, 189, 190, 191, 194, 195, 196, 200, 201], "inherit": [37, 172, 191, 196], "It": [37, 63, 64, 76, 83, 84, 85, 86, 92, 127, 137, 153, 172, 174, 177, 178, 179, 180, 181, 182, 186, 187, 191, 193, 194, 196, 197], "directli": [37, 63, 76, 127, 179, 185, 186, 190, 191, 194], "take": [37, 76, 97, 103, 123, 127, 128, 152, 153, 165, 167, 177, 186, 187, 194, 195, 197, 198, 201], "provid": [37, 76, 85, 95, 127, 153, 174, 186, 189, 195, 196, 201], "keyword": [37, 52, 63, 76, 84, 85, 96, 97, 98, 122, 127, 129, 130, 131, 132, 196], "placement": [37, 52, 76, 83, 127, 131, 168, 175], "parent": [37, 76, 127, 131, 167, 168, 172], "allow": [37, 63, 64, 76, 83, 92, 107, 110, 127, 137, 152, 153, 172, 178, 180, 181, 182, 186, 194, 195, 200], "possibl": [37, 52, 58, 63, 64, 76, 84, 92, 127, 138, 165, 172, 174, 177, 178, 182, 186, 191, 192, 194, 195, 197, 199], "instanc": [37, 52, 63, 76, 84, 85, 107, 110, 127, 128, 145, 146, 150, 155, 159, 162, 163, 164, 168, 172, 177, 178, 186, 187, 189, 191, 195, 196, 197, 198, 199], "properti": [37, 61, 76, 83, 85, 97, 127, 164, 165, 168, 172, 185, 186, 187, 189, 191], "rel": [37, 76, 92, 103, 106, 107, 110, 122, 127, 137, 157, 160, 167, 172, 191, 195], "dvector": [37, 76, 83, 92, 127, 152], "must": [37, 63, 64, 76, 124, 127, 152, 155, 166, 167, 168, 177, 178, 182, 189, 191, 194, 195, 196, 197, 200], "default_fac": [37, 79, 191], "doe": [37, 63, 125, 152, 159, 174, 177, 182, 186, 194, 198, 201], "necessarili": [37, 64], "subtyp": 37, "abstract": [37, 97, 127, 172], "care": [37, 152, 177, 179], "str": [37, 63, 83, 100, 101, 102, 103, 106, 107, 109, 110, 112, 113, 116, 118, 122, 123, 125, 127, 128, 144, 151, 153, 155, 158, 159, 160, 165, 168], "indic": [37, 79, 122, 127, 167, 191, 195, 196], "refpoint_transform": 37, "conveni": [37, 63, 83, 86, 127, 152, 193, 196], "new": [37, 76, 96, 97, 98, 114, 127, 129, 130, 131, 132, 144, 150, 151, 155, 160, 165, 168, 171, 172, 177, 178, 179, 182, 186, 187, 188, 190], "present": [37, 115, 127, 168, 174, 177, 181], "avail": [37, 76, 92, 123, 127, 172, 178, 182, 186, 191, 194, 195, 197, 201], "give": [37, 110, 127, 177, 181, 182, 191, 195], "current": [37, 76, 86, 104, 107, 119, 127, 151, 181, 186, 188, 190, 191, 192, 196], "po": [37, 131, 141], "well": [37, 103, 120, 152, 168, 190, 196, 201], "netlist": [37, 84, 163, 164, 185, 190], "Will": [37, 123], "decor": [37, 165, 172, 196], "annot": [37, 61, 64, 65, 79, 175, 185, 191], "evalu": 37, "replac": [37, 83, 84, 155, 168, 177, 190, 197], "mark": [37, 79, 189], "go": [37, 76, 127, 170, 174, 175, 187, 189, 191, 196, 200], "_to_": 37, "cell_inst": 37, "new_nam": 37, "definit": [37, 114, 127, 159, 172, 180, 182, 190, 191, 192, 194, 199], "expos": [37, 63, 86, 189], "renam": 37, "nopar": [37, 97, 127], "abstract_class": [37, 97, 127], "ancestor": [37, 97, 127, 172], "up": [37, 97, 106, 107, 109, 110, 125, 127, 128, 154, 158, 160, 166, 167, 172, 177, 178, 179, 180, 186, 189, 191, 194, 195, 196, 198], "draw": [37, 61, 63, 164, 178, 180, 182, 185, 191, 196, 197], "error_msg": 37, "error": [37, 106, 109, 110, 114, 115, 119, 161, 174, 177, 180, 181, 182, 186, 189, 191], "rais": [37, 63, 114, 115, 153, 155, 168, 189], "valueerror": [37, 63, 153, 155], "messag": [37, 76, 115, 171, 181, 182], "pure": [37, 195], "doesn": [37, 97, 103, 127, 186, 196], "t": [37, 43, 63, 66, 79, 97, 103, 115, 127, 153, 172, 174, 177, 178, 181, 186, 191, 194, 196], "dpolygon": [37, 124, 169, 191], "etc": [37, 63, 79, 123, 127, 163, 168, 172, 177, 182, 191, 199], "primari": [37, 177, 195], "abc": 37, "syncronis": 37, "json": [37, 82, 106, 109, 114, 123, 126, 151, 153, 163, 164, 168, 194, 195, 197, 201], "represent": [37, 63, 83, 152, 153, 194], "sever": [37, 63, 76, 153, 172, 177, 182, 186, 190, 191, 196, 197, 198], "editor": [37, 86, 177, 178, 181, 182, 185, 187, 189, 190, 191, 197, 200], "particularli": [37, 165], "figur": [37, 164, 196], "out": [37, 76, 113, 127, 158, 159, 167, 177, 178, 181, 190, 191, 192, 195], "fluxline_width": [37, 45, 47], "fluxline_paramet": [37, 45, 92], "Or": [37, 84, 86], "consid": [37, 64, 83, 97, 123, 152, 155, 178, 195, 196], "descend": [37, 162, 172], "common": [37, 52, 95, 103, 114, 180, 181, 189, 197], "respect": [37, 63, 124, 125, 127, 135, 157, 169, 196], "adjust": [37, 39, 63, 186], "_port": 37, "orient": [37, 63, 122, 168], "output_rot": [37, 43, 63], "x_max": 38, "y_max": 38, "x_end": 38, "y_left": 38, "y_right": 38, "ground_pad": 38, "ground_gap_ratio": 38, "ratio": [38, 39, 49, 76, 188, 198], "finger_length": [38, 39], "corner_r": [38, 39], "maintain": [39, 171, 177, 181], "match": [41, 65, 84, 85, 115, 182, 192, 197], "contact": [41, 151], "over": [41, 63, 85, 107, 110, 127, 159, 165, 174, 177, 189, 195, 196], "inter": [42, 43], "output": [43, 63, 109, 110, 123, 144, 153, 155, 159, 161, 174, 178, 185, 191, 192, 194, 195, 197, 198, 201], "chosen": [43, 55, 58, 76, 115, 186, 192, 194], "inter_bump_dist": [43, 63], "w": [43, 58, 63, 64, 131], "connector_a": [43, 58, 63], "connector_b": [43, 58, 63], "round_connector": [43, 58, 63], "round": [43, 58, 63, 72, 90, 93, 110, 127, 152, 158, 191], "n_center_bump": [43, 63], "seri": [43, 63, 91, 96, 197], "fluxline_gap_width": [45, 47], "_fluxline_paramet": [45, 92], "hanger": 48, "coupling_length": 48, "head_length": 48, "resonator_length": [48, 56], "total": [48, 55, 63, 73, 74, 92, 110, 127, 134, 144, 152, 194, 195], "ground_width": 48, "middl": [48, 63, 127, 128, 190, 196], "wirebond": [49, 50], "west": [49, 93, 151], "east": [49, 93, 151], "scale": [49, 83], "a_launch": 49, "b_launcher": 49, "l": [49, 67, 173], "240": 49, "144": 49, "cell_mark": [52, 54], "kwarg": [52, 54, 58, 63, 66, 76, 83, 84, 85, 96, 97, 98, 127, 129, 130, 131, 132, 144, 146, 153, 160, 165], "wafer": [52, 83, 85, 190, 191, 199], "By": [52, 55, 83, 84, 85, 92, 110, 127, 153, 161, 171, 189, 190, 191, 192, 194, 199], "own": [52, 93, 123, 151, 174, 177, 180, 181, 182, 191], "wish": [52, 177, 190], "custom": [52, 63, 79, 88, 89, 109, 115, 123, 124, 153, 175, 180, 194], "hous": 52, "encod": [52, 153], "prefer": [52, 149, 172, 175, 178, 187, 193, 194, 199], "inst": [52, 54, 145], "surround": [52, 168], "extend": [52, 63, 64, 127, 167, 180, 190, 191], "box_margin": 52, "window": [52, 54, 76, 109, 151, 152, 174, 176, 181, 182, 186, 187, 189, 190, 193, 197, 200], "flyover": [52, 54], "arm_length": [54, 92, 93, 137, 191, 196], "arm_width": [54, 93, 191], "ubm": 54, "arrow_numb": 54, "arrow": [54, 189], "start_point": 55, "end_point": 55, "altern": [55, 58, 63, 64, 84, 107, 110, 113, 127, 163, 168, 177, 194, 195, 197], "shown": [55, 76, 111, 113, 123, 163, 164, 172, 186, 189, 194], "latter": [55, 63, 84, 174], "cannot": [55, 63, 155, 181, 191, 192], "edit": [55, 63, 64, 155, 178, 182, 185, 187, 188, 191, 200], "minim": [55, 63, 103], "taken": [55, 64, 65, 91, 123, 127, 152, 159, 172, 185, 196], "underli": [55, 191], "equidist": 55, "n_bridg": [55, 63, 96], "600": 55, "3000": [55, 191], "probeline_length": 56, "probelin": 56, "smooth": [56, 57, 146], "intern": [56, 97, 127, 167, 186, 195, 196, 197], "continu": [57, 58, 63, 64, 152, 179], "numer": [57, 152], "optim": [57, 110], "achiev": [57, 63, 92], "growth": 57, "relat": [57, 79, 115, 180, 183, 191], "input_path": 58, "goe": [58, 63, 152], "last": [58, 63, 64, 79, 100, 126, 127, 152, 190, 191], "poly_path": 58, "unless": [58, 177, 178, 181, 190], "alreadi": [58, 76, 106, 113, 123, 177, 187, 190, 191], "longer": [58, 162, 165, 186], "than": [58, 63, 76, 79, 83, 110, 122, 127, 152, 159, 161, 163, 172, 180, 181, 189, 191, 194, 195], "vertex": 58, "parallel": [58, 84, 130, 177, 190, 194], "polygon_path": 58, "want": [58, 83, 100, 159, 168, 175, 177, 178, 179, 186, 189, 190, 191, 193, 194, 196, 197, 201], "choos": [58, 84, 92, 137, 178, 181, 182, 186, 187, 189, 190, 191, 192, 194, 201], "attempt": [58, 153, 163, 177], "find": [58, 86, 120, 148, 155, 160, 172, 179, 181, 191], "largest": [58, 152], "zero": [58, 123, 127, 196], "independ": [58, 177, 178, 194], "n_bridges_pattern": 58, "neg": [58, 127, 153], "so": [58, 63, 84, 96, 97, 98, 103, 123, 127, 129, 130, 131, 132, 151, 152, 167, 168, 172, 174, 177, 178, 179, 181, 182, 186, 189, 191, 195, 197, 200], "above_spac": 58, "below_spac": 58, "right_spac": 58, "x_space": 58, "y_space": 58, "bridges_left": 58, "bridges_bottom": 58, "bridges_right": 58, "bridges_top": 58, "easili": [58, 66, 119, 146, 178, 179, 180, 191], "old": [58, 66, 160, 161, 168, 190], "spiralresonatorrectangl": 58, "bx": [58, 63, 64], "ex": [58, 63, 64, 181], "auto_spac": 58, "include_connector_length": 58, "manual_spac": 58, "term2": [58, 63, 64, 131], "substrat": [61, 62, 110, 122, 123, 124, 127, 191, 196], "e": [62, 63, 66, 83, 92, 110, 128, 131, 152, 153, 163, 168, 172, 174, 178, 191, 192, 193, 194, 195], "composit": [63, 100, 172, 186, 188], "suppli": [63, 64, 85, 96, 98, 127, 129, 130, 131, 132, 151, 196], "serial": [63, 153], "from_seri": 63, "ast": [63, 155], "literal_ev": [63, 155], "node_object": 63, "node_obj": 63, "element_nam": 63, "human": [63, 180, 185], "readabl": [63, 185], "storag": [63, 186], "conform": [63, 119], "format": [63, 97, 151, 152, 159, 170, 194, 195, 197, 198], "class_str": 63, "parameter_dict": 63, "__str__": 63, "omit": [63, 181, 190, 191, 196], "made": [63, 92, 162, 163, 164, 195, 196], "perspect": 63, "rout": [63, 127, 161, 186, 191], "As": [63, 182, 186, 189, 190, 191], "bonu": 63, "arbitrari": [63, 64, 152, 153, 191], "next": [63, 124, 127, 139, 140, 152, 182, 186, 189, 196], "waypoint": [63, 64], "except": [63, 64, 76, 84, 115, 122, 153, 155, 163, 165, 168, 172, 186, 189], "collinear": 63, "back": [63, 191, 192], "pass": [63, 76, 84, 85, 96, 97, 98, 100, 103, 107, 110, 111, 127, 129, 130, 131, 132, 152, 153, 159, 160, 164, 172, 191, 196], "ab_across": 63, "across": [63, 125, 196], "evenli": 63, "preced": 63, "calcul": [63, 83, 92, 100, 107, 110, 125, 137, 178, 186, 191, 195], "ab_to_ab_spac": 63, "ab_to_node_clear": 63, "former": 63, "densiti": [63, 83, 144, 186], "fact": 63, "instead": [63, 66, 76, 84, 110, 153, 155, 172, 174, 177, 182, 186, 191, 192, 194, 195, 196], "normal": [63, 125, 172, 174, 191], "those": [63, 124, 153, 186, 190, 192], "correct": [63, 86, 100, 103, 122, 155, 172, 181, 182, 191, 192], "compar": [63, 64, 153, 158, 185, 191], "notabl": 63, "detail": [63, 95, 110, 174, 177, 178, 182, 189, 191, 195, 197, 198], "everi": [63, 64, 126, 153, 168, 172, 175, 178, 186, 199], "done": [63, 110, 178, 179, 186, 191, 193, 194, 195, 200], "segment_length": 63, "individu": [63, 83, 84, 85, 110, 123, 127, 171, 177, 178, 186, 196], "regular": [63, 181, 190, 196, 197], "test_waveguide_composit": [63, 189], "lym": [63, 168, 186, 189, 197], "script": [63, 76, 106, 109, 111, 113, 114, 126, 151, 159, 168, 174, 175, 177, 178, 181, 182, 185, 186, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201], "were": [63, 100, 159, 168], "explicitli": [63, 103, 110, 151, 181, 194], "implicitli": 63, "node_index": [63, 150, 155], "_created_": 63, "associ": [63, 76, 164, 189], "particular": [63, 182, 189, 191], "subscel": 63, "appear": [63, 182, 186, 187, 189, 199], "retriev": 63, "itself": [63, 103, 177, 182, 191, 195], "count": [63, 127, 145, 196], "consecut": [63, 154], "special": [63, 152, 186], "consequ": [63, 91, 163], "accumul": 63, "oni": 63, "report": [63, 84, 110, 179], "route_funct": 63, "initial_guess": 63, "waveguide_param": 63, "lambda": 63, "f": [63, 66, 123, 125, 132, 174, 189], "more": [63, 79, 81, 84, 106, 109, 119, 123, 127, 163, 171, 172, 173, 174, 177, 178, 180, 182, 185, 186, 189, 190, 191, 194, 195, 196, 197, 198, 200], "compon": [63, 163], "tune": [63, 92, 168, 196], "weight": 63, "initi": [63, 76, 96, 97, 98, 127, 129, 130, 131, 132, 159, 167, 189, 190], "reason": [63, 172, 191], "interfac": [63, 110, 122, 123, 127, 182, 195, 196], "snap": [63, 159], "behavior": [63, 76, 153], "unmodifi": 63, "requir": [63, 76, 110, 115, 149, 159, 172, 173, 176, 177, 179, 181, 182, 185, 186, 190, 191, 194, 196, 197, 198, 201], "chain": 63, "iter": [63, 64, 107, 110, 153, 159, 195], "approri": 63, "target_len": 63, "point_a": 63, "point_a_corn": 63, "point_b": 63, "point_b_corn": 63, "endpoint": [63, 64, 123, 152, 163], "enable_gui_edit": [63, 155], "gui_path": 63, "gui_path_shadow": 63, "hidden": [63, 79, 165, 172, 191], "detect": [63, 186], "tight_rout": 63, "tight": 63, "airbridge_param": 63, "radio": 64, "bent": 64, "open": [64, 90, 91, 151, 175, 177, 181, 182, 184, 186, 187, 188, 189, 190, 194, 195, 200], "dpath": [64, 152, 191], "partial": [64, 186, 187], "case": [64, 79, 84, 86, 114, 123, 127, 151, 162, 168, 175, 178, 179, 181, 182, 185, 186, 189, 190, 191, 192, 195, 196], "guid": [64, 84, 130, 173, 174, 180, 182, 186, 196], "visibl": [64, 76, 177, 181, 182, 186, 189, 190, 191], "graphic": [64, 83, 152, 182], "due": [64, 172, 181], "precis": [64, 123, 127, 152, 180, 195], "arithmet": 64, "point1": 64, "point2": 64, "point3": 64, "data": [64, 79, 83, 95, 97, 107, 110, 123, 125, 126, 127, 159, 164, 168, 181, 189, 191, 195, 197, 198], "v1": 64, "v2": 64, "alpha1": 64, "alpha2": 64, "corner_po": 64, "vector": [64, 152], "elem": [64, 65], "point_1": 64, "point_2": 64, "term_len": [64, 65], "face_index": [64, 65], "One": [64, 127, 157, 163, 178, 186, 196], "waveguide_cel": 64, "annotation_lay": 64, "enough": [64, 159], "neighbor": [64, 186], "begin_shapes_rec": 64, "we": [64, 79, 83, 100, 127, 163, 167, 168, 171, 172, 173, 177, 178, 181, 182, 186, 189, 190, 191, 194, 196, 197, 199], "unsign": [64, 152], "maximum": [64, 76, 107, 110, 194, 195], "tline": 64, "stop": [65, 107, 110, 152, 177, 189, 195], "mode": [65, 76, 149, 178, 182, 185, 187, 189, 194, 197, 200], "radian": [65, 152], "circl": [65, 152, 189], "discret": [65, 107, 195], "shortcut": [65, 187], "detour": 65, "alpha": 65, "left_gap_inn": 65, "left_gap_out": 65, "right_gap_inn": 65, "right_gap_out": 65, "left_protect": 65, "right_protect": 65, "would": [65, 86, 103, 153, 155, 163, 178, 179, 186, 191], "rad": 65, "141592653589793": 65, "multiwai": 66, "splitter": 66, "letter": [66, 79, 113, 158, 160, 182], "length_extra": 66, "length_extra_sid": 66, "waveguidecoplanartcross": 66, "measur": [66, 88, 89, 127, 134, 189, 201], "11": [66, 122, 127, 177, 178], "270": 66, "use_airbridg": 66, "centr": [66, 88, 89], "bridge_dist": 66, "a_list": 66, "b_list": 66, "port_nam": [66, 115], "c": [66, 84, 131, 172], "d": [66, 84, 127, 152, 153, 177, 190, 194], "g": [66, 83, 153, 168, 191], "h": [66, 125, 132], "j": [66, 195], "design": [69, 70, 75, 82, 84, 87, 92, 168, 175, 178, 180, 185, 186, 189, 195, 198, 199], "packag": [69, 86, 95, 171, 174, 177, 178, 180, 185, 191, 192, 193, 195, 199, 201], "oasi": [69, 114, 120], "devic": [69, 92, 137, 191], "research": 69, "qcd1": 69, "qcd2": 69, "qcd3": 69, "thu": [70, 75, 195], "junctionnam": 70, "02": [70, 90, 92, 137], "style": [71, 72, 171, 176, 180, 191], "distinct": [71, 181, 186], "top_pad_lay": 71, "edge_height": 71, "small_loop_height": 71, "loop_bottom_i": 71, "delta_j": 71, "finger_margin": 71, "junction_shapes_top": 71, "junction_shapes_bottom": 71, "shadow_shap": 71, "h_pad_height": 71, "v_pad_width": 71, "pad_overlap": 71, "tp_width": 71, "tp_height": 71, "rounding_param": 71, "bp_height": 71, "bp_gap_x": 71, "big_loop_height": 71, "include_base_metal_addit": [72, 90], "pad_height": [72, 90, 134, 141], "pad_to_pad_separ": [72, 90], "x_offset": [72, 90], "pad_rounding_radiu": [72, 90], "junction_total_length": [73, 74, 92, 127], "26": 73, "33": [74, 92, 127], "junction_upper_pad_width": [74, 92, 127], "8": [74, 92, 122, 127, 164, 165, 172], "junction_upper_pad_length": [74, 92, 127], "13": [74, 92, 127, 181], "junction_lower_pad_width": [74, 92, 127], "junction_lower_pad_length": [74, 92, 127], "include_background_gap": 74, "squidnam": 75, "loop_area": [75, 90, 92, 137], "background_color": 76, "ffffff": 76, "helper": [76, 85, 97, 115, 122, 127, 143, 152, 160, 167, 178, 191, 196], "render": [76, 127], "environ": [76, 119, 174, 176, 177, 181, 192, 194, 198, 199, 201], "layoutview": [76, 189], "cellview": [76, 189], "view": [76, 79, 84, 110, 150, 159, 166, 178, 179, 182, 186, 189, 191, 194, 197, 200], "imag": [76, 81, 164, 174, 175, 178, 180, 181, 188, 189, 190, 192, 194, 195, 196], "tab": [76, 153, 186, 187, 189, 190], "standalon": [76, 86, 151, 172, 176, 177, 180, 181, 190, 193], "python": [76, 86, 126, 153, 155, 156, 159, 172, 173, 174, 176, 180, 182, 185, 188, 189, 190, 192, 193, 194, 195, 197, 200, 201], "keep": [76, 172, 178, 186, 190], "scope": [76, 178], "macro": [76, 159, 168, 177, 180, 181, 182, 185, 186, 188, 190, 191, 197, 199, 200], "applic": [76, 151, 152, 181, 187, 188, 200], "command": [76, 84, 86, 94, 114, 126, 159, 173, 174, 175, 177, 178, 179, 181, 188, 189, 191, 192, 194, 200], "act": [76, 125, 152], "onc": [76, 109, 124, 149, 167, 172, 182, 186, 187, 189, 190, 191, 192, 194, 196, 197, 201], "png": [76, 175], "jupyt": [76, 176], "notebook": [76, 176], "inlin": [76, 186], "wrap": [76, 77], "whether": [76, 90, 92, 122, 125, 126, 137, 151, 174, 193, 195], "background": [76, 192], "color": [76, 191, 196], "html": [76, 79, 174, 175, 181], "white": 76, "fit": [76, 110, 189, 191], "zoom": [76, 186, 187, 189], "main": [76, 83, 94, 109, 110, 163, 174, 178, 182, 185, 186, 189, 190, 191, 198, 199], "ipython": 76, "bold": [76, 186, 189], "clear": 76, "popul": [76, 83, 84, 159], "top_cell_nam": 76, "filenam": [76, 82, 120, 161, 163], "layers_set": 76, "directori": [76, 82, 113, 114, 151, 172, 174, 175, 177, 178, 179, 180, 181, 185, 189, 190, 191, 192, 197], "max_siz": 76, "bigger": 76, "pixelbuff": 76, "whole": [76, 130, 187], "hierarchi": [76, 83, 84, 145, 159, 168, 172, 179, 186, 188, 189, 190], "correspondingli": 76, "viewport": 76, "aspect": [76, 92], "Not": [76, 109, 167], "deprec": [76, 83, 168], "miss": [76, 149, 168, 179, 189], "ui": 76, "layerinfo": [76, 79, 123, 144, 162, 191], "default_lay": [76, 79, 185, 191], "valid": [76, 115, 127, 155, 173, 178, 195], "cluster": [77, 192, 194], "process": [77, 79, 84, 96, 98, 107, 114, 123, 126, 127, 129, 130, 131, 132, 167, 177, 180, 181, 182, 185, 188, 190, 191, 194, 195, 197, 198], "inform": [77, 84, 123, 127, 170, 172, 182, 185, 186, 190, 191, 195, 196, 197, 201], "about": [77, 172, 177, 180, 181, 185, 189, 191, 201], "togeth": [77, 152, 165, 177, 196], "220": 79, "reserv": [79, 97, 110], "127": [79, 191], "128": [79, 88, 191], "255": [79, 191], "work": [79, 84, 103, 123, 172, 174, 177, 178, 181, 182, 186, 189, 190, 191, 193, 196, 199, 201], "anoth": [79, 90, 91, 93, 153, 167, 168, 172, 186, 191], "stack": [79, 97, 122, 127, 188, 189, 198], "bond": 79, "denot": [79, 110, 190, 191], "manufactur": 79, "necessari": [79, 106, 168, 178, 193, 194], "deposit": [79, 123], "auxiliari": [79, 190], "field": [79, 97, 110, 127, 155, 167, 192], "229": 79, "organis": 79, "accord": [79, 83, 123, 168, 175, 178], "www": [79, 110, 119, 181, 194, 197], "de": [79, 125, 181], "doc": [79, 107, 110, 165, 174, 175, 178, 185, 195, 196], "qt5": 79, "layer_sourc": 79, "flat": [79, 83, 172], "map": [79, 83, 84, 85, 103, 163, 188, 196], "subset": 79, "minor": [79, 171], "twist": 79, "1t1_base_metal_gap": 79, "invert": [79, 82], "skip_extra": 82, "bitmap": [82, 84], "oa": [82, 83, 84, 123, 151, 152, 158, 168, 185, 190, 194, 197, 201], "gd": [82, 106, 109, 151, 168, 185, 190, 194], "chip_nam": [82, 83], "chip_dir": 82, "alt_netlist": [82, 84, 163], "export_dir": 82, "subdirectori": [82, 182, 185], "modifi": [82, 83, 90, 91, 123, 127, 152, 178, 180, 182, 188, 189, 191, 192], "mask_document": 82, "md": 82, "spec_lay": 82, "mask_graphical_rep": 82, "postfix": [83, 163, 179], "creation": [83, 167, 194], "2d": [83, 84, 110, 122, 151], "exact": [83, 181, 186, 189], "minimum": [83, 107, 110, 152, 177, 178, 195], "violat": 83, "conflict": 83, "never": 83, "factor": [83, 160], "coverag": [83, 179], "uniqu": [83, 151, 159, 163, 164, 191, 192, 198], "position_label": 83, "outsid": [83, 91, 110, 178, 191], "dure": [83, 153, 178], "calcualt": 83, "k": [83, 163], "rigtht": 83, "90": [83, 190, 191], "what": [83, 119, 173, 189, 191, 196], "translat": [83, 181], "chips_dict": 83, "overwrit": [83, 92, 174, 194], "ones": [83, 160, 177, 178], "_": [83, 110, 150, 191, 196], "bbox": [83, 144], "labels_cel": 83, "mask_name_for_chip": 83, "row": [83, 97, 195], "column": [83, 97, 195], "c03": 83, "posixpath": [84, 123], "home": [84, 123, 174, 190], "runner": [84, 123], "tmp": [84, 113, 174, 178, 185, 191, 192, 194, 197], "add_mask_name_to_chip": 84, "These": [84, 85, 104, 159, 172, 175, 177, 185, 189, 190, 191, 197], "Then": [84, 110, 168, 177, 186, 187, 197], "entir": [84, 145, 174, 189], "switch": [84, 200], "debug": [84, 127, 161, 189, 190, 200], "limit": [84, 97, 124, 168, 174, 181, 195, 196, 197], "concurr": [84, 177], "cpu": [84, 179, 181], "resourc": [84, 192, 194], "manag": [84, 150, 174, 177, 181, 182, 189, 192, 194, 201], "purpos": [84, 127, 133, 172, 178, 186, 196], "drc": [84, 151, 185, 186], "similar": [84, 110, 167, 189, 194, 195, 196, 197], "folder": [84, 106, 109, 113, 114, 122, 126, 174, 175, 177, 178, 179, 185, 190, 191, 192, 193, 194, 195, 197, 198, 201], "tmp_path": [84, 151, 190], "mask_layout_typ": [84, 85], "extra_face_param": [84, 85], "ident": [84, 85, 163, 164, 168, 172, 178], "overwritten": 84, "extra_kwarg": 84, "variant_nam": 84, "complex": [84, 180, 186, 195], "polymorph": 84, "here": [84, 161, 176, 182, 186, 191, 194, 199], "rest": 84, "quick_demo": [84, 178, 190], "py": [84, 106, 109, 113, 172, 174, 175, 177, 178, 179, 181, 190, 191, 192, 193, 194, 195, 197, 201], "further": [84, 174, 182, 190, 191, 196], "qdg": 84, "o": [84, 86, 153, 177, 181], "cpu_count": 84, "whichev": 84, "smaller": [84, 127, 152], "remove_guiding_shap": 84, "box_map": 84, "mask_map": 84, "nxn": 84, "mxm": 84, "mnxmn": 84, "usual": [85, 103, 123, 125, 163, 177, 182, 189, 190, 191, 193, 194, 196], "instanti": [85, 167, 172, 178, 196], "extra_param": 85, "modul": [86, 109, 152, 156, 160, 172, 173, 176, 177, 179, 180, 181, 182, 185, 191, 193], "import": [86, 106, 159, 160, 164, 172, 174, 175, 178, 179, 181, 182, 185, 186, 189, 190, 191, 196, 197], "api": [86, 110, 165, 171, 175, 178, 180, 182, 186, 187, 189, 191, 194, 195, 196, 197, 199], "usag": [86, 160, 176, 180, 182, 186, 188, 189, 190, 194, 195, 196, 197], "db": [86, 172], "execut": [86, 106, 109, 114, 126, 148, 174, 179, 181, 189, 190, 194, 197, 198], "session": 86, "found": [86, 115, 148, 151, 159, 170, 174, 181, 185, 191, 194, 195, 201], "transmon": [88, 89], "josephson": [88, 89], "r_island": 88, "squid_angl": [88, 89], "couplers_r": [88, 89], "couplers_a": [88, 89], "couplers_b": [88, 89], "couplers_angl": [88, 89], "340": [88, 89], "210": [88, 89], "couplers_width": [88, 89], "couplers_arc_amplitud": [88, 89], "45": [88, 89, 122, 127], "drive_angl": [88, 89], "drive_dist": [88, 89], "concentr": 89, "290": 89, "rectangl": [90, 91, 123, 172, 186], "shunt": [90, 91], "north": [90, 91, 93], "join": [90, 91], "700": 90, "ground_gap_r": 90, "coupler_r": 90, "coupler_a": 90, "coupler_offset": 90, "squid_offset": 90, "island1_r": 90, "island2_r": 90, "450": 90, "island1_taper_width": 90, "island1_taper_junction_width": 90, "island2_taper_width": 90, "island2_taper_junction_width": 90, "70": 90, "with_squid": 90, "spline": [91, 152], "construct": [91, 114, 152, 168, 190, 196], "island_splin": 91, "island_spline_sampl": 91, "collect": [92, 151, 186, 191], "routin": 92, "beam": 92, "customari": 92, "probepoint": [92, 151], "simpli": [92, 127, 153, 174, 196], "appropri": [92, 167, 171, 172, 191], "probe_ground": 92, "probe_island": 92, "probe_island_1": 92, "probe_island_2": 92, "transf": [92, 137], "only_arm": [92, 137], "base_metal_gap_for_ebl": [92, 137], "right_sid": [92, 137], "help": [92, 137, 177, 178, 179, 180, 186, 189], "dcplxtran": [92, 137, 168], "rot": 92, "flux": [92, 107, 115, 131], "flux_corn": 92, "origin_fluxlin": 92, "origin_squid": 92, "port_common": 92, "howev": [92, 127, 152, 178, 181, 182, 186, 190, 191, 194], "might": [92, 106, 109, 110, 174, 177, 181, 182, 194], "tweak": 92, "south": 93, "gap_width": [93, 196], "wne": 93, "cpl_width": [93, 132], "cpl_length": 93, "cpl_gap": 93, "102": 93, "port_width": 93, "cl_offset": 93, "island_r": 93, "arg": [94, 111, 113, 144, 151, 153, 168, 174], "args_for_script": 94, "entri": [94, 151, 168, 181, 182, 190], "consol": [94, 113, 161, 181, 190, 193], "pars": [96, 97, 98, 111, 127, 129, 130, 131, 132, 155], "readi": [96, 98, 127, 129, 130, 131, 132], "co": 97, "intend": [97, 127, 152, 196, 201], "materi": [97, 110, 123, 127, 194, 195], "don": [97, 172, 177, 178, 181], "obei": 97, "vacuum": [97, 110, 122, 123, 124, 127, 196], "word": [97, 160, 182], "result": [97, 103, 107, 141, 151, 152, 153, 192, 194, 195, 198], "matric": [97, 107, 195], "introduc": [97, 123, 127, 196], "dielectr": [97, 127, 196], "permitt": [97, 122, 123, 127], "regist": [97, 166, 172, 184], "reset": 97, "param_nam": [97, 165, 175], "cast": [97, 127], "simulation_lay": 97, "relev": [97, 127, 152, 167, 195, 196], "london": [97, 123, 195], "penetr": [97, 123, 195], "depth": [97, 123, 195], "m": [97, 122, 127, 178, 194], "xsection_source_class": 97, "schema": [97, 168], "ignore_process_lay": 97, "boundari": [97, 110, 127, 195], "extra_json_data": [97, 127], "store": [97, 127, 144, 152, 168, 190, 195, 196], "virtual": [97, 127, 178, 181], "partit": [100, 103, 122, 124, 127, 128, 194], "pointer": 100, "partition_region_funct": [100, 128], "could": [100, 113, 119, 153, 171, 173, 174, 191, 194, 196], "differenti": [100, 123], "cut": [100, 103, 122, 123, 201], "meant": [100, 185, 191], "refpoint_prefix": [100, 102, 103, 141], "parameter_remap_funct": [100, 102, 103], "callabl": [100, 102, 103, 122, 123, 128], "reus": [100, 158], "compos": 100, "needed_paramet": 103, "stub": [103, 127, 132], "parit": 103, "recommend": [103, 123, 177, 178, 181, 186, 190, 194, 195], "suppos": [103, 190, 196], "But": 103, "qubit_a": 103, "program": [104, 180, 187, 189, 193], "hfss": [104, 107, 195, 196, 198], "q3d": [104, 107, 195, 196, 198], "write": [106, 109, 114, 119, 151, 172, 174, 175, 177, 178, 179, 181, 191, 194, 196, 200, 201], "json_filenam": [106, 109, 114, 126], "file_prefix": [106, 109, 114], "exit_after_run": 106, "execution_script": 106, "import_and_simul": 106, "use_rel_path": 106, "batch": [106, 126, 185, 197], "bat": [106, 114, 197], "electron": [106, 148, 195, 197, 198], "desktop": [106, 194, 195, 197, 198], "sequenc": [106, 109, 140, 152], "script_fold": [106, 109], "bool": [106, 107, 109, 110, 111, 113, 118, 125, 127, 151, 152, 162, 168], "import_script": 106, "skip_error": [106, 109], "solution_param": [106, 107, 109, 110], "skip": [106, 109, 110, 153], "caus": [106, 109, 128, 152, 153, 177], "carefulli": [106, 109, 171, 196], "sens": [106, 109, 187, 189], "wast": [106, 109], "bad": [106, 109], "ghz": [107, 110, 195], "percentag": [107, 195], "mesh": [107, 110, 119, 194, 195], "refin": [107, 110, 195], "how": [107, 127, 168, 172, 178, 181, 182, 186, 191, 192, 195, 196], "mani": [107, 127, 170, 177, 178, 180, 181, 185, 186, 190, 191, 194, 195, 196], "meet": [107, 186, 195], "criterion": [107, 110, 195], "maxim": [107, 110], "templat": [107, 175, 180], "classvar": [107, 110, 116], "101": [107, 195], "interpol": [107, 110, 195], "multifrequ": [107, 195], "sweep": [107, 110, 114, 119, 123, 168, 188, 194, 195, 198], "lowest": [107, 127, 195, 196], "highest": [107, 127, 195], "fast": [107, 171, 195], "energi": [107, 109, 110, 188, 198], "save": [107, 126, 152, 168, 182, 191, 192, 195, 196], "magnet": [107, 115], "pec": 107, "sheet": [107, 122, 127, 196], "matrix": [107, 110, 152, 188, 194, 198], "nomin": 107, "moment": [107, 187], "eigenmod": [107, 188, 198], "eigenfrequ": [107, 195], "solv": [107, 195], "excit": [107, 110, 125, 195], "voltag": 107, "induct": [107, 110, 118, 125, 132, 167, 195], "workflow": [109, 119, 174, 180, 182, 186, 188, 189, 194, 198], "script_fil": 109, "compile_elmer_modul": 109, "launch": [109, 177, 181, 190, 191, 200], "compil": [109, 110, 178, 181, 192], "runtim": [109, 174], "model": [109, 110, 125, 127, 178, 194, 195, 196], "005": 110, "001": 110, "factori": 110, "adapt": [110, 196], "fraction": 110, "outlier": 110, "symmetr": 110, "big": [110, 190], "larger": [110, 127, 194], "finer": 110, "divid": [110, 172, 178, 185, 191, 194], "dim": [110, 124], "term": [110, 124, 127, 179, 195, 196], "entiti": 110, "expans": [110, 124, 127, 152, 167], "constant": [110, 127, 172, 195], "slope": 110, "increas": [110, 123, 140, 174, 194], "global_max": 110, "global": 110, "less": [110, 119, 172, 181], "awai": [110, 124, 125, 127, 152, 155, 191], "forc": [110, 125, 127, 195], "niter": 110, "dimtag": 110, "gmsh": [110, 174, 188, 192, 193, 197, 198], "netgen": 110, "vtu": 110, "paraview": [110, 174, 193, 194, 197], "off": [110, 127, 189], "slightli": [110, 181], "faster": [110, 119, 168], "explicit": 110, "wave": [110, 127, 196], "equat": 110, "converg": 110, "supercurr": 110, "flow": 110, "thick": [110, 122, 123, 127, 196], "finit": 110, "nedelec": 110, "kind": [110, 178, 191], "formul": [110, 128], "vectorhelmholtz": 110, "potenti": [110, 125, 191], "v": [110, 118, 171], "electr": [110, 195], "nic": 110, "funet": 110, "fi": 110, "pub": 110, "sci": 110, "elmermodelsmanu": 110, "pdf": [110, 119], "warn": [110, 161, 181], "experiment": [110, 199], "poor": [110, 194], "film": 110, "nest": [110, 127], "solver": [110, 194, 195, 197], "calc": 110, "wave_equ": [110, 195], "mg": 110, "09": 110, "ilu0": 110, "polynomi": [110, 152], "p": [110, 150], "multigrid": 110, "bicgstab": 110, "mention": [110, 127, 174], "elmersolv": [110, 174, 194], "umfpack": 110, "mump": 110, "pardiso": 110, "superlu": 110, "softwar": [110, 170, 174, 184, 194, 197], "redund": 110, "precondition": 110, "linear": [110, 171], "condit": [110, 195], "xmin": [110, 118], "xmax": [110, 118], "ymin": [110, 118], "ymax": [110, 118], "just": [110, 172, 174, 177, 178, 182, 191, 196], "impend": 110, "electrostat": 110, "sequenti": [110, 194], "1v": 110, "epr_3d": 110, "export_script": 111, "quiet": [111, 113], "export_onli": 111, "basenam": [111, 192], "dialog": [111, 113, 182, 186, 193], "describ": [111, 127, 146, 152, 159, 173, 178, 186, 191, 193, 195, 196, 198], "stdout": [111, 161], "print": [111, 153, 159, 160, 161, 190], "export_path_identifi": 111, "script_export_path": 111, "remote_host": 112, "singularity_remote_path": 112, "ssh_login": 113, "kqc_remote_tmp_path": [113, 192], "detach_simul": 113, "poll_interv": 113, "export_path_basenam": 113, "local": [113, 171, 174, 175, 178, 181, 182, 187, 189, 192], "remot": [113, 188, 194, 198], "host": [113, 176, 178, 192, 194], "froce": 113, "q": [113, 178, 187, 193], "ssh": [113, 192], "login": 113, "hostnam": 113, "detach": [113, 192], "wait": 113, "finish": [113, 187, 192, 194], "poll": [113, 192], "interv": [113, 192], "export_tmp_dir": 113, "source_path": 114, "content": [114, 151, 180, 182, 194], "sh": [114, 174, 192, 194, 197], "json_data": 114, "json_file_path": 114, "sim_class": [114, 196, 197], "sim_paramet": [114, 196], "vari": [114, 191, 194, 196], "sol_class": 114, "sol_paramet": 114, "analys": 115, "inconsist": 115, "criteria": 115, "met": 115, "check": [115, 149, 153, 168, 177, 178, 185, 191, 195, 200], "ensur": [115, 153, 172], "least": [115, 152, 155, 168, 177, 181, 186, 189, 191], "presenc": 115, "validation_typ": 115, "handl": [115, 144, 172, 186, 191, 194, 198], "filename_templ": 118, "filename_output": 118, "rule": [118, 127, 175, 185], "nvertic": 118, "debugid": 118, "ilevel": 118, "mtype": 118, "filltyp": 118, "conmax": 118, "edge_mesh": 118, "sym": 118, "xwidth": 118, "ywidth": 118, "xcell": 118, "ycell": 118, "materials_typ": 118, "si": 118, "bt": 118, "port_ipoli": 118, "portnum": 118, "ipolygon": 118, "ivertex": 118, "port_typ": 118, "std": 118, "xcord": 118, "ycord": 118, "resist": [118, 125, 167], "react": 118, "capac": 118, "control_typ": 118, "dbu": [118, 119, 120, 123, 124, 144, 152], "fill_typ": [118, 119], "poli": 118, "detailed_reson": 119, "lower_accuraci": 119, "ab": 119, "staircas": 119, "simulation_safeti": 119, "son": [119, 197], "sonnetsoftwar": 119, "download": [119, 174, 181], "techdoc": 119, "enhanced_resonance_detection_featur": 119, "fine": [119, 165], "coars": 119, "accur": 119, "good": [119, 190], "everyth": [119, 182, 186, 191], "output_format": [120, 159], "intersect": 120, "override_arg": 122, "ma_eps_r": 122, "ms_eps_r": 122, "sa_eps_r": 122, "ma_thick": [122, 123], "0048": 122, "ms_thick": [122, 123], "0003": 122, "sa_thick": [122, 123], "0024": 122, "ma_bg_eps_r": 122, "ms_bg_eps_r": 122, "sa_bg_eps_r": 122, "metal_height": [122, 127, 196], "p1": [122, 123, 127], "p2": [122, 123, 127], "metal_edg": 122, "later": [122, 124, 142, 168, 179, 182, 191], "mer": 122, "x_revers": 122, "closer": [122, 127, 152, 159], "z": [122, 124, 127, 174, 200], "z_revers": 122, "ma": [122, 127], "sa": [122, 127], "approxim": [122, 127], "input_oa": 123, "output_oa": 123, "cut1": 123, "cut2": 123, "process_path": 123, "kqc_process": [123, 201], "parameters_path": 123, "plugin": [123, 150, 166, 173, 177, 201], "down": [123, 125, 127, 186, 187, 189, 191], "output_path": 123, "pathlib": 123, "pyacor": 123, "post_processing_funct": 123, "oxidise_layers_funct": 123, "_oxidise_lay": 123, "ma_permitt": 123, "ms_permitt": 123, "sa_permitt": 123, "vertical_cul": 123, "mer_box": 123, "magnification_ord": 123, "perform": [123, 127, 168, 174, 178, 194, 195], "oxid": 123, "expect": [123, 171, 181], "signatur": 123, "pyhint": 123, "air": 123, "cull": 123, "retain": 123, "_mer": 123, "suffix": [123, 124, 151, 164], "magnif": [123, 186], "accomod": 123, "spacial": 123, "10x": 123, "100x": 123, "thin": [123, 127, 196], "sort_kei": [123, 153], "sort": [123, 153], "pick": 123, "tie": 123, "break": [123, 171, 174], "slot": 123, "cut_label": 123, "width_ratio": 123, "visualis": [123, 124, 127, 178], "request": [123, 161, 168, 174, 192, 194], "xsection_cut": 123, "_1": 123, "_2": 123, "multipli": 123, "scalar": [124, 127], "vertical_dimens": 124, "metal_edge_dimens": 124, "accept": [124, 146, 155, 171, 177, 195], "domain": [124, 127, 196], "preview": [124, 127], "databas": [124, 152, 154, 199], "sign": 124, "metal_region": [124, 141], "etch_region": 124, "reactanc": [125, 167], "renorm": [125, 195], "ideal": 125, "rlc": [125, 195], "lump": [125, 127, 195, 196], "real": 125, "ohm": 125, "omega": 125, "imaginari": 125, "henri": 125, "farad": 125, "signal_loc": [125, 195, 196], "ground_loc": [125, 195, 196], "signal_lay": [125, 167], "etch_width": 125, "deembed_len": [125, 167, 195], "embed": 125, "micron": [125, 152, 158], "port_siz": [125, 127], "repeat_for_each": 126, "data_file_prefix": 126, "dimension": [127, 180, 195, 196], "basic": [127, 176, 177, 185, 186, 187, 188, 189, 199], "built": [127, 174, 175, 182, 186, 191, 196, 200], "principl": [127, 155], "imagin": [127, 196], "surfac": [127, 195, 196], "touch": [127, 191], "face_stack": [127, 196], "lower_box_height": [127, 196], "account": [127, 157, 159, 172, 192, 194, 196], "pile": [127, 196], "That": [127, 195, 196], "leav": [127, 196], "substrate_height": [127, 196], "chip_dist": [127, 196], "infinit": [127, 153, 196], "insul": 127, "dielectric_height": [127, 196], "grid_siz": [127, 154], "expand": [127, 152], "resolut": 127, "list_or_const": 127, "ordin": 127, "short": [127, 186, 199], "duplic": [127, 152, 162, 177], "ascend": 127, "simplifi": 127, "polygon_toler": 127, "shrink": 127, "amount": [127, 152, 192, 194], "minimum_point_spac": 127, "z0": 127, "z1": 127, "split": [127, 152], "opp_i": 127, "__init__": 127, "hole": [127, 154], "overlap": [127, 152, 154, 163, 191], "subtract_kei": 127, "port_kwarg": 127, "engin": 127, "infer": [127, 151, 168], "brought": [127, 167], "at_edg": 127, "signal_edg": 127, "ground_edg": 127, "material_dict": 127, "member": [127, 153], "overriden": 127, "whatev": [127, 181], "delet": [127, 160, 162, 182, 186], "access": [127, 178, 181, 186, 188], "append": [127, 152, 161, 163, 164, 196], "dtext": 127, "ground_grid_box": 127, "use_port": 127, "upper_box_height": 127, "fixed_level_stackup": 127, "375": 127, "substrate_box": 127, "correspondingsubstr": 127, "fulli": [127, 178, 195], "substrate_materi": 127, "electromagnet": 127, "dielectric_loss_tang": 127, "airbridge_height": 127, "dielectric_materi": 127, "vertical_over_etch": 127, "hollow_tsv": 127, "hollow": 127, "constructor": [127, 153, 196], "tls_layer_thick": 127, "tl": [127, 195], "tls_layer_materi": 127, "tls_sheet_approxim": 127, "detach_tls_sheets_from_bodi": 127, "significantli": 127, "improv": [127, 178, 179, 181], "element_class": 128, "ignore_port": [128, 196], "transformation_from_cent": 128, "sim_junction_typ": 128, "xs1": 129, "xs2": 129, "cpw_length": 130, "n_guid": 130, "guide_face_id": 130, "add_bump": 130, "port_termination_end": 130, "use_edge_port": 130, "etch_whole_opposite_fac": 130, "qubit_cel": 131, "center_x": 131, "center_i": 131, "wn": [131, 191], "en": 131, "sw": [131, 151], "se": [131, 151], "nw": [131, 151], "ne": [131, 151], "enable_flux_lin": 131, "enable_drive_lin": 131, "enable_transmission_lin": 131, "transmit": 131, "66": 132, "junction_induct": 132, "35e": 132, "junction_capacit": 132, "16": [132, 191], "num_cross": 135, "cross_width": 135, "cross_length": 135, "cross_spac": 135, "cross_box_dist": 135, "stripe_width": 139, "stripe_length": [139, 140], "stripe_spac": [139, 140], "min_stripe_width": 140, "stripe_step": 140, "widen": 140, "pads_region": 141, "pad_spacing_x": 141, "pad_spacing_i": 141, "connect_pad": 141, "refpoint_dist": 141, "resembl": 142, "fenc": 142, "profil": [142, 192], "tsv_array_form": 142, "tileoutputreceiv": 144, "tilingprocessor": 144, "brief": [144, 150], "ix": 144, "ii": 144, "tile": 144, "obj": [144, 152], "clip": 144, "layer_info": 144, "rho": 144, "frac": 144, "pcell_class": 145, "isinst": 145, "pcell_declar": 145, "coupler_typ": 146, "element_kei": 146, "useless": 146, "latest": [148, 174, 178, 181, 197], "instal": [148, 149, 174, 176, 180, 185, 187, 191, 193, 194, 197, 198, 200, 201], "against": [149, 185], "txt": [149, 177, 178, 181, 194, 197], "upgrad": [149, 177, 178, 180, 181], "stand": [149, 159, 185, 198], "alon": [149, 159, 185, 198], "pip": [149, 177, 178, 181, 193, 194, 197], "sync": [149, 178], "venv": [149, 177, 178], "startup": [149, 155, 178], "button": [150, 187, 189], "prio": 150, "__": 150, "pluginfactori": 150, "flip_fac": 151, "default_probe_typ": 151, "default_probe_suffix": 151, "millimet": 151, "tell": 151, "site": [151, 178, 181], "cell_fil": 151, "dir_nam": 151, "tri": [151, 174], "write_versions_fil": 151, "commit_refer": [151, 194], "git": [151, 171, 176, 177, 178, 181, 185], "revis": [151, 199], "written": [151, 197], "export_machine_vers": 151, "filepath": 151, "maco": [151, 176, 181, 187], "linux": [151, 174, 176, 178, 181, 185, 187, 190, 194, 197], "drc_script": 151, "name_drc_report": 151, "lyrdb": 151, "1t1_waveguide_path": 152, "2b1_waveguide_path": 152, "sum": 152, "children": 152, "objectinstpath": 152, "outward": 152, "whenev": [152, 171, 189], "elimin": [152, 153], "simple_polygon": 152, "polygon_point": 152, "counterclockwis": 152, "283185307179586": 152, "pi": 152, "control_point": 152, "sample_point": 152, "startpoint": 152, "uniformli": 152, "cubic": 152, "subsequ": 152, "slide": 152, "unlik": 152, "bezier": 152, "guarante": [152, 153, 182], "kaihuai": 152, "qin": 152, "proceed": 152, "pacif": 152, "98": 152, "sixth": 152, "confer": 152, "singapor": 152, "1998": 152, "pp": 152, "37": 152, "43": [152, 172], "doi": [152, 170], "1109": 152, "pccga": 152, "731996": 152, "uniform": [152, 196], "prepend": 152, "tangent": 152, "third": [152, 181, 194], "fourth": 152, "convers": 152, "ityp": 152, "dtype": 152, "odd": 152, "divis": 152, "mostli": [152, 186, 191], "waveguide_path": 152, "safe": [152, 178], "guard": 152, "unround": 152, "skipkei": 153, "ensure_ascii": 153, "check_circular": 153, "allow_nan": 153, "jsonencod": 153, "sensibl": 153, "typeerror": 153, "incom": 153, "ascii": 153, "charact": [153, 157, 158, 171], "escap": 153, "prevent": [153, 181], "recursionerror": 153, "nan": 153, "infin": 153, "compliant": 153, "javascript": 153, "decod": 153, "regress": 153, "dai": 153, "basi": [153, 172, 196], "pretti": 153, "newlin": 153, "item_separ": 153, "key_separ": 153, "whitespac": 153, "serializ": 153, "def": [153, 191, 196], "try": [153, 177, 178, 181], "let": [153, 178, 191], "jsondecod": 153, "object_hook": 153, "rpc": 153, "hint": 153, "object_pairs_hook": 153, "prioriti": [153, 186], "parse_float": 153, "num_str": 153, "datatyp": 153, "decim": 153, "parse_int": 153, "parse_const": 153, "invalid": 153, "encount": [153, 174], "strict": [153, 172], "context": [153, 168], "parseabl": 153, "boundbox": 154, "avoid_region": 154, "grid_step": 154, "group_n": 154, "speed": [154, 158, 167, 179, 194], "box_siz": 155, "require_gui_editing_en": 155, "search": [155, 180], "captur": 155, "invers": 155, "treat": [155, 163, 172], "strip": 155, "liter": 155, "namespac": [155, 165], "comma": [155, 159], "multilin": 155, "waveguide_inst": 155, "usabl": 155, "x_corner": 155, "slow": [155, 189, 190], "clumsi": 155, "curat": 155, "node_editor_valid_el": 155, "kept": 155, "file_path": 156, "enum": 157, "origin_offset": 157, "layer_protect": 157, "350": 157, "nearest": 158, "lai": 158, "font_polygon": 158, "cach": 158, "print_waveguides_as_composit": 159, "add_instance_nam": 159, "refpoint_snap": 159, "grid_snap": 159, "include_import": 159, "create_cod": 159, "past": 159, "statement": [159, 182], "node_param": 159, "complet": [159, 175, 178, 182, 191, 194], "flatten": 159, "flush": 160, "src_path": 160, "memori": [160, 174, 194], "_kqc_librari": 160, "class_nam": 160, "pascalcas": [160, 172], "lowercas": [160, 182], "module_nam": 160, "_to_module_nam": 160, "titl": [160, 170], "qualiti": 160, "lowest_visible_level": 161, "remove_old_handl": 161, "log": [161, 190], "logfil": 161, "monitor": 161, "handler": 161, "root": [161, 174, 179, 185, 191], "logger": 161, "critic": 161, "cell_list": 162, "layer_1": 162, "layer_2": 162, "layer_merg": 162, "only_el": 162, "prune": 162, "contrast": 162, "convert_to_stat": 162, "anywher": [162, 182], "net": 163, "subcircuit": [163, 164], "terminologi": [163, 180, 188], "eda": 163, "resistor": 163, "pin": [163, 178], "wire": 163, "conceptu": 163, "analog": 163, "exactli": 163, "subcircuit_id": [163, 164], "unconnect": 163, "cell_nam": [163, 164], "subcircuit_loc": 163, "_pya_typ": 163, "subcircuit_origin": 163, "breakdown": 163, "regadless": 163, "absolut": [163, 178, 191], "cell_map": 163, "internal_cel": 163, "network": 164, "networkx": [164, 181], "graph": [164, 172, 178, 185], "cell_typ": 164, "instance_nam": 164, "obtain": [164, 196], "with_label": 164, "with_posit": 164, "figsiz": 164, "spring": 164, "matplotlib": 164, "interact": [164, 188], "plot": 164, "param_with_default_valu": 165, "wildcard": 165, "simplic": [165, 172], "grain": 165, "pcellparameterdeclar": 165, "data_typ": 165, "plain": [165, 172, 182], "docstr": [165, 173, 175, 186], "sphinx": [165, 175], "owner": 165, "registr": [166, 191], "happen": 166, "demand": 167, "builder": [167, 196], "ground_refpoint": 167, "port_squid_a": [167, 196], "port_squid_b": [167, 196], "separate_island_internal_port": 167, "commonli": [167, 191], "export_tuned_junct": 168, "class_typ": 168, "parent_nam": 168, "tuned_junction_paramet": 168, "qb1": 168, "testarray_nw": 168, "squid_0": 168, "squid_3": 168, "testarrai": 168, "even": [168, 172, 174, 178, 181, 189], "quick": [168, 191], "jsonabl": 168, "exhaust": 168, "read": [168, 174, 181, 182, 186, 191], "write_path": 168, "layer_str": 168, "visual": [168, 178, 191, 194], "again": [168, 174, 177, 189, 190], "parameter_nam": 168, "parameter_start": 168, "parameter_step": 168, "parameter_end": 168, "swept": 168, "squid_index": 168, "mirror_tran": 169, "project": [170, 172, 179, 181, 192, 194], "public": [170, 171, 174, 179], "citat": 170, "bib": 170, "zenodo": 170, "click": [170, 177, 180, 181, 182, 186, 188, 189, 190, 191, 200], "badg": 170, "cucurachi": 170, "daniel": 170, "da": 170, "soumya": 170, "ranjan": 170, "giri": 170, "rakshyakar": 170, "gusenkova": 170, "daria": 170, "guthri": 170, "andrew": 170, "inel": 170, "sinan": 170, "janzs\u00f3": 170, "d\u00e1vid": 170, "jenei": 170, "m\u00e1t\u00e9": 170, "juliusson": 170, "kristinn": 170, "kotilahti": 170, "jann": 170, "landra": 170, "alessandro": 170, "moretti": 170, "roberto": 170, "myll\u00e4ri": 170, "tuoma": 170, "ockeloen": 170, "korppi": 170, "caspar": 170, "r\u00e4bin\u00e4": 170, "jukka": 170, "savola": [170, 195], "niko": 170, "smirnov": 170, "pavel": 170, "takala": 170, "eeli": 170, "wubben": 170, "leon": 170, "month": 170, "jun": 170, "year": 170, "2021": 170, "publish": [170, 174], "5281": 170, "4944796": 170, "url": 170, "welcom": 171, "commun": [171, 194], "contributor": 171, "licens": [171, 195], "agreement": 171, "websit": [171, 174], "review": 171, "approv": 171, "pr": 171, "forward": [171, 194], "strategi": 171, "histori": 171, "pleas": [171, 177, 178, 179, 183, 184, 194, 195, 196, 197, 201], "organ": [171, 179, 189, 191], "commit": [171, 178], "meaning": [171, 191], "black": [171, 172, 173], "permit": [171, 191], "pep": [171, 172], "440": 171, "scheme": 171, "miniv": 171, "major": 171, "micro": 171, "offici": 171, "releas": [171, 174, 180, 201], "salt": [171, 177, 178, 180, 181, 185, 191], "incompat": 171, "backward": [171, 178], "seriou": 171, "cosmet": 171, "affect": [171, 180, 181, 194], "explain": [172, 173, 177, 186, 189, 191, 197], "diagram": 172, "oval": 172, "concret": 172, "leaf": 172, "green": [172, 189, 196], "natur": 172, "ever": 172, "live": 172, "create_cel": 172, "properli": [172, 177, 179, 182], "variabl": [172, 174, 178, 185, 189, 191, 192, 194, 195], "descriptor": 172, "hierarch": 172, "transpar": 172, "caller": 172, "default_parameter_valu": 172, "technic": [172, 191, 195], "intent": 172, "otherclass": 172, "param_a": 172, "param_b": 172, "myclass": 172, "param_c": 172, "42": 172, "param_d": 172, "41": 172, "syntax": [172, 191, 196], "bit": [172, 181, 187, 191], "revers": 172, "why": [172, 173], "bodi": 172, "kqc_library_nam": 172, "downstream": 172, "discov": 172, "convent": [172, 179, 181, 191], "comment": [173, 181, 186, 189, 191], "someth": [173, 194], "feel": 173, "probabl": [173, 181], "rewritten": 173, "clearli": 173, "builtin": 173, "googl": 173, "dockerfil": 174, "addition": [174, 194, 196], "kl_file": 174, "md5": 174, "hash": [174, 178, 185, 191], "kl_hash": 174, "klayout_0": 174, "29": [174, 181], "1_amd64": 174, "deb": 174, "421df42661a3d795b534da5048261044": 174, "ubuntu": [174, 177, 181], "quickli": 174, "m00x": 174, "volum": 174, "pwd": 174, "ghcr": 174, "io": [174, 201], "mount": 174, "run_script": 174, "nc": 174, "rx": [174, 191], "cours": [174, 191], "wd": 174, "older": [174, 178, 187], "hyperv": 174, "backend": 174, "ram": 174, "1gb": 174, "entrypoint": 174, "push": [174, 192], "branch": [174, 182, 189], "pipelin": [174, 179], "pull": [174, 177], "registri": 174, "sylab": 174, "quick_start": 174, "better": [174, 179, 196], "hpc": 174, "tutori": [174, 180, 182, 188, 189], "libexec": 174, "kqclib": [174, 194], "repo": 174, "ora": 174, "pem": 174, "rsa": 174, "encrypt": 174, "successfulli": [174, 177, 178, 200], "singularity_priv": 174, "privat": [174, 179], "now": [174, 182, 189, 191], "create_link": 174, "among": [174, 180], "elmersolver_mpi": 174, "elmergrid": [174, 194], "symbol": [174, 185, 189, 191, 192, 194], "link": [174, 177, 181, 182, 185, 189, 191, 192, 194], "rememb": [174, 177, 186], "bin": [174, 192], "prepar": [174, 194], "klayout_packag": [174, 177, 178, 185, 189, 191, 192, 193, 194, 195, 197, 201], "And": [174, 191], "waveguides_sim_compar": [174, 178, 193, 194], "sure": [174, 177, 178, 179, 182, 186, 189, 191, 192, 197, 201], "ride": 174, "python_execut": [174, 194], "subsystem": 174, "wsl": 174, "problem": [174, 177, 178, 181, 182, 183, 195], "stuck": 174, "workload": [174, 192, 194], "simple_workload_manag": 174, "subfold": [174, 191], "kqc_tmp_path": [174, 178], "waveguides_sim_elm": [174, 194], "affor": 174, "rst": 175, "rebuild": 175, "clean": 175, "apidoc": 175, "sphinxext": 175, "make_pcell_imag": 175, "pcell_imag": 175, "markers_for_png": 175, "x_2": 175, "y_2": 175, "ruler": [175, 201], "illustr": [175, 186, 196], "satisfactori": 175, "x2": 175, "y2": 175, "setup": [176, 180, 181, 182, 186, 187, 191, 192, 193, 198, 200, 201], "prerequisit": 176, "unlink": 176, "secondari": [176, 201], "symlink": 176, "reproduc": 176, "secur": [176, 194, 197], "exclus": 176, "pypi": [176, 185], "cli": 176, "docker": 176, "ci": [176, 178, 179, 185], "singular": [176, 185, 192, 194], "contribut": [176, 180], "come": [177, 191], "pre": [177, 196], "04": [177, 181], "platform": [177, 178, 181], "lt": [177, 181], "clone": [177, 178, 181], "cd": [177, 178, 179], "python3": 177, "setup_within_klayout": [177, 178, 185], "virtualenv": 177, "libpython": 177, "dll": 177, "known": [177, 180, 182], "issu": [177, 180, 182, 183], "downgrad": [177, 182], "ask": 177, "restart": [177, 182, 186, 187, 189, 200], "afterward": [177, 178], "evolv": [177, 191], "realli": [177, 190], "simultan": 177, "kqc_2nd": 177, "know": [177, 178, 181, 187], "klayout_hom": 177, "klayout_alt": 177, "mix": 177, "subsect": 177, "ln": 177, "path_to_kqcircuit": 177, "kqcircuits_script": [177, 185, 189, 190, 191], "kqcircuits_requir": [177, 185, 191], "prompt": [177, 178], "administr": 177, "privileg": 177, "homepath": [177, 181], "mklink": 177, "powershel": 177, "ye": 177, "mayb": 177, "won": [177, 178], "bulk": 177, "win": [177, 178, 185], "mac": [177, 178, 181, 185, 190], "debugg": [178, 188], "autom": [178, 180, 198, 201], "suitabl": [178, 181, 195, 196], "viewer": [178, 187, 197], "compat": [178, 181], "interfer": 178, "yet": [178, 186, 201], "bracket": 178, "trust": 178, "easier": 178, "troubleshoot": 178, "subsitut": 178, "dep": 178, "rewrit": 178, "wipe": 178, "advanc": [178, 186, 189], "categori": 178, "core": [178, 179, 194], "linter": 178, "netlist_as_graph": [178, 181, 185], "publicli": 178, "abl": [178, 189], "upload": 178, "double_pads_sim": [178, 195], "elsewher": [178, 190], "ipynb": [178, 195], "tofu": 178, "rare": [178, 191], "verifi": [178, 181, 190], "legitim": 178, "constraint": 178, "unsaf": 178, "substitut": 178, "tox": 179, "pytest": [179, 185], "pylint": 179, "lint": 179, "ini": 179, "framework": [179, 180, 195, 198], "num": 179, "reflect": 179, "propos": 179, "test_load_librari": 179, "test_invalid_nam": 179, "approach": [179, 182, 194, 196], "u": [179, 191], "our": [179, 182, 191], "understand": [179, 189], "unfortun": 179, "repetit": 179, "consider": 179, "cov": 179, "comprehens": 179, "happi": 179, "failur": 179, "similarli": [179, 196, 197], "bug": [179, 189], "fail": 179, "prior": 179, "wil": 179, "reintroduc": 179, "conftest": 179, "reduc": [180, 195], "effort": 180, "processor": 180, "instantli": 180, "exchang": 180, "qpu": 180, "assembl": 180, "fabric": [180, 181], "miscellan": [180, 188, 191], "trademark": 180, "page": [180, 191, 201], "simplest": [181, 196], "instant": 181, "rather": 181, "codebas": 181, "simulation_script": 181, "parti": 181, "mask_script": 181, "yourself": 181, "homebrew": 181, "brew": 181, "cask": 181, "becaus": [181, 189, 190], "app": 181, "finder": 181, "bugfix": 181, "stabil": 181, "27": [181, 187], "17": 181, "microsoft": 181, "server": 181, "2022": 181, "talk": 181, "mental": 181, "appdata": [181, 193], "klayout_app": 181, "st": 181, "dynam": [181, 196], "sonoma": 181, "still": [181, 190], "higher": 181, "heavyweight": 181, "hw": 181, "proce": 181, "bigsur": 181, "setuptool": 181, "_distutils_hack": 181, "v52": 181, "v57": 181, "instruct": [181, 186], "sometim": [181, 189], "dir": 181, "binari": [181, 193], "__path__": 181, "queri": 181, "sy": 181, "version_info": 181, "x86_64": 181, "modern": 181, "macbook": 181, "henc": [181, 197], "numpi": 181, "scipi": 181, "macosx_10_9_x86_64": 181, "fetch": 181, "macosx_10_9_arm64": 181, "notic": [181, 190], "easiest": [182, 191], "migrat": 182, "uninstal": 182, "recent": 182, "menu": [182, 187, 188, 189, 191, 199], "panel": [182, 186, 187, 188, 191], "drag": [182, 186, 187, 189, 200], "press": [182, 186, 187, 189], "f2": [182, 186, 187], "underscor": 182, "f5": [182, 189, 190], "my": 182, "my_el": 182, "myelement": [182, 191], "capit": 182, "ctrl": 182, "reload": [182, 186, 188, 191], "drop": [182, 186, 187, 200], "canva": 182, "my_packag": 182, "safest": 182, "quirk": 182, "broken": 182, "reinstal": 182, "earlier": 182, "reloc": 182, "behind": 182, "tqdm": 182, "question": 183, "idea": 183, "discuss": 183, "polici": 184, "high": [185, 201], "pictur": 185, "console_script": 185, "mainli": [185, 191, 196], "librair": [185, 191], "variou": 185, "check_layer_prop": 185, "create_element_from_path": [185, 191], "gdiff": 185, "get_klayout_python_info": 185, "oas2dxf": 185, "dxf": 185, "highlight": 186, "navig": [186, 187], "shift": [186, 187, 189, 190], "block": [186, 191], "toolbox": 186, "toolbar": [186, 187], "evok": 186, "anim": 186, "bring": 186, "few": [186, 194], "situat": 186, "accid": 186, "confirm": 186, "del": 186, "video": 186, "flexibl": [186, 196], "enter": 186, "export_cells_as_cod": 186, "nearbi": 186, "hardcod": [186, 191], "nice": 186, "x_port_a": 186, "x_port_a_corn": 186, "anywai": [186, 191], "unhid": [186, 187], "1t1_ground_grid": 186, "arrang": 186, "minut": 186, "anyth": 186, "quit": 187, "power": 187, "ok": 187, "chiplibrari": 187, "mous": 187, "scroll": [187, 201], "littl": 187, "esc": 187, "hotkei": 188, "introduct": 188, "samplehold": 188, "particip": [188, 198], "pyepr": [188, 198], "demo_placing_a_pcel": 189, "icon": 189, "plai": 189, "exclam": 189, "often": [189, 191], "task": [189, 194, 200], "toggl": 189, "breakpoint": 189, "red": 189, "f9": 189, "stage": 189, "pop": 189, "cancel": 189, "asterisk": 189, "caught": 189, "unrespons": 189, "heavi": 189, "though": 189, "demo_pya_bas": 189, "test_wgc_airbridg": 189, "learn": 189, "photomask": 190, "product": 190, "effici": [190, 194], "observ": 190, "multiprocess": 190, "test_mask": 190, "de1": 190, "roughli": 190, "logging_setup": 190, "spcifi": 190, "de2": 190, "5700": 190, "dt1": 190, "qf1": 190, "my_chip": 190, "mcf": 190, "proper": 190, "complic": [190, 194, 200], "mdemo": 190, "ch2": 190, "45000": 190, "30000": 190, "ch1": 190, "sx1": 190, "jt1": 190, "ac1": 190, "st1": 190, "jt2": 190, "65000": 190, "interest": 190, "fragment": 190, "fragmet": 190, "centerd": 190, "exploit": 190, "tip": 191, "trick": 191, "unlock": 191, "myelement2": 191, "offer": [191, 195], "nicer": 191, "myqubit": 191, "my_qubit": 191, "rubi": 191, "hide": 191, "simplecross": 191, "hold": 191, "len1": 191, "len2": 191, "cross_poli": 191, "simple_cross": 191, "scratch": 191, "especi": 191, "explan": [191, 192], "newchip1": 191, "default_samplehold": 191, "half_width": 191, "cross_cel": 191, "new_chip1": 191, "rf16": 191, "12000": 191, "refpoint_nam": 191, "cap_refpoint": 191, "wn_port": 191, "wn_port_corn": 191, "port_b_corn": 191, "perhap": 191, "someel": 191, "refpoint_of_some_el": 191, "existing_ref": 191, "everywher": 191, "something_port": 191, "something_port_corn": 191, "wherev": 191, "logic": [191, 195], "hard": 191, "tree": 191, "strictli": 191, "aptli": 191, "wo": 191, "laid": 191, "encompass": 191, "plu": 191, "groud": 191, "formula": 191, "intuit": 191, "2nd": 191, "indium_bump": 191, "swap": 191, "layer_config_path": 191, "simpler": 191, "x_base_metal_gap_wo_grid": 191, "x_ground_grid_avoid": 191, "133": 191, "x_port": 191, "154": 191, "x_new_lay": 191, "999": 191, "new_lay": 191, "although": 191, "newli": 191, "default_layer_prop": 191, "rm": 191, "rd": 191, "element_path": 191, "incorpor": 191, "pycharm": 191, "studio": 191, "vim": 191, "neovim": 191, "slurm": [192, 194], "password": 192, "openmpi": 192, "install_softwar": 192, "mpi": [192, 194], "machin": [192, 194], "send": 192, "singularity_path": 192, "bash": 192, "sbatch_paramet": [192, 194], "kqc_remote_account": [192, 194], "sim_1": 192, "sim_2": 192, "sim_n": 192, "job": 192, "sim_i_tmp_fold": 192, "nohup_runid": 192, "runid": 192, "watch": 192, "cat": 192, "shell": [193, 194], "liner": 193, "initialis": 193, "admin": 193, "priviledg": 193, "elmer_help": 194, "gmsh_helper": 194, "sif": 194, "capacitancematrix": 194, "electric_potenti": 194, "pvsm": 194, "waveguides_n_guides_1": 194, "waveguides_n_guides_2": 194, "n_worker": 194, "elmer_n_process": 194, "thread": 194, "openmp": 194, "elmer_n_thread": 194, "benefici": 194, "relationship": 194, "independentprocess": 194, "parallelizationsecond": 194, "ofparallel": 194, "worker": 194, "floor": 194, "run_gmsh_gui": 194, "run_elmergrid": 194, "run_elm": 194, "run_paraview": 194, "omp": 194, "gmsh_n_thread": 194, "bsd": 194, "benefit": 194, "multithread": 194, "sbatch": 194, "max_threads_per_nod": 194, "max": 194, "elmer_mem": 194, "64g": 194, "elmer_tim": 194, "00": 194, "gmsh_mem": 194, "alloc": 194, "gmsh_time": 194, "project_0": 194, "bill": 194, "simulation_mesh": 194, "afterok": 194, "sent": 194, "queue": 194, "elmerfem": [194, 197], "elmercsc": [194, 197], "org": [194, 197], "suffic": 194, "scatter": 195, "snp": 195, "touchston": 195, "s1p": 195, "s2p": 195, "s3p": 195, "forth": 195, "emploi": 195, "export_paramet": [195, 197], "extractor": [195, 198], "consult": [195, 196], "estim": 195, "mutual": 195, "c_i_j": 195, "c_i_i": 195, "lifetim": 195, "eig": 195, "eigenvalu": 195, "_energi": 195, "cv": 195, "export_epr": 195, "post_process_script": 195, "_epr": 195, "csv": 195, "accuraci": 195, "cpw_cross_section_sim": 195, "waveguides_sim_xsect": [195, 201], "xmons_direct_coupling_pyepr": 195, "pyepr_exampl": 195, "t_1": 195, "intermediate_processing_command": 195, "t1_estim": 195, "queu": 195, "lossi": 195, "coher": 195, "master": 195, "thesi": 195, "2023": 195, "focus": 196, "distinguish": 196, "snippet": 196, "refp": 196, "mandatori": [196, 197], "100um": 196, "port_2": 196, "port_2_corn": 196, "port_3": 196, "port_3_corn": 196, "multipurpos": 196, "airbridge_flyov": 196, "joint": 196, "parameter": [196, 197], "purpl": 196, "troubl": 196, "port_cplr0": 196, "port_cplr1": 196, "port_cplr2": 196, "revert": 196, "essenti": 196, "swissmonsimul": 196, "port_cplr0_corn": 196, "port_cplr1_corn": 196, "port_cplr2_corn": 196, "squid_port_squid_a": 196, "squid_port_squid_b": 196, "portion": 196, "variat": 196, "procedur": 196, "eas": 196, "arm_length_500": 196, "gap_sweep": 196, "ansys_execut": 197, "swissmon_simulation_output": 197, "dir_path": 197, "ironpython": 197, "gdsii": 197, "meta": 197, "occurr": 197, "incomplet": 197, "manner": 197, "dev": 197, "abil": 198, "until": 198, "guidanc": 198, "summari": 199, "parameteriz": 199, "primit": 199, "emb": 199, "onto": 199, "archiv": 199, "traceabl": 199, "thought": 199, "manipul": 200, "interpret": 200, "browser": 200, "low": 201, "7": 201, "newest": 201, "lightweight": 201, "klayoutmatthia": 201, "docintro": 201, "docrefer": 201, "docgrow": 201, "docetch": 201}, "objects": {"": [[1, 0, 0, "-", "kqcircuits"]], "kqcircuits": [[2, 0, 0, "-", "chips"], [27, 0, 0, "-", "defaults"], [28, 0, 0, "-", "elements"], [69, 0, 0, "-", "junctions"], [76, 0, 0, "-", "klayout_view"], [77, 0, 0, "-", "layer_cluster"], [78, 0, 0, "-", "layer_config"], [81, 0, 0, "-", "masks"], [86, 0, 0, "-", "pya_resolver"], [87, 0, 0, "-", "qubits"], [94, 0, 0, "-", "run"], [95, 0, 0, "-", "simulations"], [133, 0, 0, "-", "test_structures"], [143, 0, 0, "-", "util"]], "kqcircuits.chips": [[3, 0, 0, "-", "airbridge_crossings"], [4, 0, 0, "-", "airbridge_dc_test"], [5, 0, 0, "-", "chip"], [6, 0, 0, "-", "crossing_twoface"], [7, 0, 0, "-", "daisy_woven"], [8, 0, 0, "-", "dc_test"], [9, 0, 0, "-", "demo"], [10, 0, 0, "-", "demo_twoface"], [11, 0, 0, "-", "empty"], [12, 0, 0, "-", "junction_test"], [13, 0, 0, "-", "junction_test2"], [14, 0, 0, "-", "launchers"], [15, 0, 0, "-", "lithography_test"], [16, 0, 0, "-", "lithography_test_twoface"], [17, 0, 0, "-", "munch_qubits"], [18, 0, 0, "-", "quality_factor"], [19, 0, 0, "-", "quality_factor_twoface"], [20, 0, 0, "-", "sample_holder_test"], [21, 0, 0, "-", "shaping"], [22, 0, 0, "-", "simple"], [23, 0, 0, "-", "single_xmons"], [24, 0, 0, "-", "stripes"], [25, 0, 0, "-", "tsv_test"], [26, 0, 0, "-", "xmons_direct_coupling"]], "kqcircuits.chips.airbridge_crossings": [[3, 1, 1, "", "AirbridgeCrossings"]], "kqcircuits.chips.airbridge_crossings.AirbridgeCrossings": [[3, 2, 1, "", "build"]], "kqcircuits.chips.airbridge_dc_test": [[4, 1, 1, "", "AirbridgeDcTest"]], "kqcircuits.chips.airbridge_dc_test.AirbridgeDcTest": [[4, 2, 1, "", "build"]], "kqcircuits.chips.chip": [[5, 1, 1, "", "Chip"]], "kqcircuits.chips.chip.Chip": [[5, 3, 1, "", "LIBRARY_DESCRIPTION"], [5, 3, 1, "", "LIBRARY_NAME"], [5, 3, 1, "", "LIBRARY_PATH"], [5, 2, 1, "", "can_create_from_shape_impl"], [5, 2, 1, "", "display_text_impl"], [5, 2, 1, "", "get_box"], [5, 2, 1, "", "get_filter_regions"], [5, 2, 1, "", "get_ground_bump_locations"], [5, 2, 1, "", "get_ground_tsv_locations"], [5, 2, 1, "", "get_launcher_assignments"], [5, 2, 1, "", "insert_filtered_elements"], [5, 2, 1, "", "make_grid_locations"], [5, 2, 1, "", "merge_layout_layers"], [5, 2, 1, "", "merge_layout_layers_on_face"], [5, 2, 1, "", "parameters_from_shape_impl"], [5, 2, 1, "", "post_build"], [5, 2, 1, "", "produce_frame"], [5, 2, 1, "", "produce_ground_grid"], [5, 2, 1, "", "produce_ground_on_face_grid"], [5, 2, 1, "", "produce_junction_tests"], [5, 2, 1, "", "produce_launchers"], [5, 2, 1, "", "produce_n_launchers"], [5, 2, 1, "", "produce_opt_lit_tests"], [5, 2, 1, "", "produce_structures"], [5, 2, 1, "", "transformation_from_shape_impl"]], "kqcircuits.chips.crossing_twoface": [[6, 1, 1, "", "CrossingTwoface"]], "kqcircuits.chips.crossing_twoface.CrossingTwoface": [[6, 2, 1, "", "build"]], "kqcircuits.chips.daisy_woven": [[7, 1, 1, "", "DaisyWoven"]], "kqcircuits.chips.daisy_woven.DaisyWoven": [[7, 2, 1, "", "build"]], "kqcircuits.chips.dc_test": [[8, 1, 1, "", "DcTest"]], "kqcircuits.chips.dc_test.DcTest": [[8, 2, 1, "", "build"]], "kqcircuits.chips.demo": [[9, 1, 1, "", "Demo"]], "kqcircuits.chips.demo.Demo": [[9, 2, 1, "", "build"], [9, 2, 1, "", "produce_control_lines"], [9, 2, 1, "", "produce_coupler"], [9, 2, 1, "", "produce_couplers"], [9, 2, 1, "", "produce_driveline"], [9, 2, 1, "", "produce_fluxline"], [9, 2, 1, "", "produce_junction_tests"], [9, 2, 1, "", "produce_probeline"], [9, 2, 1, "", "produce_probelines"], [9, 2, 1, "", "produce_qubit"], [9, 2, 1, "", "produce_qubits"], [9, 2, 1, "", "produce_readout_structure"], [9, 2, 1, "", "produce_readout_structures"]], "kqcircuits.chips.demo_twoface": [[10, 1, 1, "", "DemoTwoface"]], "kqcircuits.chips.demo_twoface.DemoTwoface": [[10, 2, 1, "", "build"], [10, 2, 1, "", "produce_control_lines"], [10, 2, 1, "", "produce_coupler"], [10, 2, 1, "", "produce_couplers"], [10, 2, 1, "", "produce_driveline"], [10, 2, 1, "", "produce_fluxline"], [10, 2, 1, "", "produce_probeline"], [10, 2, 1, "", "produce_probelines"], [10, 2, 1, "", "produce_qubit"], [10, 2, 1, "", "produce_qubits"], [10, 2, 1, "", "produce_readout_structure"], [10, 2, 1, "", "produce_readout_structures"]], "kqcircuits.chips.empty": [[11, 1, 1, "", "Empty"]], "kqcircuits.chips.empty.Empty": [[11, 2, 1, "", "build"], [11, 2, 1, "", "make_empty_area"]], "kqcircuits.chips.junction_test": [[12, 1, 1, "", "JunctionTest"]], "kqcircuits.chips.junction_test.JunctionTest": [[12, 2, 1, "", "build"]], "kqcircuits.chips.junction_test2": [[13, 1, 1, "", "JunctionTest2"]], "kqcircuits.chips.junction_test2.JunctionTest2": [[13, 2, 1, "", "build"], [13, 2, 1, "", "coerce_parameters_impl"]], "kqcircuits.chips.launchers": [[14, 1, 1, "", "Launchers"]], "kqcircuits.chips.launchers.Launchers": [[14, 2, 1, "", "build"]], "kqcircuits.chips.lithography_test": [[15, 1, 1, "", "LithographyTest"]], "kqcircuits.chips.lithography_test.LithographyTest": [[15, 2, 1, "", "build"], [15, 2, 1, "", "create_pattern"]], "kqcircuits.chips.lithography_test_twoface": [[16, 1, 1, "", "LithographyTestTwoface"]], "kqcircuits.chips.lithography_test_twoface.LithographyTestTwoface": [[16, 2, 1, "", "build"], [16, 2, 1, "", "create_pattern"]], "kqcircuits.chips.munch_qubits": [[17, 1, 1, "", "MunchQubits"]], "kqcircuits.chips.munch_qubits.MunchQubits": [[17, 2, 1, "", "build"], [17, 2, 1, "", "produce_coupler"], [17, 2, 1, "", "produce_drivelines"], [17, 2, 1, "", "produce_probeline"], [17, 2, 1, "", "produce_qubits"], [17, 2, 1, "", "produce_readout_resonators"]], "kqcircuits.chips.quality_factor": [[18, 1, 1, "", "QualityFactor"]], "kqcircuits.chips.quality_factor.QualityFactor": [[18, 2, 1, "", "build"]], "kqcircuits.chips.quality_factor_twoface": [[19, 1, 1, "", "QualityFactorTwoface"]], "kqcircuits.chips.quality_factor_twoface.QualityFactorTwoface": [[19, 2, 1, "", "build"], [19, 2, 1, "", "produce_resonator"]], "kqcircuits.chips.sample_holder_test": [[20, 1, 1, "", "SampleHolderTest"]], "kqcircuits.chips.sample_holder_test.SampleHolderTest": [[20, 2, 1, "", "build"]], "kqcircuits.chips.shaping": [[21, 1, 1, "", "Shaping"]], "kqcircuits.chips.shaping.Shaping": [[21, 2, 1, "", "build"]], "kqcircuits.chips.simple": [[22, 1, 1, "", "Simple"]], "kqcircuits.chips.simple.Simple": [[22, 2, 1, "", "build"]], "kqcircuits.chips.single_xmons": [[23, 1, 1, "", "SingleXmons"]], "kqcircuits.chips.single_xmons.SingleXmons": [[23, 2, 1, "", "build"], [23, 3, 1, "", "launchers"], [23, 3, 1, "", "qubits_refpoints"]], "kqcircuits.chips.stripes": [[24, 1, 1, "", "Stripes"]], "kqcircuits.chips.stripes.Stripes": [[24, 2, 1, "", "build"]], "kqcircuits.chips.tsv_test": [[25, 1, 1, "", "TsvTest"]], "kqcircuits.chips.tsv_test.TsvTest": [[25, 2, 1, "", "build"], [25, 2, 1, "", "create_xsection"]], "kqcircuits.chips.xmons_direct_coupling": [[26, 1, 1, "", "XMonsDirectCoupling"]], "kqcircuits.chips.xmons_direct_coupling.XMonsDirectCoupling": [[26, 2, 1, "", "build"], [26, 2, 1, "", "produce_qubits"], [26, 2, 1, "", "produce_readout_resonator"]], "kqcircuits.elements": [[29, 0, 0, "-", "airbridge_connection"], [30, 0, 0, "-", "airbridges"], [34, 0, 0, "-", "capacitive_x_coupler"], [35, 0, 0, "-", "chip_frame"], [36, 0, 0, "-", "circular_capacitor"], [37, 0, 0, "-", "element"], [38, 0, 0, "-", "finger_capacitor_square"], [39, 0, 0, "-", "finger_capacitor_taper"], [40, 0, 0, "-", "flip_chip_connectors"], [44, 0, 0, "-", "fluxlines"], [48, 0, 0, "-", "hanger_resonator"], [49, 0, 0, "-", "launcher"], [50, 0, 0, "-", "launcher_dc"], [51, 0, 0, "-", "markers"], [55, 0, 0, "-", "meander"], [56, 0, 0, "-", "quarter_wave_cpw_resonator"], [57, 0, 0, "-", "smooth_capacitor"], [58, 0, 0, "-", "spiral_resonator_polygon"], [59, 0, 0, "-", "tsvs"], [63, 0, 0, "-", "waveguide_composite"], [64, 0, 0, "-", "waveguide_coplanar"], [65, 0, 0, "-", "waveguide_coplanar_curved"], [66, 0, 0, "-", "waveguide_coplanar_splitter"], [67, 0, 0, "-", "waveguide_coplanar_straight"], [68, 0, 0, "-", "waveguide_coplanar_taper"]], "kqcircuits.elements.airbridge_connection": [[29, 1, 1, "", "AirbridgeConnection"]], "kqcircuits.elements.airbridge_connection.AirbridgeConnection": [[29, 2, 1, "", "build"]], "kqcircuits.elements.airbridges": [[31, 0, 0, "-", "airbridge"], [32, 0, 0, "-", "airbridge_multi_face"], [33, 0, 0, "-", "airbridge_rectangular"]], "kqcircuits.elements.airbridges.airbridge": [[31, 1, 1, "", "Airbridge"]], "kqcircuits.elements.airbridges.airbridge.Airbridge": [[31, 2, 1, "", "create"], [31, 3, 1, "", "default_type"], [31, 2, 1, "", "transformation_from_shape_impl"]], "kqcircuits.elements.airbridges.airbridge_multi_face": [[32, 1, 1, "", "AirbridgeMultiFace"]], "kqcircuits.elements.airbridges.airbridge_multi_face.AirbridgeMultiFace": [[32, 2, 1, "", "build"], [32, 3, 1, "", "default_type"]], "kqcircuits.elements.airbridges.airbridge_rectangular": [[33, 1, 1, "", "AirbridgeRectangular"]], "kqcircuits.elements.airbridges.airbridge_rectangular.AirbridgeRectangular": [[33, 2, 1, "", "build"], [33, 3, 1, "", "default_type"]], "kqcircuits.elements.capacitive_x_coupler": [[34, 1, 1, "", "CapacitiveXCoupler"]], "kqcircuits.elements.capacitive_x_coupler.CapacitiveXCoupler": [[34, 2, 1, "", "build"], [34, 2, 1, "", "get_sim_ports"]], "kqcircuits.elements.chip_frame": [[35, 1, 1, "", "ChipFrame"]], "kqcircuits.elements.chip_frame.ChipFrame": [[35, 2, 1, "", "build"]], "kqcircuits.elements.circular_capacitor": [[36, 1, 1, "", "CircularCapacitor"]], "kqcircuits.elements.circular_capacitor.CircularCapacitor": [[36, 2, 1, "", "build"], [36, 2, 1, "", "get_sim_ports"]], "kqcircuits.elements.element": [[37, 1, 1, "", "Element"], [37, 4, 1, "", "get_refpoints"], [37, 4, 1, "", "insert_cell_into"], [37, 4, 1, "", "resolve_face"]], "kqcircuits.elements.element.Element": [[37, 3, 1, "", "LIBRARY_DESCRIPTION"], [37, 3, 1, "", "LIBRARY_NAME"], [37, 3, 1, "", "LIBRARY_PATH"], [37, 2, 1, "", "add_element"], [37, 2, 1, "", "add_port"], [37, 2, 1, "", "add_protection"], [37, 2, 1, "", "build"], [37, 2, 1, "", "copy_port"], [37, 2, 1, "", "create"], [37, 2, 1, "", "create_cell_from_shape"], [37, 2, 1, "", "create_subtype"], [37, 2, 1, "", "create_with_refpoints"], [37, 2, 1, "", "display_text_impl"], [37, 2, 1, "", "face"], [37, 2, 1, "", "face_changer_waveguides"], [37, 2, 1, "", "get_layer"], [37, 2, 1, "", "get_refpoints"], [37, 2, 1, "", "get_schema"], [37, 2, 1, "", "get_sim_ports"], [37, 2, 1, "", "insert_cell"], [37, 2, 1, "", "left_and_right_waveguides"], [37, 2, 1, "", "pcell_params_by_name"], [37, 2, 1, "", "post_build"], [37, 2, 1, "", "produce_impl"], [37, 2, 1, "", "raise_error_on_cell"], [37, 2, 1, "", "sync_parameters"]], "kqcircuits.elements.finger_capacitor_square": [[38, 1, 1, "", "FingerCapacitorSquare"]], "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare": [[38, 2, 1, "", "add_waveguides"], [38, 2, 1, "", "build"], [38, 2, 1, "", "can_create_from_shape_impl"], [38, 2, 1, "", "cut_region"], [38, 2, 1, "", "finger_area_length"], [38, 2, 1, "", "finger_area_width"], [38, 2, 1, "", "get_ground_region"], [38, 2, 1, "", "get_sim_ports"]], "kqcircuits.elements.finger_capacitor_taper": [[39, 1, 1, "", "FingerCapacitorTaper"]], "kqcircuits.elements.finger_capacitor_taper.FingerCapacitorTaper": [[39, 2, 1, "", "build"], [39, 2, 1, "", "can_create_from_shape_impl"]], "kqcircuits.elements.flip_chip_connectors": [[41, 0, 0, "-", "flip_chip_connector"], [42, 0, 0, "-", "flip_chip_connector_dc"], [43, 0, 0, "-", "flip_chip_connector_rf"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector": [[41, 1, 1, "", "FlipChipConnector"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector.FlipChipConnector": [[41, 2, 1, "", "create"], [41, 3, 1, "", "default_type"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc": [[42, 1, 1, "", "FlipChipConnectorDc"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc.FlipChipConnectorDc": [[42, 2, 1, "", "build"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf": [[43, 1, 1, "", "FlipChipConnectorRf"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf.FlipChipConnectorRf": [[43, 2, 1, "", "build"], [43, 2, 1, "", "get_sim_ports"]], "kqcircuits.elements.fluxlines": [[45, 0, 0, "-", "fluxline"], [46, 0, 0, "-", "fluxline_standard"], [47, 0, 0, "-", "fluxline_straight"]], "kqcircuits.elements.fluxlines.fluxline": [[45, 1, 1, "", "Fluxline"]], "kqcircuits.elements.fluxlines.fluxline.Fluxline": [[45, 2, 1, "", "coerce_parameters_impl"], [45, 2, 1, "", "create"], [45, 3, 1, "", "default_type"]], "kqcircuits.elements.fluxlines.fluxline_standard": [[46, 1, 1, "", "FluxlineStandard"]], "kqcircuits.elements.fluxlines.fluxline_standard.FluxlineStandard": [[46, 2, 1, "", "build"]], "kqcircuits.elements.fluxlines.fluxline_straight": [[47, 1, 1, "", "FluxlineStraight"]], "kqcircuits.elements.fluxlines.fluxline_straight.FluxlineStraight": [[47, 2, 1, "", "build"]], "kqcircuits.elements.hanger_resonator": [[48, 1, 1, "", "HangerResonator"]], "kqcircuits.elements.hanger_resonator.HangerResonator": [[48, 2, 1, "", "build"], [48, 2, 1, "", "get_sim_ports"]], "kqcircuits.elements.launcher": [[49, 1, 1, "", "Launcher"]], "kqcircuits.elements.launcher.Launcher": [[49, 2, 1, "", "build"]], "kqcircuits.elements.launcher_dc": [[50, 1, 1, "", "LauncherDC"]], "kqcircuits.elements.launcher_dc.LauncherDC": [[50, 2, 1, "", "build"]], "kqcircuits.elements.markers": [[52, 0, 0, "-", "marker"], [53, 0, 0, "-", "marker_standard"], [54, 0, 0, "-", "mask_marker_fc"]], "kqcircuits.elements.markers.marker": [[52, 1, 1, "", "Marker"]], "kqcircuits.elements.markers.marker.Marker": [[52, 2, 1, "", "create"], [52, 3, 1, "", "default_type"], [52, 2, 1, "", "get_marker_locations"], [52, 2, 1, "", "get_marker_region"], [52, 2, 1, "", "produce_geometry"]], "kqcircuits.elements.markers.marker_standard": [[53, 1, 1, "", "MarkerStandard"]], "kqcircuits.elements.markers.marker_standard.MarkerStandard": [[53, 2, 1, "", "build"]], "kqcircuits.elements.markers.mask_marker_fc": [[54, 1, 1, "", "MaskMarkerFc"]], "kqcircuits.elements.markers.mask_marker_fc.MaskMarkerFc": [[54, 2, 1, "", "build"], [54, 2, 1, "", "create_cross"], [54, 2, 1, "", "get_marker_locations"], [54, 2, 1, "", "get_marker_region"]], "kqcircuits.elements.meander": [[55, 1, 1, "", "Meander"]], "kqcircuits.elements.meander.Meander": [[55, 2, 1, "", "build"], [55, 2, 1, "", "can_create_from_shape_impl"], [55, 2, 1, "", "parameters_from_shape_impl"]], "kqcircuits.elements.quarter_wave_cpw_resonator": [[56, 1, 1, "", "QuarterWaveCpwResonator"]], "kqcircuits.elements.quarter_wave_cpw_resonator.QuarterWaveCpwResonator": [[56, 2, 1, "", "build"], [56, 2, 1, "", "get_sim_ports"]], "kqcircuits.elements.smooth_capacitor": [[57, 1, 1, "", "SmoothCapacitor"]], "kqcircuits.elements.smooth_capacitor.SmoothCapacitor": [[57, 2, 1, "", "build"], [57, 2, 1, "", "can_create_from_shape_impl"], [57, 2, 1, "", "get_sim_ports"]], "kqcircuits.elements.spiral_resonator_polygon": [[58, 1, 1, "", "SpiralResonatorPolygon"], [58, 4, 1, "", "rectangular_parameters"]], "kqcircuits.elements.spiral_resonator_polygon.SpiralResonatorPolygon": [[58, 2, 1, "", "build"]], "kqcircuits.elements.tsvs": [[60, 0, 0, "-", "tsv"], [61, 0, 0, "-", "tsv_ellipse"], [62, 0, 0, "-", "tsv_standard"]], "kqcircuits.elements.tsvs.tsv": [[60, 1, 1, "", "Tsv"]], "kqcircuits.elements.tsvs.tsv.Tsv": [[60, 2, 1, "", "create"], [60, 3, 1, "", "default_type"]], "kqcircuits.elements.tsvs.tsv_ellipse": [[61, 1, 1, "", "TsvEllipse"]], "kqcircuits.elements.tsvs.tsv_ellipse.TsvEllipse": [[61, 2, 1, "", "create_tsv_connector"], [61, 2, 1, "", "produce_impl"]], "kqcircuits.elements.tsvs.tsv_standard": [[62, 1, 1, "", "TsvStandard"]], "kqcircuits.elements.tsvs.tsv_standard.TsvStandard": [[62, 2, 1, "", "build"]], "kqcircuits.elements.waveguide_composite": [[63, 1, 1, "", "Node"], [63, 1, 1, "", "WaveguideComposite"], [63, 4, 1, "", "produce_fixed_length_bend"]], "kqcircuits.elements.waveguide_composite.Node": [[63, 3, 1, "", "align"], [63, 3, 1, "", "angle"], [63, 2, 1, "", "deserialize"], [63, 3, 1, "", "element"], [63, 3, 1, "", "inst_name"], [63, 3, 1, "", "length_before"], [63, 3, 1, "", "length_increment"], [63, 3, 1, "", "meander_direction"], [63, 2, 1, "", "nodes_from_string"], [63, 3, 1, "", "position"]], "kqcircuits.elements.waveguide_composite.WaveguideComposite": [[63, 2, 1, "", "build"], [63, 2, 1, "", "check_node_type"], [63, 2, 1, "", "coerce_parameters_impl"], [63, 2, 1, "", "create"], [63, 2, 1, "", "get_segment_cells"], [63, 2, 1, "", "get_segment_lengths"], [63, 2, 1, "", "produce_fixed_length_waveguide"], [63, 2, 1, "", "snap_point"]], "kqcircuits.elements.waveguide_coplanar": [[64, 1, 1, "", "WaveguideCoplanar"]], "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar": [[64, 2, 1, "", "build"], [64, 2, 1, "", "can_create_from_shape_impl"], [64, 2, 1, "", "get_corner_data"], [64, 2, 1, "", "is_continuous"], [64, 2, 1, "", "parameters_from_shape_impl"], [64, 2, 1, "", "produce_end_termination"], [64, 2, 1, "", "produce_waveguide"], [64, 2, 1, "", "transformation_from_shape_impl"]], "kqcircuits.elements.waveguide_coplanar_curved": [[65, 1, 1, "", "WaveguideCoplanarCurved"], [65, 4, 1, "", "arc"]], "kqcircuits.elements.waveguide_coplanar_curved.WaveguideCoplanarCurved": [[65, 2, 1, "", "build"], [65, 2, 1, "", "build_geometry"], [65, 2, 1, "", "coerce_parameters_impl"], [65, 2, 1, "", "create_curve_arcs"], [65, 2, 1, "", "produce_curve_termination"]], "kqcircuits.elements.waveguide_coplanar_splitter": [[66, 1, 1, "", "WaveguideCoplanarSplitter"], [66, 4, 1, "", "t_cross_parameters"]], "kqcircuits.elements.waveguide_coplanar_splitter.WaveguideCoplanarSplitter": [[66, 2, 1, "", "build"]], "kqcircuits.elements.waveguide_coplanar_straight": [[67, 1, 1, "", "WaveguideCoplanarStraight"]], "kqcircuits.elements.waveguide_coplanar_straight.WaveguideCoplanarStraight": [[67, 2, 1, "", "build"], [67, 2, 1, "", "build_geometry"]], "kqcircuits.elements.waveguide_coplanar_taper": [[68, 1, 1, "", "WaveguideCoplanarTaper"]], "kqcircuits.elements.waveguide_coplanar_taper.WaveguideCoplanarTaper": [[68, 2, 1, "", "build"]], "kqcircuits.junctions": [[70, 0, 0, "-", "junction"], [71, 0, 0, "-", "manhattan"], [72, 0, 0, "-", "manhattan_single_junction"], [73, 0, 0, "-", "no_squid"], [74, 0, 0, "-", "sim"], [75, 0, 0, "-", "squid"]], "kqcircuits.junctions.junction": [[70, 1, 1, "", "Junction"]], "kqcircuits.junctions.junction.Junction": [[70, 3, 1, "", "LIBRARY_DESCRIPTION"], [70, 3, 1, "", "LIBRARY_NAME"], [70, 3, 1, "", "LIBRARY_PATH"], [70, 2, 1, "", "coerce_parameters_impl"], [70, 2, 1, "", "create"], [70, 3, 1, "", "default_type"]], "kqcircuits.junctions.manhattan": [[71, 1, 1, "", "Manhattan"]], "kqcircuits.junctions.manhattan.Manhattan": [[71, 2, 1, "", "build"], [71, 2, 1, "", "produce_contact_pads"], [71, 2, 1, "", "produce_manhattan_squid"], [71, 2, 1, "", "produce_tp_large"], [71, 2, 1, "", "produce_tp_small"]], "kqcircuits.junctions.manhattan_single_junction": [[72, 1, 1, "", "ManhattanSingleJunction"]], "kqcircuits.junctions.manhattan_single_junction.ManhattanSingleJunction": [[72, 2, 1, "", "build"], [72, 2, 1, "", "produce_manhattan_junction"]], "kqcircuits.junctions.no_squid": [[73, 1, 1, "", "NoSquid"]], "kqcircuits.junctions.no_squid.NoSquid": [[73, 2, 1, "", "build"]], "kqcircuits.junctions.sim": [[74, 1, 1, "", "Sim"]], "kqcircuits.junctions.sim.Sim": [[74, 2, 1, "", "build"]], "kqcircuits.junctions.squid": [[75, 1, 1, "", "Squid"]], "kqcircuits.klayout_view": [[76, 1, 1, "", "KLayoutView"], [76, 6, 1, "", "MissingUILibraryException"], [76, 4, 1, "", "resolve_default_layer_info"]], "kqcircuits.klayout_view.KLayoutView": [[76, 5, 1, "", "active_cell"], [76, 2, 1, "", "add_default_layers"], [76, 5, 1, "", "cell_view"], [76, 2, 1, "", "clear_layers"], [76, 2, 1, "", "close"], [76, 2, 1, "", "create_top_cell"], [76, 2, 1, "", "export_all_layers_bitmap"], [76, 2, 1, "", "export_layers_bitmaps"], [76, 2, 1, "", "export_pcell_png"], [76, 2, 1, "", "focus"], [76, 2, 1, "", "get_active_cell"], [76, 2, 1, "", "get_active_cell_view"], [76, 2, 1, "", "get_active_layout"], [76, 2, 1, "", "get_pixels"], [76, 2, 1, "", "insert_cell"], [76, 5, 1, "", "layout"], [76, 3, 1, "", "layout_view"], [76, 2, 1, "", "show"], [76, 5, 1, "", "top_cell"]], "kqcircuits.layer_cluster": [[77, 1, 1, "", "LayerCluster"]], "kqcircuits.layer_cluster.LayerCluster": [[77, 2, 1, "", "all_layers"], [77, 3, 1, "", "extra_layers"], [77, 3, 1, "", "face_id"], [77, 3, 1, "", "main_layers"]], "kqcircuits.layer_config": [[79, 0, 0, "-", "default_layer_config"], [80, 0, 0, "-", "example_layer_config"]], "kqcircuits.masks": [[82, 0, 0, "-", "mask_export"], [83, 0, 0, "-", "mask_layout"], [84, 0, 0, "-", "mask_set"], [85, 0, 0, "-", "multi_face_mask_layout"]], "kqcircuits.masks.mask_export": [[82, 4, 1, "", "export_bitmaps"], [82, 4, 1, "", "export_chip"], [82, 4, 1, "", "export_designs"], [82, 4, 1, "", "export_docs"], [82, 4, 1, "", "export_junction_parameters"], [82, 4, 1, "", "export_mask"], [82, 4, 1, "", "export_mask_set"], [82, 4, 1, "", "export_masks_of_face"], [82, 4, 1, "", "get_mask_layout_full_name"]], "kqcircuits.masks.mask_layout": [[83, 1, 1, "", "MaskLayout"]], "kqcircuits.masks.mask_layout.MaskLayout": [[83, 2, 1, "", "add_chips_map"], [83, 3, 1, "", "added_chips"], [83, 3, 1, "", "align_to"], [83, 3, 1, "", "bbox_face_ids"], [83, 2, 1, "", "build"], [83, 3, 1, "", "chip_box_offset"], [83, 3, 1, "", "chip_copies"], [83, 3, 1, "", "chip_size"], [83, 3, 1, "", "chip_trans"], [83, 3, 1, "", "chips_map"], [83, 3, 1, "", "chips_map_legend"], [83, 3, 1, "", "chips_map_offset"], [83, 3, 1, "", "chips_placed_by_position_label"], [83, 3, 1, "", "covered_region_excluded_layers"], [83, 3, 1, "", "dice_width"], [83, 3, 1, "", "edge_clearance"], [83, 3, 1, "", "extra_chips"], [83, 3, 1, "", "extra_id"], [83, 2, 1, "", "face"], [83, 3, 1, "", "face_id"], [83, 2, 1, "", "insert_chip_copy_labels"], [83, 2, 1, "", "insert_chips"], [83, 3, 1, "", "layers_to_mask"], [83, 3, 1, "", "layout"], [83, 3, 1, "", "mask_export_density_layers"], [83, 3, 1, "", "mask_export_layers"], [83, 3, 1, "", "mask_marker_offset"], [83, 3, 1, "", "mask_markers_dict"], [83, 3, 1, "", "mask_name_box_margin"], [83, 3, 1, "", "mask_name_offset"], [83, 3, 1, "", "mask_name_scale"], [83, 3, 1, "", "mask_text_scale"], [83, 3, 1, "", "mirror_labels"], [83, 3, 1, "", "name"], [83, 2, 1, "", "overwrite_chips_by_position_label"], [83, 2, 1, "", "position_label_to_two_coordinates"], [83, 3, 1, "", "remove_chips"], [83, 3, 1, "", "submasks"], [83, 3, 1, "", "text_margin"], [83, 3, 1, "", "top_cell"], [83, 2, 1, "", "two_coordinates_to_position_label"], [83, 3, 1, "", "version"], [83, 3, 1, "", "wafer_bottom_flat_length"], [83, 3, 1, "", "wafer_center"], [83, 3, 1, "", "wafer_rad"], [83, 3, 1, "", "wafer_top_flat_length"], [83, 3, 1, "", "with_grid"]], "kqcircuits.masks.mask_set": [[84, 1, 1, "", "MaskSet"]], "kqcircuits.masks.mask_set.MaskSet": [[84, 2, 1, "", "add_chip"], [84, 2, 1, "", "add_mask_layout"], [84, 2, 1, "", "add_multi_face_mask_layout"], [84, 2, 1, "", "build"], [84, 2, 1, "", "chips_map_from_box_map"], [84, 3, 1, "", "chips_map_legend"], [84, 2, 1, "", "export"], [84, 3, 1, "", "export_drc"], [84, 3, 1, "", "export_path"], [84, 3, 1, "", "layout"], [84, 3, 1, "", "mask_export_layers"], [84, 3, 1, "", "mask_layouts"], [84, 3, 1, "", "name"], [84, 3, 1, "", "used_chips"], [84, 3, 1, "", "version"], [84, 3, 1, "", "with_grid"]], "kqcircuits.masks.multi_face_mask_layout": [[85, 1, 1, "", "MultiFaceMaskLayout"]], "kqcircuits.masks.multi_face_mask_layout.MultiFaceMaskLayout": [[85, 2, 1, "", "add_chips_map"], [85, 3, 1, "", "face_ids"], [85, 3, 1, "", "mask_layouts"]], "kqcircuits.pya_resolver": [[86, 4, 1, "", "is_standalone_session"], [86, 4, 1, "", "klayout_executable_command"]], "kqcircuits.qubits": [[88, 0, 0, "-", "circular_transmon_single_island"], [89, 0, 0, "-", "concentric_transmon"], [90, 0, 0, "-", "double_pads"], [91, 0, 0, "-", "double_pads_splines"], [92, 0, 0, "-", "qubit"], [93, 0, 0, "-", "swissmon"]], "kqcircuits.qubits.circular_transmon_single_island": [[88, 1, 1, "", "CircularTransmonSingleIsland"]], "kqcircuits.qubits.circular_transmon_single_island.CircularTransmonSingleIsland": [[88, 2, 1, "", "build"], [88, 2, 1, "", "get_sim_ports"]], "kqcircuits.qubits.concentric_transmon": [[89, 1, 1, "", "ConcentricTransmon"]], "kqcircuits.qubits.concentric_transmon.ConcentricTransmon": [[89, 2, 1, "", "build"], [89, 2, 1, "", "get_sim_ports"]], "kqcircuits.qubits.double_pads": [[90, 1, 1, "", "DoublePads"]], "kqcircuits.qubits.double_pads.DoublePads": [[90, 2, 1, "", "build"], [90, 2, 1, "", "get_sim_ports"]], "kqcircuits.qubits.double_pads_splines": [[91, 1, 1, "", "DoublePadsSplines"]], "kqcircuits.qubits.qubit": [[92, 1, 1, "", "Qubit"]], "kqcircuits.qubits.qubit.Qubit": [[92, 3, 1, "", "LIBRARY_DESCRIPTION"], [92, 3, 1, "", "LIBRARY_NAME"], [92, 3, 1, "", "LIBRARY_PATH"], [92, 2, 1, "", "coerce_parameters_impl"], [92, 2, 1, "", "produce_fluxline"], [92, 2, 1, "", "produce_squid"]], "kqcircuits.qubits.swissmon": [[93, 1, 1, "", "Swissmon"]], "kqcircuits.qubits.swissmon.Swissmon": [[93, 2, 1, "", "build"], [93, 2, 1, "", "get_sim_ports"]], "kqcircuits.run": [[94, 4, 1, "", "argument_parser"], [94, 4, 1, "", "run"], [94, 4, 1, "", "run_kqc"]], "kqcircuits.simulations": [[96, 0, 0, "-", "airbridges_sim"], [97, 0, 0, "-", "cross_section_simulation"], [98, 0, 0, "-", "empty_simulation"], [104, 0, 0, "-", "export"], [124, 0, 0, "-", "partition_region"], [125, 0, 0, "-", "port"], [126, 0, 0, "-", "post_process"], [127, 0, 0, "-", "simulation"], [128, 0, 0, "-", "single_element_simulation"], [129, 0, 0, "-", "single_xmons_full_chip_sim"], [130, 0, 0, "-", "waveguides_sim"], [131, 0, 0, "-", "xmons_direct_coupling_full_chip_sim"], [132, 0, 0, "-", "xmons_direct_coupling_sim"]], "kqcircuits.simulations.airbridges_sim": [[96, 1, 1, "", "AirbridgesSim"]], "kqcircuits.simulations.airbridges_sim.AirbridgesSim": [[96, 2, 1, "", "build"]], "kqcircuits.simulations.cross_section_simulation": [[97, 1, 1, "", "CrossSectionSimulation"]], "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation": [[97, 3, 1, "", "LIBRARY_NAME"], [97, 2, 1, "", "build"], [97, 2, 1, "", "get_dict_by_layers"], [97, 2, 1, "", "get_layers"], [97, 2, 1, "", "get_parameters"], [97, 2, 1, "", "get_schema"], [97, 2, 1, "", "get_sim_layer"], [97, 2, 1, "", "get_simulation_data"], [97, 2, 1, "", "process_layers"], [97, 2, 1, "", "register_cell_layers_as_sim_layers"], [97, 2, 1, "", "set_permittivity"]], "kqcircuits.simulations.empty_simulation": [[98, 1, 1, "", "EmptySimulation"]], "kqcircuits.simulations.empty_simulation.EmptySimulation": [[98, 2, 1, "", "build"]], "kqcircuits.simulations.epr": [[100, 0, 0, "-", "example"], [101, 0, 0, "-", "smooth_capacitor"], [102, 0, 0, "-", "swissmon"], [103, 0, 0, "-", "utils"]], "kqcircuits.simulations.epr.example": [[100, 4, 1, "", "correction_cuts"], [100, 4, 1, "", "extract_from"], [100, 4, 1, "", "partition_regions"]], "kqcircuits.simulations.epr.smooth_capacitor": [[101, 4, 1, "", "correction_cuts"], [101, 4, 1, "", "partition_regions"]], "kqcircuits.simulations.epr.swissmon": [[102, 4, 1, "", "correction_cuts"], [102, 4, 1, "", "extract_swissmon_from"], [102, 4, 1, "", "partition_regions"]], "kqcircuits.simulations.epr.utils": [[103, 4, 1, "", "extract_child_simulation"]], "kqcircuits.simulations.export": [[105, 0, 0, "-", "ansys"], [108, 0, 0, "-", "elmer"], [111, 0, 0, "-", "export_and_run"], [112, 0, 0, "-", "export_singularity"], [113, 0, 0, "-", "remote_export_and_run"], [114, 0, 0, "-", "simulation_export"], [115, 0, 0, "-", "simulation_validate"], [116, 0, 0, "-", "solution"], [117, 0, 0, "-", "sonnet"], [120, 0, 0, "-", "util"], [121, 0, 0, "-", "xsection"]], "kqcircuits.simulations.export.ansys": [[106, 0, 0, "-", "ansys_export"], [107, 0, 0, "-", "ansys_solution"]], "kqcircuits.simulations.export.ansys.ansys_export": [[106, 4, 1, "", "export_ansys"], [106, 4, 1, "", "export_ansys_bat"], [106, 4, 1, "", "export_ansys_json"]], "kqcircuits.simulations.export.ansys.ansys_solution": [[107, 1, 1, "", "AnsysCrossSectionSolution"], [107, 1, 1, "", "AnsysCurrentSolution"], [107, 1, 1, "", "AnsysEigenmodeSolution"], [107, 1, 1, "", "AnsysHfssSolution"], [107, 1, 1, "", "AnsysQ3dSolution"], [107, 1, 1, "", "AnsysSolution"], [107, 1, 1, "", "AnsysVoltageSolution"], [107, 4, 1, "", "get_ansys_solution"]], "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCrossSectionSolution": [[107, 3, 1, "", "ansys_tool"], [107, 3, 1, "", "frequency"], [107, 2, 1, "", "get_solution_data"], [107, 3, 1, "", "integrate_energies"], [107, 3, 1, "", "percent_error"]], "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCurrentSolution": [[107, 3, 1, "", "ansys_tool"], [107, 3, 1, "", "frequency"], [107, 2, 1, "", "get_solution_data"], [107, 3, 1, "", "integrate_energies"], [107, 3, 1, "", "integrate_magnetic_flux"], [107, 3, 1, "", "max_delta_e"]], "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution": [[107, 3, 1, "", "ansys_tool"], [107, 2, 1, "", "get_solution_data"], [107, 3, 1, "", "integrate_energies"], [107, 3, 1, "", "integrate_magnetic_flux"], [107, 3, 1, "", "max_delta_f"], [107, 3, 1, "", "min_frequency"], [107, 3, 1, "", "n_modes"]], "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution": [[107, 3, 1, "", "ansys_tool"], [107, 3, 1, "", "capacitance_export"], [107, 3, 1, "", "frequency"], [107, 2, 1, "", "get_solution_data"], [107, 3, 1, "", "integrate_energies"], [107, 3, 1, "", "integrate_magnetic_flux"], [107, 3, 1, "", "max_delta_s"], [107, 3, 1, "", "sweep_count"], [107, 3, 1, "", "sweep_enabled"], [107, 3, 1, "", "sweep_end"], [107, 3, 1, "", "sweep_start"], [107, 3, 1, "", "sweep_type"]], "kqcircuits.simulations.export.ansys.ansys_solution.AnsysQ3dSolution": [[107, 3, 1, "", "ansys_tool"], [107, 3, 1, "", "frequency"], [107, 2, 1, "", "get_solution_data"], [107, 3, 1, "", "percent_error"]], "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution": [[107, 3, 1, "", "ansys_project_template"], [107, 3, 1, "", "ansys_tool"], [107, 3, 1, "", "frequency_units"], [107, 2, 1, "", "get_solution_data"], [107, 3, 1, "", "maximum_passes"], [107, 3, 1, "", "mesh_size"], [107, 3, 1, "", "minimum_converged_passes"], [107, 3, 1, "", "minimum_passes"], [107, 3, 1, "", "percent_refinement"], [107, 3, 1, "", "simulation_flags"]], "kqcircuits.simulations.export.ansys.ansys_solution.AnsysVoltageSolution": [[107, 3, 1, "", "ansys_tool"], [107, 3, 1, "", "frequency"], [107, 2, 1, "", "get_solution_data"], [107, 3, 1, "", "integrate_energies"], [107, 3, 1, "", "integrate_magnetic_flux"], [107, 3, 1, "", "max_delta_e"]], "kqcircuits.simulations.export.elmer": [[109, 0, 0, "-", "elmer_export"], [110, 0, 0, "-", "elmer_solution"]], "kqcircuits.simulations.export.elmer.elmer_export": [[109, 4, 1, "", "export_elmer"], [109, 4, 1, "", "export_elmer_json"], [109, 4, 1, "", "export_elmer_script"]], "kqcircuits.simulations.export.elmer.elmer_solution": [[110, 1, 1, "", "ElmerCapacitanceSolution"], [110, 1, 1, "", "ElmerCrossSectionSolution"], [110, 1, 1, "", "ElmerEPR3DSolution"], [110, 1, 1, "", "ElmerSolution"], [110, 1, 1, "", "ElmerVectorHelmholtzSolution"], [110, 4, 1, "", "get_elmer_solution"]], "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCapacitanceSolution": [[110, 3, 1, "", "convergence_tolerance"], [110, 3, 1, "", "integrate_energies"], [110, 3, 1, "", "linear_system_method"], [110, 3, 1, "", "linear_system_preconditioning"], [110, 3, 1, "", "max_iterations"], [110, 3, 1, "", "p_element_order"], [110, 3, 1, "", "tool"]], "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution": [[110, 3, 1, "", "boundary_conditions"], [110, 3, 1, "", "convergence_tolerance"], [110, 3, 1, "", "integrate_energies"], [110, 3, 1, "", "linear_system_method"], [110, 3, 1, "", "linear_system_preconditioning"], [110, 3, 1, "", "max_iterations"], [110, 3, 1, "", "p_element_order"], [110, 3, 1, "", "run_inductance_sim"], [110, 3, 1, "", "tool"]], "kqcircuits.simulations.export.elmer.elmer_solution.ElmerEPR3DSolution": [[110, 3, 1, "", "convergence_tolerance"], [110, 3, 1, "", "linear_system_method"], [110, 3, 1, "", "linear_system_preconditioning"], [110, 3, 1, "", "max_iterations"], [110, 3, 1, "", "p_element_order"], [110, 3, 1, "", "sequential_signal_excitation"], [110, 3, 1, "", "tool"]], "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution": [[110, 2, 1, "", "get_solution_data"], [110, 3, 1, "", "is_axisymmetric"], [110, 3, 1, "", "max_error_scale"], [110, 3, 1, "", "max_outlier_fraction"], [110, 3, 1, "", "maximum_passes"], [110, 3, 1, "", "mesh_levels"], [110, 3, 1, "", "mesh_size"], [110, 3, 1, "", "minimum_passes"], [110, 3, 1, "", "percent_error"], [110, 3, 1, "", "tool"], [110, 3, 1, "", "vtu_output"]], "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution": [[110, 3, 1, "", "conductivity"], [110, 3, 1, "", "convergence_tolerance"], [110, 3, 1, "", "frequency"], [110, 3, 1, "", "frequency_batch"], [110, 3, 1, "", "london_penetration_depth"], [110, 3, 1, "", "max_delta_s"], [110, 3, 1, "", "max_iterations"], [110, 3, 1, "", "nested_iteration"], [110, 3, 1, "", "quadratic_approximation"], [110, 3, 1, "", "second_kind_basis"], [110, 3, 1, "", "sweep_type"], [110, 3, 1, "", "tool"], [110, 3, 1, "", "use_av"]], "kqcircuits.simulations.export.export_and_run": [[111, 4, 1, "", "export_and_run"], [111, 4, 1, "", "run_export_script"], [111, 4, 1, "", "run_simulations"]], "kqcircuits.simulations.export.export_singularity": [[112, 4, 1, "", "export_singularity"]], "kqcircuits.simulations.export.remote_export_and_run": [[113, 4, 1, "", "remote_export_and_run"], [113, 4, 1, "", "remote_run_only"]], "kqcircuits.simulations.export.simulation_export": [[114, 4, 1, "", "copy_content_into_directory"], [114, 4, 1, "", "cross_combine"], [114, 4, 1, "", "cross_sweep_simulation"], [114, 4, 1, "", "cross_sweep_solution"], [114, 4, 1, "", "export_simulation_json"], [114, 4, 1, "", "export_simulation_oas"], [114, 4, 1, "", "get_combined_parameters"], [114, 4, 1, "", "get_post_process_command_lines"], [114, 4, 1, "", "sweep_simulation"], [114, 4, 1, "", "sweep_solution"]], "kqcircuits.simulations.export.simulation_validate": [[115, 6, 1, "", "ValidateSimError"], [115, 4, 1, "", "flux_integration_layer_exists_if_needed"], [115, 4, 1, "", "get_port_names"], [115, 4, 1, "", "has_edgeport_when_forbidden"], [115, 4, 1, "", "has_no_ports_when_required"], [115, 4, 1, "", "simulation_and_solution_types_match"], [115, 4, 1, "", "validate_simulation"]], "kqcircuits.simulations.export.solution": [[116, 1, 1, "", "Solution"]], "kqcircuits.simulations.export.solution.Solution": [[116, 2, 1, "", "get_parameters"], [116, 3, 1, "", "name"]], "kqcircuits.simulations.export.sonnet": [[118, 0, 0, "-", "parser"], [119, 0, 0, "-", "sonnet_export"]], "kqcircuits.simulations.export.sonnet.parser": [[118, 4, 1, "", "apply_template"], [118, 4, 1, "", "box"], [118, 4, 1, "", "control"], [118, 4, 1, "", "polygon_head"], [118, 4, 1, "", "polygons"], [118, 4, 1, "", "port"], [118, 4, 1, "", "refplane"], [118, 4, 1, "", "refplanes"], [118, 4, 1, "", "symmetry"], [118, 4, 1, "", "via"]], "kqcircuits.simulations.export.sonnet.sonnet_export": [[119, 4, 1, "", "export_sonnet"], [119, 4, 1, "", "export_sonnet_son"], [119, 4, 1, "", "poly_and_edge_indices"]], "kqcircuits.simulations.export.util": [[120, 4, 1, "", "export_layers"], [120, 4, 1, "", "find_edge_from_point_in_cell"], [120, 4, 1, "", "find_edge_from_point_in_polygons"], [120, 4, 1, "", "get_enclosing_polygon"]], "kqcircuits.simulations.export.xsection": [[122, 0, 0, "-", "epr_correction_export"], [123, 0, 0, "-", "xsection_export"]], "kqcircuits.simulations.export.xsection.epr_correction_export": [[122, 4, 1, "", "get_epr_correction_elmer_solution"], [122, 4, 1, "", "get_epr_correction_simulations"]], "kqcircuits.simulations.export.xsection.xsection_export": [[123, 4, 1, "", "create_xsections_from_simulations"], [123, 4, 1, "", "find_layer_by_name"], [123, 4, 1, "", "free_layer_slots"], [123, 4, 1, "", "separate_signal_layer_shapes"], [123, 4, 1, "", "visualise_xsection_cut_on_original_layout"], [123, 4, 1, "", "xsection_call"]], "kqcircuits.simulations.partition_region": [[124, 1, 1, "", "PartitionRegion"], [124, 4, 1, "", "get_list_of_two"]], "kqcircuits.simulations.partition_region.PartitionRegion": [[124, 2, 1, "", "limit_box"], [124, 2, 1, "", "limit_face"]], "kqcircuits.simulations.port": [[125, 1, 1, "", "EdgePort"], [125, 1, 1, "", "InternalPort"], [125, 1, 1, "", "Port"]], "kqcircuits.simulations.port.InternalPort": [[125, 2, 1, "", "get_etch_polygon"]], "kqcircuits.simulations.port.Port": [[125, 2, 1, "", "as_dict"]], "kqcircuits.simulations.post_process": [[126, 1, 1, "", "PostProcess"]], "kqcircuits.simulations.post_process.PostProcess": [[126, 2, 1, "", "get_command_line"]], "kqcircuits.simulations.simulation": [[127, 1, 1, "", "Simulation"], [127, 4, 1, "", "get_simulation_layer_by_name"], [127, 4, 1, "", "to_1d_list"]], "kqcircuits.simulations.simulation.Simulation": [[127, 3, 1, "", "LIBRARY_NAME"], [127, 2, 1, "", "add_element"], [127, 2, 1, "", "build"], [127, 2, 1, "", "create_simulation_layers"], [127, 2, 1, "", "delete_instances"], [127, 2, 1, "", "etched_line"], [127, 2, 1, "", "face"], [127, 2, 1, "", "face_stack_list_of_lists"], [127, 2, 1, "", "face_z_levels"], [127, 2, 1, "", "from_cell"], [127, 2, 1, "", "get_layer"], [127, 2, 1, "", "get_layers"], [127, 2, 1, "", "get_parameters"], [127, 2, 1, "", "get_partition_regions"], [127, 2, 1, "", "get_port_data"], [127, 2, 1, "", "get_refpoints"], [127, 2, 1, "", "get_schema"], [127, 2, 1, "", "get_simulation_data"], [127, 2, 1, "", "ground_grid_region"], [127, 2, 1, "", "insert_cell"], [127, 2, 1, "", "insert_layer"], [127, 2, 1, "", "insert_layers_between_faces"], [127, 2, 1, "", "insert_stacked_up_layers"], [127, 2, 1, "", "ith_value"], [127, 2, 1, "", "pcell_params_by_name"], [127, 3, 1, "", "ports"], [127, 2, 1, "", "produce_layers"], [127, 2, 1, "", "produce_waveguide_to_port"], [127, 2, 1, "", "region_from_layer"], [127, 2, 1, "", "simplified_region"], [127, 2, 1, "", "visualise_region"]], "kqcircuits.simulations.single_element_simulation": [[128, 4, 1, "", "get_single_element_sim_class"]], "kqcircuits.simulations.single_xmons_full_chip_sim": [[129, 1, 1, "", "SingleXmonsFullChipSim"]], "kqcircuits.simulations.single_xmons_full_chip_sim.SingleXmonsFullChipSim": [[129, 2, 1, "", "build"]], "kqcircuits.simulations.waveguides_sim": [[130, 1, 1, "", "WaveGuidesSim"]], "kqcircuits.simulations.waveguides_sim.WaveGuidesSim": [[130, 2, 1, "", "build"], [130, 2, 1, "", "produce_ground_bumps"], [130, 2, 1, "", "produce_guides"]], "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim": [[131, 1, 1, "", "XMonsDirectCouplingFullChipSim"]], "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim": [[131, 2, 1, "", "build"], [131, 2, 1, "", "produce_launcher"], [131, 2, 1, "", "produce_launchers_SMA8"], [131, 2, 1, "", "produce_qubit"], [131, 2, 1, "", "produce_readout_resonator"], [131, 2, 1, "", "produce_waveguide"]], "kqcircuits.simulations.xmons_direct_coupling_sim": [[132, 1, 1, "", "XMonsDirectCouplingSim"]], "kqcircuits.simulations.xmons_direct_coupling_sim.XMonsDirectCouplingSim": [[132, 2, 1, "", "build"], [132, 2, 1, "", "produce_qubits"]], "kqcircuits.test_structures": [[134, 0, 0, "-", "airbridge_dc"], [135, 0, 0, "-", "cross_test"], [136, 0, 0, "-", "junction_test_pads"], [139, 0, 0, "-", "stripes_test"], [140, 0, 0, "-", "stripes_test_increasing_width"], [141, 0, 0, "-", "test_structure"], [142, 0, 0, "-", "tsv_test_pattern"]], "kqcircuits.test_structures.airbridge_dc": [[134, 1, 1, "", "AirbridgeDC"]], "kqcircuits.test_structures.airbridge_dc.AirbridgeDC": [[134, 2, 1, "", "build"]], "kqcircuits.test_structures.cross_test": [[135, 1, 1, "", "CrossTest"]], "kqcircuits.test_structures.cross_test.CrossTest": [[135, 2, 1, "", "build"]], "kqcircuits.test_structures.junction_test_pads": [[137, 0, 0, "-", "junction_test_pads"], [138, 0, 0, "-", "junction_test_pads_simple"]], "kqcircuits.test_structures.junction_test_pads.junction_test_pads": [[137, 1, 1, "", "JunctionTestPads"]], "kqcircuits.test_structures.junction_test_pads.junction_test_pads.JunctionTestPads": [[137, 2, 1, "", "coerce_parameters_impl"], [137, 2, 1, "", "create"], [137, 3, 1, "", "default_type"], [137, 2, 1, "", "produce_squid"]], "kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple": [[138, 1, 1, "", "JunctionTestPadsSimple"]], "kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple.JunctionTestPadsSimple": [[138, 2, 1, "", "build"]], "kqcircuits.test_structures.stripes_test": [[139, 1, 1, "", "StripesTest"]], "kqcircuits.test_structures.stripes_test.StripesTest": [[139, 2, 1, "", "build"]], "kqcircuits.test_structures.stripes_test_increasing_width": [[140, 1, 1, "", "StripesTestIncreasingWidth"]], "kqcircuits.test_structures.stripes_test_increasing_width.StripesTestIncreasingWidth": [[140, 2, 1, "", "build"]], "kqcircuits.test_structures.test_structure": [[141, 1, 1, "", "TestStructure"]], "kqcircuits.test_structures.test_structure.TestStructure": [[141, 3, 1, "", "LIBRARY_DESCRIPTION"], [141, 3, 1, "", "LIBRARY_NAME"], [141, 3, 1, "", "LIBRARY_PATH"], [141, 2, 1, "", "produce_etched_region"], [141, 2, 1, "", "produce_four_point_pads"], [141, 2, 1, "", "produce_pad"]], "kqcircuits.test_structures.tsv_test_pattern": [[142, 1, 1, "", "TsvTestPattern"]], "kqcircuits.test_structures.tsv_test_pattern.TsvTestPattern": [[142, 2, 1, "", "build"]], "kqcircuits.util": [[144, 0, 0, "-", "area"], [145, 0, 0, "-", "count_instances"], [146, 0, 0, "-", "coupler_lib"], [147, 0, 0, "-", "deep_delete"], [148, 0, 0, "-", "defaults_helper"], [149, 0, 0, "-", "dependencies"], [150, 0, 0, "-", "edit_node_plugin"], [151, 0, 0, "-", "export_helper"], [152, 0, 0, "-", "geometry_helper"], [153, 0, 0, "-", "geometry_json_encoder"], [154, 0, 0, "-", "groundgrid"], [155, 0, 0, "-", "gui_helper"], [156, 0, 0, "-", "import_helper"], [157, 0, 0, "-", "label"], [158, 0, 0, "-", "label_polygons"], [159, 0, 0, "-", "layout_to_code"], [160, 0, 0, "-", "library_helper"], [161, 0, 0, "-", "log_router"], [162, 0, 0, "-", "merge"], [163, 0, 0, "-", "netlist_extraction"], [164, 0, 0, "-", "netlist_graph"], [165, 0, 0, "-", "parameters"], [166, 0, 0, "-", "plugin_startup"], [167, 0, 0, "-", "refpoints"], [168, 0, 0, "-", "replace_junctions"], [169, 0, 0, "-", "symmetric_polygons"]], "kqcircuits.util.area": [[144, 1, 1, "", "AreaReceiver"], [144, 4, 1, "", "get_area_and_density"]], "kqcircuits.util.area.AreaReceiver": [[144, 2, 1, "", "put"]], "kqcircuits.util.count_instances": [[145, 4, 1, "", "count_instances_in_cell"]], "kqcircuits.util.coupler_lib": [[146, 4, 1, "", "cap_params"]], "kqcircuits.util.deep_delete": [[147, 4, 1, "", "deep_delete_all"], [147, 4, 1, "", "deep_delete_pcells"]], "kqcircuits.util.defaults_helper": [[148, 4, 1, "", "find_ansys_executable"]], "kqcircuits.util.dependencies": [[149, 4, 1, "", "install_kqc_gui_dependencies"]], "kqcircuits.util.edit_node_plugin": [[150, 1, 1, "", "EditNodePlugin"], [150, 1, 1, "", "EditNodePluginFactory"]], "kqcircuits.util.edit_node_plugin.EditNodePlugin": [[150, 2, 1, "", "activated"], [150, 2, 1, "", "create_dialog"], [150, 2, 1, "", "deactivated"], [150, 2, 1, "", "deselect"], [150, 2, 1, "", "has_tracking_position"], [150, 2, 1, "", "mouse_click_event"], [150, 2, 1, "", "mouse_moved_event"], [150, 2, 1, "", "select"], [150, 2, 1, "", "tracking_position"], [150, 2, 1, "", "update"], [150, 2, 1, "", "update_form_from_node"], [150, 2, 1, "", "update_node_from_form"]], "kqcircuits.util.edit_node_plugin.EditNodePluginFactory": [[150, 2, 1, "", "create_plugin"]], "kqcircuits.util.export_helper": [[151, 4, 1, "", "create_or_empty_tmp_directory"], [151, 4, 1, "", "export_drc_report"], [151, 4, 1, "", "generate_probepoints_from_file"], [151, 4, 1, "", "generate_probepoints_json"], [151, 4, 1, "", "get_active_or_new_layout"], [151, 4, 1, "", "get_klayout_version"], [151, 4, 1, "", "get_simulation_directory"], [151, 4, 1, "", "open_with_klayout_or_default_application"], [151, 4, 1, "", "write_commit_reference_file"], [151, 4, 1, "", "write_export_machine_versions_file"]], "kqcircuits.util.geometry_helper": [[152, 4, 1, "", "arc_points"], [152, 4, 1, "", "bezier_points"], [152, 4, 1, "", "bspline_points"], [152, 4, 1, "", "circle_polygon"], [152, 4, 1, "", "get_angle"], [152, 4, 1, "", "get_cell_path_length"], [152, 4, 1, "", "get_direction"], [152, 4, 1, "", "get_object_path_length"], [152, 4, 1, "", "is_clockwise"], [152, 4, 1, "", "merge_points_and_match_on_edges"], [152, 4, 1, "", "point_shift_along_vector"], [152, 4, 1, "", "region_with_merged_points"], [152, 4, 1, "", "region_with_merged_polygons"], [152, 4, 1, "", "round_dpath_width"], [152, 4, 1, "", "simple_region"], [152, 4, 1, "", "vector_length_and_direction"]], "kqcircuits.util.geometry_json_encoder": [[153, 1, 1, "", "GeometryJsonDecoder"], [153, 1, 1, "", "GeometryJsonEncoder"], [153, 4, 1, "", "decode_dict_as_python_obj"], [153, 4, 1, "", "encode_python_obj_as_dict"]], "kqcircuits.util.geometry_json_encoder.GeometryJsonEncoder": [[153, 2, 1, "", "default"]], "kqcircuits.util.groundgrid": [[154, 4, 1, "", "make_grid"]], "kqcircuits.util.gui_helper": [[155, 4, 1, "", "get_all_node_elements"], [155, 4, 1, "", "get_nodes_near_position"], [155, 4, 1, "", "get_valid_node_elements"], [155, 4, 1, "", "node_from_text"], [155, 4, 1, "", "node_to_text"], [155, 4, 1, "", "replace_node"]], "kqcircuits.util.import_helper": [[156, 4, 1, "", "module_from_file"]], "kqcircuits.util.label": [[157, 1, 1, "", "LabelOrigin"], [157, 4, 1, "", "produce_label"]], "kqcircuits.util.label.LabelOrigin": [[157, 3, 1, "", "BOTTOMLEFT"], [157, 3, 1, "", "BOTTOMRIGHT"], [157, 3, 1, "", "TOPLEFT"], [157, 3, 1, "", "TOPRIGHT"]], "kqcircuits.util.label_polygons": [[158, 4, 1, "", "get_text_polygon"], [158, 4, 1, "", "load_font_polygons"]], "kqcircuits.util.layout_to_code": [[159, 4, 1, "", "convert_cells_to_code"], [159, 4, 1, "", "extract_pcell_data_from_views"], [159, 4, 1, "", "get_node_params"], [159, 4, 1, "", "restore_pcells_to_views"]], "kqcircuits.util.library_helper": [[160, 4, 1, "", "delete_all_libraries"], [160, 4, 1, "", "delete_library"], [160, 4, 1, "", "element_by_class_name"], [160, 4, 1, "", "get_library_paths"], [160, 4, 1, "", "load_libraries"], [160, 4, 1, "", "to_library_name"], [160, 4, 1, "", "to_module_name"]], "kqcircuits.util.log_router": [[161, 4, 1, "", "route_log"]], "kqcircuits.util.merge": [[162, 4, 1, "", "convert_child_instances_to_static"], [162, 4, 1, "", "merge_layers"], [162, 4, 1, "", "merge_layout_layers_on_face"]], "kqcircuits.util.netlist_extraction": [[163, 4, 1, "", "export_cell_netlist"], [163, 4, 1, "", "extract_circuits"], [163, 4, 1, "", "extract_nets"]], "kqcircuits.util.netlist_graph": [[164, 4, 1, "", "draw_graph"], [164, 4, 1, "", "network_as_graph"]], "kqcircuits.util.parameters": [[165, 1, 1, "", "Param"], [165, 4, 1, "", "add_parameter"], [165, 4, 1, "", "add_parameters_from"], [165, 1, 1, "", "pdt"]], "kqcircuits.util.parameters.Param": [[165, 2, 1, "", "get_all"]], "kqcircuits.util.parameters.pdt": [[165, 3, 1, "", "TypeBoolean"], [165, 3, 1, "", "TypeDouble"], [165, 3, 1, "", "TypeInt"], [165, 3, 1, "", "TypeLayer"], [165, 3, 1, "", "TypeList"], [165, 3, 1, "", "TypeNone"], [165, 3, 1, "", "TypeShape"], [165, 3, 1, "", "TypeString"]], "kqcircuits.util.plugin_startup": [[166, 4, 1, "", "register_plugins"]], "kqcircuits.util.refpoints": [[167, 1, 1, "", "JunctionSimPort"], [167, 1, 1, "", "RefpointToEdgePort"], [167, 1, 1, "", "RefpointToInternalPort"], [167, 1, 1, "", "RefpointToSimPort"], [167, 1, 1, "", "Refpoints"], [167, 1, 1, "", "WaveguideToSimPort"]], "kqcircuits.util.refpoints.JunctionSimPort": [[167, 3, 1, "", "face"], [167, 3, 1, "", "floating"], [167, 3, 1, "", "other_refpoint"], [167, 3, 1, "", "refpoint"]], "kqcircuits.util.refpoints.RefpointToSimPort": [[167, 3, 1, "", "face"], [167, 3, 1, "", "refpoint"]], "kqcircuits.util.refpoints.Refpoints": [[167, 3, 1, "", "cell"], [167, 2, 1, "", "dict"], [167, 2, 1, "", "items"], [167, 2, 1, "", "keys"], [167, 3, 1, "", "layer"], [167, 3, 1, "", "rec_levels"], [167, 3, 1, "", "trans"], [167, 2, 1, "", "values"]], "kqcircuits.util.refpoints.WaveguideToSimPort": [[167, 3, 1, "", "a"], [167, 3, 1, "", "airbridge"], [167, 3, 1, "", "b"], [167, 3, 1, "", "face"], [167, 3, 1, "", "over_etching"], [167, 3, 1, "", "refpoint"], [167, 3, 1, "", "side"], [167, 3, 1, "", "term1"], [167, 3, 1, "", "towards"], [167, 3, 1, "", "turn_radius"], [167, 3, 1, "", "use_internal_ports"], [167, 3, 1, "", "waveguide_length"]], "kqcircuits.util.replace_junctions": [[168, 1, 1, "", "JunctionEntry"], [168, 4, 1, "", "check_static_cell_has_junctions"], [168, 4, 1, "", "convert_cells_to_static"], [168, 4, 1, "", "copy_one_layer_of_cell"], [168, 4, 1, "", "extract_junctions"], [168, 4, 1, "", "get_tuned_junction_json"], [168, 4, 1, "", "place_junctions"], [168, 4, 1, "", "replace_squid"], [168, 4, 1, "", "replace_squids"]], "kqcircuits.util.symmetric_polygons": [[169, 4, 1, "", "polygon_with_hsym"], [169, 4, 1, "", "polygon_with_sym"], [169, 4, 1, "", "polygon_with_vsym"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function", "5": "py:property", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"about": 0, "api": 1, "document": [1, 175, 180], "modul": [1, 2, 28, 30, 40, 44, 51, 59, 69, 78, 81, 87, 95, 104, 105, 108, 117, 121, 133, 136, 143, 178], "content": [1, 2, 28, 30, 40, 44, 51, 59, 69, 78, 81, 87, 95, 104, 105, 108, 117, 121, 133, 136, 143], "kqcircuit": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 178, 182, 191], "chip": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 182, 190, 191], "airbridge_cross": 3, "airbridge_dc_test": 4, "crossing_twofac": 6, "daisy_woven": 7, "dc_test": 8, "demo": 9, "demo_twofac": 10, "empti": 11, "junction_test": 12, "junction_test2": 13, "launcher": [14, 49], "lithography_test": 15, "lithography_test_twofac": 16, "munch_qubit": 17, "quality_factor": 18, "quality_factor_twofac": 19, "sample_holder_test": 20, "shape": 21, "simpl": 22, "single_xmon": 23, "stripe": 24, "tsv_test": 25, "xmons_direct_coupl": 26, "default": 27, "element": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 172, 182, 186, 191, 196], "airbridge_connect": 29, "airbridg": [30, 31, 32, 33], "airbridge_multi_fac": 32, "airbridge_rectangular": 33, "capacitive_x_coupl": 34, "chip_fram": 35, "circular_capacitor": 36, "finger_capacitor_squar": 38, "finger_capacitor_tap": 39, "flip_chip_connector": [40, 41, 42, 43], "flip_chip_connector_dc": 42, "flip_chip_connector_rf": 43, "fluxlin": [44, 45, 46, 47], "fluxline_standard": 46, "fluxline_straight": 47, "hanger_reson": 48, "launcher_dc": 50, "marker": [51, 52, 53, 54], "marker_standard": 53, "mask_marker_fc": 54, "meander": 55, "quarter_wave_cpw_reson": 56, "smooth_capacitor": [57, 101], "spiral_resonator_polygon": 58, "tsv": [59, 60, 61, 62], "tsv_ellips": 61, "tsv_standard": 62, "waveguide_composit": 63, "waveguide_coplanar": 64, "waveguide_coplanar_curv": 65, "waveguide_coplanar_splitt": 66, "waveguide_coplanar_straight": 67, "waveguide_coplanar_tap": 68, "junction": [69, 70, 71, 72, 73, 74, 75], "manhattan": 71, "manhattan_single_junct": 72, "no_squid": 73, "sim": 74, "squid": 75, "klayout_view": 76, "layer_clust": 77, "layer_config": [78, 79, 80], "default_layer_config": 79, "example_layer_config": 80, "mask": [81, 82, 83, 84, 85, 190], "mask_export": 82, "mask_layout": 83, "mask_set": 84, "multi_face_mask_layout": 85, "pya_resolv": 86, "qubit": [87, 88, 89, 90, 91, 92, 93], "circular_transmon_single_island": 88, "concentric_transmon": 89, "double_pad": 90, "double_pads_splin": 91, "swissmon": [93, 102], "run": [94, 189, 193], "simul": [95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 192, 195, 196, 198], "airbridges_sim": 96, "cross_section_simul": 97, "empty_simul": 98, "epr": [99, 100, 101, 102, 103], "exampl": [100, 189, 191], "util": [103, 120, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 185], "export": [104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 190, 193, 194, 197], "ansi": [105, 106, 107, 197], "ansys_export": 106, "ansys_solut": 107, "elmer": [108, 109, 110, 192, 194, 197], "elmer_export": 109, "elmer_solut": 110, "export_and_run": 111, "export_singular": 112, "remote_export_and_run": 113, "simulation_export": 114, "simulation_valid": 115, "solut": 116, "sonnet": [117, 118, 119, 197], "parser": 118, "sonnet_export": 119, "xsection": [121, 122, 123, 201], "epr_correction_export": 122, "xsection_export": 123, "partition_region": 124, "port": [125, 196], "post_process": 126, "single_element_simul": 128, "single_xmons_full_chip_sim": 129, "waveguides_sim": 130, "xmons_direct_coupling_full_chip_sim": 131, "xmons_direct_coupling_sim": 132, "test_structur": [133, 134, 135, 136, 137, 138, 139, 140, 141, 142], "airbridge_dc": 134, "cross_test": 135, "junction_test_pad": [136, 137, 138], "junction_test_pads_simpl": 138, "stripes_test": 139, "stripes_test_increasing_width": 140, "tsv_test_pattern": 142, "area": 144, "count_inst": 145, "coupler_lib": 146, "deep_delet": 147, "defaults_help": 148, "depend": [149, 177, 178], "edit_node_plugin": 150, "export_help": 151, "geometry_help": 152, "geometry_json_encod": 153, "groundgrid": 154, "gui_help": 155, "import_help": 156, "label": 157, "label_polygon": 158, "layout_to_cod": 159, "library_help": 160, "log_rout": 161, "merg": 162, "netlist_extract": 163, "netlist_graph": 164, "paramet": [165, 172, 186, 191, 195], "plugin_startup": 166, "refpoint": [167, 191], "replace_junct": 168, "symmetric_polygon": 169, "cite": 170, "contribut": 171, "version": [171, 181], "architectur": 172, "pcell": 172, "librari": [172, 189, 191], "pya": 172, "resolv": 172, "code": [173, 186, 191, 201], "style": 173, "contain": 174, "cli": 174, "usag": [174, 178, 200], "docker": 174, "ci": 174, "singular": 174, "develop": [176, 177, 178, 189], "guid": [176, 188], "gui": [177, 186, 197, 201], "setup": [177, 178], "prerequisit": [177, 178], "python": [177, 178, 181, 191], "sourc": 177, "instal": [177, 178, 181, 182], "unlink": 177, "updat": [177, 178], "secondari": 177, "manual": [177, 181], "symlink": 177, "linux": 177, "maco": 177, "window": 177, "standalon": 178, "1": 178, "basic": [178, 190], "2": 178, "reproduc": 178, "secur": 178, "3": 178, "exclus": 178, "environ": 178, "extens": 178, "pypi": 178, "jupyt": 178, "notebook": 178, "requir": 178, "test": 179, "unit": 179, "kqc": [180, 201], "logo": 180, "indic": 180, "tabl": 180, "klayout": [181, 189, 197, 201], "known": 181, "issu": 181, "differ": 181, "packag": [181, 182], "get": 182, "start": 182, "salt": 182, "first": [182, 189], "look": 182, "around": 182, "set": 182, "up": 182, "user": [182, 188], "directori": 182, "defin": [182, 191], "custom": 182, "upgrad": 182, "remov": 182, "releas": 182, "note": 182, "support": 183, "trademark": 184, "gener": [185, 196], "structur": [185, 191], "miscellan": 185, "file": [185, 191, 201], "system": [185, 191], "hierarchi": [185, 191], "featur": [186, 195], "us": [186, 189], "hotkei": 186, "introduct": 186, "place": 186, "modifi": [186, 190], "waveguid": 186, "edit": 186, "waveguidecomposit": 186, "node": 186, "convert": 186, "menu": 186, "command": 186, "point": 187, "click": 187, "workflow": [187, 191, 192], "tutori": [187, 190, 191], "macro": 189, "interact": 189, "applic": 189, "creat": [189, 201], "new": [189, 191], "panel": 189, "access": 189, "current": 189, "activ": 189, "klayoutview": 189, "debugg": 189, "reload": 189, "script": 190, "ground": 190, "grid": 190, "ad": [190, 191], "multi": 190, "face": [190, 191, 196], "composit": 190, "map": 190, "class": [191, 196], "build": 191, "an": 191, "insert": 191, "samplehold": 191, "type": 191, "layer": 191, "configur": 191, "open": 191, "from": [191, 197], "id": 191, "remot": 192, "one": 193, "line": 193, "gmsh": 194, "": 195, "matrix": 195, "capacit": 195, "eigenmod": 195, "energi": 195, "integr": 195, "particip": 195, "ratio": 195, "cross": [195, 201], "section": [195, 201], "pyepr": 195, "object": 196, "The": 196, "box": 196, "stack": 196, "subclass": 196, "singl": 196, "geometri": [196, 197], "sweep": 196, "function": 197, "extern": 198, "tool": [198, 201], "terminologi": 199, "imag": 201, "call": 201, "process": 201, "x": 201}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"About": [[0, "about"]], "API documentation": [[1, "api-documentation"]], "Module contents": [[1, "module-kqcircuits"], [2, "module-kqcircuits.chips"], [28, "module-kqcircuits.elements"], [30, "module-kqcircuits.elements.airbridges"], [40, "module-kqcircuits.elements.flip_chip_connectors"], [44, "module-kqcircuits.elements.fluxlines"], [51, "module-kqcircuits.elements.markers"], [59, "module-kqcircuits.elements.tsvs"], [69, "module-kqcircuits.junctions"], [78, "module-kqcircuits.layer_config"], [81, "module-kqcircuits.masks"], [87, "module-kqcircuits.qubits"], [95, "module-kqcircuits.simulations"], [104, "module-kqcircuits.simulations.export"], [105, "module-kqcircuits.simulations.export.ansys"], [108, "module-kqcircuits.simulations.export.elmer"], [117, "module-kqcircuits.simulations.export.sonnet"], [121, "module-kqcircuits.simulations.export.xsection"], [133, "module-kqcircuits.test_structures"], [136, "module-kqcircuits.test_structures.junction_test_pads"], [143, "module-kqcircuits.util"]], "kqcircuits.chips": [[2, "kqcircuits-chips"]], "kqcircuits.chips.airbridge_crossings": [[3, "module-kqcircuits.chips.airbridge_crossings"]], "kqcircuits.chips.airbridge_dc_test": [[4, "module-kqcircuits.chips.airbridge_dc_test"]], "kqcircuits.chips.chip": [[5, "module-kqcircuits.chips.chip"]], "kqcircuits.chips.crossing_twoface": [[6, "module-kqcircuits.chips.crossing_twoface"]], "kqcircuits.chips.daisy_woven": [[7, "module-kqcircuits.chips.daisy_woven"]], "kqcircuits.chips.dc_test": [[8, "module-kqcircuits.chips.dc_test"]], "kqcircuits.chips.demo": [[9, "module-kqcircuits.chips.demo"]], "kqcircuits.chips.demo_twoface": [[10, "module-kqcircuits.chips.demo_twoface"]], "kqcircuits.chips.empty": [[11, "module-kqcircuits.chips.empty"]], "kqcircuits.chips.junction_test": [[12, "module-kqcircuits.chips.junction_test"]], "kqcircuits.chips.junction_test2": [[13, "module-kqcircuits.chips.junction_test2"]], "kqcircuits.chips.launchers": [[14, "module-kqcircuits.chips.launchers"]], "kqcircuits.chips.lithography_test": [[15, "module-kqcircuits.chips.lithography_test"]], "kqcircuits.chips.lithography_test_twoface": [[16, "module-kqcircuits.chips.lithography_test_twoface"]], "kqcircuits.chips.munch_qubits": [[17, "module-kqcircuits.chips.munch_qubits"]], "kqcircuits.chips.quality_factor": [[18, "module-kqcircuits.chips.quality_factor"]], "kqcircuits.chips.quality_factor_twoface": [[19, "module-kqcircuits.chips.quality_factor_twoface"]], "kqcircuits.chips.sample_holder_test": [[20, "module-kqcircuits.chips.sample_holder_test"]], "kqcircuits.chips.shaping": [[21, "module-kqcircuits.chips.shaping"]], "kqcircuits.chips.simple": [[22, "module-kqcircuits.chips.simple"]], "kqcircuits.chips.single_xmons": [[23, "module-kqcircuits.chips.single_xmons"]], "kqcircuits.chips.stripes": [[24, "module-kqcircuits.chips.stripes"]], "kqcircuits.chips.tsv_test": [[25, "module-kqcircuits.chips.tsv_test"]], "kqcircuits.chips.xmons_direct_coupling": [[26, "module-kqcircuits.chips.xmons_direct_coupling"]], "kqcircuits.defaults": [[27, "module-kqcircuits.defaults"]], "kqcircuits.elements": [[28, "kqcircuits-elements"]], "kqcircuits.elements.airbridge_connection": [[29, "module-kqcircuits.elements.airbridge_connection"]], "kqcircuits.elements.airbridges": [[30, "kqcircuits-elements-airbridges"]], "kqcircuits.elements.airbridges.airbridge": [[31, "module-kqcircuits.elements.airbridges.airbridge"]], "kqcircuits.elements.airbridges.airbridge_multi_face": [[32, "module-kqcircuits.elements.airbridges.airbridge_multi_face"]], "kqcircuits.elements.airbridges.airbridge_rectangular": [[33, "module-kqcircuits.elements.airbridges.airbridge_rectangular"]], "kqcircuits.elements.capacitive_x_coupler": [[34, "module-kqcircuits.elements.capacitive_x_coupler"]], "kqcircuits.elements.chip_frame": [[35, "module-kqcircuits.elements.chip_frame"]], "kqcircuits.elements.circular_capacitor": [[36, "module-kqcircuits.elements.circular_capacitor"]], "kqcircuits.elements.element": [[37, "module-kqcircuits.elements.element"]], "kqcircuits.elements.finger_capacitor_square": [[38, "module-kqcircuits.elements.finger_capacitor_square"]], "kqcircuits.elements.finger_capacitor_taper": [[39, "module-kqcircuits.elements.finger_capacitor_taper"]], "kqcircuits.elements.flip_chip_connectors": [[40, "kqcircuits-elements-flip-chip-connectors"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector": [[41, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc": [[42, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf": [[43, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf"]], "kqcircuits.elements.fluxlines": [[44, "kqcircuits-elements-fluxlines"]], "kqcircuits.elements.fluxlines.fluxline": [[45, "module-kqcircuits.elements.fluxlines.fluxline"]], "kqcircuits.elements.fluxlines.fluxline_standard": [[46, "module-kqcircuits.elements.fluxlines.fluxline_standard"]], "kqcircuits.elements.fluxlines.fluxline_straight": [[47, "module-kqcircuits.elements.fluxlines.fluxline_straight"]], "kqcircuits.elements.hanger_resonator": [[48, "module-kqcircuits.elements.hanger_resonator"]], "kqcircuits.elements.launcher": [[49, "module-kqcircuits.elements.launcher"]], "kqcircuits.elements.launcher_dc": [[50, "module-kqcircuits.elements.launcher_dc"]], "kqcircuits.elements.markers": [[51, "kqcircuits-elements-markers"]], "kqcircuits.elements.markers.marker": [[52, "module-kqcircuits.elements.markers.marker"]], "kqcircuits.elements.markers.marker_standard": [[53, "module-kqcircuits.elements.markers.marker_standard"]], "kqcircuits.elements.markers.mask_marker_fc": [[54, "module-kqcircuits.elements.markers.mask_marker_fc"]], "kqcircuits.elements.meander": [[55, "module-kqcircuits.elements.meander"]], "kqcircuits.elements.quarter_wave_cpw_resonator": [[56, "module-kqcircuits.elements.quarter_wave_cpw_resonator"]], "kqcircuits.elements.smooth_capacitor": [[57, "module-kqcircuits.elements.smooth_capacitor"]], "kqcircuits.elements.spiral_resonator_polygon": [[58, "module-kqcircuits.elements.spiral_resonator_polygon"]], "kqcircuits.elements.tsvs": [[59, "kqcircuits-elements-tsvs"]], "kqcircuits.elements.tsvs.tsv": [[60, "module-kqcircuits.elements.tsvs.tsv"]], "kqcircuits.elements.tsvs.tsv_ellipse": [[61, "module-kqcircuits.elements.tsvs.tsv_ellipse"]], "kqcircuits.elements.tsvs.tsv_standard": [[62, "module-kqcircuits.elements.tsvs.tsv_standard"]], "kqcircuits.elements.waveguide_composite": [[63, "module-kqcircuits.elements.waveguide_composite"]], "kqcircuits.elements.waveguide_coplanar": [[64, "module-kqcircuits.elements.waveguide_coplanar"]], "kqcircuits.elements.waveguide_coplanar_curved": [[65, "module-kqcircuits.elements.waveguide_coplanar_curved"]], "kqcircuits.elements.waveguide_coplanar_splitter": [[66, "module-kqcircuits.elements.waveguide_coplanar_splitter"]], "kqcircuits.elements.waveguide_coplanar_straight": [[67, "module-kqcircuits.elements.waveguide_coplanar_straight"]], "kqcircuits.elements.waveguide_coplanar_taper": [[68, "module-kqcircuits.elements.waveguide_coplanar_taper"]], "kqcircuits.junctions": [[69, "kqcircuits-junctions"]], "kqcircuits.junctions.junction": [[70, "module-kqcircuits.junctions.junction"]], "kqcircuits.junctions.manhattan": [[71, "module-kqcircuits.junctions.manhattan"]], "kqcircuits.junctions.manhattan_single_junction": [[72, "module-kqcircuits.junctions.manhattan_single_junction"]], "kqcircuits.junctions.no_squid": [[73, "module-kqcircuits.junctions.no_squid"]], "kqcircuits.junctions.sim": [[74, "module-kqcircuits.junctions.sim"]], "kqcircuits.junctions.squid": [[75, "module-kqcircuits.junctions.squid"]], "kqcircuits.klayout_view": [[76, "module-kqcircuits.klayout_view"]], "kqcircuits.layer_cluster": [[77, "module-kqcircuits.layer_cluster"]], "kqcircuits.layer_config": [[78, "kqcircuits-layer-config"]], "kqcircuits.layer_config.default_layer_config": [[79, "module-kqcircuits.layer_config.default_layer_config"]], "kqcircuits.layer_config.example_layer_config": [[80, "module-kqcircuits.layer_config.example_layer_config"]], "kqcircuits.masks": [[81, "kqcircuits-masks"]], "kqcircuits.masks.mask_export": [[82, "module-kqcircuits.masks.mask_export"]], "kqcircuits.masks.mask_layout": [[83, "module-kqcircuits.masks.mask_layout"]], "kqcircuits.masks.mask_set": [[84, "module-kqcircuits.masks.mask_set"]], "kqcircuits.masks.multi_face_mask_layout": [[85, "module-kqcircuits.masks.multi_face_mask_layout"]], "kqcircuits.pya_resolver": [[86, "module-kqcircuits.pya_resolver"]], "kqcircuits.qubits": [[87, "kqcircuits-qubits"]], "kqcircuits.qubits.circular_transmon_single_island": [[88, "module-kqcircuits.qubits.circular_transmon_single_island"]], "kqcircuits.qubits.concentric_transmon": [[89, "module-kqcircuits.qubits.concentric_transmon"]], "kqcircuits.qubits.double_pads": [[90, "module-kqcircuits.qubits.double_pads"]], "kqcircuits.qubits.double_pads_splines": [[91, "module-kqcircuits.qubits.double_pads_splines"]], "kqcircuits.qubits.qubit": [[92, "module-kqcircuits.qubits.qubit"]], "kqcircuits.qubits.swissmon": [[93, "module-kqcircuits.qubits.swissmon"]], "kqcircuits.run": [[94, "module-kqcircuits.run"]], "kqcircuits.simulations": [[95, "kqcircuits-simulations"]], "kqcircuits.simulations.airbridges_sim": [[96, "module-kqcircuits.simulations.airbridges_sim"]], "kqcircuits.simulations.cross_section_simulation": [[97, "module-kqcircuits.simulations.cross_section_simulation"]], "kqcircuits.simulations.empty_simulation": [[98, "module-kqcircuits.simulations.empty_simulation"]], "kqcircuits.simulations.epr": [[99, "kqcircuits-simulations-epr"]], "kqcircuits.simulations.epr.example": [[100, "module-kqcircuits.simulations.epr.example"]], "kqcircuits.simulations.epr.smooth_capacitor": [[101, "module-kqcircuits.simulations.epr.smooth_capacitor"]], "kqcircuits.simulations.epr.swissmon": [[102, "module-kqcircuits.simulations.epr.swissmon"]], "kqcircuits.simulations.epr.utils": [[103, "module-kqcircuits.simulations.epr.utils"]], "kqcircuits.simulations.export": [[104, "kqcircuits-simulations-export"]], "kqcircuits.simulations.export.ansys": [[105, "kqcircuits-simulations-export-ansys"]], "kqcircuits.simulations.export.ansys.ansys_export": [[106, "module-kqcircuits.simulations.export.ansys.ansys_export"]], "kqcircuits.simulations.export.ansys.ansys_solution": [[107, "module-kqcircuits.simulations.export.ansys.ansys_solution"]], "kqcircuits.simulations.export.elmer": [[108, "kqcircuits-simulations-export-elmer"]], "kqcircuits.simulations.export.elmer.elmer_export": [[109, "module-kqcircuits.simulations.export.elmer.elmer_export"]], "kqcircuits.simulations.export.elmer.elmer_solution": [[110, "module-kqcircuits.simulations.export.elmer.elmer_solution"]], "kqcircuits.simulations.export.export_and_run": [[111, "module-kqcircuits.simulations.export.export_and_run"]], "kqcircuits.simulations.export.export_singularity": [[112, "module-kqcircuits.simulations.export.export_singularity"]], "kqcircuits.simulations.export.remote_export_and_run": [[113, "module-kqcircuits.simulations.export.remote_export_and_run"]], "kqcircuits.simulations.export.simulation_export": [[114, "module-kqcircuits.simulations.export.simulation_export"]], "kqcircuits.simulations.export.simulation_validate": [[115, "module-kqcircuits.simulations.export.simulation_validate"]], "kqcircuits.simulations.export.solution": [[116, "module-kqcircuits.simulations.export.solution"]], "kqcircuits.simulations.export.sonnet": [[117, "kqcircuits-simulations-export-sonnet"]], "kqcircuits.simulations.export.sonnet.parser": [[118, "module-kqcircuits.simulations.export.sonnet.parser"]], "kqcircuits.simulations.export.sonnet.sonnet_export": [[119, "module-kqcircuits.simulations.export.sonnet.sonnet_export"]], "kqcircuits.simulations.export.util": [[120, "module-kqcircuits.simulations.export.util"]], "kqcircuits.simulations.export.xsection": [[121, "kqcircuits-simulations-export-xsection"]], "kqcircuits.simulations.export.xsection.epr_correction_export": [[122, "module-kqcircuits.simulations.export.xsection.epr_correction_export"]], "kqcircuits.simulations.export.xsection.xsection_export": [[123, "module-kqcircuits.simulations.export.xsection.xsection_export"]], "kqcircuits.simulations.partition_region": [[124, "module-kqcircuits.simulations.partition_region"]], "kqcircuits.simulations.port": [[125, "module-kqcircuits.simulations.port"]], "kqcircuits.simulations.post_process": [[126, "module-kqcircuits.simulations.post_process"]], "kqcircuits.simulations.simulation": [[127, "module-kqcircuits.simulations.simulation"]], "kqcircuits.simulations.single_element_simulation": [[128, "module-kqcircuits.simulations.single_element_simulation"]], "kqcircuits.simulations.single_xmons_full_chip_sim": [[129, "module-kqcircuits.simulations.single_xmons_full_chip_sim"]], "kqcircuits.simulations.waveguides_sim": [[130, "module-kqcircuits.simulations.waveguides_sim"]], "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim": [[131, "module-kqcircuits.simulations.xmons_direct_coupling_full_chip_sim"]], "kqcircuits.simulations.xmons_direct_coupling_sim": [[132, "module-kqcircuits.simulations.xmons_direct_coupling_sim"]], "kqcircuits.test_structures": [[133, "kqcircuits-test-structures"]], "kqcircuits.test_structures.airbridge_dc": [[134, "module-kqcircuits.test_structures.airbridge_dc"]], "kqcircuits.test_structures.cross_test": [[135, "module-kqcircuits.test_structures.cross_test"]], "kqcircuits.test_structures.junction_test_pads": [[136, "kqcircuits-test-structures-junction-test-pads"]], "kqcircuits.test_structures.junction_test_pads.junction_test_pads": [[137, "module-kqcircuits.test_structures.junction_test_pads.junction_test_pads"]], "kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple": [[138, "module-kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple"]], "kqcircuits.test_structures.stripes_test": [[139, "module-kqcircuits.test_structures.stripes_test"]], "kqcircuits.test_structures.stripes_test_increasing_width": [[140, "module-kqcircuits.test_structures.stripes_test_increasing_width"]], "kqcircuits.test_structures.test_structure": [[141, "module-kqcircuits.test_structures.test_structure"]], "kqcircuits.test_structures.tsv_test_pattern": [[142, "module-kqcircuits.test_structures.tsv_test_pattern"]], "kqcircuits.util": [[143, "kqcircuits-util"]], "kqcircuits.util.area": [[144, "module-kqcircuits.util.area"]], "kqcircuits.util.count_instances": [[145, "module-kqcircuits.util.count_instances"]], "kqcircuits.util.coupler_lib": [[146, "module-kqcircuits.util.coupler_lib"]], "kqcircuits.util.deep_delete": [[147, "module-kqcircuits.util.deep_delete"]], "kqcircuits.util.defaults_helper": [[148, "module-kqcircuits.util.defaults_helper"]], "kqcircuits.util.dependencies": [[149, "module-kqcircuits.util.dependencies"]], "kqcircuits.util.edit_node_plugin": [[150, "module-kqcircuits.util.edit_node_plugin"]], "kqcircuits.util.export_helper": [[151, "module-kqcircuits.util.export_helper"]], "kqcircuits.util.geometry_helper": [[152, "module-kqcircuits.util.geometry_helper"]], "kqcircuits.util.geometry_json_encoder": [[153, "module-kqcircuits.util.geometry_json_encoder"]], "kqcircuits.util.groundgrid": [[154, "module-kqcircuits.util.groundgrid"]], "kqcircuits.util.gui_helper": [[155, "module-kqcircuits.util.gui_helper"]], "kqcircuits.util.import_helper": [[156, "module-kqcircuits.util.import_helper"]], "kqcircuits.util.label": [[157, "module-kqcircuits.util.label"]], "kqcircuits.util.label_polygons": [[158, "module-kqcircuits.util.label_polygons"]], "kqcircuits.util.layout_to_code": [[159, "module-kqcircuits.util.layout_to_code"]], "kqcircuits.util.library_helper": [[160, "module-kqcircuits.util.library_helper"]], "kqcircuits.util.log_router": [[161, "module-kqcircuits.util.log_router"]], "kqcircuits.util.merge": [[162, "module-kqcircuits.util.merge"]], "kqcircuits.util.netlist_extraction": [[163, "module-kqcircuits.util.netlist_extraction"]], "kqcircuits.util.netlist_graph": [[164, "module-kqcircuits.util.netlist_graph"]], "kqcircuits.util.parameters": [[165, "module-kqcircuits.util.parameters"]], "kqcircuits.util.plugin_startup": [[166, "module-kqcircuits.util.plugin_startup"]], "kqcircuits.util.refpoints": [[167, "module-kqcircuits.util.refpoints"]], "kqcircuits.util.replace_junctions": [[168, "module-kqcircuits.util.replace_junctions"]], "kqcircuits.util.symmetric_polygons": [[169, "module-kqcircuits.util.symmetric_polygons"]], "Citing": [[170, "citing"]], "Contributing": [[171, "contributing"]], "Versioning": [[171, "versioning"]], "Architecture": [[172, "architecture"]], "Elements": [[172, "elements"]], "PCell parameters": [[172, "pcell-parameters"]], "Libraries": [[172, "libraries"], [191, "libraries"]], "pya resolver": [[172, "pya-resolver"]], "Coding Style": [[173, "coding-style"]], "Containers": [[174, "containers"]], "CLI usage": [[174, "cli-usage"]], "Docker CI usage": [[174, "docker-ci-usage"]], "Singularity usage": [[174, "singularity-usage"]], "Documentation": [[175, "documentation"], [180, "documentation"]], "Developer Guide": [[176, "developer-guide"]], "Developer GUI Setup": [[177, "developer-gui-setup"]], "Prerequisites": [[177, "prerequisites"], [178, "prerequisites"]], "Python": [[177, "python"]], "Sources": [[177, "sources"]], "Install": [[177, "install"]], "Unlinking": [[177, "unlinking"]], "Update": [[177, "update"]], "Secondary install": [[177, "secondary-install"]], "Manual installation": [[177, "manual-installation"]], "Symlinks in Linux or MacOS": [[177, "symlinks-in-linux-or-macos"]], "Symlinks in Windows": [[177, "symlinks-in-windows"]], "Installing dependencies": [[177, "installing-dependencies"]], "Developer Standalone module Setup": [[178, "developer-standalone-module-setup"]], "Installation": [[178, "installation"], [181, "installation"]], "1. Basic installation": [[178, "basic-installation"]], "2. Reproducible, Secure Installation": [[178, "reproducible-secure-installation"]], "3. KQCircuits exclusive python environment": [[178, "kqcircuits-exclusive-python-environment"]], "Dependency extensions": [[178, "dependency-extensions"]], "PyPI Installation": [[178, "pypi-installation"]], "Usage": [[178, "usage"], [200, "usage"]], "Jupyter notebook usage": [[178, "jupyter-notebook-usage"]], "Updating the required dependencies": [[178, "updating-the-required-dependencies"]], "Testing": [[179, "testing"]], "Unit tests": [[179, "unit-tests"]], "KQC logo": [[180, "logo"]], "Indices and tables": [[180, "indices-and-tables"]], "KLayout": [[181, "klayout"]], "Known installation issues": [[181, "known-installation-issues"]], "Installing different Python package versions to KLayout manually": [[181, "installing-different-python-package-versions-to-klayout-manually"]], "Getting started (Salt package)": [[182, "getting-started-salt-package"]], "Installing KQCircuits Salt Package": [[182, "installing-kqcircuits-salt-package"]], "First look around": [[182, "first-look-around"]], "Setting up a user package directory": [[182, "setting-up-a-user-package-directory"]], "Defining a custom element": [[182, "defining-a-custom-element"]], "Defining a custom chip": [[182, "defining-a-custom-chip"]], "Upgrading or Removing Salt Package": [[182, "upgrading-or-removing-salt-package"]], "Release Notes": [[182, "release-notes"]], "Support": [[183, "support"]], "Trademarks": [[184, "trademarks"]], "General Structure and Miscellaneous Utilities": [[185, "general-structure-and-miscellaneous-utilities"]], "File system hierarchy": [[185, "file-system-hierarchy"], [191, "file-system-hierarchy"]], "Miscellaneous Utilities": [[185, "miscellaneous-utilities"]], "GUI Features": [[186, "gui-features"]], "Useful hotkeys": [[186, "useful-hotkeys"]], "Introduction to Elements": [[186, "introduction-to-elements"]], "Placing Elements": [[186, "placing-elements"]], "Modifying Element parameters": [[186, "modifying-element-parameters"]], "Modifying waveguides": [[186, "modifying-waveguides"]], "Editing WaveguideComposite Nodes": [[186, "editing-waveguidecomposite-nodes"]], "Converting elements placed in GUI into code": [[186, "converting-elements-placed-in-gui-into-code"]], "Useful Menu Commands": [[186, "useful-menu-commands"]], "Point-and-click workflow tutorial": [[187, "point-and-click-workflow-tutorial"]], "User Guide": [[188, "user-guide"]], "Macro development": [[189, "macro-development"]], "Running the first example": [[189, "running-the-first-example"]], "Interacting with the KLayout application": [[189, "interacting-with-the-klayout-application"]], "Creating a new panel": [[189, "creating-a-new-panel"]], "Accessing the currently active panel": [[189, "accessing-the-currently-active-panel"]], "Using KLayoutView": [[189, "using-klayoutview"]], "Debugger": [[189, "debugger"]], "Reloading libraries": [[189, "reloading-libraries"]], "Examples": [[189, "examples"]], "Mask export": [[190, "mask-export"]], "Tutorial": [[190, "tutorial"]], "Basic mask script and export": [[190, "basic-mask-script-and-export"]], "Ground grid": [[190, "ground-grid"]], "Adding and modifying chips": [[190, "adding-and-modifying-chips"]], "Multi-face masks": [[190, "multi-face-masks"]], "Composite mask maps": [[190, "composite-mask-maps"]], "Python workflow tutorial": [[191, "python-workflow-tutorial"]], "Structure of Element code": [[191, "structure-of-element-code"]], "Element class": [[191, "element-class"]], "Parameters": [[191, "parameters"]], "Build": [[191, "build"]], "Example of defining an Element class": [[191, "example-of-defining-an-element-class"]], "Example of defining a Chip and inserting elements into it": [[191, "example-of-defining-a-chip-and-inserting-elements-into-it"]], "Defining sampleholder types": [[191, "defining-sampleholder-types"]], "Refpoints": [[191, "refpoints"]], "KQCircuits\u2019 Layers": [[191, "kqcircuits-layers"]], "Faces": [[191, "faces"]], "Layer configuration files": [[191, "layer-configuration-files"]], "Adding a new face": [[191, "adding-a-new-face"]], "Opening Element or Chip from an IDE": [[191, "opening-element-or-chip-from-an-ide"]], "Elmer remote simulations workflow": [[192, "elmer-remote-simulations-workflow"]], "Run and export in one line": [[193, "run-and-export-in-one-line"]], "Gmsh/Elmer export": [[194, "gmsh-elmer-export"]], "Simulation features": [[195, "simulation-features"]], "S-parameter matrix": [[195, "s-parameter-matrix"]], "Capacitance matrix": [[195, "capacitance-matrix"]], "Eigenmode": [[195, "eigenmode"]], "Energy integrals and participation ratio": [[195, "energy-integrals-and-participation-ratio"]], "Cross-sectional simulations": [[195, "cross-sectional-simulations"]], "pyEPR": [[195, "pyepr"]], "Simulation objects": [[196, "simulation-objects"]], "The Simulation class": [[196, "the-simulation-class"]], "Box": [[196, "box"]], "Ports": [[196, "ports"]], "Face stack": [[196, "face-stack"]], "Simulation subclass": [[196, "simulation-subclass"]], "Single element subclass": [[196, "single-element-subclass"]], "General subclass": [[196, "general-subclass"]], "Geometry sweeps": [[196, "geometry-sweeps"]], "Export functions": [[197, "export-functions"]], "Ansys export": [[197, "ansys-export"]], "Elmer export": [[197, "elmer-export"]], "Sonnet export": [[197, "sonnet-export"]], "Geometry from Klayout GUI": [[197, "geometry-from-klayout-gui"]], "External simulation tools": [[198, "external-simulation-tools"]], "Terminology": [[199, "terminology"]], "Creating cross section images": [[201, "creating-cross-section-images"]], "KLayout GUI XSection tool": [[201, "klayout-gui-xsection-tool"]], "XSection call in KQC code": [[201, "xsection-call-in-kqc-code"]], "Process files (.xs)": [[201, "process-files-xs"]]}, "indexentries": {"kqcircuits": [[1, "module-kqcircuits"]], "module": [[1, "module-kqcircuits"], [2, "module-kqcircuits.chips"], [3, "module-kqcircuits.chips.airbridge_crossings"], [4, "module-kqcircuits.chips.airbridge_dc_test"], [5, "module-kqcircuits.chips.chip"], [6, "module-kqcircuits.chips.crossing_twoface"], [7, "module-kqcircuits.chips.daisy_woven"], [8, "module-kqcircuits.chips.dc_test"], [9, "module-kqcircuits.chips.demo"], [10, "module-kqcircuits.chips.demo_twoface"], [11, "module-kqcircuits.chips.empty"], [12, "module-kqcircuits.chips.junction_test"], [13, "module-kqcircuits.chips.junction_test2"], [14, "module-kqcircuits.chips.launchers"], [15, "module-kqcircuits.chips.lithography_test"], [16, "module-kqcircuits.chips.lithography_test_twoface"], [17, "module-kqcircuits.chips.munch_qubits"], [18, "module-kqcircuits.chips.quality_factor"], [19, "module-kqcircuits.chips.quality_factor_twoface"], [20, "module-kqcircuits.chips.sample_holder_test"], [21, "module-kqcircuits.chips.shaping"], [22, "module-kqcircuits.chips.simple"], [23, "module-kqcircuits.chips.single_xmons"], [24, "module-kqcircuits.chips.stripes"], [25, "module-kqcircuits.chips.tsv_test"], [26, "module-kqcircuits.chips.xmons_direct_coupling"], [27, "module-kqcircuits.defaults"], [28, "module-kqcircuits.elements"], [29, "module-kqcircuits.elements.airbridge_connection"], [30, "module-kqcircuits.elements.airbridges"], [31, "module-kqcircuits.elements.airbridges.airbridge"], [32, "module-kqcircuits.elements.airbridges.airbridge_multi_face"], [33, "module-kqcircuits.elements.airbridges.airbridge_rectangular"], [34, "module-kqcircuits.elements.capacitive_x_coupler"], [35, "module-kqcircuits.elements.chip_frame"], [36, "module-kqcircuits.elements.circular_capacitor"], [37, "module-kqcircuits.elements.element"], [38, "module-kqcircuits.elements.finger_capacitor_square"], [39, "module-kqcircuits.elements.finger_capacitor_taper"], [40, "module-kqcircuits.elements.flip_chip_connectors"], [41, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector"], [42, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc"], [43, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf"], [44, "module-kqcircuits.elements.fluxlines"], [45, "module-kqcircuits.elements.fluxlines.fluxline"], [46, "module-kqcircuits.elements.fluxlines.fluxline_standard"], [47, "module-kqcircuits.elements.fluxlines.fluxline_straight"], [48, "module-kqcircuits.elements.hanger_resonator"], [49, "module-kqcircuits.elements.launcher"], [50, "module-kqcircuits.elements.launcher_dc"], [51, "module-kqcircuits.elements.markers"], [52, "module-kqcircuits.elements.markers.marker"], [53, "module-kqcircuits.elements.markers.marker_standard"], [54, "module-kqcircuits.elements.markers.mask_marker_fc"], [55, "module-kqcircuits.elements.meander"], [56, "module-kqcircuits.elements.quarter_wave_cpw_resonator"], [57, "module-kqcircuits.elements.smooth_capacitor"], [58, "module-kqcircuits.elements.spiral_resonator_polygon"], [59, "module-kqcircuits.elements.tsvs"], [60, "module-kqcircuits.elements.tsvs.tsv"], [61, "module-kqcircuits.elements.tsvs.tsv_ellipse"], [62, "module-kqcircuits.elements.tsvs.tsv_standard"], [63, "module-kqcircuits.elements.waveguide_composite"], [64, "module-kqcircuits.elements.waveguide_coplanar"], [65, "module-kqcircuits.elements.waveguide_coplanar_curved"], [66, "module-kqcircuits.elements.waveguide_coplanar_splitter"], [67, "module-kqcircuits.elements.waveguide_coplanar_straight"], [68, "module-kqcircuits.elements.waveguide_coplanar_taper"], [69, "module-kqcircuits.junctions"], [70, "module-kqcircuits.junctions.junction"], [71, "module-kqcircuits.junctions.manhattan"], [72, "module-kqcircuits.junctions.manhattan_single_junction"], [73, "module-kqcircuits.junctions.no_squid"], [74, "module-kqcircuits.junctions.sim"], [75, "module-kqcircuits.junctions.squid"], [76, "module-kqcircuits.klayout_view"], [77, "module-kqcircuits.layer_cluster"], [78, "module-kqcircuits.layer_config"], [79, "module-kqcircuits.layer_config.default_layer_config"], [80, "module-kqcircuits.layer_config.example_layer_config"], [81, "module-kqcircuits.masks"], [82, "module-kqcircuits.masks.mask_export"], [83, "module-kqcircuits.masks.mask_layout"], [84, "module-kqcircuits.masks.mask_set"], [85, "module-kqcircuits.masks.multi_face_mask_layout"], [86, "module-kqcircuits.pya_resolver"], [87, "module-kqcircuits.qubits"], [88, "module-kqcircuits.qubits.circular_transmon_single_island"], [89, "module-kqcircuits.qubits.concentric_transmon"], [90, "module-kqcircuits.qubits.double_pads"], [91, "module-kqcircuits.qubits.double_pads_splines"], [92, "module-kqcircuits.qubits.qubit"], [93, "module-kqcircuits.qubits.swissmon"], [94, "module-kqcircuits.run"], [95, "module-kqcircuits.simulations"], [96, "module-kqcircuits.simulations.airbridges_sim"], [97, "module-kqcircuits.simulations.cross_section_simulation"], [98, "module-kqcircuits.simulations.empty_simulation"], [100, "module-kqcircuits.simulations.epr.example"], [101, "module-kqcircuits.simulations.epr.smooth_capacitor"], [102, "module-kqcircuits.simulations.epr.swissmon"], [103, "module-kqcircuits.simulations.epr.utils"], [104, "module-kqcircuits.simulations.export"], [105, "module-kqcircuits.simulations.export.ansys"], [106, "module-kqcircuits.simulations.export.ansys.ansys_export"], [107, "module-kqcircuits.simulations.export.ansys.ansys_solution"], [108, "module-kqcircuits.simulations.export.elmer"], [109, "module-kqcircuits.simulations.export.elmer.elmer_export"], [110, "module-kqcircuits.simulations.export.elmer.elmer_solution"], [111, "module-kqcircuits.simulations.export.export_and_run"], [112, "module-kqcircuits.simulations.export.export_singularity"], [113, "module-kqcircuits.simulations.export.remote_export_and_run"], [114, "module-kqcircuits.simulations.export.simulation_export"], [115, "module-kqcircuits.simulations.export.simulation_validate"], [116, "module-kqcircuits.simulations.export.solution"], [117, "module-kqcircuits.simulations.export.sonnet"], [118, "module-kqcircuits.simulations.export.sonnet.parser"], [119, "module-kqcircuits.simulations.export.sonnet.sonnet_export"], [120, "module-kqcircuits.simulations.export.util"], [121, "module-kqcircuits.simulations.export.xsection"], [122, "module-kqcircuits.simulations.export.xsection.epr_correction_export"], [123, "module-kqcircuits.simulations.export.xsection.xsection_export"], [124, "module-kqcircuits.simulations.partition_region"], [125, "module-kqcircuits.simulations.port"], [126, "module-kqcircuits.simulations.post_process"], [127, "module-kqcircuits.simulations.simulation"], [128, "module-kqcircuits.simulations.single_element_simulation"], [129, "module-kqcircuits.simulations.single_xmons_full_chip_sim"], [130, "module-kqcircuits.simulations.waveguides_sim"], [131, "module-kqcircuits.simulations.xmons_direct_coupling_full_chip_sim"], [132, "module-kqcircuits.simulations.xmons_direct_coupling_sim"], [133, "module-kqcircuits.test_structures"], [134, "module-kqcircuits.test_structures.airbridge_dc"], [135, "module-kqcircuits.test_structures.cross_test"], [136, "module-kqcircuits.test_structures.junction_test_pads"], [137, "module-kqcircuits.test_structures.junction_test_pads.junction_test_pads"], [138, "module-kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple"], [139, "module-kqcircuits.test_structures.stripes_test"], [140, "module-kqcircuits.test_structures.stripes_test_increasing_width"], [141, "module-kqcircuits.test_structures.test_structure"], [142, "module-kqcircuits.test_structures.tsv_test_pattern"], [143, "module-kqcircuits.util"], [144, "module-kqcircuits.util.area"], [145, "module-kqcircuits.util.count_instances"], [146, "module-kqcircuits.util.coupler_lib"], [147, "module-kqcircuits.util.deep_delete"], [148, "module-kqcircuits.util.defaults_helper"], [149, "module-kqcircuits.util.dependencies"], [150, "module-kqcircuits.util.edit_node_plugin"], [151, "module-kqcircuits.util.export_helper"], [152, "module-kqcircuits.util.geometry_helper"], [153, "module-kqcircuits.util.geometry_json_encoder"], [154, "module-kqcircuits.util.groundgrid"], [155, "module-kqcircuits.util.gui_helper"], [156, "module-kqcircuits.util.import_helper"], [157, "module-kqcircuits.util.label"], [158, "module-kqcircuits.util.label_polygons"], [159, "module-kqcircuits.util.layout_to_code"], [160, "module-kqcircuits.util.library_helper"], [161, "module-kqcircuits.util.log_router"], [162, "module-kqcircuits.util.merge"], [163, "module-kqcircuits.util.netlist_extraction"], [164, "module-kqcircuits.util.netlist_graph"], [165, "module-kqcircuits.util.parameters"], [166, "module-kqcircuits.util.plugin_startup"], [167, "module-kqcircuits.util.refpoints"], [168, "module-kqcircuits.util.replace_junctions"], [169, "module-kqcircuits.util.symmetric_polygons"]], "kqcircuits.chips": [[2, "module-kqcircuits.chips"]], "airbridgecrossings (class in kqcircuits.chips.airbridge_crossings)": [[3, "kqcircuits.chips.airbridge_crossings.AirbridgeCrossings"]], "build() (kqcircuits.chips.airbridge_crossings.airbridgecrossings method)": [[3, "kqcircuits.chips.airbridge_crossings.AirbridgeCrossings.build"]], "kqcircuits.chips.airbridge_crossings": [[3, "module-kqcircuits.chips.airbridge_crossings"]], "airbridgedctest (class in kqcircuits.chips.airbridge_dc_test)": [[4, "kqcircuits.chips.airbridge_dc_test.AirbridgeDcTest"]], "build() (kqcircuits.chips.airbridge_dc_test.airbridgedctest method)": [[4, "kqcircuits.chips.airbridge_dc_test.AirbridgeDcTest.build"]], "kqcircuits.chips.airbridge_dc_test": [[4, "module-kqcircuits.chips.airbridge_dc_test"]], "chip (class in kqcircuits.chips.chip)": [[5, "kqcircuits.chips.chip.Chip"]], "library_description (kqcircuits.chips.chip.chip attribute)": [[5, "kqcircuits.chips.chip.Chip.LIBRARY_DESCRIPTION"]], "library_name (kqcircuits.chips.chip.chip attribute)": [[5, "kqcircuits.chips.chip.Chip.LIBRARY_NAME"]], "library_path (kqcircuits.chips.chip.chip attribute)": [[5, "kqcircuits.chips.chip.Chip.LIBRARY_PATH"]], "can_create_from_shape_impl() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.can_create_from_shape_impl"]], "display_text_impl() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.display_text_impl"]], "get_box() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.get_box"]], "get_filter_regions() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.get_filter_regions"]], "get_ground_bump_locations() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.get_ground_bump_locations"]], "get_ground_tsv_locations() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.get_ground_tsv_locations"]], "get_launcher_assignments() (kqcircuits.chips.chip.chip static method)": [[5, "kqcircuits.chips.chip.Chip.get_launcher_assignments"]], "insert_filtered_elements() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.insert_filtered_elements"]], "kqcircuits.chips.chip": [[5, "module-kqcircuits.chips.chip"]], "make_grid_locations() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.make_grid_locations"]], "merge_layout_layers() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.merge_layout_layers"]], "merge_layout_layers_on_face() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.merge_layout_layers_on_face"]], "parameters_from_shape_impl() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.parameters_from_shape_impl"]], "post_build() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.post_build"]], "produce_frame() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.produce_frame"]], "produce_ground_grid() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.produce_ground_grid"]], "produce_ground_on_face_grid() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.produce_ground_on_face_grid"]], "produce_junction_tests() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.produce_junction_tests"]], "produce_launchers() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.produce_launchers"]], "produce_n_launchers() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.produce_n_launchers"]], "produce_opt_lit_tests() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.produce_opt_lit_tests"]], "produce_structures() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.produce_structures"]], "transformation_from_shape_impl() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.transformation_from_shape_impl"]], "crossingtwoface (class in kqcircuits.chips.crossing_twoface)": [[6, "kqcircuits.chips.crossing_twoface.CrossingTwoface"]], "build() (kqcircuits.chips.crossing_twoface.crossingtwoface method)": [[6, "kqcircuits.chips.crossing_twoface.CrossingTwoface.build"]], "kqcircuits.chips.crossing_twoface": [[6, "module-kqcircuits.chips.crossing_twoface"]], "daisywoven (class in kqcircuits.chips.daisy_woven)": [[7, "kqcircuits.chips.daisy_woven.DaisyWoven"]], "build() (kqcircuits.chips.daisy_woven.daisywoven method)": [[7, "kqcircuits.chips.daisy_woven.DaisyWoven.build"]], "kqcircuits.chips.daisy_woven": [[7, "module-kqcircuits.chips.daisy_woven"]], "dctest (class in kqcircuits.chips.dc_test)": [[8, "kqcircuits.chips.dc_test.DcTest"]], "build() (kqcircuits.chips.dc_test.dctest method)": [[8, "kqcircuits.chips.dc_test.DcTest.build"]], "kqcircuits.chips.dc_test": [[8, "module-kqcircuits.chips.dc_test"]], "demo (class in kqcircuits.chips.demo)": [[9, "kqcircuits.chips.demo.Demo"]], "build() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.build"]], "kqcircuits.chips.demo": [[9, "module-kqcircuits.chips.demo"]], "produce_control_lines() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_control_lines"]], "produce_coupler() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_coupler"]], "produce_couplers() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_couplers"]], "produce_driveline() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_driveline"]], "produce_fluxline() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_fluxline"]], "produce_junction_tests() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_junction_tests"]], "produce_probeline() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_probeline"]], "produce_probelines() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_probelines"]], "produce_qubit() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_qubit"]], "produce_qubits() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_qubits"]], "produce_readout_structure() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_readout_structure"]], "produce_readout_structures() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_readout_structures"]], "demotwoface (class in kqcircuits.chips.demo_twoface)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface"]], "build() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.build"]], "kqcircuits.chips.demo_twoface": [[10, "module-kqcircuits.chips.demo_twoface"]], "produce_control_lines() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_control_lines"]], "produce_coupler() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_coupler"]], "produce_couplers() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_couplers"]], "produce_driveline() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_driveline"]], "produce_fluxline() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_fluxline"]], "produce_probeline() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_probeline"]], "produce_probelines() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_probelines"]], "produce_qubit() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_qubit"]], "produce_qubits() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_qubits"]], "produce_readout_structure() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_readout_structure"]], "produce_readout_structures() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_readout_structures"]], "empty (class in kqcircuits.chips.empty)": [[11, "kqcircuits.chips.empty.Empty"]], "build() (kqcircuits.chips.empty.empty method)": [[11, "kqcircuits.chips.empty.Empty.build"]], "kqcircuits.chips.empty": [[11, "module-kqcircuits.chips.empty"]], "make_empty_area() (kqcircuits.chips.empty.empty method)": [[11, "kqcircuits.chips.empty.Empty.make_empty_area"]], "junctiontest (class in kqcircuits.chips.junction_test)": [[12, "kqcircuits.chips.junction_test.JunctionTest"]], "build() (kqcircuits.chips.junction_test.junctiontest method)": [[12, "kqcircuits.chips.junction_test.JunctionTest.build"]], "kqcircuits.chips.junction_test": [[12, "module-kqcircuits.chips.junction_test"]], "junctiontest2 (class in kqcircuits.chips.junction_test2)": [[13, "kqcircuits.chips.junction_test2.JunctionTest2"]], "build() (kqcircuits.chips.junction_test2.junctiontest2 method)": [[13, "kqcircuits.chips.junction_test2.JunctionTest2.build"]], "coerce_parameters_impl() (kqcircuits.chips.junction_test2.junctiontest2 method)": [[13, "kqcircuits.chips.junction_test2.JunctionTest2.coerce_parameters_impl"]], "kqcircuits.chips.junction_test2": [[13, "module-kqcircuits.chips.junction_test2"]], "launchers (class in kqcircuits.chips.launchers)": [[14, "kqcircuits.chips.launchers.Launchers"]], "build() (kqcircuits.chips.launchers.launchers method)": [[14, "kqcircuits.chips.launchers.Launchers.build"]], "kqcircuits.chips.launchers": [[14, "module-kqcircuits.chips.launchers"]], "lithographytest (class in kqcircuits.chips.lithography_test)": [[15, "kqcircuits.chips.lithography_test.LithographyTest"]], "build() (kqcircuits.chips.lithography_test.lithographytest method)": [[15, "kqcircuits.chips.lithography_test.LithographyTest.build"]], "create_pattern() (kqcircuits.chips.lithography_test.lithographytest method)": [[15, "kqcircuits.chips.lithography_test.LithographyTest.create_pattern"]], "kqcircuits.chips.lithography_test": [[15, "module-kqcircuits.chips.lithography_test"]], "lithographytesttwoface (class in kqcircuits.chips.lithography_test_twoface)": [[16, "kqcircuits.chips.lithography_test_twoface.LithographyTestTwoface"]], "build() (kqcircuits.chips.lithography_test_twoface.lithographytesttwoface method)": [[16, "kqcircuits.chips.lithography_test_twoface.LithographyTestTwoface.build"]], "create_pattern() (kqcircuits.chips.lithography_test_twoface.lithographytesttwoface method)": [[16, "kqcircuits.chips.lithography_test_twoface.LithographyTestTwoface.create_pattern"]], "kqcircuits.chips.lithography_test_twoface": [[16, "module-kqcircuits.chips.lithography_test_twoface"]], "munchqubits (class in kqcircuits.chips.munch_qubits)": [[17, "kqcircuits.chips.munch_qubits.MunchQubits"]], "build() (kqcircuits.chips.munch_qubits.munchqubits method)": [[17, "kqcircuits.chips.munch_qubits.MunchQubits.build"]], "kqcircuits.chips.munch_qubits": [[17, "module-kqcircuits.chips.munch_qubits"]], "produce_coupler() (kqcircuits.chips.munch_qubits.munchqubits method)": [[17, "kqcircuits.chips.munch_qubits.MunchQubits.produce_coupler"]], "produce_drivelines() (kqcircuits.chips.munch_qubits.munchqubits method)": [[17, "kqcircuits.chips.munch_qubits.MunchQubits.produce_drivelines"]], "produce_probeline() (kqcircuits.chips.munch_qubits.munchqubits method)": [[17, "kqcircuits.chips.munch_qubits.MunchQubits.produce_probeline"]], "produce_qubits() (kqcircuits.chips.munch_qubits.munchqubits method)": [[17, "kqcircuits.chips.munch_qubits.MunchQubits.produce_qubits"]], "produce_readout_resonators() (kqcircuits.chips.munch_qubits.munchqubits method)": [[17, "kqcircuits.chips.munch_qubits.MunchQubits.produce_readout_resonators"]], "qualityfactor (class in kqcircuits.chips.quality_factor)": [[18, "kqcircuits.chips.quality_factor.QualityFactor"]], "build() (kqcircuits.chips.quality_factor.qualityfactor method)": [[18, "kqcircuits.chips.quality_factor.QualityFactor.build"]], "kqcircuits.chips.quality_factor": [[18, "module-kqcircuits.chips.quality_factor"]], "qualityfactortwoface (class in kqcircuits.chips.quality_factor_twoface)": [[19, "kqcircuits.chips.quality_factor_twoface.QualityFactorTwoface"]], "build() (kqcircuits.chips.quality_factor_twoface.qualityfactortwoface method)": [[19, "kqcircuits.chips.quality_factor_twoface.QualityFactorTwoface.build"]], "kqcircuits.chips.quality_factor_twoface": [[19, "module-kqcircuits.chips.quality_factor_twoface"]], "produce_resonator() (kqcircuits.chips.quality_factor_twoface.qualityfactortwoface method)": [[19, "kqcircuits.chips.quality_factor_twoface.QualityFactorTwoface.produce_resonator"]], "sampleholdertest (class in kqcircuits.chips.sample_holder_test)": [[20, "kqcircuits.chips.sample_holder_test.SampleHolderTest"]], "build() (kqcircuits.chips.sample_holder_test.sampleholdertest method)": [[20, "kqcircuits.chips.sample_holder_test.SampleHolderTest.build"]], "kqcircuits.chips.sample_holder_test": [[20, "module-kqcircuits.chips.sample_holder_test"]], "shaping (class in kqcircuits.chips.shaping)": [[21, "kqcircuits.chips.shaping.Shaping"]], "build() (kqcircuits.chips.shaping.shaping method)": [[21, "kqcircuits.chips.shaping.Shaping.build"]], "kqcircuits.chips.shaping": [[21, "module-kqcircuits.chips.shaping"]], "simple (class in kqcircuits.chips.simple)": [[22, "kqcircuits.chips.simple.Simple"]], "build() (kqcircuits.chips.simple.simple method)": [[22, "kqcircuits.chips.simple.Simple.build"]], "kqcircuits.chips.simple": [[22, "module-kqcircuits.chips.simple"]], "singlexmons (class in kqcircuits.chips.single_xmons)": [[23, "kqcircuits.chips.single_xmons.SingleXmons"]], "build() (kqcircuits.chips.single_xmons.singlexmons method)": [[23, "kqcircuits.chips.single_xmons.SingleXmons.build"]], "kqcircuits.chips.single_xmons": [[23, "module-kqcircuits.chips.single_xmons"]], "launchers (kqcircuits.chips.single_xmons.singlexmons attribute)": [[23, "kqcircuits.chips.single_xmons.SingleXmons.launchers"]], "qubits_refpoints (kqcircuits.chips.single_xmons.singlexmons attribute)": [[23, "kqcircuits.chips.single_xmons.SingleXmons.qubits_refpoints"]], "stripes (class in kqcircuits.chips.stripes)": [[24, "kqcircuits.chips.stripes.Stripes"]], "build() (kqcircuits.chips.stripes.stripes method)": [[24, "kqcircuits.chips.stripes.Stripes.build"]], "kqcircuits.chips.stripes": [[24, "module-kqcircuits.chips.stripes"]], "tsvtest (class in kqcircuits.chips.tsv_test)": [[25, "kqcircuits.chips.tsv_test.TsvTest"]], "build() (kqcircuits.chips.tsv_test.tsvtest method)": [[25, "kqcircuits.chips.tsv_test.TsvTest.build"]], "create_xsection() (kqcircuits.chips.tsv_test.tsvtest method)": [[25, "kqcircuits.chips.tsv_test.TsvTest.create_xsection"]], "kqcircuits.chips.tsv_test": [[25, "module-kqcircuits.chips.tsv_test"]], "xmonsdirectcoupling (class in kqcircuits.chips.xmons_direct_coupling)": [[26, "kqcircuits.chips.xmons_direct_coupling.XMonsDirectCoupling"]], "build() (kqcircuits.chips.xmons_direct_coupling.xmonsdirectcoupling method)": [[26, "kqcircuits.chips.xmons_direct_coupling.XMonsDirectCoupling.build"]], "kqcircuits.chips.xmons_direct_coupling": [[26, "module-kqcircuits.chips.xmons_direct_coupling"]], "produce_qubits() (kqcircuits.chips.xmons_direct_coupling.xmonsdirectcoupling method)": [[26, "kqcircuits.chips.xmons_direct_coupling.XMonsDirectCoupling.produce_qubits"]], "produce_readout_resonator() (kqcircuits.chips.xmons_direct_coupling.xmonsdirectcoupling method)": [[26, "kqcircuits.chips.xmons_direct_coupling.XMonsDirectCoupling.produce_readout_resonator"]], "kqcircuits.defaults": [[27, "module-kqcircuits.defaults"]], "kqcircuits.elements": [[28, "module-kqcircuits.elements"]], "airbridgeconnection (class in kqcircuits.elements.airbridge_connection)": [[29, "kqcircuits.elements.airbridge_connection.AirbridgeConnection"]], "build() (kqcircuits.elements.airbridge_connection.airbridgeconnection method)": [[29, "kqcircuits.elements.airbridge_connection.AirbridgeConnection.build"]], "kqcircuits.elements.airbridge_connection": [[29, "module-kqcircuits.elements.airbridge_connection"]], "kqcircuits.elements.airbridges": [[30, "module-kqcircuits.elements.airbridges"]], "airbridge (class in kqcircuits.elements.airbridges.airbridge)": [[31, "kqcircuits.elements.airbridges.airbridge.Airbridge"]], "create() (kqcircuits.elements.airbridges.airbridge.airbridge class method)": [[31, "kqcircuits.elements.airbridges.airbridge.Airbridge.create"]], "default_type (kqcircuits.elements.airbridges.airbridge.airbridge attribute)": [[31, "kqcircuits.elements.airbridges.airbridge.Airbridge.default_type"]], "kqcircuits.elements.airbridges.airbridge": [[31, "module-kqcircuits.elements.airbridges.airbridge"]], "transformation_from_shape_impl() (kqcircuits.elements.airbridges.airbridge.airbridge method)": [[31, "kqcircuits.elements.airbridges.airbridge.Airbridge.transformation_from_shape_impl"]], "airbridgemultiface (class in kqcircuits.elements.airbridges.airbridge_multi_face)": [[32, "kqcircuits.elements.airbridges.airbridge_multi_face.AirbridgeMultiFace"]], "build() (kqcircuits.elements.airbridges.airbridge_multi_face.airbridgemultiface method)": [[32, "kqcircuits.elements.airbridges.airbridge_multi_face.AirbridgeMultiFace.build"]], "default_type (kqcircuits.elements.airbridges.airbridge_multi_face.airbridgemultiface attribute)": [[32, "kqcircuits.elements.airbridges.airbridge_multi_face.AirbridgeMultiFace.default_type"]], "kqcircuits.elements.airbridges.airbridge_multi_face": [[32, "module-kqcircuits.elements.airbridges.airbridge_multi_face"]], "airbridgerectangular (class in kqcircuits.elements.airbridges.airbridge_rectangular)": [[33, "kqcircuits.elements.airbridges.airbridge_rectangular.AirbridgeRectangular"]], "build() (kqcircuits.elements.airbridges.airbridge_rectangular.airbridgerectangular method)": [[33, "kqcircuits.elements.airbridges.airbridge_rectangular.AirbridgeRectangular.build"]], "default_type (kqcircuits.elements.airbridges.airbridge_rectangular.airbridgerectangular attribute)": [[33, "kqcircuits.elements.airbridges.airbridge_rectangular.AirbridgeRectangular.default_type"]], "kqcircuits.elements.airbridges.airbridge_rectangular": [[33, "module-kqcircuits.elements.airbridges.airbridge_rectangular"]], "capacitivexcoupler (class in kqcircuits.elements.capacitive_x_coupler)": [[34, "kqcircuits.elements.capacitive_x_coupler.CapacitiveXCoupler"]], "build() (kqcircuits.elements.capacitive_x_coupler.capacitivexcoupler method)": [[34, "kqcircuits.elements.capacitive_x_coupler.CapacitiveXCoupler.build"]], "get_sim_ports() (kqcircuits.elements.capacitive_x_coupler.capacitivexcoupler class method)": [[34, "kqcircuits.elements.capacitive_x_coupler.CapacitiveXCoupler.get_sim_ports"]], "kqcircuits.elements.capacitive_x_coupler": [[34, "module-kqcircuits.elements.capacitive_x_coupler"]], "chipframe (class in kqcircuits.elements.chip_frame)": [[35, "kqcircuits.elements.chip_frame.ChipFrame"]], "build() (kqcircuits.elements.chip_frame.chipframe method)": [[35, "kqcircuits.elements.chip_frame.ChipFrame.build"]], "kqcircuits.elements.chip_frame": [[35, "module-kqcircuits.elements.chip_frame"]], "circularcapacitor (class in kqcircuits.elements.circular_capacitor)": [[36, "kqcircuits.elements.circular_capacitor.CircularCapacitor"]], "build() (kqcircuits.elements.circular_capacitor.circularcapacitor method)": [[36, "kqcircuits.elements.circular_capacitor.CircularCapacitor.build"]], "get_sim_ports() (kqcircuits.elements.circular_capacitor.circularcapacitor class method)": [[36, "kqcircuits.elements.circular_capacitor.CircularCapacitor.get_sim_ports"]], "kqcircuits.elements.circular_capacitor": [[36, "module-kqcircuits.elements.circular_capacitor"]], "element (class in kqcircuits.elements.element)": [[37, "kqcircuits.elements.element.Element"]], "library_description (kqcircuits.elements.element.element attribute)": [[37, "kqcircuits.elements.element.Element.LIBRARY_DESCRIPTION"]], "library_name (kqcircuits.elements.element.element attribute)": [[37, "kqcircuits.elements.element.Element.LIBRARY_NAME"]], "library_path (kqcircuits.elements.element.element attribute)": [[37, "kqcircuits.elements.element.Element.LIBRARY_PATH"]], "add_element() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.add_element"]], "add_port() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.add_port"]], "add_protection() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.add_protection"]], "build() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.build"]], "copy_port() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.copy_port"]], "create() (kqcircuits.elements.element.element class method)": [[37, "kqcircuits.elements.element.Element.create"]], "create_cell_from_shape() (kqcircuits.elements.element.element static method)": [[37, "kqcircuits.elements.element.Element.create_cell_from_shape"]], "create_subtype() (kqcircuits.elements.element.element class method)": [[37, "kqcircuits.elements.element.Element.create_subtype"]], "create_with_refpoints() (kqcircuits.elements.element.element class method)": [[37, "kqcircuits.elements.element.Element.create_with_refpoints"]], "display_text_impl() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.display_text_impl"]], "face() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.face"]], "face_changer_waveguides() (kqcircuits.elements.element.element static method)": [[37, "kqcircuits.elements.element.Element.face_changer_waveguides"]], "get_layer() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.get_layer"]], "get_refpoints() (in module kqcircuits.elements.element)": [[37, "kqcircuits.elements.element.get_refpoints"]], "get_refpoints() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.get_refpoints"]], "get_schema() (kqcircuits.elements.element.element class method)": [[37, "kqcircuits.elements.element.Element.get_schema"]], "get_sim_ports() (kqcircuits.elements.element.element class method)": [[37, "kqcircuits.elements.element.Element.get_sim_ports"]], "insert_cell() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.insert_cell"]], "insert_cell_into() (in module kqcircuits.elements.element)": [[37, "kqcircuits.elements.element.insert_cell_into"]], "kqcircuits.elements.element": [[37, "module-kqcircuits.elements.element"]], "left_and_right_waveguides() (kqcircuits.elements.element.element static method)": [[37, "kqcircuits.elements.element.Element.left_and_right_waveguides"]], "pcell_params_by_name() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.pcell_params_by_name"]], "post_build() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.post_build"]], "produce_impl() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.produce_impl"]], "raise_error_on_cell() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.raise_error_on_cell"]], "resolve_face() (in module kqcircuits.elements.element)": [[37, "kqcircuits.elements.element.resolve_face"]], "sync_parameters() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.sync_parameters"]], "fingercapacitorsquare (class in kqcircuits.elements.finger_capacitor_square)": [[38, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare"]], "add_waveguides() (kqcircuits.elements.finger_capacitor_square.fingercapacitorsquare method)": [[38, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare.add_waveguides"]], "build() (kqcircuits.elements.finger_capacitor_square.fingercapacitorsquare method)": [[38, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare.build"]], "can_create_from_shape_impl() (kqcircuits.elements.finger_capacitor_square.fingercapacitorsquare method)": [[38, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare.can_create_from_shape_impl"]], "cut_region() (kqcircuits.elements.finger_capacitor_square.fingercapacitorsquare method)": [[38, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare.cut_region"]], "finger_area_length() (kqcircuits.elements.finger_capacitor_square.fingercapacitorsquare method)": [[38, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare.finger_area_length"]], "finger_area_width() (kqcircuits.elements.finger_capacitor_square.fingercapacitorsquare method)": [[38, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare.finger_area_width"]], "get_ground_region() (kqcircuits.elements.finger_capacitor_square.fingercapacitorsquare method)": [[38, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare.get_ground_region"]], "get_sim_ports() (kqcircuits.elements.finger_capacitor_square.fingercapacitorsquare class method)": [[38, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare.get_sim_ports"]], "kqcircuits.elements.finger_capacitor_square": [[38, "module-kqcircuits.elements.finger_capacitor_square"]], "fingercapacitortaper (class in kqcircuits.elements.finger_capacitor_taper)": [[39, "kqcircuits.elements.finger_capacitor_taper.FingerCapacitorTaper"]], "build() (kqcircuits.elements.finger_capacitor_taper.fingercapacitortaper method)": [[39, "kqcircuits.elements.finger_capacitor_taper.FingerCapacitorTaper.build"]], "can_create_from_shape_impl() (kqcircuits.elements.finger_capacitor_taper.fingercapacitortaper method)": [[39, "kqcircuits.elements.finger_capacitor_taper.FingerCapacitorTaper.can_create_from_shape_impl"]], "kqcircuits.elements.finger_capacitor_taper": [[39, "module-kqcircuits.elements.finger_capacitor_taper"]], "kqcircuits.elements.flip_chip_connectors": [[40, "module-kqcircuits.elements.flip_chip_connectors"]], "flipchipconnector (class in kqcircuits.elements.flip_chip_connectors.flip_chip_connector)": [[41, "kqcircuits.elements.flip_chip_connectors.flip_chip_connector.FlipChipConnector"]], "create() (kqcircuits.elements.flip_chip_connectors.flip_chip_connector.flipchipconnector class method)": [[41, "kqcircuits.elements.flip_chip_connectors.flip_chip_connector.FlipChipConnector.create"]], "default_type (kqcircuits.elements.flip_chip_connectors.flip_chip_connector.flipchipconnector attribute)": [[41, "kqcircuits.elements.flip_chip_connectors.flip_chip_connector.FlipChipConnector.default_type"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector": [[41, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector"]], "flipchipconnectordc (class in kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc)": [[42, "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc.FlipChipConnectorDc"]], "build() (kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc.flipchipconnectordc method)": [[42, "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc.FlipChipConnectorDc.build"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc": [[42, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc"]], "flipchipconnectorrf (class in kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf)": [[43, "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf.FlipChipConnectorRf"]], "build() (kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf.flipchipconnectorrf method)": [[43, "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf.FlipChipConnectorRf.build"]], "get_sim_ports() (kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf.flipchipconnectorrf class method)": [[43, "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf.FlipChipConnectorRf.get_sim_ports"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf": [[43, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf"]], "kqcircuits.elements.fluxlines": [[44, "module-kqcircuits.elements.fluxlines"]], "fluxline (class in kqcircuits.elements.fluxlines.fluxline)": [[45, "kqcircuits.elements.fluxlines.fluxline.Fluxline"]], "coerce_parameters_impl() (kqcircuits.elements.fluxlines.fluxline.fluxline method)": [[45, "kqcircuits.elements.fluxlines.fluxline.Fluxline.coerce_parameters_impl"]], "create() (kqcircuits.elements.fluxlines.fluxline.fluxline class method)": [[45, "kqcircuits.elements.fluxlines.fluxline.Fluxline.create"]], "default_type (kqcircuits.elements.fluxlines.fluxline.fluxline attribute)": [[45, "kqcircuits.elements.fluxlines.fluxline.Fluxline.default_type"]], "kqcircuits.elements.fluxlines.fluxline": [[45, "module-kqcircuits.elements.fluxlines.fluxline"]], "fluxlinestandard (class in kqcircuits.elements.fluxlines.fluxline_standard)": [[46, "kqcircuits.elements.fluxlines.fluxline_standard.FluxlineStandard"]], "build() (kqcircuits.elements.fluxlines.fluxline_standard.fluxlinestandard method)": [[46, "kqcircuits.elements.fluxlines.fluxline_standard.FluxlineStandard.build"]], "kqcircuits.elements.fluxlines.fluxline_standard": [[46, "module-kqcircuits.elements.fluxlines.fluxline_standard"]], "fluxlinestraight (class in kqcircuits.elements.fluxlines.fluxline_straight)": [[47, "kqcircuits.elements.fluxlines.fluxline_straight.FluxlineStraight"]], "build() (kqcircuits.elements.fluxlines.fluxline_straight.fluxlinestraight method)": [[47, "kqcircuits.elements.fluxlines.fluxline_straight.FluxlineStraight.build"]], "kqcircuits.elements.fluxlines.fluxline_straight": [[47, "module-kqcircuits.elements.fluxlines.fluxline_straight"]], "hangerresonator (class in kqcircuits.elements.hanger_resonator)": [[48, "kqcircuits.elements.hanger_resonator.HangerResonator"]], "build() (kqcircuits.elements.hanger_resonator.hangerresonator method)": [[48, "kqcircuits.elements.hanger_resonator.HangerResonator.build"]], "get_sim_ports() (kqcircuits.elements.hanger_resonator.hangerresonator class method)": [[48, "kqcircuits.elements.hanger_resonator.HangerResonator.get_sim_ports"]], "kqcircuits.elements.hanger_resonator": [[48, "module-kqcircuits.elements.hanger_resonator"]], "launcher (class in kqcircuits.elements.launcher)": [[49, "kqcircuits.elements.launcher.Launcher"]], "build() (kqcircuits.elements.launcher.launcher method)": [[49, "kqcircuits.elements.launcher.Launcher.build"]], "kqcircuits.elements.launcher": [[49, "module-kqcircuits.elements.launcher"]], "launcherdc (class in kqcircuits.elements.launcher_dc)": [[50, "kqcircuits.elements.launcher_dc.LauncherDC"]], "build() (kqcircuits.elements.launcher_dc.launcherdc method)": [[50, "kqcircuits.elements.launcher_dc.LauncherDC.build"]], "kqcircuits.elements.launcher_dc": [[50, "module-kqcircuits.elements.launcher_dc"]], "kqcircuits.elements.markers": [[51, "module-kqcircuits.elements.markers"]], "marker (class in kqcircuits.elements.markers.marker)": [[52, "kqcircuits.elements.markers.marker.Marker"]], "create() (kqcircuits.elements.markers.marker.marker class method)": [[52, "kqcircuits.elements.markers.marker.Marker.create"]], "default_type (kqcircuits.elements.markers.marker.marker attribute)": [[52, "kqcircuits.elements.markers.marker.Marker.default_type"]], "get_marker_locations() (kqcircuits.elements.markers.marker.marker class method)": [[52, "kqcircuits.elements.markers.marker.Marker.get_marker_locations"]], "get_marker_region() (kqcircuits.elements.markers.marker.marker class method)": [[52, "kqcircuits.elements.markers.marker.Marker.get_marker_region"]], "kqcircuits.elements.markers.marker": [[52, "module-kqcircuits.elements.markers.marker"]], "produce_geometry() (kqcircuits.elements.markers.marker.marker method)": [[52, "kqcircuits.elements.markers.marker.Marker.produce_geometry"]], "markerstandard (class in kqcircuits.elements.markers.marker_standard)": [[53, "kqcircuits.elements.markers.marker_standard.MarkerStandard"]], "build() (kqcircuits.elements.markers.marker_standard.markerstandard method)": [[53, "kqcircuits.elements.markers.marker_standard.MarkerStandard.build"]], "kqcircuits.elements.markers.marker_standard": [[53, "module-kqcircuits.elements.markers.marker_standard"]], "maskmarkerfc (class in kqcircuits.elements.markers.mask_marker_fc)": [[54, "kqcircuits.elements.markers.mask_marker_fc.MaskMarkerFc"]], "build() (kqcircuits.elements.markers.mask_marker_fc.maskmarkerfc method)": [[54, "kqcircuits.elements.markers.mask_marker_fc.MaskMarkerFc.build"]], "create_cross() (kqcircuits.elements.markers.mask_marker_fc.maskmarkerfc static method)": [[54, "kqcircuits.elements.markers.mask_marker_fc.MaskMarkerFc.create_cross"]], "get_marker_locations() (kqcircuits.elements.markers.mask_marker_fc.maskmarkerfc class method)": [[54, "kqcircuits.elements.markers.mask_marker_fc.MaskMarkerFc.get_marker_locations"]], "get_marker_region() (kqcircuits.elements.markers.mask_marker_fc.maskmarkerfc class method)": [[54, "kqcircuits.elements.markers.mask_marker_fc.MaskMarkerFc.get_marker_region"]], "kqcircuits.elements.markers.mask_marker_fc": [[54, "module-kqcircuits.elements.markers.mask_marker_fc"]], "meander (class in kqcircuits.elements.meander)": [[55, "kqcircuits.elements.meander.Meander"]], "build() (kqcircuits.elements.meander.meander method)": [[55, "kqcircuits.elements.meander.Meander.build"]], "can_create_from_shape_impl() (kqcircuits.elements.meander.meander method)": [[55, "kqcircuits.elements.meander.Meander.can_create_from_shape_impl"]], "kqcircuits.elements.meander": [[55, "module-kqcircuits.elements.meander"]], "parameters_from_shape_impl() (kqcircuits.elements.meander.meander method)": [[55, "kqcircuits.elements.meander.Meander.parameters_from_shape_impl"]], "quarterwavecpwresonator (class in kqcircuits.elements.quarter_wave_cpw_resonator)": [[56, "kqcircuits.elements.quarter_wave_cpw_resonator.QuarterWaveCpwResonator"]], "build() (kqcircuits.elements.quarter_wave_cpw_resonator.quarterwavecpwresonator method)": [[56, "kqcircuits.elements.quarter_wave_cpw_resonator.QuarterWaveCpwResonator.build"]], "get_sim_ports() (kqcircuits.elements.quarter_wave_cpw_resonator.quarterwavecpwresonator class method)": [[56, "kqcircuits.elements.quarter_wave_cpw_resonator.QuarterWaveCpwResonator.get_sim_ports"]], "kqcircuits.elements.quarter_wave_cpw_resonator": [[56, "module-kqcircuits.elements.quarter_wave_cpw_resonator"]], "smoothcapacitor (class in kqcircuits.elements.smooth_capacitor)": [[57, "kqcircuits.elements.smooth_capacitor.SmoothCapacitor"]], "build() (kqcircuits.elements.smooth_capacitor.smoothcapacitor method)": [[57, "kqcircuits.elements.smooth_capacitor.SmoothCapacitor.build"]], "can_create_from_shape_impl() (kqcircuits.elements.smooth_capacitor.smoothcapacitor method)": [[57, "kqcircuits.elements.smooth_capacitor.SmoothCapacitor.can_create_from_shape_impl"]], "get_sim_ports() (kqcircuits.elements.smooth_capacitor.smoothcapacitor class method)": [[57, "kqcircuits.elements.smooth_capacitor.SmoothCapacitor.get_sim_ports"]], "kqcircuits.elements.smooth_capacitor": [[57, "module-kqcircuits.elements.smooth_capacitor"]], "spiralresonatorpolygon (class in kqcircuits.elements.spiral_resonator_polygon)": [[58, "kqcircuits.elements.spiral_resonator_polygon.SpiralResonatorPolygon"]], "build() (kqcircuits.elements.spiral_resonator_polygon.spiralresonatorpolygon method)": [[58, "kqcircuits.elements.spiral_resonator_polygon.SpiralResonatorPolygon.build"]], "kqcircuits.elements.spiral_resonator_polygon": [[58, "module-kqcircuits.elements.spiral_resonator_polygon"]], "rectangular_parameters() (in module kqcircuits.elements.spiral_resonator_polygon)": [[58, "kqcircuits.elements.spiral_resonator_polygon.rectangular_parameters"]], "kqcircuits.elements.tsvs": [[59, "module-kqcircuits.elements.tsvs"]], "tsv (class in kqcircuits.elements.tsvs.tsv)": [[60, "kqcircuits.elements.tsvs.tsv.Tsv"]], "create() (kqcircuits.elements.tsvs.tsv.tsv class method)": [[60, "kqcircuits.elements.tsvs.tsv.Tsv.create"]], "default_type (kqcircuits.elements.tsvs.tsv.tsv attribute)": [[60, "kqcircuits.elements.tsvs.tsv.Tsv.default_type"]], "kqcircuits.elements.tsvs.tsv": [[60, "module-kqcircuits.elements.tsvs.tsv"]], "tsvellipse (class in kqcircuits.elements.tsvs.tsv_ellipse)": [[61, "kqcircuits.elements.tsvs.tsv_ellipse.TsvEllipse"]], "create_tsv_connector() (kqcircuits.elements.tsvs.tsv_ellipse.tsvellipse method)": [[61, "kqcircuits.elements.tsvs.tsv_ellipse.TsvEllipse.create_tsv_connector"]], "kqcircuits.elements.tsvs.tsv_ellipse": [[61, "module-kqcircuits.elements.tsvs.tsv_ellipse"]], "produce_impl() (kqcircuits.elements.tsvs.tsv_ellipse.tsvellipse method)": [[61, "kqcircuits.elements.tsvs.tsv_ellipse.TsvEllipse.produce_impl"]], "tsvstandard (class in kqcircuits.elements.tsvs.tsv_standard)": [[62, "kqcircuits.elements.tsvs.tsv_standard.TsvStandard"]], "build() (kqcircuits.elements.tsvs.tsv_standard.tsvstandard method)": [[62, "kqcircuits.elements.tsvs.tsv_standard.TsvStandard.build"]], "kqcircuits.elements.tsvs.tsv_standard": [[62, "module-kqcircuits.elements.tsvs.tsv_standard"]], "node (class in kqcircuits.elements.waveguide_composite)": [[63, "kqcircuits.elements.waveguide_composite.Node"]], "waveguidecomposite (class in kqcircuits.elements.waveguide_composite)": [[63, "kqcircuits.elements.waveguide_composite.WaveguideComposite"]], "align (kqcircuits.elements.waveguide_composite.node attribute)": [[63, "kqcircuits.elements.waveguide_composite.Node.align"]], "angle (kqcircuits.elements.waveguide_composite.node attribute)": [[63, "kqcircuits.elements.waveguide_composite.Node.angle"]], "build() (kqcircuits.elements.waveguide_composite.waveguidecomposite method)": [[63, "kqcircuits.elements.waveguide_composite.WaveguideComposite.build"]], "check_node_type() (kqcircuits.elements.waveguide_composite.waveguidecomposite method)": [[63, "kqcircuits.elements.waveguide_composite.WaveguideComposite.check_node_type"]], "coerce_parameters_impl() (kqcircuits.elements.waveguide_composite.waveguidecomposite method)": [[63, "kqcircuits.elements.waveguide_composite.WaveguideComposite.coerce_parameters_impl"]], "create() (kqcircuits.elements.waveguide_composite.waveguidecomposite class method)": [[63, "kqcircuits.elements.waveguide_composite.WaveguideComposite.create"]], "deserialize() (kqcircuits.elements.waveguide_composite.node class method)": [[63, "kqcircuits.elements.waveguide_composite.Node.deserialize"]], "element (kqcircuits.elements.waveguide_composite.node attribute)": [[63, "kqcircuits.elements.waveguide_composite.Node.element"]], "get_segment_cells() (kqcircuits.elements.waveguide_composite.waveguidecomposite static method)": [[63, "kqcircuits.elements.waveguide_composite.WaveguideComposite.get_segment_cells"]], "get_segment_lengths() (kqcircuits.elements.waveguide_composite.waveguidecomposite static method)": [[63, "kqcircuits.elements.waveguide_composite.WaveguideComposite.get_segment_lengths"]], "inst_name (kqcircuits.elements.waveguide_composite.node attribute)": [[63, "kqcircuits.elements.waveguide_composite.Node.inst_name"]], "kqcircuits.elements.waveguide_composite": [[63, "module-kqcircuits.elements.waveguide_composite"]], "length_before (kqcircuits.elements.waveguide_composite.node attribute)": [[63, "kqcircuits.elements.waveguide_composite.Node.length_before"]], "length_increment (kqcircuits.elements.waveguide_composite.node attribute)": [[63, "kqcircuits.elements.waveguide_composite.Node.length_increment"]], "meander_direction (kqcircuits.elements.waveguide_composite.node attribute)": [[63, "kqcircuits.elements.waveguide_composite.Node.meander_direction"]], "nodes_from_string() (kqcircuits.elements.waveguide_composite.node static method)": [[63, "kqcircuits.elements.waveguide_composite.Node.nodes_from_string"]], "position (kqcircuits.elements.waveguide_composite.node attribute)": [[63, "kqcircuits.elements.waveguide_composite.Node.position"]], "produce_fixed_length_bend() (in module kqcircuits.elements.waveguide_composite)": [[63, "kqcircuits.elements.waveguide_composite.produce_fixed_length_bend"]], "produce_fixed_length_waveguide() (kqcircuits.elements.waveguide_composite.waveguidecomposite static method)": [[63, "kqcircuits.elements.waveguide_composite.WaveguideComposite.produce_fixed_length_waveguide"]], "snap_point() (kqcircuits.elements.waveguide_composite.waveguidecomposite method)": [[63, "kqcircuits.elements.waveguide_composite.WaveguideComposite.snap_point"]], "waveguidecoplanar (class in kqcircuits.elements.waveguide_coplanar)": [[64, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar"]], "build() (kqcircuits.elements.waveguide_coplanar.waveguidecoplanar method)": [[64, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar.build"]], "can_create_from_shape_impl() (kqcircuits.elements.waveguide_coplanar.waveguidecoplanar method)": [[64, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar.can_create_from_shape_impl"]], "get_corner_data() (kqcircuits.elements.waveguide_coplanar.waveguidecoplanar static method)": [[64, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar.get_corner_data"]], "is_continuous() (kqcircuits.elements.waveguide_coplanar.waveguidecoplanar static method)": [[64, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar.is_continuous"]], "kqcircuits.elements.waveguide_coplanar": [[64, "module-kqcircuits.elements.waveguide_coplanar"]], "parameters_from_shape_impl() (kqcircuits.elements.waveguide_coplanar.waveguidecoplanar method)": [[64, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar.parameters_from_shape_impl"]], "produce_end_termination() (kqcircuits.elements.waveguide_coplanar.waveguidecoplanar static method)": [[64, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar.produce_end_termination"]], "produce_waveguide() (kqcircuits.elements.waveguide_coplanar.waveguidecoplanar method)": [[64, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar.produce_waveguide"]], "transformation_from_shape_impl() (kqcircuits.elements.waveguide_coplanar.waveguidecoplanar method)": [[64, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar.transformation_from_shape_impl"]], "waveguidecoplanarcurved (class in kqcircuits.elements.waveguide_coplanar_curved)": [[65, "kqcircuits.elements.waveguide_coplanar_curved.WaveguideCoplanarCurved"]], "arc() (in module kqcircuits.elements.waveguide_coplanar_curved)": [[65, "kqcircuits.elements.waveguide_coplanar_curved.arc"]], "build() (kqcircuits.elements.waveguide_coplanar_curved.waveguidecoplanarcurved method)": [[65, "kqcircuits.elements.waveguide_coplanar_curved.WaveguideCoplanarCurved.build"]], "build_geometry() (kqcircuits.elements.waveguide_coplanar_curved.waveguidecoplanarcurved static method)": [[65, "kqcircuits.elements.waveguide_coplanar_curved.WaveguideCoplanarCurved.build_geometry"]], "coerce_parameters_impl() (kqcircuits.elements.waveguide_coplanar_curved.waveguidecoplanarcurved method)": [[65, "kqcircuits.elements.waveguide_coplanar_curved.WaveguideCoplanarCurved.coerce_parameters_impl"]], "create_curve_arcs() (kqcircuits.elements.waveguide_coplanar_curved.waveguidecoplanarcurved static method)": [[65, "kqcircuits.elements.waveguide_coplanar_curved.WaveguideCoplanarCurved.create_curve_arcs"]], "kqcircuits.elements.waveguide_coplanar_curved": [[65, "module-kqcircuits.elements.waveguide_coplanar_curved"]], "produce_curve_termination() (kqcircuits.elements.waveguide_coplanar_curved.waveguidecoplanarcurved static method)": [[65, "kqcircuits.elements.waveguide_coplanar_curved.WaveguideCoplanarCurved.produce_curve_termination"]], "waveguidecoplanarsplitter (class in kqcircuits.elements.waveguide_coplanar_splitter)": [[66, "kqcircuits.elements.waveguide_coplanar_splitter.WaveguideCoplanarSplitter"]], "build() (kqcircuits.elements.waveguide_coplanar_splitter.waveguidecoplanarsplitter method)": [[66, "kqcircuits.elements.waveguide_coplanar_splitter.WaveguideCoplanarSplitter.build"]], "kqcircuits.elements.waveguide_coplanar_splitter": [[66, "module-kqcircuits.elements.waveguide_coplanar_splitter"]], "t_cross_parameters() (in module kqcircuits.elements.waveguide_coplanar_splitter)": [[66, "kqcircuits.elements.waveguide_coplanar_splitter.t_cross_parameters"]], "waveguidecoplanarstraight (class in kqcircuits.elements.waveguide_coplanar_straight)": [[67, "kqcircuits.elements.waveguide_coplanar_straight.WaveguideCoplanarStraight"]], "build() (kqcircuits.elements.waveguide_coplanar_straight.waveguidecoplanarstraight method)": [[67, "kqcircuits.elements.waveguide_coplanar_straight.WaveguideCoplanarStraight.build"]], "build_geometry() (kqcircuits.elements.waveguide_coplanar_straight.waveguidecoplanarstraight static method)": [[67, "kqcircuits.elements.waveguide_coplanar_straight.WaveguideCoplanarStraight.build_geometry"]], "kqcircuits.elements.waveguide_coplanar_straight": [[67, "module-kqcircuits.elements.waveguide_coplanar_straight"]], "waveguidecoplanartaper (class in kqcircuits.elements.waveguide_coplanar_taper)": [[68, "kqcircuits.elements.waveguide_coplanar_taper.WaveguideCoplanarTaper"]], "build() (kqcircuits.elements.waveguide_coplanar_taper.waveguidecoplanartaper method)": [[68, "kqcircuits.elements.waveguide_coplanar_taper.WaveguideCoplanarTaper.build"]], "kqcircuits.elements.waveguide_coplanar_taper": [[68, "module-kqcircuits.elements.waveguide_coplanar_taper"]], "kqcircuits.junctions": [[69, "module-kqcircuits.junctions"]], "junction (class in kqcircuits.junctions.junction)": [[70, "kqcircuits.junctions.junction.Junction"]], "library_description (kqcircuits.junctions.junction.junction attribute)": [[70, "kqcircuits.junctions.junction.Junction.LIBRARY_DESCRIPTION"]], "library_name (kqcircuits.junctions.junction.junction attribute)": [[70, "kqcircuits.junctions.junction.Junction.LIBRARY_NAME"]], "library_path (kqcircuits.junctions.junction.junction attribute)": [[70, "kqcircuits.junctions.junction.Junction.LIBRARY_PATH"]], "coerce_parameters_impl() (kqcircuits.junctions.junction.junction method)": [[70, "kqcircuits.junctions.junction.Junction.coerce_parameters_impl"]], "create() (kqcircuits.junctions.junction.junction class method)": [[70, "kqcircuits.junctions.junction.Junction.create"]], "default_type (kqcircuits.junctions.junction.junction attribute)": [[70, "kqcircuits.junctions.junction.Junction.default_type"]], "kqcircuits.junctions.junction": [[70, "module-kqcircuits.junctions.junction"]], "manhattan (class in kqcircuits.junctions.manhattan)": [[71, "kqcircuits.junctions.manhattan.Manhattan"]], "build() (kqcircuits.junctions.manhattan.manhattan method)": [[71, "kqcircuits.junctions.manhattan.Manhattan.build"]], "kqcircuits.junctions.manhattan": [[71, "module-kqcircuits.junctions.manhattan"]], "produce_contact_pads() (kqcircuits.junctions.manhattan.manhattan method)": [[71, "kqcircuits.junctions.manhattan.Manhattan.produce_contact_pads"]], "produce_manhattan_squid() (kqcircuits.junctions.manhattan.manhattan method)": [[71, "kqcircuits.junctions.manhattan.Manhattan.produce_manhattan_squid"]], "produce_tp_large() (kqcircuits.junctions.manhattan.manhattan method)": [[71, "kqcircuits.junctions.manhattan.Manhattan.produce_tp_large"]], "produce_tp_small() (kqcircuits.junctions.manhattan.manhattan method)": [[71, "kqcircuits.junctions.manhattan.Manhattan.produce_tp_small"]], "manhattansinglejunction (class in kqcircuits.junctions.manhattan_single_junction)": [[72, "kqcircuits.junctions.manhattan_single_junction.ManhattanSingleJunction"]], "build() (kqcircuits.junctions.manhattan_single_junction.manhattansinglejunction method)": [[72, "kqcircuits.junctions.manhattan_single_junction.ManhattanSingleJunction.build"]], "kqcircuits.junctions.manhattan_single_junction": [[72, "module-kqcircuits.junctions.manhattan_single_junction"]], "produce_manhattan_junction() (kqcircuits.junctions.manhattan_single_junction.manhattansinglejunction method)": [[72, "kqcircuits.junctions.manhattan_single_junction.ManhattanSingleJunction.produce_manhattan_junction"]], "nosquid (class in kqcircuits.junctions.no_squid)": [[73, "kqcircuits.junctions.no_squid.NoSquid"]], "build() (kqcircuits.junctions.no_squid.nosquid method)": [[73, "kqcircuits.junctions.no_squid.NoSquid.build"]], "kqcircuits.junctions.no_squid": [[73, "module-kqcircuits.junctions.no_squid"]], "sim (class in kqcircuits.junctions.sim)": [[74, "kqcircuits.junctions.sim.Sim"]], "build() (kqcircuits.junctions.sim.sim method)": [[74, "kqcircuits.junctions.sim.Sim.build"]], "kqcircuits.junctions.sim": [[74, "module-kqcircuits.junctions.sim"]], "squid (class in kqcircuits.junctions.squid)": [[75, "kqcircuits.junctions.squid.Squid"]], "kqcircuits.junctions.squid": [[75, "module-kqcircuits.junctions.squid"]], "klayoutview (class in kqcircuits.klayout_view)": [[76, "kqcircuits.klayout_view.KLayoutView"]], "missinguilibraryexception": [[76, "kqcircuits.klayout_view.MissingUILibraryException"]], "active_cell (kqcircuits.klayout_view.klayoutview property)": [[76, "kqcircuits.klayout_view.KLayoutView.active_cell"]], "add_default_layers() (kqcircuits.klayout_view.klayoutview method)": [[76, "kqcircuits.klayout_view.KLayoutView.add_default_layers"]], "cell_view (kqcircuits.klayout_view.klayoutview property)": [[76, "kqcircuits.klayout_view.KLayoutView.cell_view"]], "clear_layers() (kqcircuits.klayout_view.klayoutview method)": [[76, "kqcircuits.klayout_view.KLayoutView.clear_layers"]], "close() (kqcircuits.klayout_view.klayoutview method)": [[76, "kqcircuits.klayout_view.KLayoutView.close"]], "create_top_cell() (kqcircuits.klayout_view.klayoutview method)": [[76, "kqcircuits.klayout_view.KLayoutView.create_top_cell"]], "export_all_layers_bitmap() (kqcircuits.klayout_view.klayoutview method)": [[76, "kqcircuits.klayout_view.KLayoutView.export_all_layers_bitmap"]], "export_layers_bitmaps() (kqcircuits.klayout_view.klayoutview method)": [[76, "kqcircuits.klayout_view.KLayoutView.export_layers_bitmaps"]], "export_pcell_png() (kqcircuits.klayout_view.klayoutview method)": [[76, "kqcircuits.klayout_view.KLayoutView.export_pcell_png"]], "focus() (kqcircuits.klayout_view.klayoutview method)": [[76, "kqcircuits.klayout_view.KLayoutView.focus"]], "get_active_cell() (kqcircuits.klayout_view.klayoutview static method)": [[76, "kqcircuits.klayout_view.KLayoutView.get_active_cell"]], "get_active_cell_view() (kqcircuits.klayout_view.klayoutview static method)": [[76, "kqcircuits.klayout_view.KLayoutView.get_active_cell_view"]], "get_active_layout() (kqcircuits.klayout_view.klayoutview static method)": [[76, "kqcircuits.klayout_view.KLayoutView.get_active_layout"]], "get_pixels() (kqcircuits.klayout_view.klayoutview method)": [[76, "kqcircuits.klayout_view.KLayoutView.get_pixels"]], "insert_cell() (kqcircuits.klayout_view.klayoutview method)": [[76, "kqcircuits.klayout_view.KLayoutView.insert_cell"]], "kqcircuits.klayout_view": [[76, "module-kqcircuits.klayout_view"]], "layout (kqcircuits.klayout_view.klayoutview property)": [[76, "kqcircuits.klayout_view.KLayoutView.layout"]], "layout_view (kqcircuits.klayout_view.klayoutview attribute)": [[76, "kqcircuits.klayout_view.KLayoutView.layout_view"]], "resolve_default_layer_info() (in module kqcircuits.klayout_view)": [[76, "kqcircuits.klayout_view.resolve_default_layer_info"]], "show() (kqcircuits.klayout_view.klayoutview method)": [[76, "kqcircuits.klayout_view.KLayoutView.show"]], "top_cell (kqcircuits.klayout_view.klayoutview property)": [[76, "kqcircuits.klayout_view.KLayoutView.top_cell"]], "layercluster (class in kqcircuits.layer_cluster)": [[77, "kqcircuits.layer_cluster.LayerCluster"]], "all_layers() (kqcircuits.layer_cluster.layercluster method)": [[77, "kqcircuits.layer_cluster.LayerCluster.all_layers"]], "extra_layers (kqcircuits.layer_cluster.layercluster attribute)": [[77, "kqcircuits.layer_cluster.LayerCluster.extra_layers"]], "face_id (kqcircuits.layer_cluster.layercluster attribute)": [[77, "kqcircuits.layer_cluster.LayerCluster.face_id"]], "kqcircuits.layer_cluster": [[77, "module-kqcircuits.layer_cluster"]], "main_layers (kqcircuits.layer_cluster.layercluster attribute)": [[77, "kqcircuits.layer_cluster.LayerCluster.main_layers"]], "kqcircuits.layer_config": [[78, "module-kqcircuits.layer_config"]], "kqcircuits.layer_config.default_layer_config": [[79, "module-kqcircuits.layer_config.default_layer_config"]], "kqcircuits.layer_config.example_layer_config": [[80, "module-kqcircuits.layer_config.example_layer_config"]], "kqcircuits.masks": [[81, "module-kqcircuits.masks"]], "export_bitmaps() (in module kqcircuits.masks.mask_export)": [[82, "kqcircuits.masks.mask_export.export_bitmaps"]], "export_chip() (in module kqcircuits.masks.mask_export)": [[82, "kqcircuits.masks.mask_export.export_chip"]], "export_designs() (in module kqcircuits.masks.mask_export)": [[82, "kqcircuits.masks.mask_export.export_designs"]], "export_docs() (in module kqcircuits.masks.mask_export)": [[82, "kqcircuits.masks.mask_export.export_docs"]], "export_junction_parameters() (in module kqcircuits.masks.mask_export)": [[82, "kqcircuits.masks.mask_export.export_junction_parameters"]], "export_mask() (in module kqcircuits.masks.mask_export)": [[82, "kqcircuits.masks.mask_export.export_mask"]], "export_mask_set() (in module kqcircuits.masks.mask_export)": [[82, "kqcircuits.masks.mask_export.export_mask_set"]], "export_masks_of_face() (in module kqcircuits.masks.mask_export)": [[82, "kqcircuits.masks.mask_export.export_masks_of_face"]], "get_mask_layout_full_name() (in module kqcircuits.masks.mask_export)": [[82, "kqcircuits.masks.mask_export.get_mask_layout_full_name"]], "kqcircuits.masks.mask_export": [[82, "module-kqcircuits.masks.mask_export"]], "masklayout (class in kqcircuits.masks.mask_layout)": [[83, "kqcircuits.masks.mask_layout.MaskLayout"]], "add_chips_map() (kqcircuits.masks.mask_layout.masklayout method)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.add_chips_map"]], "added_chips (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.added_chips"]], "align_to (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.align_to"]], "bbox_face_ids (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.bbox_face_ids"]], "build() (kqcircuits.masks.mask_layout.masklayout method)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.build"]], "chip_box_offset (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.chip_box_offset"]], "chip_copies (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.chip_copies"]], "chip_size (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.chip_size"]], "chip_trans (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.chip_trans"]], "chips_map (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.chips_map"]], "chips_map_legend (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.chips_map_legend"]], "chips_map_offset (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.chips_map_offset"]], "chips_placed_by_position_label (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.chips_placed_by_position_label"]], "covered_region_excluded_layers (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.covered_region_excluded_layers"]], "dice_width (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.dice_width"]], "edge_clearance (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.edge_clearance"]], "extra_chips (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.extra_chips"]], "extra_id (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.extra_id"]], "face() (kqcircuits.masks.mask_layout.masklayout method)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.face"]], "face_id (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.face_id"]], "insert_chip_copy_labels() (kqcircuits.masks.mask_layout.masklayout method)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.insert_chip_copy_labels"]], "insert_chips() (kqcircuits.masks.mask_layout.masklayout method)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.insert_chips"]], "kqcircuits.masks.mask_layout": [[83, "module-kqcircuits.masks.mask_layout"]], "layers_to_mask (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.layers_to_mask"]], "layout (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.layout"]], "mask_export_density_layers (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.mask_export_density_layers"]], "mask_export_layers (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.mask_export_layers"]], "mask_marker_offset (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.mask_marker_offset"]], "mask_markers_dict (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.mask_markers_dict"]], "mask_name_box_margin (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.mask_name_box_margin"]], "mask_name_offset (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.mask_name_offset"]], "mask_name_scale (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.mask_name_scale"]], "mask_text_scale (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.mask_text_scale"]], "mirror_labels (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.mirror_labels"]], "name (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.name"]], "overwrite_chips_by_position_label() (kqcircuits.masks.mask_layout.masklayout method)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.overwrite_chips_by_position_label"]], "position_label_to_two_coordinates() (kqcircuits.masks.mask_layout.masklayout static method)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.position_label_to_two_coordinates"]], "remove_chips (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.remove_chips"]], "submasks (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.submasks"]], "text_margin (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.text_margin"]], "top_cell (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.top_cell"]], "two_coordinates_to_position_label() (kqcircuits.masks.mask_layout.masklayout static method)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.two_coordinates_to_position_label"]], "version (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.version"]], "wafer_bottom_flat_length (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.wafer_bottom_flat_length"]], "wafer_center (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.wafer_center"]], "wafer_rad (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.wafer_rad"]], "wafer_top_flat_length (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.wafer_top_flat_length"]], "with_grid (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.with_grid"]], "maskset (class in kqcircuits.masks.mask_set)": [[84, "kqcircuits.masks.mask_set.MaskSet"]], "add_chip() (kqcircuits.masks.mask_set.maskset method)": [[84, "kqcircuits.masks.mask_set.MaskSet.add_chip"]], "add_mask_layout() (kqcircuits.masks.mask_set.maskset method)": [[84, "kqcircuits.masks.mask_set.MaskSet.add_mask_layout"]], "add_multi_face_mask_layout() (kqcircuits.masks.mask_set.maskset method)": [[84, "kqcircuits.masks.mask_set.MaskSet.add_multi_face_mask_layout"]], "build() (kqcircuits.masks.mask_set.maskset method)": [[84, "kqcircuits.masks.mask_set.MaskSet.build"]], "chips_map_from_box_map() (kqcircuits.masks.mask_set.maskset static method)": [[84, "kqcircuits.masks.mask_set.MaskSet.chips_map_from_box_map"]], "chips_map_legend (kqcircuits.masks.mask_set.maskset attribute)": [[84, "kqcircuits.masks.mask_set.MaskSet.chips_map_legend"]], "export() (kqcircuits.masks.mask_set.maskset method)": [[84, "kqcircuits.masks.mask_set.MaskSet.export"]], "export_drc (kqcircuits.masks.mask_set.maskset attribute)": [[84, "kqcircuits.masks.mask_set.MaskSet.export_drc"]], "export_path (kqcircuits.masks.mask_set.maskset attribute)": [[84, "kqcircuits.masks.mask_set.MaskSet.export_path"]], "kqcircuits.masks.mask_set": [[84, "module-kqcircuits.masks.mask_set"]], "layout (kqcircuits.masks.mask_set.maskset attribute)": [[84, "kqcircuits.masks.mask_set.MaskSet.layout"]], "mask_export_layers (kqcircuits.masks.mask_set.maskset attribute)": [[84, "kqcircuits.masks.mask_set.MaskSet.mask_export_layers"]], "mask_layouts (kqcircuits.masks.mask_set.maskset attribute)": [[84, "kqcircuits.masks.mask_set.MaskSet.mask_layouts"]], "name (kqcircuits.masks.mask_set.maskset attribute)": [[84, "kqcircuits.masks.mask_set.MaskSet.name"]], "used_chips (kqcircuits.masks.mask_set.maskset attribute)": [[84, "kqcircuits.masks.mask_set.MaskSet.used_chips"]], "version (kqcircuits.masks.mask_set.maskset attribute)": [[84, "kqcircuits.masks.mask_set.MaskSet.version"]], "with_grid (kqcircuits.masks.mask_set.maskset attribute)": [[84, "kqcircuits.masks.mask_set.MaskSet.with_grid"]], "multifacemasklayout (class in kqcircuits.masks.multi_face_mask_layout)": [[85, "kqcircuits.masks.multi_face_mask_layout.MultiFaceMaskLayout"]], "add_chips_map() (kqcircuits.masks.multi_face_mask_layout.multifacemasklayout method)": [[85, "kqcircuits.masks.multi_face_mask_layout.MultiFaceMaskLayout.add_chips_map"]], "face_ids (kqcircuits.masks.multi_face_mask_layout.multifacemasklayout attribute)": [[85, "kqcircuits.masks.multi_face_mask_layout.MultiFaceMaskLayout.face_ids"]], "kqcircuits.masks.multi_face_mask_layout": [[85, "module-kqcircuits.masks.multi_face_mask_layout"]], "mask_layouts (kqcircuits.masks.multi_face_mask_layout.multifacemasklayout attribute)": [[85, "kqcircuits.masks.multi_face_mask_layout.MultiFaceMaskLayout.mask_layouts"]], "is_standalone_session() (in module kqcircuits.pya_resolver)": [[86, "kqcircuits.pya_resolver.is_standalone_session"]], "klayout_executable_command() (in module kqcircuits.pya_resolver)": [[86, "kqcircuits.pya_resolver.klayout_executable_command"]], "kqcircuits.pya_resolver": [[86, "module-kqcircuits.pya_resolver"]], "kqcircuits.qubits": [[87, "module-kqcircuits.qubits"]], "circulartransmonsingleisland (class in kqcircuits.qubits.circular_transmon_single_island)": [[88, "kqcircuits.qubits.circular_transmon_single_island.CircularTransmonSingleIsland"]], "build() (kqcircuits.qubits.circular_transmon_single_island.circulartransmonsingleisland method)": [[88, "kqcircuits.qubits.circular_transmon_single_island.CircularTransmonSingleIsland.build"]], "get_sim_ports() (kqcircuits.qubits.circular_transmon_single_island.circulartransmonsingleisland class method)": [[88, "kqcircuits.qubits.circular_transmon_single_island.CircularTransmonSingleIsland.get_sim_ports"]], "kqcircuits.qubits.circular_transmon_single_island": [[88, "module-kqcircuits.qubits.circular_transmon_single_island"]], "concentrictransmon (class in kqcircuits.qubits.concentric_transmon)": [[89, "kqcircuits.qubits.concentric_transmon.ConcentricTransmon"]], "build() (kqcircuits.qubits.concentric_transmon.concentrictransmon method)": [[89, "kqcircuits.qubits.concentric_transmon.ConcentricTransmon.build"]], "get_sim_ports() (kqcircuits.qubits.concentric_transmon.concentrictransmon class method)": [[89, "kqcircuits.qubits.concentric_transmon.ConcentricTransmon.get_sim_ports"]], "kqcircuits.qubits.concentric_transmon": [[89, "module-kqcircuits.qubits.concentric_transmon"]], "doublepads (class in kqcircuits.qubits.double_pads)": [[90, "kqcircuits.qubits.double_pads.DoublePads"]], "build() (kqcircuits.qubits.double_pads.doublepads method)": [[90, "kqcircuits.qubits.double_pads.DoublePads.build"]], "get_sim_ports() (kqcircuits.qubits.double_pads.doublepads class method)": [[90, "kqcircuits.qubits.double_pads.DoublePads.get_sim_ports"]], "kqcircuits.qubits.double_pads": [[90, "module-kqcircuits.qubits.double_pads"]], "doublepadssplines (class in kqcircuits.qubits.double_pads_splines)": [[91, "kqcircuits.qubits.double_pads_splines.DoublePadsSplines"]], "kqcircuits.qubits.double_pads_splines": [[91, "module-kqcircuits.qubits.double_pads_splines"]], "library_description (kqcircuits.qubits.qubit.qubit attribute)": [[92, "kqcircuits.qubits.qubit.Qubit.LIBRARY_DESCRIPTION"]], "library_name (kqcircuits.qubits.qubit.qubit attribute)": [[92, "kqcircuits.qubits.qubit.Qubit.LIBRARY_NAME"]], "library_path (kqcircuits.qubits.qubit.qubit attribute)": [[92, "kqcircuits.qubits.qubit.Qubit.LIBRARY_PATH"]], "qubit (class in kqcircuits.qubits.qubit)": [[92, "kqcircuits.qubits.qubit.Qubit"]], "coerce_parameters_impl() (kqcircuits.qubits.qubit.qubit method)": [[92, "kqcircuits.qubits.qubit.Qubit.coerce_parameters_impl"]], "kqcircuits.qubits.qubit": [[92, "module-kqcircuits.qubits.qubit"]], "produce_fluxline() (kqcircuits.qubits.qubit.qubit method)": [[92, "kqcircuits.qubits.qubit.Qubit.produce_fluxline"]], "produce_squid() (kqcircuits.qubits.qubit.qubit method)": [[92, "kqcircuits.qubits.qubit.Qubit.produce_squid"]], "swissmon (class in kqcircuits.qubits.swissmon)": [[93, "kqcircuits.qubits.swissmon.Swissmon"]], "build() (kqcircuits.qubits.swissmon.swissmon method)": [[93, "kqcircuits.qubits.swissmon.Swissmon.build"]], "get_sim_ports() (kqcircuits.qubits.swissmon.swissmon class method)": [[93, "kqcircuits.qubits.swissmon.Swissmon.get_sim_ports"]], "kqcircuits.qubits.swissmon": [[93, "module-kqcircuits.qubits.swissmon"]], "argument_parser() (in module kqcircuits.run)": [[94, "kqcircuits.run.argument_parser"]], "kqcircuits.run": [[94, "module-kqcircuits.run"]], "run() (in module kqcircuits.run)": [[94, "kqcircuits.run.run"]], "run_kqc() (in module kqcircuits.run)": [[94, "kqcircuits.run.run_kqc"]], "kqcircuits.simulations": [[95, "module-kqcircuits.simulations"]], "airbridgessim (class in kqcircuits.simulations.airbridges_sim)": [[96, "kqcircuits.simulations.airbridges_sim.AirbridgesSim"]], "build() (kqcircuits.simulations.airbridges_sim.airbridgessim method)": [[96, "kqcircuits.simulations.airbridges_sim.AirbridgesSim.build"]], "kqcircuits.simulations.airbridges_sim": [[96, "module-kqcircuits.simulations.airbridges_sim"]], "crosssectionsimulation (class in kqcircuits.simulations.cross_section_simulation)": [[97, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation"]], "library_name (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation attribute)": [[97, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.LIBRARY_NAME"]], "build() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[97, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.build"]], "get_dict_by_layers() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[97, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.get_dict_by_layers"]], "get_layers() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[97, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.get_layers"]], "get_parameters() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[97, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.get_parameters"]], "get_schema() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation class method)": [[97, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.get_schema"]], "get_sim_layer() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[97, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.get_sim_layer"]], "get_simulation_data() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[97, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.get_simulation_data"]], "kqcircuits.simulations.cross_section_simulation": [[97, "module-kqcircuits.simulations.cross_section_simulation"]], "process_layers() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[97, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.process_layers"]], "register_cell_layers_as_sim_layers() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[97, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.register_cell_layers_as_sim_layers"]], "set_permittivity() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[97, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.set_permittivity"]], "emptysimulation (class in kqcircuits.simulations.empty_simulation)": [[98, "kqcircuits.simulations.empty_simulation.EmptySimulation"]], "build() (kqcircuits.simulations.empty_simulation.emptysimulation method)": [[98, "kqcircuits.simulations.empty_simulation.EmptySimulation.build"]], "kqcircuits.simulations.empty_simulation": [[98, "module-kqcircuits.simulations.empty_simulation"]], "correction_cuts() (in module kqcircuits.simulations.epr.example)": [[100, "kqcircuits.simulations.epr.example.correction_cuts"]], "extract_from() (in module kqcircuits.simulations.epr.example)": [[100, "kqcircuits.simulations.epr.example.extract_from"]], "kqcircuits.simulations.epr.example": [[100, "module-kqcircuits.simulations.epr.example"]], "partition_regions() (in module kqcircuits.simulations.epr.example)": [[100, "kqcircuits.simulations.epr.example.partition_regions"]], "correction_cuts() (in module kqcircuits.simulations.epr.smooth_capacitor)": [[101, "kqcircuits.simulations.epr.smooth_capacitor.correction_cuts"]], "kqcircuits.simulations.epr.smooth_capacitor": [[101, "module-kqcircuits.simulations.epr.smooth_capacitor"]], "partition_regions() (in module kqcircuits.simulations.epr.smooth_capacitor)": [[101, "kqcircuits.simulations.epr.smooth_capacitor.partition_regions"]], "correction_cuts() (in module kqcircuits.simulations.epr.swissmon)": [[102, "kqcircuits.simulations.epr.swissmon.correction_cuts"]], "extract_swissmon_from() (in module kqcircuits.simulations.epr.swissmon)": [[102, "kqcircuits.simulations.epr.swissmon.extract_swissmon_from"]], "kqcircuits.simulations.epr.swissmon": [[102, "module-kqcircuits.simulations.epr.swissmon"]], "partition_regions() (in module kqcircuits.simulations.epr.swissmon)": [[102, "kqcircuits.simulations.epr.swissmon.partition_regions"]], "extract_child_simulation() (in module kqcircuits.simulations.epr.utils)": [[103, "kqcircuits.simulations.epr.utils.extract_child_simulation"]], "kqcircuits.simulations.epr.utils": [[103, "module-kqcircuits.simulations.epr.utils"]], "kqcircuits.simulations.export": [[104, "module-kqcircuits.simulations.export"]], "kqcircuits.simulations.export.ansys": [[105, "module-kqcircuits.simulations.export.ansys"]], "export_ansys() (in module kqcircuits.simulations.export.ansys.ansys_export)": [[106, "kqcircuits.simulations.export.ansys.ansys_export.export_ansys"]], "export_ansys_bat() (in module kqcircuits.simulations.export.ansys.ansys_export)": [[106, "kqcircuits.simulations.export.ansys.ansys_export.export_ansys_bat"]], "export_ansys_json() (in module kqcircuits.simulations.export.ansys.ansys_export)": [[106, "kqcircuits.simulations.export.ansys.ansys_export.export_ansys_json"]], "kqcircuits.simulations.export.ansys.ansys_export": [[106, "module-kqcircuits.simulations.export.ansys.ansys_export"]], "ansyscrosssectionsolution (class in kqcircuits.simulations.export.ansys.ansys_solution)": [[107, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCrossSectionSolution"]], "ansyscurrentsolution (class in kqcircuits.simulations.export.ansys.ansys_solution)": [[107, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCurrentSolution"]], "ansyseigenmodesolution (class in kqcircuits.simulations.export.ansys.ansys_solution)": [[107, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution"]], "ansyshfsssolution (class in kqcircuits.simulations.export.ansys.ansys_solution)": [[107, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution"]], "ansysq3dsolution (class in kqcircuits.simulations.export.ansys.ansys_solution)": [[107, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysQ3dSolution"]], "ansyssolution (class in kqcircuits.simulations.export.ansys.ansys_solution)": [[107, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution"]], "ansysvoltagesolution (class in kqcircuits.simulations.export.ansys.ansys_solution)": [[107, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysVoltageSolution"]], "ansys_project_template (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution attribute)": [[107, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.ansys_project_template"]], "ansys_tool (kqcircuits.simulations.export.ansys.ansys_solution.ansyscrosssectionsolution attribute)": [[107, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCrossSectionSolution.ansys_tool"]], "ansys_tool (kqcircuits.simulations.export.ansys.ansys_solution.ansyscurrentsolution attribute)": [[107, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCurrentSolution.ansys_tool"]], "ansys_tool (kqcircuits.simulations.export.ansys.ansys_solution.ansyseigenmodesolution attribute)": [[107, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution.ansys_tool"]], "ansys_tool (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[107, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.ansys_tool"]], "ansys_tool (kqcircuits.simulations.export.ansys.ansys_solution.ansysq3dsolution attribute)": [[107, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysQ3dSolution.ansys_tool"]], "ansys_tool (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution attribute)": [[107, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.ansys_tool"]], "ansys_tool (kqcircuits.simulations.export.ansys.ansys_solution.ansysvoltagesolution attribute)": [[107, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysVoltageSolution.ansys_tool"]], "capacitance_export (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[107, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.capacitance_export"]], "frequency (kqcircuits.simulations.export.ansys.ansys_solution.ansyscrosssectionsolution attribute)": [[107, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCrossSectionSolution.frequency"]], "frequency (kqcircuits.simulations.export.ansys.ansys_solution.ansyscurrentsolution attribute)": [[107, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCurrentSolution.frequency"]], "frequency (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[107, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.frequency"]], "frequency (kqcircuits.simulations.export.ansys.ansys_solution.ansysq3dsolution attribute)": [[107, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysQ3dSolution.frequency"]], "frequency (kqcircuits.simulations.export.ansys.ansys_solution.ansysvoltagesolution attribute)": [[107, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysVoltageSolution.frequency"]], "frequency_units (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution attribute)": [[107, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.frequency_units"]], "get_ansys_solution() (in module kqcircuits.simulations.export.ansys.ansys_solution)": [[107, "kqcircuits.simulations.export.ansys.ansys_solution.get_ansys_solution"]], "get_solution_data() (kqcircuits.simulations.export.ansys.ansys_solution.ansyscrosssectionsolution method)": [[107, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCrossSectionSolution.get_solution_data"]], "get_solution_data() (kqcircuits.simulations.export.ansys.ansys_solution.ansyscurrentsolution method)": [[107, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCurrentSolution.get_solution_data"]], "get_solution_data() (kqcircuits.simulations.export.ansys.ansys_solution.ansyseigenmodesolution method)": [[107, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution.get_solution_data"]], "get_solution_data() (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution method)": [[107, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.get_solution_data"]], "get_solution_data() (kqcircuits.simulations.export.ansys.ansys_solution.ansysq3dsolution method)": [[107, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysQ3dSolution.get_solution_data"]], "get_solution_data() (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution method)": [[107, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.get_solution_data"]], "get_solution_data() (kqcircuits.simulations.export.ansys.ansys_solution.ansysvoltagesolution method)": [[107, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysVoltageSolution.get_solution_data"]], "integrate_energies (kqcircuits.simulations.export.ansys.ansys_solution.ansyscrosssectionsolution attribute)": [[107, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCrossSectionSolution.integrate_energies"]], "integrate_energies (kqcircuits.simulations.export.ansys.ansys_solution.ansyscurrentsolution attribute)": [[107, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCurrentSolution.integrate_energies"]], "integrate_energies (kqcircuits.simulations.export.ansys.ansys_solution.ansyseigenmodesolution attribute)": [[107, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution.integrate_energies"]], "integrate_energies (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[107, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.integrate_energies"]], "integrate_energies (kqcircuits.simulations.export.ansys.ansys_solution.ansysvoltagesolution attribute)": [[107, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysVoltageSolution.integrate_energies"]], "integrate_magnetic_flux (kqcircuits.simulations.export.ansys.ansys_solution.ansyscurrentsolution attribute)": [[107, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCurrentSolution.integrate_magnetic_flux"]], "integrate_magnetic_flux (kqcircuits.simulations.export.ansys.ansys_solution.ansyseigenmodesolution attribute)": [[107, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution.integrate_magnetic_flux"]], "integrate_magnetic_flux (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[107, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.integrate_magnetic_flux"]], "integrate_magnetic_flux (kqcircuits.simulations.export.ansys.ansys_solution.ansysvoltagesolution attribute)": [[107, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysVoltageSolution.integrate_magnetic_flux"]], "kqcircuits.simulations.export.ansys.ansys_solution": [[107, "module-kqcircuits.simulations.export.ansys.ansys_solution"]], "max_delta_e (kqcircuits.simulations.export.ansys.ansys_solution.ansyscurrentsolution attribute)": [[107, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCurrentSolution.max_delta_e"]], "max_delta_e (kqcircuits.simulations.export.ansys.ansys_solution.ansysvoltagesolution attribute)": [[107, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysVoltageSolution.max_delta_e"]], "max_delta_f (kqcircuits.simulations.export.ansys.ansys_solution.ansyseigenmodesolution attribute)": [[107, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution.max_delta_f"]], "max_delta_s (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[107, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.max_delta_s"]], "maximum_passes (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution attribute)": [[107, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.maximum_passes"]], "mesh_size (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution attribute)": [[107, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.mesh_size"]], "min_frequency (kqcircuits.simulations.export.ansys.ansys_solution.ansyseigenmodesolution attribute)": [[107, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution.min_frequency"]], "minimum_converged_passes (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution attribute)": [[107, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.minimum_converged_passes"]], "minimum_passes (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution attribute)": [[107, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.minimum_passes"]], "n_modes (kqcircuits.simulations.export.ansys.ansys_solution.ansyseigenmodesolution attribute)": [[107, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution.n_modes"]], "percent_error (kqcircuits.simulations.export.ansys.ansys_solution.ansyscrosssectionsolution attribute)": [[107, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCrossSectionSolution.percent_error"]], "percent_error (kqcircuits.simulations.export.ansys.ansys_solution.ansysq3dsolution attribute)": [[107, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysQ3dSolution.percent_error"]], "percent_refinement (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution attribute)": [[107, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.percent_refinement"]], "simulation_flags (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution attribute)": [[107, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.simulation_flags"]], "sweep_count (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[107, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.sweep_count"]], "sweep_enabled (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[107, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.sweep_enabled"]], "sweep_end (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[107, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.sweep_end"]], "sweep_start (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[107, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.sweep_start"]], "sweep_type (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[107, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.sweep_type"]], "kqcircuits.simulations.export.elmer": [[108, "module-kqcircuits.simulations.export.elmer"]], "export_elmer() (in module kqcircuits.simulations.export.elmer.elmer_export)": [[109, "kqcircuits.simulations.export.elmer.elmer_export.export_elmer"]], "export_elmer_json() (in module kqcircuits.simulations.export.elmer.elmer_export)": [[109, "kqcircuits.simulations.export.elmer.elmer_export.export_elmer_json"]], "export_elmer_script() (in module kqcircuits.simulations.export.elmer.elmer_export)": [[109, "kqcircuits.simulations.export.elmer.elmer_export.export_elmer_script"]], "kqcircuits.simulations.export.elmer.elmer_export": [[109, "module-kqcircuits.simulations.export.elmer.elmer_export"]], "elmercapacitancesolution (class in kqcircuits.simulations.export.elmer.elmer_solution)": [[110, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCapacitanceSolution"]], "elmercrosssectionsolution (class in kqcircuits.simulations.export.elmer.elmer_solution)": [[110, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution"]], "elmerepr3dsolution (class in kqcircuits.simulations.export.elmer.elmer_solution)": [[110, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerEPR3DSolution"]], "elmersolution (class in kqcircuits.simulations.export.elmer.elmer_solution)": [[110, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution"]], "elmervectorhelmholtzsolution (class in kqcircuits.simulations.export.elmer.elmer_solution)": [[110, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution"]], "boundary_conditions (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[110, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.boundary_conditions"]], "conductivity (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[110, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.conductivity"]], "convergence_tolerance (kqcircuits.simulations.export.elmer.elmer_solution.elmercapacitancesolution attribute)": [[110, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCapacitanceSolution.convergence_tolerance"]], "convergence_tolerance (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[110, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.convergence_tolerance"]], "convergence_tolerance (kqcircuits.simulations.export.elmer.elmer_solution.elmerepr3dsolution attribute)": [[110, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerEPR3DSolution.convergence_tolerance"]], "convergence_tolerance (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[110, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.convergence_tolerance"]], "frequency (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[110, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.frequency"]], "frequency_batch (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[110, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.frequency_batch"]], "get_elmer_solution() (in module kqcircuits.simulations.export.elmer.elmer_solution)": [[110, "kqcircuits.simulations.export.elmer.elmer_solution.get_elmer_solution"]], "get_solution_data() (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution method)": [[110, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.get_solution_data"]], "integrate_energies (kqcircuits.simulations.export.elmer.elmer_solution.elmercapacitancesolution attribute)": [[110, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCapacitanceSolution.integrate_energies"]], "integrate_energies (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[110, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.integrate_energies"]], "is_axisymmetric (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[110, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.is_axisymmetric"]], "kqcircuits.simulations.export.elmer.elmer_solution": [[110, "module-kqcircuits.simulations.export.elmer.elmer_solution"]], "linear_system_method (kqcircuits.simulations.export.elmer.elmer_solution.elmercapacitancesolution attribute)": [[110, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCapacitanceSolution.linear_system_method"]], "linear_system_method (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[110, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.linear_system_method"]], "linear_system_method (kqcircuits.simulations.export.elmer.elmer_solution.elmerepr3dsolution attribute)": [[110, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerEPR3DSolution.linear_system_method"]], "linear_system_preconditioning (kqcircuits.simulations.export.elmer.elmer_solution.elmercapacitancesolution attribute)": [[110, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCapacitanceSolution.linear_system_preconditioning"]], "linear_system_preconditioning (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[110, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.linear_system_preconditioning"]], "linear_system_preconditioning (kqcircuits.simulations.export.elmer.elmer_solution.elmerepr3dsolution attribute)": [[110, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerEPR3DSolution.linear_system_preconditioning"]], "london_penetration_depth (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[110, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.london_penetration_depth"]], "max_delta_s (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[110, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.max_delta_s"]], "max_error_scale (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[110, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.max_error_scale"]], "max_iterations (kqcircuits.simulations.export.elmer.elmer_solution.elmercapacitancesolution attribute)": [[110, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCapacitanceSolution.max_iterations"]], "max_iterations (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[110, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.max_iterations"]], "max_iterations (kqcircuits.simulations.export.elmer.elmer_solution.elmerepr3dsolution attribute)": [[110, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerEPR3DSolution.max_iterations"]], "max_iterations (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[110, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.max_iterations"]], "max_outlier_fraction (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[110, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.max_outlier_fraction"]], "maximum_passes (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[110, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.maximum_passes"]], "mesh_levels (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[110, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.mesh_levels"]], "mesh_size (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[110, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.mesh_size"]], "minimum_passes (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[110, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.minimum_passes"]], "nested_iteration (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[110, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.nested_iteration"]], "p_element_order (kqcircuits.simulations.export.elmer.elmer_solution.elmercapacitancesolution attribute)": [[110, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCapacitanceSolution.p_element_order"]], "p_element_order (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[110, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.p_element_order"]], "p_element_order (kqcircuits.simulations.export.elmer.elmer_solution.elmerepr3dsolution attribute)": [[110, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerEPR3DSolution.p_element_order"]], "percent_error (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[110, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.percent_error"]], "quadratic_approximation (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[110, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.quadratic_approximation"]], "run_inductance_sim (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[110, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.run_inductance_sim"]], "second_kind_basis (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[110, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.second_kind_basis"]], "sequential_signal_excitation (kqcircuits.simulations.export.elmer.elmer_solution.elmerepr3dsolution attribute)": [[110, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerEPR3DSolution.sequential_signal_excitation"]], "sweep_type (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[110, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.sweep_type"]], "tool (kqcircuits.simulations.export.elmer.elmer_solution.elmercapacitancesolution attribute)": [[110, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCapacitanceSolution.tool"]], "tool (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[110, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.tool"]], "tool (kqcircuits.simulations.export.elmer.elmer_solution.elmerepr3dsolution attribute)": [[110, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerEPR3DSolution.tool"]], "tool (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[110, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.tool"]], "tool (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[110, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.tool"]], "use_av (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[110, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.use_av"]], "vtu_output (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[110, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.vtu_output"]], "export_and_run() (in module kqcircuits.simulations.export.export_and_run)": [[111, "kqcircuits.simulations.export.export_and_run.export_and_run"]], "kqcircuits.simulations.export.export_and_run": [[111, "module-kqcircuits.simulations.export.export_and_run"]], "run_export_script() (in module kqcircuits.simulations.export.export_and_run)": [[111, "kqcircuits.simulations.export.export_and_run.run_export_script"]], "run_simulations() (in module kqcircuits.simulations.export.export_and_run)": [[111, "kqcircuits.simulations.export.export_and_run.run_simulations"]], "export_singularity() (in module kqcircuits.simulations.export.export_singularity)": [[112, "kqcircuits.simulations.export.export_singularity.export_singularity"]], "kqcircuits.simulations.export.export_singularity": [[112, "module-kqcircuits.simulations.export.export_singularity"]], "kqcircuits.simulations.export.remote_export_and_run": [[113, "module-kqcircuits.simulations.export.remote_export_and_run"]], "remote_export_and_run() (in module kqcircuits.simulations.export.remote_export_and_run)": [[113, "kqcircuits.simulations.export.remote_export_and_run.remote_export_and_run"]], "remote_run_only() (in module kqcircuits.simulations.export.remote_export_and_run)": [[113, "kqcircuits.simulations.export.remote_export_and_run.remote_run_only"]], "copy_content_into_directory() (in module kqcircuits.simulations.export.simulation_export)": [[114, "kqcircuits.simulations.export.simulation_export.copy_content_into_directory"]], "cross_combine() (in module kqcircuits.simulations.export.simulation_export)": [[114, "kqcircuits.simulations.export.simulation_export.cross_combine"]], "cross_sweep_simulation() (in module kqcircuits.simulations.export.simulation_export)": [[114, "kqcircuits.simulations.export.simulation_export.cross_sweep_simulation"]], "cross_sweep_solution() (in module kqcircuits.simulations.export.simulation_export)": [[114, "kqcircuits.simulations.export.simulation_export.cross_sweep_solution"]], "export_simulation_json() (in module kqcircuits.simulations.export.simulation_export)": [[114, "kqcircuits.simulations.export.simulation_export.export_simulation_json"]], "export_simulation_oas() (in module kqcircuits.simulations.export.simulation_export)": [[114, "kqcircuits.simulations.export.simulation_export.export_simulation_oas"]], "get_combined_parameters() (in module kqcircuits.simulations.export.simulation_export)": [[114, "kqcircuits.simulations.export.simulation_export.get_combined_parameters"]], "get_post_process_command_lines() (in module kqcircuits.simulations.export.simulation_export)": [[114, "kqcircuits.simulations.export.simulation_export.get_post_process_command_lines"]], "kqcircuits.simulations.export.simulation_export": [[114, "module-kqcircuits.simulations.export.simulation_export"]], "sweep_simulation() (in module kqcircuits.simulations.export.simulation_export)": [[114, "kqcircuits.simulations.export.simulation_export.sweep_simulation"]], "sweep_solution() (in module kqcircuits.simulations.export.simulation_export)": [[114, "kqcircuits.simulations.export.simulation_export.sweep_solution"]], "validatesimerror": [[115, "kqcircuits.simulations.export.simulation_validate.ValidateSimError"]], "flux_integration_layer_exists_if_needed() (in module kqcircuits.simulations.export.simulation_validate)": [[115, "kqcircuits.simulations.export.simulation_validate.flux_integration_layer_exists_if_needed"]], "get_port_names() (in module kqcircuits.simulations.export.simulation_validate)": [[115, "kqcircuits.simulations.export.simulation_validate.get_port_names"]], "has_edgeport_when_forbidden() (in module kqcircuits.simulations.export.simulation_validate)": [[115, "kqcircuits.simulations.export.simulation_validate.has_edgeport_when_forbidden"]], "has_no_ports_when_required() (in module kqcircuits.simulations.export.simulation_validate)": [[115, "kqcircuits.simulations.export.simulation_validate.has_no_ports_when_required"]], "kqcircuits.simulations.export.simulation_validate": [[115, "module-kqcircuits.simulations.export.simulation_validate"]], "simulation_and_solution_types_match() (in module kqcircuits.simulations.export.simulation_validate)": [[115, "kqcircuits.simulations.export.simulation_validate.simulation_and_solution_types_match"]], "validate_simulation() (in module kqcircuits.simulations.export.simulation_validate)": [[115, "kqcircuits.simulations.export.simulation_validate.validate_simulation"]], "solution (class in kqcircuits.simulations.export.solution)": [[116, "kqcircuits.simulations.export.solution.Solution"]], "get_parameters() (kqcircuits.simulations.export.solution.solution method)": [[116, "kqcircuits.simulations.export.solution.Solution.get_parameters"]], "kqcircuits.simulations.export.solution": [[116, "module-kqcircuits.simulations.export.solution"]], "name (kqcircuits.simulations.export.solution.solution attribute)": [[116, "kqcircuits.simulations.export.solution.Solution.name"]], "kqcircuits.simulations.export.sonnet": [[117, "module-kqcircuits.simulations.export.sonnet"]], "apply_template() (in module kqcircuits.simulations.export.sonnet.parser)": [[118, "kqcircuits.simulations.export.sonnet.parser.apply_template"]], "box() (in module kqcircuits.simulations.export.sonnet.parser)": [[118, "kqcircuits.simulations.export.sonnet.parser.box"]], "control() (in module kqcircuits.simulations.export.sonnet.parser)": [[118, "kqcircuits.simulations.export.sonnet.parser.control"]], "kqcircuits.simulations.export.sonnet.parser": [[118, "module-kqcircuits.simulations.export.sonnet.parser"]], "polygon_head() (in module kqcircuits.simulations.export.sonnet.parser)": [[118, "kqcircuits.simulations.export.sonnet.parser.polygon_head"]], "polygons() (in module kqcircuits.simulations.export.sonnet.parser)": [[118, "kqcircuits.simulations.export.sonnet.parser.polygons"]], "port() (in module kqcircuits.simulations.export.sonnet.parser)": [[118, "kqcircuits.simulations.export.sonnet.parser.port"]], "refplane() (in module kqcircuits.simulations.export.sonnet.parser)": [[118, "kqcircuits.simulations.export.sonnet.parser.refplane"]], "refplanes() (in module kqcircuits.simulations.export.sonnet.parser)": [[118, "kqcircuits.simulations.export.sonnet.parser.refplanes"]], "symmetry() (in module kqcircuits.simulations.export.sonnet.parser)": [[118, "kqcircuits.simulations.export.sonnet.parser.symmetry"]], "via() (in module kqcircuits.simulations.export.sonnet.parser)": [[118, "kqcircuits.simulations.export.sonnet.parser.via"]], "export_sonnet() (in module kqcircuits.simulations.export.sonnet.sonnet_export)": [[119, "kqcircuits.simulations.export.sonnet.sonnet_export.export_sonnet"]], "export_sonnet_son() (in module kqcircuits.simulations.export.sonnet.sonnet_export)": [[119, "kqcircuits.simulations.export.sonnet.sonnet_export.export_sonnet_son"]], "kqcircuits.simulations.export.sonnet.sonnet_export": [[119, "module-kqcircuits.simulations.export.sonnet.sonnet_export"]], "poly_and_edge_indices() (in module kqcircuits.simulations.export.sonnet.sonnet_export)": [[119, "kqcircuits.simulations.export.sonnet.sonnet_export.poly_and_edge_indices"]], "export_layers() (in module kqcircuits.simulations.export.util)": [[120, "kqcircuits.simulations.export.util.export_layers"]], "find_edge_from_point_in_cell() (in module kqcircuits.simulations.export.util)": [[120, "kqcircuits.simulations.export.util.find_edge_from_point_in_cell"]], "find_edge_from_point_in_polygons() (in module kqcircuits.simulations.export.util)": [[120, "kqcircuits.simulations.export.util.find_edge_from_point_in_polygons"]], "get_enclosing_polygon() (in module kqcircuits.simulations.export.util)": [[120, "kqcircuits.simulations.export.util.get_enclosing_polygon"]], "kqcircuits.simulations.export.util": [[120, "module-kqcircuits.simulations.export.util"]], "kqcircuits.simulations.export.xsection": [[121, "module-kqcircuits.simulations.export.xsection"]], "get_epr_correction_elmer_solution() (in module kqcircuits.simulations.export.xsection.epr_correction_export)": [[122, "kqcircuits.simulations.export.xsection.epr_correction_export.get_epr_correction_elmer_solution"]], "get_epr_correction_simulations() (in module kqcircuits.simulations.export.xsection.epr_correction_export)": [[122, "kqcircuits.simulations.export.xsection.epr_correction_export.get_epr_correction_simulations"]], "kqcircuits.simulations.export.xsection.epr_correction_export": [[122, "module-kqcircuits.simulations.export.xsection.epr_correction_export"]], "create_xsections_from_simulations() (in module kqcircuits.simulations.export.xsection.xsection_export)": [[123, "kqcircuits.simulations.export.xsection.xsection_export.create_xsections_from_simulations"]], "find_layer_by_name() (in module kqcircuits.simulations.export.xsection.xsection_export)": [[123, "kqcircuits.simulations.export.xsection.xsection_export.find_layer_by_name"]], "free_layer_slots() (in module kqcircuits.simulations.export.xsection.xsection_export)": [[123, "kqcircuits.simulations.export.xsection.xsection_export.free_layer_slots"]], "kqcircuits.simulations.export.xsection.xsection_export": [[123, "module-kqcircuits.simulations.export.xsection.xsection_export"]], "separate_signal_layer_shapes() (in module kqcircuits.simulations.export.xsection.xsection_export)": [[123, "kqcircuits.simulations.export.xsection.xsection_export.separate_signal_layer_shapes"]], "visualise_xsection_cut_on_original_layout() (in module kqcircuits.simulations.export.xsection.xsection_export)": [[123, "kqcircuits.simulations.export.xsection.xsection_export.visualise_xsection_cut_on_original_layout"]], "xsection_call() (in module kqcircuits.simulations.export.xsection.xsection_export)": [[123, "kqcircuits.simulations.export.xsection.xsection_export.xsection_call"]], "partitionregion (class in kqcircuits.simulations.partition_region)": [[124, "kqcircuits.simulations.partition_region.PartitionRegion"]], "get_list_of_two() (in module kqcircuits.simulations.partition_region)": [[124, "kqcircuits.simulations.partition_region.get_list_of_two"]], "kqcircuits.simulations.partition_region": [[124, "module-kqcircuits.simulations.partition_region"]], "limit_box() (kqcircuits.simulations.partition_region.partitionregion method)": [[124, "kqcircuits.simulations.partition_region.PartitionRegion.limit_box"]], "limit_face() (kqcircuits.simulations.partition_region.partitionregion method)": [[124, "kqcircuits.simulations.partition_region.PartitionRegion.limit_face"]], "edgeport (class in kqcircuits.simulations.port)": [[125, "kqcircuits.simulations.port.EdgePort"]], "internalport (class in kqcircuits.simulations.port)": [[125, "kqcircuits.simulations.port.InternalPort"]], "port (class in kqcircuits.simulations.port)": [[125, "kqcircuits.simulations.port.Port"]], "as_dict() (kqcircuits.simulations.port.port method)": [[125, "kqcircuits.simulations.port.Port.as_dict"]], "get_etch_polygon() (kqcircuits.simulations.port.internalport method)": [[125, "kqcircuits.simulations.port.InternalPort.get_etch_polygon"]], "kqcircuits.simulations.port": [[125, "module-kqcircuits.simulations.port"]], "postprocess (class in kqcircuits.simulations.post_process)": [[126, "kqcircuits.simulations.post_process.PostProcess"]], "get_command_line() (kqcircuits.simulations.post_process.postprocess method)": [[126, "kqcircuits.simulations.post_process.PostProcess.get_command_line"]], "kqcircuits.simulations.post_process": [[126, "module-kqcircuits.simulations.post_process"]], "library_name (kqcircuits.simulations.simulation.simulation attribute)": [[127, "kqcircuits.simulations.simulation.Simulation.LIBRARY_NAME"]], "simulation (class in kqcircuits.simulations.simulation)": [[127, "kqcircuits.simulations.simulation.Simulation"]], "add_element() (kqcircuits.simulations.simulation.simulation method)": [[127, "kqcircuits.simulations.simulation.Simulation.add_element"]], "build() (kqcircuits.simulations.simulation.simulation method)": [[127, "kqcircuits.simulations.simulation.Simulation.build"]], "create_simulation_layers() (kqcircuits.simulations.simulation.simulation method)": [[127, "kqcircuits.simulations.simulation.Simulation.create_simulation_layers"]], "delete_instances() (kqcircuits.simulations.simulation.simulation static method)": [[127, "kqcircuits.simulations.simulation.Simulation.delete_instances"]], "etched_line() (kqcircuits.simulations.simulation.simulation method)": [[127, "kqcircuits.simulations.simulation.Simulation.etched_line"]], "face() (kqcircuits.simulations.simulation.simulation method)": [[127, "kqcircuits.simulations.simulation.Simulation.face"]], "face_stack_list_of_lists() (kqcircuits.simulations.simulation.simulation method)": [[127, "kqcircuits.simulations.simulation.Simulation.face_stack_list_of_lists"]], "face_z_levels() (kqcircuits.simulations.simulation.simulation method)": [[127, "kqcircuits.simulations.simulation.Simulation.face_z_levels"]], "from_cell() (kqcircuits.simulations.simulation.simulation class method)": [[127, "kqcircuits.simulations.simulation.Simulation.from_cell"]], "get_layer() (kqcircuits.simulations.simulation.simulation method)": [[127, "kqcircuits.simulations.simulation.Simulation.get_layer"]], "get_layers() (kqcircuits.simulations.simulation.simulation method)": [[127, "kqcircuits.simulations.simulation.Simulation.get_layers"]], "get_parameters() (kqcircuits.simulations.simulation.simulation method)": [[127, "kqcircuits.simulations.simulation.Simulation.get_parameters"]], "get_partition_regions() (kqcircuits.simulations.simulation.simulation method)": [[127, "kqcircuits.simulations.simulation.Simulation.get_partition_regions"]], "get_port_data() (kqcircuits.simulations.simulation.simulation method)": [[127, "kqcircuits.simulations.simulation.Simulation.get_port_data"]], "get_refpoints() (kqcircuits.simulations.simulation.simulation method)": [[127, "kqcircuits.simulations.simulation.Simulation.get_refpoints"]], "get_schema() (kqcircuits.simulations.simulation.simulation class method)": [[127, "kqcircuits.simulations.simulation.Simulation.get_schema"]], "get_simulation_data() (kqcircuits.simulations.simulation.simulation method)": [[127, "kqcircuits.simulations.simulation.Simulation.get_simulation_data"]], "get_simulation_layer_by_name() (in module kqcircuits.simulations.simulation)": [[127, "kqcircuits.simulations.simulation.get_simulation_layer_by_name"]], "ground_grid_region() (kqcircuits.simulations.simulation.simulation method)": [[127, "kqcircuits.simulations.simulation.Simulation.ground_grid_region"]], "insert_cell() (kqcircuits.simulations.simulation.simulation method)": [[127, "kqcircuits.simulations.simulation.Simulation.insert_cell"]], "insert_layer() (kqcircuits.simulations.simulation.simulation method)": [[127, "kqcircuits.simulations.simulation.Simulation.insert_layer"]], "insert_layers_between_faces() (kqcircuits.simulations.simulation.simulation method)": [[127, "kqcircuits.simulations.simulation.Simulation.insert_layers_between_faces"]], "insert_stacked_up_layers() (kqcircuits.simulations.simulation.simulation method)": [[127, "kqcircuits.simulations.simulation.Simulation.insert_stacked_up_layers"]], "ith_value() (kqcircuits.simulations.simulation.simulation static method)": [[127, "kqcircuits.simulations.simulation.Simulation.ith_value"]], "kqcircuits.simulations.simulation": [[127, "module-kqcircuits.simulations.simulation"]], "pcell_params_by_name() (kqcircuits.simulations.simulation.simulation method)": [[127, "kqcircuits.simulations.simulation.Simulation.pcell_params_by_name"]], "ports (kqcircuits.simulations.simulation.simulation attribute)": [[127, "kqcircuits.simulations.simulation.Simulation.ports"]], "produce_layers() (kqcircuits.simulations.simulation.simulation method)": [[127, "kqcircuits.simulations.simulation.Simulation.produce_layers"]], "produce_waveguide_to_port() (kqcircuits.simulations.simulation.simulation method)": [[127, "kqcircuits.simulations.simulation.Simulation.produce_waveguide_to_port"]], "region_from_layer() (kqcircuits.simulations.simulation.simulation method)": [[127, "kqcircuits.simulations.simulation.Simulation.region_from_layer"]], "simplified_region() (kqcircuits.simulations.simulation.simulation method)": [[127, "kqcircuits.simulations.simulation.Simulation.simplified_region"]], "to_1d_list() (in module kqcircuits.simulations.simulation)": [[127, "kqcircuits.simulations.simulation.to_1d_list"]], "visualise_region() (kqcircuits.simulations.simulation.simulation method)": [[127, "kqcircuits.simulations.simulation.Simulation.visualise_region"]], "get_single_element_sim_class() (in module kqcircuits.simulations.single_element_simulation)": [[128, "kqcircuits.simulations.single_element_simulation.get_single_element_sim_class"]], "kqcircuits.simulations.single_element_simulation": [[128, "module-kqcircuits.simulations.single_element_simulation"]], "singlexmonsfullchipsim (class in kqcircuits.simulations.single_xmons_full_chip_sim)": [[129, "kqcircuits.simulations.single_xmons_full_chip_sim.SingleXmonsFullChipSim"]], "build() (kqcircuits.simulations.single_xmons_full_chip_sim.singlexmonsfullchipsim method)": [[129, "kqcircuits.simulations.single_xmons_full_chip_sim.SingleXmonsFullChipSim.build"]], "kqcircuits.simulations.single_xmons_full_chip_sim": [[129, "module-kqcircuits.simulations.single_xmons_full_chip_sim"]], "waveguidessim (class in kqcircuits.simulations.waveguides_sim)": [[130, "kqcircuits.simulations.waveguides_sim.WaveGuidesSim"]], "build() (kqcircuits.simulations.waveguides_sim.waveguidessim method)": [[130, "kqcircuits.simulations.waveguides_sim.WaveGuidesSim.build"]], "kqcircuits.simulations.waveguides_sim": [[130, "module-kqcircuits.simulations.waveguides_sim"]], "produce_ground_bumps() (kqcircuits.simulations.waveguides_sim.waveguidessim method)": [[130, "kqcircuits.simulations.waveguides_sim.WaveGuidesSim.produce_ground_bumps"]], "produce_guides() (kqcircuits.simulations.waveguides_sim.waveguidessim method)": [[130, "kqcircuits.simulations.waveguides_sim.WaveGuidesSim.produce_guides"]], "xmonsdirectcouplingfullchipsim (class in kqcircuits.simulations.xmons_direct_coupling_full_chip_sim)": [[131, "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim"]], "build() (kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.xmonsdirectcouplingfullchipsim method)": [[131, "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim.build"]], "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim": [[131, "module-kqcircuits.simulations.xmons_direct_coupling_full_chip_sim"]], "produce_launcher() (kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.xmonsdirectcouplingfullchipsim method)": [[131, "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim.produce_launcher"]], "produce_launchers_sma8() (kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.xmonsdirectcouplingfullchipsim method)": [[131, "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim.produce_launchers_SMA8"]], "produce_qubit() (kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.xmonsdirectcouplingfullchipsim method)": [[131, "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim.produce_qubit"]], "produce_readout_resonator() (kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.xmonsdirectcouplingfullchipsim method)": [[131, "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim.produce_readout_resonator"]], "produce_waveguide() (kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.xmonsdirectcouplingfullchipsim method)": [[131, "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim.produce_waveguide"]], "xmonsdirectcouplingsim (class in kqcircuits.simulations.xmons_direct_coupling_sim)": [[132, "kqcircuits.simulations.xmons_direct_coupling_sim.XMonsDirectCouplingSim"]], "build() (kqcircuits.simulations.xmons_direct_coupling_sim.xmonsdirectcouplingsim method)": [[132, "kqcircuits.simulations.xmons_direct_coupling_sim.XMonsDirectCouplingSim.build"]], "kqcircuits.simulations.xmons_direct_coupling_sim": [[132, "module-kqcircuits.simulations.xmons_direct_coupling_sim"]], "produce_qubits() (kqcircuits.simulations.xmons_direct_coupling_sim.xmonsdirectcouplingsim method)": [[132, "kqcircuits.simulations.xmons_direct_coupling_sim.XMonsDirectCouplingSim.produce_qubits"]], "kqcircuits.test_structures": [[133, "module-kqcircuits.test_structures"]], "airbridgedc (class in kqcircuits.test_structures.airbridge_dc)": [[134, "kqcircuits.test_structures.airbridge_dc.AirbridgeDC"]], "build() (kqcircuits.test_structures.airbridge_dc.airbridgedc method)": [[134, "kqcircuits.test_structures.airbridge_dc.AirbridgeDC.build"]], "kqcircuits.test_structures.airbridge_dc": [[134, "module-kqcircuits.test_structures.airbridge_dc"]], "crosstest (class in kqcircuits.test_structures.cross_test)": [[135, "kqcircuits.test_structures.cross_test.CrossTest"]], "build() (kqcircuits.test_structures.cross_test.crosstest method)": [[135, "kqcircuits.test_structures.cross_test.CrossTest.build"]], "kqcircuits.test_structures.cross_test": [[135, "module-kqcircuits.test_structures.cross_test"]], "kqcircuits.test_structures.junction_test_pads": [[136, "module-kqcircuits.test_structures.junction_test_pads"]], "junctiontestpads (class in kqcircuits.test_structures.junction_test_pads.junction_test_pads)": [[137, "kqcircuits.test_structures.junction_test_pads.junction_test_pads.JunctionTestPads"]], "coerce_parameters_impl() (kqcircuits.test_structures.junction_test_pads.junction_test_pads.junctiontestpads method)": [[137, "kqcircuits.test_structures.junction_test_pads.junction_test_pads.JunctionTestPads.coerce_parameters_impl"]], "create() (kqcircuits.test_structures.junction_test_pads.junction_test_pads.junctiontestpads class method)": [[137, "kqcircuits.test_structures.junction_test_pads.junction_test_pads.JunctionTestPads.create"]], "default_type (kqcircuits.test_structures.junction_test_pads.junction_test_pads.junctiontestpads attribute)": [[137, "kqcircuits.test_structures.junction_test_pads.junction_test_pads.JunctionTestPads.default_type"]], "kqcircuits.test_structures.junction_test_pads.junction_test_pads": [[137, "module-kqcircuits.test_structures.junction_test_pads.junction_test_pads"]], "produce_squid() (kqcircuits.test_structures.junction_test_pads.junction_test_pads.junctiontestpads method)": [[137, "kqcircuits.test_structures.junction_test_pads.junction_test_pads.JunctionTestPads.produce_squid"]], "junctiontestpadssimple (class in kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple)": [[138, "kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple.JunctionTestPadsSimple"]], "build() (kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple.junctiontestpadssimple method)": [[138, "kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple.JunctionTestPadsSimple.build"]], "kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple": [[138, "module-kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple"]], "stripestest (class in kqcircuits.test_structures.stripes_test)": [[139, "kqcircuits.test_structures.stripes_test.StripesTest"]], "build() (kqcircuits.test_structures.stripes_test.stripestest method)": [[139, "kqcircuits.test_structures.stripes_test.StripesTest.build"]], "kqcircuits.test_structures.stripes_test": [[139, "module-kqcircuits.test_structures.stripes_test"]], "stripestestincreasingwidth (class in kqcircuits.test_structures.stripes_test_increasing_width)": [[140, "kqcircuits.test_structures.stripes_test_increasing_width.StripesTestIncreasingWidth"]], "build() (kqcircuits.test_structures.stripes_test_increasing_width.stripestestincreasingwidth method)": [[140, "kqcircuits.test_structures.stripes_test_increasing_width.StripesTestIncreasingWidth.build"]], "kqcircuits.test_structures.stripes_test_increasing_width": [[140, "module-kqcircuits.test_structures.stripes_test_increasing_width"]], "library_description (kqcircuits.test_structures.test_structure.teststructure attribute)": [[141, "kqcircuits.test_structures.test_structure.TestStructure.LIBRARY_DESCRIPTION"]], "library_name (kqcircuits.test_structures.test_structure.teststructure attribute)": [[141, "kqcircuits.test_structures.test_structure.TestStructure.LIBRARY_NAME"]], "library_path (kqcircuits.test_structures.test_structure.teststructure attribute)": [[141, "kqcircuits.test_structures.test_structure.TestStructure.LIBRARY_PATH"]], "teststructure (class in kqcircuits.test_structures.test_structure)": [[141, "kqcircuits.test_structures.test_structure.TestStructure"]], "kqcircuits.test_structures.test_structure": [[141, "module-kqcircuits.test_structures.test_structure"]], "produce_etched_region() (kqcircuits.test_structures.test_structure.teststructure method)": [[141, "kqcircuits.test_structures.test_structure.TestStructure.produce_etched_region"]], "produce_four_point_pads() (kqcircuits.test_structures.test_structure.teststructure method)": [[141, "kqcircuits.test_structures.test_structure.TestStructure.produce_four_point_pads"]], "produce_pad() (kqcircuits.test_structures.test_structure.teststructure method)": [[141, "kqcircuits.test_structures.test_structure.TestStructure.produce_pad"]], "tsvtestpattern (class in kqcircuits.test_structures.tsv_test_pattern)": [[142, "kqcircuits.test_structures.tsv_test_pattern.TsvTestPattern"]], "build() (kqcircuits.test_structures.tsv_test_pattern.tsvtestpattern method)": [[142, "kqcircuits.test_structures.tsv_test_pattern.TsvTestPattern.build"]], "kqcircuits.test_structures.tsv_test_pattern": [[142, "module-kqcircuits.test_structures.tsv_test_pattern"]], "kqcircuits.util": [[143, "module-kqcircuits.util"]], "areareceiver (class in kqcircuits.util.area)": [[144, "kqcircuits.util.area.AreaReceiver"]], "get_area_and_density() (in module kqcircuits.util.area)": [[144, "kqcircuits.util.area.get_area_and_density"]], "kqcircuits.util.area": [[144, "module-kqcircuits.util.area"]], "put() (kqcircuits.util.area.areareceiver method)": [[144, "kqcircuits.util.area.AreaReceiver.put"]], "count_instances_in_cell() (in module kqcircuits.util.count_instances)": [[145, "kqcircuits.util.count_instances.count_instances_in_cell"]], "kqcircuits.util.count_instances": [[145, "module-kqcircuits.util.count_instances"]], "cap_params() (in module kqcircuits.util.coupler_lib)": [[146, "kqcircuits.util.coupler_lib.cap_params"]], "kqcircuits.util.coupler_lib": [[146, "module-kqcircuits.util.coupler_lib"]], "deep_delete_all() (in module kqcircuits.util.deep_delete)": [[147, "kqcircuits.util.deep_delete.deep_delete_all"]], "deep_delete_pcells() (in module kqcircuits.util.deep_delete)": [[147, "kqcircuits.util.deep_delete.deep_delete_pcells"]], "kqcircuits.util.deep_delete": [[147, "module-kqcircuits.util.deep_delete"]], "find_ansys_executable() (in module kqcircuits.util.defaults_helper)": [[148, "kqcircuits.util.defaults_helper.find_ansys_executable"]], "kqcircuits.util.defaults_helper": [[148, "module-kqcircuits.util.defaults_helper"]], "install_kqc_gui_dependencies() (in module kqcircuits.util.dependencies)": [[149, "kqcircuits.util.dependencies.install_kqc_gui_dependencies"]], "kqcircuits.util.dependencies": [[149, "module-kqcircuits.util.dependencies"]], "editnodeplugin (class in kqcircuits.util.edit_node_plugin)": [[150, "kqcircuits.util.edit_node_plugin.EditNodePlugin"]], "editnodepluginfactory (class in kqcircuits.util.edit_node_plugin)": [[150, "kqcircuits.util.edit_node_plugin.EditNodePluginFactory"]], "activated() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[150, "kqcircuits.util.edit_node_plugin.EditNodePlugin.activated"]], "create_dialog() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[150, "kqcircuits.util.edit_node_plugin.EditNodePlugin.create_dialog"]], "create_plugin() (kqcircuits.util.edit_node_plugin.editnodepluginfactory method)": [[150, "kqcircuits.util.edit_node_plugin.EditNodePluginFactory.create_plugin"]], "deactivated() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[150, "kqcircuits.util.edit_node_plugin.EditNodePlugin.deactivated"]], "deselect() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[150, "kqcircuits.util.edit_node_plugin.EditNodePlugin.deselect"]], "has_tracking_position() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[150, "kqcircuits.util.edit_node_plugin.EditNodePlugin.has_tracking_position"]], "kqcircuits.util.edit_node_plugin": [[150, "module-kqcircuits.util.edit_node_plugin"]], "mouse_click_event() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[150, "kqcircuits.util.edit_node_plugin.EditNodePlugin.mouse_click_event"]], "mouse_moved_event() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[150, "kqcircuits.util.edit_node_plugin.EditNodePlugin.mouse_moved_event"]], "select() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[150, "kqcircuits.util.edit_node_plugin.EditNodePlugin.select"]], "tracking_position() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[150, "kqcircuits.util.edit_node_plugin.EditNodePlugin.tracking_position"]], "update() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[150, "kqcircuits.util.edit_node_plugin.EditNodePlugin.update"]], "update_form_from_node() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[150, "kqcircuits.util.edit_node_plugin.EditNodePlugin.update_form_from_node"]], "update_node_from_form() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[150, "kqcircuits.util.edit_node_plugin.EditNodePlugin.update_node_from_form"]], "create_or_empty_tmp_directory() (in module kqcircuits.util.export_helper)": [[151, "kqcircuits.util.export_helper.create_or_empty_tmp_directory"]], "export_drc_report() (in module kqcircuits.util.export_helper)": [[151, "kqcircuits.util.export_helper.export_drc_report"]], "generate_probepoints_from_file() (in module kqcircuits.util.export_helper)": [[151, "kqcircuits.util.export_helper.generate_probepoints_from_file"]], "generate_probepoints_json() (in module kqcircuits.util.export_helper)": [[151, "kqcircuits.util.export_helper.generate_probepoints_json"]], "get_active_or_new_layout() (in module kqcircuits.util.export_helper)": [[151, "kqcircuits.util.export_helper.get_active_or_new_layout"]], "get_klayout_version() (in module kqcircuits.util.export_helper)": [[151, "kqcircuits.util.export_helper.get_klayout_version"]], "get_simulation_directory() (in module kqcircuits.util.export_helper)": [[151, "kqcircuits.util.export_helper.get_simulation_directory"]], "kqcircuits.util.export_helper": [[151, "module-kqcircuits.util.export_helper"]], "open_with_klayout_or_default_application() (in module kqcircuits.util.export_helper)": [[151, "kqcircuits.util.export_helper.open_with_klayout_or_default_application"]], "write_commit_reference_file() (in module kqcircuits.util.export_helper)": [[151, "kqcircuits.util.export_helper.write_commit_reference_file"]], "write_export_machine_versions_file() (in module kqcircuits.util.export_helper)": [[151, "kqcircuits.util.export_helper.write_export_machine_versions_file"]], "arc_points() (in module kqcircuits.util.geometry_helper)": [[152, "kqcircuits.util.geometry_helper.arc_points"]], "bezier_points() (in module kqcircuits.util.geometry_helper)": [[152, "kqcircuits.util.geometry_helper.bezier_points"]], "bspline_points() (in module kqcircuits.util.geometry_helper)": [[152, "kqcircuits.util.geometry_helper.bspline_points"]], "circle_polygon() (in module kqcircuits.util.geometry_helper)": [[152, "kqcircuits.util.geometry_helper.circle_polygon"]], "get_angle() (in module kqcircuits.util.geometry_helper)": [[152, "kqcircuits.util.geometry_helper.get_angle"]], "get_cell_path_length() (in module kqcircuits.util.geometry_helper)": [[152, "kqcircuits.util.geometry_helper.get_cell_path_length"]], "get_direction() (in module kqcircuits.util.geometry_helper)": [[152, "kqcircuits.util.geometry_helper.get_direction"]], "get_object_path_length() (in module kqcircuits.util.geometry_helper)": [[152, "kqcircuits.util.geometry_helper.get_object_path_length"]], "is_clockwise() (in module kqcircuits.util.geometry_helper)": [[152, "kqcircuits.util.geometry_helper.is_clockwise"]], "kqcircuits.util.geometry_helper": [[152, "module-kqcircuits.util.geometry_helper"]], "merge_points_and_match_on_edges() (in module kqcircuits.util.geometry_helper)": [[152, "kqcircuits.util.geometry_helper.merge_points_and_match_on_edges"]], "point_shift_along_vector() (in module kqcircuits.util.geometry_helper)": [[152, "kqcircuits.util.geometry_helper.point_shift_along_vector"]], "region_with_merged_points() (in module kqcircuits.util.geometry_helper)": [[152, "kqcircuits.util.geometry_helper.region_with_merged_points"]], "region_with_merged_polygons() (in module kqcircuits.util.geometry_helper)": [[152, "kqcircuits.util.geometry_helper.region_with_merged_polygons"]], "round_dpath_width() (in module kqcircuits.util.geometry_helper)": [[152, "kqcircuits.util.geometry_helper.round_dpath_width"]], "simple_region() (in module kqcircuits.util.geometry_helper)": [[152, "kqcircuits.util.geometry_helper.simple_region"]], "vector_length_and_direction() (in module kqcircuits.util.geometry_helper)": [[152, "kqcircuits.util.geometry_helper.vector_length_and_direction"]], "geometryjsondecoder (class in kqcircuits.util.geometry_json_encoder)": [[153, "kqcircuits.util.geometry_json_encoder.GeometryJsonDecoder"]], "geometryjsonencoder (class in kqcircuits.util.geometry_json_encoder)": [[153, "kqcircuits.util.geometry_json_encoder.GeometryJsonEncoder"]], "decode_dict_as_python_obj() (in module kqcircuits.util.geometry_json_encoder)": [[153, "kqcircuits.util.geometry_json_encoder.decode_dict_as_python_obj"]], "default() (kqcircuits.util.geometry_json_encoder.geometryjsonencoder method)": [[153, "kqcircuits.util.geometry_json_encoder.GeometryJsonEncoder.default"]], "encode_python_obj_as_dict() (in module kqcircuits.util.geometry_json_encoder)": [[153, "kqcircuits.util.geometry_json_encoder.encode_python_obj_as_dict"]], "kqcircuits.util.geometry_json_encoder": [[153, "module-kqcircuits.util.geometry_json_encoder"]], "kqcircuits.util.groundgrid": [[154, "module-kqcircuits.util.groundgrid"]], "make_grid() (in module kqcircuits.util.groundgrid)": [[154, "kqcircuits.util.groundgrid.make_grid"]], "get_all_node_elements() (in module kqcircuits.util.gui_helper)": [[155, "kqcircuits.util.gui_helper.get_all_node_elements"]], "get_nodes_near_position() (in module kqcircuits.util.gui_helper)": [[155, "kqcircuits.util.gui_helper.get_nodes_near_position"]], "get_valid_node_elements() (in module kqcircuits.util.gui_helper)": [[155, "kqcircuits.util.gui_helper.get_valid_node_elements"]], "kqcircuits.util.gui_helper": [[155, "module-kqcircuits.util.gui_helper"]], "node_from_text() (in module kqcircuits.util.gui_helper)": [[155, "kqcircuits.util.gui_helper.node_from_text"]], "node_to_text() (in module kqcircuits.util.gui_helper)": [[155, "kqcircuits.util.gui_helper.node_to_text"]], "replace_node() (in module kqcircuits.util.gui_helper)": [[155, "kqcircuits.util.gui_helper.replace_node"]], "kqcircuits.util.import_helper": [[156, "module-kqcircuits.util.import_helper"]], "module_from_file() (in module kqcircuits.util.import_helper)": [[156, "kqcircuits.util.import_helper.module_from_file"]], "bottomleft (kqcircuits.util.label.labelorigin attribute)": [[157, "kqcircuits.util.label.LabelOrigin.BOTTOMLEFT"]], "bottomright (kqcircuits.util.label.labelorigin attribute)": [[157, "kqcircuits.util.label.LabelOrigin.BOTTOMRIGHT"]], "labelorigin (class in kqcircuits.util.label)": [[157, "kqcircuits.util.label.LabelOrigin"]], "topleft (kqcircuits.util.label.labelorigin attribute)": [[157, "kqcircuits.util.label.LabelOrigin.TOPLEFT"]], "topright (kqcircuits.util.label.labelorigin attribute)": [[157, "kqcircuits.util.label.LabelOrigin.TOPRIGHT"]], "kqcircuits.util.label": [[157, "module-kqcircuits.util.label"]], "produce_label() (in module kqcircuits.util.label)": [[157, "kqcircuits.util.label.produce_label"]], "get_text_polygon() (in module kqcircuits.util.label_polygons)": [[158, "kqcircuits.util.label_polygons.get_text_polygon"]], "kqcircuits.util.label_polygons": [[158, "module-kqcircuits.util.label_polygons"]], "load_font_polygons() (in module kqcircuits.util.label_polygons)": [[158, "kqcircuits.util.label_polygons.load_font_polygons"]], "convert_cells_to_code() (in module kqcircuits.util.layout_to_code)": [[159, "kqcircuits.util.layout_to_code.convert_cells_to_code"]], "extract_pcell_data_from_views() (in module kqcircuits.util.layout_to_code)": [[159, "kqcircuits.util.layout_to_code.extract_pcell_data_from_views"]], "get_node_params() (in module kqcircuits.util.layout_to_code)": [[159, "kqcircuits.util.layout_to_code.get_node_params"]], "kqcircuits.util.layout_to_code": [[159, "module-kqcircuits.util.layout_to_code"]], "restore_pcells_to_views() (in module kqcircuits.util.layout_to_code)": [[159, "kqcircuits.util.layout_to_code.restore_pcells_to_views"]], "delete_all_libraries() (in module kqcircuits.util.library_helper)": [[160, "kqcircuits.util.library_helper.delete_all_libraries"]], "delete_library() (in module kqcircuits.util.library_helper)": [[160, "kqcircuits.util.library_helper.delete_library"]], "element_by_class_name() (in module kqcircuits.util.library_helper)": [[160, "kqcircuits.util.library_helper.element_by_class_name"]], "get_library_paths() (in module kqcircuits.util.library_helper)": [[160, "kqcircuits.util.library_helper.get_library_paths"]], "kqcircuits.util.library_helper": [[160, "module-kqcircuits.util.library_helper"]], "load_libraries() (in module kqcircuits.util.library_helper)": [[160, "kqcircuits.util.library_helper.load_libraries"]], "to_library_name() (in module kqcircuits.util.library_helper)": [[160, "kqcircuits.util.library_helper.to_library_name"]], "to_module_name() (in module kqcircuits.util.library_helper)": [[160, "kqcircuits.util.library_helper.to_module_name"]], "kqcircuits.util.log_router": [[161, "module-kqcircuits.util.log_router"]], "route_log() (in module kqcircuits.util.log_router)": [[161, "kqcircuits.util.log_router.route_log"]], "convert_child_instances_to_static() (in module kqcircuits.util.merge)": [[162, "kqcircuits.util.merge.convert_child_instances_to_static"]], "kqcircuits.util.merge": [[162, "module-kqcircuits.util.merge"]], "merge_layers() (in module kqcircuits.util.merge)": [[162, "kqcircuits.util.merge.merge_layers"]], "merge_layout_layers_on_face() (in module kqcircuits.util.merge)": [[162, "kqcircuits.util.merge.merge_layout_layers_on_face"]], "export_cell_netlist() (in module kqcircuits.util.netlist_extraction)": [[163, "kqcircuits.util.netlist_extraction.export_cell_netlist"]], "extract_circuits() (in module kqcircuits.util.netlist_extraction)": [[163, "kqcircuits.util.netlist_extraction.extract_circuits"]], "extract_nets() (in module kqcircuits.util.netlist_extraction)": [[163, "kqcircuits.util.netlist_extraction.extract_nets"]], "kqcircuits.util.netlist_extraction": [[163, "module-kqcircuits.util.netlist_extraction"]], "draw_graph() (in module kqcircuits.util.netlist_graph)": [[164, "kqcircuits.util.netlist_graph.draw_graph"]], "kqcircuits.util.netlist_graph": [[164, "module-kqcircuits.util.netlist_graph"]], "network_as_graph() (in module kqcircuits.util.netlist_graph)": [[164, "kqcircuits.util.netlist_graph.network_as_graph"]], "param (class in kqcircuits.util.parameters)": [[165, "kqcircuits.util.parameters.Param"]], "typeboolean (kqcircuits.util.parameters.pdt attribute)": [[165, "kqcircuits.util.parameters.pdt.TypeBoolean"]], "typedouble (kqcircuits.util.parameters.pdt attribute)": [[165, "kqcircuits.util.parameters.pdt.TypeDouble"]], "typeint (kqcircuits.util.parameters.pdt attribute)": [[165, "kqcircuits.util.parameters.pdt.TypeInt"]], "typelayer (kqcircuits.util.parameters.pdt attribute)": [[165, "kqcircuits.util.parameters.pdt.TypeLayer"]], "typelist (kqcircuits.util.parameters.pdt attribute)": [[165, "kqcircuits.util.parameters.pdt.TypeList"]], "typenone (kqcircuits.util.parameters.pdt attribute)": [[165, "kqcircuits.util.parameters.pdt.TypeNone"]], "typeshape (kqcircuits.util.parameters.pdt attribute)": [[165, "kqcircuits.util.parameters.pdt.TypeShape"]], "typestring (kqcircuits.util.parameters.pdt attribute)": [[165, "kqcircuits.util.parameters.pdt.TypeString"]], "add_parameter() (in module kqcircuits.util.parameters)": [[165, "kqcircuits.util.parameters.add_parameter"]], "add_parameters_from() (in module kqcircuits.util.parameters)": [[165, "kqcircuits.util.parameters.add_parameters_from"]], "get_all() (kqcircuits.util.parameters.param class method)": [[165, "kqcircuits.util.parameters.Param.get_all"]], "kqcircuits.util.parameters": [[165, "module-kqcircuits.util.parameters"]], "pdt (class in kqcircuits.util.parameters)": [[165, "kqcircuits.util.parameters.pdt"]], "kqcircuits.util.plugin_startup": [[166, "module-kqcircuits.util.plugin_startup"]], "register_plugins() (in module kqcircuits.util.plugin_startup)": [[166, "kqcircuits.util.plugin_startup.register_plugins"]], "junctionsimport (class in kqcircuits.util.refpoints)": [[167, "kqcircuits.util.refpoints.JunctionSimPort"]], "refpointtoedgeport (class in kqcircuits.util.refpoints)": [[167, "kqcircuits.util.refpoints.RefpointToEdgePort"]], "refpointtointernalport (class in kqcircuits.util.refpoints)": [[167, "kqcircuits.util.refpoints.RefpointToInternalPort"]], "refpointtosimport (class in kqcircuits.util.refpoints)": [[167, "kqcircuits.util.refpoints.RefpointToSimPort"]], "refpoints (class in kqcircuits.util.refpoints)": [[167, "kqcircuits.util.refpoints.Refpoints"]], "waveguidetosimport (class in kqcircuits.util.refpoints)": [[167, "kqcircuits.util.refpoints.WaveguideToSimPort"]], "a (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[167, "kqcircuits.util.refpoints.WaveguideToSimPort.a"]], "airbridge (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[167, "kqcircuits.util.refpoints.WaveguideToSimPort.airbridge"]], "b (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[167, "kqcircuits.util.refpoints.WaveguideToSimPort.b"]], "cell (kqcircuits.util.refpoints.refpoints attribute)": [[167, "kqcircuits.util.refpoints.Refpoints.cell"]], "dict() (kqcircuits.util.refpoints.refpoints method)": [[167, "kqcircuits.util.refpoints.Refpoints.dict"]], "face (kqcircuits.util.refpoints.junctionsimport attribute)": [[167, "kqcircuits.util.refpoints.JunctionSimPort.face"]], "face (kqcircuits.util.refpoints.refpointtosimport attribute)": [[167, "kqcircuits.util.refpoints.RefpointToSimPort.face"]], "face (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[167, "kqcircuits.util.refpoints.WaveguideToSimPort.face"]], "floating (kqcircuits.util.refpoints.junctionsimport attribute)": [[167, "kqcircuits.util.refpoints.JunctionSimPort.floating"]], "items() (kqcircuits.util.refpoints.refpoints method)": [[167, "kqcircuits.util.refpoints.Refpoints.items"]], "keys() (kqcircuits.util.refpoints.refpoints method)": [[167, "kqcircuits.util.refpoints.Refpoints.keys"]], "kqcircuits.util.refpoints": [[167, "module-kqcircuits.util.refpoints"]], "layer (kqcircuits.util.refpoints.refpoints attribute)": [[167, "kqcircuits.util.refpoints.Refpoints.layer"]], "other_refpoint (kqcircuits.util.refpoints.junctionsimport attribute)": [[167, "kqcircuits.util.refpoints.JunctionSimPort.other_refpoint"]], "over_etching (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[167, "kqcircuits.util.refpoints.WaveguideToSimPort.over_etching"]], "rec_levels (kqcircuits.util.refpoints.refpoints attribute)": [[167, "kqcircuits.util.refpoints.Refpoints.rec_levels"]], "refpoint (kqcircuits.util.refpoints.junctionsimport attribute)": [[167, "kqcircuits.util.refpoints.JunctionSimPort.refpoint"]], "refpoint (kqcircuits.util.refpoints.refpointtosimport attribute)": [[167, "kqcircuits.util.refpoints.RefpointToSimPort.refpoint"]], "refpoint (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[167, "kqcircuits.util.refpoints.WaveguideToSimPort.refpoint"]], "side (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[167, "kqcircuits.util.refpoints.WaveguideToSimPort.side"]], "term1 (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[167, "kqcircuits.util.refpoints.WaveguideToSimPort.term1"]], "towards (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[167, "kqcircuits.util.refpoints.WaveguideToSimPort.towards"]], "trans (kqcircuits.util.refpoints.refpoints attribute)": [[167, "kqcircuits.util.refpoints.Refpoints.trans"]], "turn_radius (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[167, "kqcircuits.util.refpoints.WaveguideToSimPort.turn_radius"]], "use_internal_ports (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[167, "kqcircuits.util.refpoints.WaveguideToSimPort.use_internal_ports"]], "values() (kqcircuits.util.refpoints.refpoints method)": [[167, "kqcircuits.util.refpoints.Refpoints.values"]], "waveguide_length (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[167, "kqcircuits.util.refpoints.WaveguideToSimPort.waveguide_length"]], "junctionentry (class in kqcircuits.util.replace_junctions)": [[168, "kqcircuits.util.replace_junctions.JunctionEntry"]], "check_static_cell_has_junctions() (in module kqcircuits.util.replace_junctions)": [[168, "kqcircuits.util.replace_junctions.check_static_cell_has_junctions"]], "convert_cells_to_static() (in module kqcircuits.util.replace_junctions)": [[168, "kqcircuits.util.replace_junctions.convert_cells_to_static"]], "copy_one_layer_of_cell() (in module kqcircuits.util.replace_junctions)": [[168, "kqcircuits.util.replace_junctions.copy_one_layer_of_cell"]], "extract_junctions() (in module kqcircuits.util.replace_junctions)": [[168, "kqcircuits.util.replace_junctions.extract_junctions"]], "get_tuned_junction_json() (in module kqcircuits.util.replace_junctions)": [[168, "kqcircuits.util.replace_junctions.get_tuned_junction_json"]], "kqcircuits.util.replace_junctions": [[168, "module-kqcircuits.util.replace_junctions"]], "place_junctions() (in module kqcircuits.util.replace_junctions)": [[168, "kqcircuits.util.replace_junctions.place_junctions"]], "replace_squid() (in module kqcircuits.util.replace_junctions)": [[168, "kqcircuits.util.replace_junctions.replace_squid"]], "replace_squids() (in module kqcircuits.util.replace_junctions)": [[168, "kqcircuits.util.replace_junctions.replace_squids"]], "kqcircuits.util.symmetric_polygons": [[169, "module-kqcircuits.util.symmetric_polygons"]], "polygon_with_hsym() (in module kqcircuits.util.symmetric_polygons)": [[169, "kqcircuits.util.symmetric_polygons.polygon_with_hsym"]], "polygon_with_sym() (in module kqcircuits.util.symmetric_polygons)": [[169, "kqcircuits.util.symmetric_polygons.polygon_with_sym"]], "polygon_with_vsym() (in module kqcircuits.util.symmetric_polygons)": [[169, "kqcircuits.util.symmetric_polygons.polygon_with_vsym"]]}})