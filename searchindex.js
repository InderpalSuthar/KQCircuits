Search.setIndex({"docnames": ["about", "api/kqcircuits", "api/kqcircuits.chips", "api/kqcircuits.chips.airbridge_crossings", "api/kqcircuits.chips.airbridge_dc_test", "api/kqcircuits.chips.chip", "api/kqcircuits.chips.crossing_twoface", "api/kqcircuits.chips.daisy_woven", "api/kqcircuits.chips.dc_test", "api/kqcircuits.chips.demo", "api/kqcircuits.chips.demo_twoface", "api/kqcircuits.chips.empty", "api/kqcircuits.chips.junction_test", "api/kqcircuits.chips.junction_test2", "api/kqcircuits.chips.launchers", "api/kqcircuits.chips.lithography_test", "api/kqcircuits.chips.lithography_test_twoface", "api/kqcircuits.chips.munch_qubits", "api/kqcircuits.chips.quality_factor", "api/kqcircuits.chips.quality_factor_twoface", "api/kqcircuits.chips.sample_holder_test", "api/kqcircuits.chips.shaping", "api/kqcircuits.chips.simple", "api/kqcircuits.chips.single_xmons", "api/kqcircuits.chips.stripes", "api/kqcircuits.chips.tsv_test", "api/kqcircuits.chips.xmons_direct_coupling", "api/kqcircuits.defaults", "api/kqcircuits.elements", "api/kqcircuits.elements.airbridge_connection", "api/kqcircuits.elements.airbridges", "api/kqcircuits.elements.airbridges.airbridge", "api/kqcircuits.elements.airbridges.airbridge_multi_face", "api/kqcircuits.elements.airbridges.airbridge_rectangular", "api/kqcircuits.elements.capacitive_x_coupler", "api/kqcircuits.elements.chip_frame", "api/kqcircuits.elements.circular_capacitor", "api/kqcircuits.elements.element", "api/kqcircuits.elements.finger_capacitor_square", "api/kqcircuits.elements.finger_capacitor_taper", "api/kqcircuits.elements.flip_chip_connectors", "api/kqcircuits.elements.flip_chip_connectors.flip_chip_connector", "api/kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc", "api/kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf", "api/kqcircuits.elements.fluxlines", "api/kqcircuits.elements.fluxlines.fluxline", "api/kqcircuits.elements.fluxlines.fluxline_standard", "api/kqcircuits.elements.fluxlines.fluxline_straight", "api/kqcircuits.elements.hanger_resonator", "api/kqcircuits.elements.launcher", "api/kqcircuits.elements.launcher_dc", "api/kqcircuits.elements.markers", "api/kqcircuits.elements.markers.marker", "api/kqcircuits.elements.markers.marker_standard", "api/kqcircuits.elements.markers.mask_marker_fc", "api/kqcircuits.elements.meander", "api/kqcircuits.elements.quarter_wave_cpw_resonator", "api/kqcircuits.elements.smooth_capacitor", "api/kqcircuits.elements.spiral_resonator_polygon", "api/kqcircuits.elements.tsvs", "api/kqcircuits.elements.tsvs.tsv", "api/kqcircuits.elements.tsvs.tsv_ellipse", "api/kqcircuits.elements.tsvs.tsv_standard", "api/kqcircuits.elements.waveguide_composite", "api/kqcircuits.elements.waveguide_coplanar", "api/kqcircuits.elements.waveguide_coplanar_curved", "api/kqcircuits.elements.waveguide_coplanar_splitter", "api/kqcircuits.elements.waveguide_coplanar_straight", "api/kqcircuits.elements.waveguide_coplanar_taper", "api/kqcircuits.junctions", "api/kqcircuits.junctions.junction", "api/kqcircuits.junctions.manhattan", "api/kqcircuits.junctions.manhattan_single_junction", "api/kqcircuits.junctions.no_squid", "api/kqcircuits.junctions.sim", "api/kqcircuits.junctions.squid", "api/kqcircuits.klayout_view", "api/kqcircuits.layer_cluster", "api/kqcircuits.layer_config", "api/kqcircuits.layer_config.default_layer_config", "api/kqcircuits.layer_config.example_layer_config", "api/kqcircuits.masks", "api/kqcircuits.masks.mask_export", "api/kqcircuits.masks.mask_layout", "api/kqcircuits.masks.mask_set", "api/kqcircuits.masks.multi_face_mask_layout", "api/kqcircuits.pya_resolver", "api/kqcircuits.qubits", "api/kqcircuits.qubits.circular_transmon_single_island", "api/kqcircuits.qubits.concentric_transmon", "api/kqcircuits.qubits.double_pads", "api/kqcircuits.qubits.double_pads_splines", "api/kqcircuits.qubits.qubit", "api/kqcircuits.qubits.swissmon", "api/kqcircuits.run", "api/kqcircuits.simulations", "api/kqcircuits.simulations.airbridges_sim", "api/kqcircuits.simulations.cross_section_simulation", "api/kqcircuits.simulations.empty_simulation", "api/kqcircuits.simulations.epr", "api/kqcircuits.simulations.epr.example", "api/kqcircuits.simulations.epr.swissmon", "api/kqcircuits.simulations.epr.utils", "api/kqcircuits.simulations.export", "api/kqcircuits.simulations.export.ansys", "api/kqcircuits.simulations.export.ansys.ansys_export", "api/kqcircuits.simulations.export.ansys.ansys_solution", "api/kqcircuits.simulations.export.elmer", "api/kqcircuits.simulations.export.elmer.elmer_export", "api/kqcircuits.simulations.export.elmer.elmer_solution", "api/kqcircuits.simulations.export.export_and_run", "api/kqcircuits.simulations.export.export_singularity", "api/kqcircuits.simulations.export.remote_export_and_run", "api/kqcircuits.simulations.export.simulation_export", "api/kqcircuits.simulations.export.simulation_validate", "api/kqcircuits.simulations.export.solution", "api/kqcircuits.simulations.export.sonnet", "api/kqcircuits.simulations.export.sonnet.parser", "api/kqcircuits.simulations.export.sonnet.sonnet_export", "api/kqcircuits.simulations.export.util", "api/kqcircuits.simulations.export.xsection", "api/kqcircuits.simulations.export.xsection.epr_correction_export", "api/kqcircuits.simulations.export.xsection.xsection_export", "api/kqcircuits.simulations.partition_region", "api/kqcircuits.simulations.port", "api/kqcircuits.simulations.post_process", "api/kqcircuits.simulations.simulation", "api/kqcircuits.simulations.single_element_simulation", "api/kqcircuits.simulations.single_xmons_full_chip_sim", "api/kqcircuits.simulations.waveguides_sim", "api/kqcircuits.simulations.xmons_direct_coupling_full_chip_sim", "api/kqcircuits.simulations.xmons_direct_coupling_sim", "api/kqcircuits.test_structures", "api/kqcircuits.test_structures.airbridge_dc", "api/kqcircuits.test_structures.cross_test", "api/kqcircuits.test_structures.junction_test_pads", "api/kqcircuits.test_structures.junction_test_pads.junction_test_pads", "api/kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple", "api/kqcircuits.test_structures.stripes_test", "api/kqcircuits.test_structures.stripes_test_increasing_width", "api/kqcircuits.test_structures.test_structure", "api/kqcircuits.test_structures.tsv_test_pattern", "api/kqcircuits.util", "api/kqcircuits.util.area", "api/kqcircuits.util.count_instances", "api/kqcircuits.util.coupler_lib", "api/kqcircuits.util.deep_delete", "api/kqcircuits.util.defaults_helper", "api/kqcircuits.util.dependencies", "api/kqcircuits.util.edit_node_plugin", "api/kqcircuits.util.export_helper", "api/kqcircuits.util.geometry_helper", "api/kqcircuits.util.geometry_json_encoder", "api/kqcircuits.util.groundgrid", "api/kqcircuits.util.gui_helper", "api/kqcircuits.util.import_helper", "api/kqcircuits.util.label", "api/kqcircuits.util.label_polygons", "api/kqcircuits.util.layout_to_code", "api/kqcircuits.util.library_helper", "api/kqcircuits.util.log_router", "api/kqcircuits.util.merge", "api/kqcircuits.util.netlist_extraction", "api/kqcircuits.util.netlist_graph", "api/kqcircuits.util.parameters", "api/kqcircuits.util.plugin_startup", "api/kqcircuits.util.refpoints", "api/kqcircuits.util.replace_junctions", "api/kqcircuits.util.symmetric_polygons", "citing", "contributing", "developer/architecture", "developer/coding_style", "developer/containers", "developer/documentation", "developer/index", "developer/setup", "developer/standalone", "developer/testing", "index", "installation", "salt", "support", "trademarks", "user_guide/file_system_and_utilities", "user_guide/gui_features", "user_guide/gui_workflow", "user_guide/index", "user_guide/macro_workflow", "user_guide/mask_export", "user_guide/python_workflow", "user_guide/simulation/elmer_remote_workflow", "user_guide/simulation/export_and_run", "user_guide/simulation/gmsh_elmer_export", "user_guide/simulation/simulation_features", "user_guide/simulation/simulation_objects", "user_guide/simulation/simulation_scripts", "user_guide/simulations", "user_guide/terminology", "user_guide/usage", "user_guide/xsection"], "filenames": ["about.rst", "api/kqcircuits.rst", "api/kqcircuits.chips.rst", "api/kqcircuits.chips.airbridge_crossings.rst", "api/kqcircuits.chips.airbridge_dc_test.rst", "api/kqcircuits.chips.chip.rst", "api/kqcircuits.chips.crossing_twoface.rst", "api/kqcircuits.chips.daisy_woven.rst", "api/kqcircuits.chips.dc_test.rst", "api/kqcircuits.chips.demo.rst", "api/kqcircuits.chips.demo_twoface.rst", "api/kqcircuits.chips.empty.rst", "api/kqcircuits.chips.junction_test.rst", "api/kqcircuits.chips.junction_test2.rst", "api/kqcircuits.chips.launchers.rst", "api/kqcircuits.chips.lithography_test.rst", "api/kqcircuits.chips.lithography_test_twoface.rst", "api/kqcircuits.chips.munch_qubits.rst", "api/kqcircuits.chips.quality_factor.rst", "api/kqcircuits.chips.quality_factor_twoface.rst", "api/kqcircuits.chips.sample_holder_test.rst", "api/kqcircuits.chips.shaping.rst", "api/kqcircuits.chips.simple.rst", "api/kqcircuits.chips.single_xmons.rst", "api/kqcircuits.chips.stripes.rst", "api/kqcircuits.chips.tsv_test.rst", "api/kqcircuits.chips.xmons_direct_coupling.rst", "api/kqcircuits.defaults.rst", "api/kqcircuits.elements.rst", "api/kqcircuits.elements.airbridge_connection.rst", "api/kqcircuits.elements.airbridges.rst", "api/kqcircuits.elements.airbridges.airbridge.rst", "api/kqcircuits.elements.airbridges.airbridge_multi_face.rst", "api/kqcircuits.elements.airbridges.airbridge_rectangular.rst", "api/kqcircuits.elements.capacitive_x_coupler.rst", "api/kqcircuits.elements.chip_frame.rst", "api/kqcircuits.elements.circular_capacitor.rst", "api/kqcircuits.elements.element.rst", "api/kqcircuits.elements.finger_capacitor_square.rst", "api/kqcircuits.elements.finger_capacitor_taper.rst", "api/kqcircuits.elements.flip_chip_connectors.rst", "api/kqcircuits.elements.flip_chip_connectors.flip_chip_connector.rst", "api/kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc.rst", "api/kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf.rst", "api/kqcircuits.elements.fluxlines.rst", "api/kqcircuits.elements.fluxlines.fluxline.rst", "api/kqcircuits.elements.fluxlines.fluxline_standard.rst", "api/kqcircuits.elements.fluxlines.fluxline_straight.rst", "api/kqcircuits.elements.hanger_resonator.rst", "api/kqcircuits.elements.launcher.rst", "api/kqcircuits.elements.launcher_dc.rst", "api/kqcircuits.elements.markers.rst", "api/kqcircuits.elements.markers.marker.rst", "api/kqcircuits.elements.markers.marker_standard.rst", "api/kqcircuits.elements.markers.mask_marker_fc.rst", "api/kqcircuits.elements.meander.rst", "api/kqcircuits.elements.quarter_wave_cpw_resonator.rst", "api/kqcircuits.elements.smooth_capacitor.rst", "api/kqcircuits.elements.spiral_resonator_polygon.rst", "api/kqcircuits.elements.tsvs.rst", "api/kqcircuits.elements.tsvs.tsv.rst", "api/kqcircuits.elements.tsvs.tsv_ellipse.rst", "api/kqcircuits.elements.tsvs.tsv_standard.rst", "api/kqcircuits.elements.waveguide_composite.rst", "api/kqcircuits.elements.waveguide_coplanar.rst", "api/kqcircuits.elements.waveguide_coplanar_curved.rst", "api/kqcircuits.elements.waveguide_coplanar_splitter.rst", "api/kqcircuits.elements.waveguide_coplanar_straight.rst", "api/kqcircuits.elements.waveguide_coplanar_taper.rst", "api/kqcircuits.junctions.rst", "api/kqcircuits.junctions.junction.rst", "api/kqcircuits.junctions.manhattan.rst", "api/kqcircuits.junctions.manhattan_single_junction.rst", "api/kqcircuits.junctions.no_squid.rst", "api/kqcircuits.junctions.sim.rst", "api/kqcircuits.junctions.squid.rst", "api/kqcircuits.klayout_view.rst", "api/kqcircuits.layer_cluster.rst", "api/kqcircuits.layer_config.rst", "api/kqcircuits.layer_config.default_layer_config.rst", "api/kqcircuits.layer_config.example_layer_config.rst", "api/kqcircuits.masks.rst", "api/kqcircuits.masks.mask_export.rst", "api/kqcircuits.masks.mask_layout.rst", "api/kqcircuits.masks.mask_set.rst", "api/kqcircuits.masks.multi_face_mask_layout.rst", "api/kqcircuits.pya_resolver.rst", "api/kqcircuits.qubits.rst", "api/kqcircuits.qubits.circular_transmon_single_island.rst", "api/kqcircuits.qubits.concentric_transmon.rst", "api/kqcircuits.qubits.double_pads.rst", "api/kqcircuits.qubits.double_pads_splines.rst", "api/kqcircuits.qubits.qubit.rst", "api/kqcircuits.qubits.swissmon.rst", "api/kqcircuits.run.rst", "api/kqcircuits.simulations.rst", "api/kqcircuits.simulations.airbridges_sim.rst", "api/kqcircuits.simulations.cross_section_simulation.rst", "api/kqcircuits.simulations.empty_simulation.rst", "api/kqcircuits.simulations.epr.rst", "api/kqcircuits.simulations.epr.example.rst", "api/kqcircuits.simulations.epr.swissmon.rst", "api/kqcircuits.simulations.epr.utils.rst", "api/kqcircuits.simulations.export.rst", "api/kqcircuits.simulations.export.ansys.rst", "api/kqcircuits.simulations.export.ansys.ansys_export.rst", "api/kqcircuits.simulations.export.ansys.ansys_solution.rst", "api/kqcircuits.simulations.export.elmer.rst", "api/kqcircuits.simulations.export.elmer.elmer_export.rst", "api/kqcircuits.simulations.export.elmer.elmer_solution.rst", "api/kqcircuits.simulations.export.export_and_run.rst", "api/kqcircuits.simulations.export.export_singularity.rst", "api/kqcircuits.simulations.export.remote_export_and_run.rst", "api/kqcircuits.simulations.export.simulation_export.rst", "api/kqcircuits.simulations.export.simulation_validate.rst", "api/kqcircuits.simulations.export.solution.rst", "api/kqcircuits.simulations.export.sonnet.rst", "api/kqcircuits.simulations.export.sonnet.parser.rst", "api/kqcircuits.simulations.export.sonnet.sonnet_export.rst", "api/kqcircuits.simulations.export.util.rst", "api/kqcircuits.simulations.export.xsection.rst", "api/kqcircuits.simulations.export.xsection.epr_correction_export.rst", "api/kqcircuits.simulations.export.xsection.xsection_export.rst", "api/kqcircuits.simulations.partition_region.rst", "api/kqcircuits.simulations.port.rst", "api/kqcircuits.simulations.post_process.rst", "api/kqcircuits.simulations.simulation.rst", "api/kqcircuits.simulations.single_element_simulation.rst", "api/kqcircuits.simulations.single_xmons_full_chip_sim.rst", "api/kqcircuits.simulations.waveguides_sim.rst", "api/kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.rst", "api/kqcircuits.simulations.xmons_direct_coupling_sim.rst", "api/kqcircuits.test_structures.rst", "api/kqcircuits.test_structures.airbridge_dc.rst", "api/kqcircuits.test_structures.cross_test.rst", "api/kqcircuits.test_structures.junction_test_pads.rst", "api/kqcircuits.test_structures.junction_test_pads.junction_test_pads.rst", "api/kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple.rst", "api/kqcircuits.test_structures.stripes_test.rst", "api/kqcircuits.test_structures.stripes_test_increasing_width.rst", "api/kqcircuits.test_structures.test_structure.rst", "api/kqcircuits.test_structures.tsv_test_pattern.rst", "api/kqcircuits.util.rst", "api/kqcircuits.util.area.rst", "api/kqcircuits.util.count_instances.rst", "api/kqcircuits.util.coupler_lib.rst", "api/kqcircuits.util.deep_delete.rst", "api/kqcircuits.util.defaults_helper.rst", "api/kqcircuits.util.dependencies.rst", "api/kqcircuits.util.edit_node_plugin.rst", "api/kqcircuits.util.export_helper.rst", "api/kqcircuits.util.geometry_helper.rst", "api/kqcircuits.util.geometry_json_encoder.rst", "api/kqcircuits.util.groundgrid.rst", "api/kqcircuits.util.gui_helper.rst", "api/kqcircuits.util.import_helper.rst", "api/kqcircuits.util.label.rst", "api/kqcircuits.util.label_polygons.rst", "api/kqcircuits.util.layout_to_code.rst", "api/kqcircuits.util.library_helper.rst", "api/kqcircuits.util.log_router.rst", "api/kqcircuits.util.merge.rst", "api/kqcircuits.util.netlist_extraction.rst", "api/kqcircuits.util.netlist_graph.rst", "api/kqcircuits.util.parameters.rst", "api/kqcircuits.util.plugin_startup.rst", "api/kqcircuits.util.refpoints.rst", "api/kqcircuits.util.replace_junctions.rst", "api/kqcircuits.util.symmetric_polygons.rst", "citing.rst", "contributing.rst", "developer/architecture.rst", "developer/coding_style.rst", "developer/containers.rst", "developer/documentation.rst", "developer/index.rst", "developer/setup.rst", "developer/standalone.rst", "developer/testing.rst", "index.rst", "installation.rst", "salt.rst", "support.rst", "trademarks.rst", "user_guide/file_system_and_utilities.rst", "user_guide/gui_features.rst", "user_guide/gui_workflow.rst", "user_guide/index.rst", "user_guide/macro_workflow.rst", "user_guide/mask_export.rst", "user_guide/python_workflow.rst", "user_guide/simulation/elmer_remote_workflow.rst", "user_guide/simulation/export_and_run.rst", "user_guide/simulation/gmsh_elmer_export.rst", "user_guide/simulation/simulation_features.rst", "user_guide/simulation/simulation_objects.rst", "user_guide/simulation/simulation_scripts.rst", "user_guide/simulations.rst", "user_guide/terminology.rst", "user_guide/usage.rst", "user_guide/xsection.rst"], "titles": ["About", "API documentation", "kqcircuits.chips", "kqcircuits.chips.airbridge_crossings", "kqcircuits.chips.airbridge_dc_test", "kqcircuits.chips.chip", "kqcircuits.chips.crossing_twoface", "kqcircuits.chips.daisy_woven", "kqcircuits.chips.dc_test", "kqcircuits.chips.demo", "kqcircuits.chips.demo_twoface", "kqcircuits.chips.empty", "kqcircuits.chips.junction_test", "kqcircuits.chips.junction_test2", "kqcircuits.chips.launchers", "kqcircuits.chips.lithography_test", "kqcircuits.chips.lithography_test_twoface", "kqcircuits.chips.munch_qubits", "kqcircuits.chips.quality_factor", "kqcircuits.chips.quality_factor_twoface", "kqcircuits.chips.sample_holder_test", "kqcircuits.chips.shaping", "kqcircuits.chips.simple", "kqcircuits.chips.single_xmons", "kqcircuits.chips.stripes", "kqcircuits.chips.tsv_test", "kqcircuits.chips.xmons_direct_coupling", "kqcircuits.defaults", "kqcircuits.elements", "kqcircuits.elements.airbridge_connection", "kqcircuits.elements.airbridges", "kqcircuits.elements.airbridges.airbridge", "kqcircuits.elements.airbridges.airbridge_multi_face", "kqcircuits.elements.airbridges.airbridge_rectangular", "kqcircuits.elements.capacitive_x_coupler", "kqcircuits.elements.chip_frame", "kqcircuits.elements.circular_capacitor", "kqcircuits.elements.element", "kqcircuits.elements.finger_capacitor_square", "kqcircuits.elements.finger_capacitor_taper", "kqcircuits.elements.flip_chip_connectors", "kqcircuits.elements.flip_chip_connectors.flip_chip_connector", "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc", "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf", "kqcircuits.elements.fluxlines", "kqcircuits.elements.fluxlines.fluxline", "kqcircuits.elements.fluxlines.fluxline_standard", "kqcircuits.elements.fluxlines.fluxline_straight", "kqcircuits.elements.hanger_resonator", "kqcircuits.elements.launcher", "kqcircuits.elements.launcher_dc", "kqcircuits.elements.markers", "kqcircuits.elements.markers.marker", "kqcircuits.elements.markers.marker_standard", "kqcircuits.elements.markers.mask_marker_fc", "kqcircuits.elements.meander", "kqcircuits.elements.quarter_wave_cpw_resonator", "kqcircuits.elements.smooth_capacitor", "kqcircuits.elements.spiral_resonator_polygon", "kqcircuits.elements.tsvs", "kqcircuits.elements.tsvs.tsv", "kqcircuits.elements.tsvs.tsv_ellipse", "kqcircuits.elements.tsvs.tsv_standard", "kqcircuits.elements.waveguide_composite", "kqcircuits.elements.waveguide_coplanar", "kqcircuits.elements.waveguide_coplanar_curved", "kqcircuits.elements.waveguide_coplanar_splitter", "kqcircuits.elements.waveguide_coplanar_straight", "kqcircuits.elements.waveguide_coplanar_taper", "kqcircuits.junctions", "kqcircuits.junctions.junction", "kqcircuits.junctions.manhattan", "kqcircuits.junctions.manhattan_single_junction", "kqcircuits.junctions.no_squid", "kqcircuits.junctions.sim", "kqcircuits.junctions.squid", "kqcircuits.klayout_view", "kqcircuits.layer_cluster", "kqcircuits.layer_config", "kqcircuits.layer_config.default_layer_config", "kqcircuits.layer_config.example_layer_config", "kqcircuits.masks", "kqcircuits.masks.mask_export", "kqcircuits.masks.mask_layout", "kqcircuits.masks.mask_set", "kqcircuits.masks.multi_face_mask_layout", "kqcircuits.pya_resolver", "kqcircuits.qubits", "kqcircuits.qubits.circular_transmon_single_island", "kqcircuits.qubits.concentric_transmon", "kqcircuits.qubits.double_pads", "kqcircuits.qubits.double_pads_splines", "kqcircuits.qubits.qubit", "kqcircuits.qubits.swissmon", "kqcircuits.run", "kqcircuits.simulations", "kqcircuits.simulations.airbridges_sim", "kqcircuits.simulations.cross_section_simulation", "kqcircuits.simulations.empty_simulation", "kqcircuits.simulations.epr", "kqcircuits.simulations.epr.example", "kqcircuits.simulations.epr.swissmon", "kqcircuits.simulations.epr.utils", "kqcircuits.simulations.export", "kqcircuits.simulations.export.ansys", "kqcircuits.simulations.export.ansys.ansys_export", "kqcircuits.simulations.export.ansys.ansys_solution", "kqcircuits.simulations.export.elmer", "kqcircuits.simulations.export.elmer.elmer_export", "kqcircuits.simulations.export.elmer.elmer_solution", "kqcircuits.simulations.export.export_and_run", "kqcircuits.simulations.export.export_singularity", "kqcircuits.simulations.export.remote_export_and_run", "kqcircuits.simulations.export.simulation_export", "kqcircuits.simulations.export.simulation_validate", "kqcircuits.simulations.export.solution", "kqcircuits.simulations.export.sonnet", "kqcircuits.simulations.export.sonnet.parser", "kqcircuits.simulations.export.sonnet.sonnet_export", "kqcircuits.simulations.export.util", "kqcircuits.simulations.export.xsection", "kqcircuits.simulations.export.xsection.epr_correction_export", "kqcircuits.simulations.export.xsection.xsection_export", "kqcircuits.simulations.partition_region", "kqcircuits.simulations.port", "kqcircuits.simulations.post_process", "kqcircuits.simulations.simulation", "kqcircuits.simulations.single_element_simulation", "kqcircuits.simulations.single_xmons_full_chip_sim", "kqcircuits.simulations.waveguides_sim", "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim", "kqcircuits.simulations.xmons_direct_coupling_sim", "kqcircuits.test_structures", "kqcircuits.test_structures.airbridge_dc", "kqcircuits.test_structures.cross_test", "kqcircuits.test_structures.junction_test_pads", "kqcircuits.test_structures.junction_test_pads.junction_test_pads", "kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple", "kqcircuits.test_structures.stripes_test", "kqcircuits.test_structures.stripes_test_increasing_width", "kqcircuits.test_structures.test_structure", "kqcircuits.test_structures.tsv_test_pattern", "kqcircuits.util", "kqcircuits.util.area", "kqcircuits.util.count_instances", "kqcircuits.util.coupler_lib", "kqcircuits.util.deep_delete", "kqcircuits.util.defaults_helper", "kqcircuits.util.dependencies", "kqcircuits.util.edit_node_plugin", "kqcircuits.util.export_helper", "kqcircuits.util.geometry_helper", "kqcircuits.util.geometry_json_encoder", "kqcircuits.util.groundgrid", "kqcircuits.util.gui_helper", "kqcircuits.util.import_helper", "kqcircuits.util.label", "kqcircuits.util.label_polygons", "kqcircuits.util.layout_to_code", "kqcircuits.util.library_helper", "kqcircuits.util.log_router", "kqcircuits.util.merge", "kqcircuits.util.netlist_extraction", "kqcircuits.util.netlist_graph", "kqcircuits.util.parameters", "kqcircuits.util.plugin_startup", "kqcircuits.util.refpoints", "kqcircuits.util.replace_junctions", "kqcircuits.util.symmetric_polygons", "Citing", "Contributing", "Architecture", "Coding Style", "Containers", "Documentation", "Developer Guide", "Developer GUI Setup", "Developer Standalone module Setup", "Testing", "KQCircuits documentation", "Installation", "Getting started (Salt package)", "Support", "Trademarks", "General Structure and Miscellaneous Utilities", "GUI Features", "Point-and-click workflow tutorial", "User Guide", "Macro development", "Mask export", "Python workflow tutorial", "Elmer remote simulations workflow", "Run and export in one line", "Gmsh/Elmer export", "Simulation features", "Simulation objects", "Export functions", "External simulation tools", "Terminology", "Usage", "Creating cross section images"], "terms": {"kqcircuit": [0, 1, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200], "develop": [0, 170, 178, 179, 180, 181, 187, 190, 192, 196], "wa": [0, 37, 83, 97, 126, 158, 166, 179, 180, 181, 188, 189, 193, 195, 199], "start": [0, 5, 13, 19, 35, 55, 58, 63, 64, 65, 66, 79, 88, 89, 112, 119, 126, 136, 151, 158, 164, 167, 174, 177, 179, 180, 182, 188, 190, 191, 193, 195], "johann": [0, 169], "heinsoo": [0, 169], "aalto": [0, 69, 194], "univers": [0, 194], "The": [0, 3, 5, 6, 12, 13, 14, 18, 19, 20, 21, 22, 23, 24, 26, 29, 32, 33, 35, 36, 37, 38, 39, 41, 43, 49, 50, 52, 53, 54, 55, 57, 58, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 76, 79, 81, 82, 83, 84, 85, 87, 88, 89, 92, 93, 95, 96, 97, 98, 102, 105, 106, 108, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 133, 144, 150, 151, 152, 154, 155, 158, 161, 162, 163, 164, 167, 170, 171, 173, 174, 176, 177, 178, 180, 181, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 196, 197, 198, 199, 200], "final": [0, 63, 79, 84, 126, 190, 196], "kqc": [0, 94, 97, 110, 112, 163, 165, 166, 170, 171, 173, 176, 177, 180, 181, 184, 185, 187, 188, 189, 190, 191, 192, 193, 199], "version": [0, 1, 81, 82, 83, 84, 85, 152, 169, 173, 175, 176, 177, 181, 184, 186, 189, 190, 191, 193, 196, 200], "correspond": [0, 17, 19, 26, 37, 63, 79, 83, 85, 88, 89, 109, 123, 126, 131, 151, 155, 156, 158, 162, 171, 173, 177, 178, 181, 184, 185, 188, 190, 194, 195, 197, 198], "v0": [0, 180], "0": [0, 5, 6, 7, 10, 13, 16, 17, 18, 19, 23, 28, 29, 31, 35, 36, 37, 38, 47, 55, 56, 57, 58, 63, 64, 65, 66, 70, 71, 72, 76, 79, 88, 90, 91, 92, 93, 97, 106, 109, 117, 118, 119, 121, 122, 124, 126, 130, 136, 140, 143, 151, 152, 157, 158, 161, 164, 165, 166, 167, 173, 177, 180, 181, 186, 189, 190, 194, 195], "tag": [0, 162, 170, 173, 177, 198], "iqm": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200], "github": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200], "repositori": [0, 150, 173, 175, 177, 180, 181, 184, 194], "sinc": [0, 154, 177, 185, 190, 195], "ha": [0, 5, 20, 23, 36, 37, 38, 57, 63, 71, 84, 88, 89, 93, 97, 106, 114, 126, 150, 154, 158, 163, 164, 167, 173, 176, 177, 180, 181, 185, 188, 189, 190, 191, 193, 195], "been": [0, 63, 84, 126, 159, 173, 181, 189], "see": [0, 2, 19, 37, 63, 79, 84, 96, 98, 102, 106, 109, 118, 122, 126, 128, 129, 130, 131, 132, 167, 170, 171, 173, 176, 177, 180, 181, 183, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 199], "cite": [0, 179], "section": [0, 64, 97, 106, 109, 122, 162, 171, 176, 177, 179, 181, 185, 187, 189, 190, 192, 195, 197], "other": [0, 2, 5, 13, 28, 34, 37, 38, 63, 64, 71, 72, 76, 77, 79, 90, 92, 97, 109, 112, 118, 126, 136, 145, 151, 160, 166, 167, 168, 169, 170, 171, 173, 177, 178, 179, 180, 184, 185, 188, 189, 190, 193, 194, 195, 196, 198, 199, 200], "author": [0, 169], "http": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200], "com": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200], "finland": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200], "chip": [1, 28, 29, 32, 35, 37, 38, 40, 41, 42, 43, 49, 54, 58, 63, 79, 81, 82, 83, 84, 85, 90, 126, 129, 130, 136, 141, 150, 158, 162, 163, 167, 171, 173, 179, 184, 185, 186, 187, 188, 195, 198, 199], "airbridge_cross": [1, 2], "airbridgecross": [1, 2, 3], "build": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 81, 83, 84, 87, 88, 89, 90, 93, 95, 96, 97, 98, 102, 126, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 158, 159, 171, 173, 174, 176, 180, 181, 185, 187, 189, 191, 193, 194, 195, 196, 197], "airbridge_dc_test": [1, 2], "airbridgedctest": [1, 2, 4], "library_nam": [1, 2, 5, 28, 37, 63, 69, 70, 87, 92, 95, 97, 126, 132, 140, 159, 171], "library_descript": [1, 2, 5, 28, 37, 69, 70, 87, 92, 132, 140, 171], "library_path": [1, 2, 5, 28, 37, 69, 70, 87, 92, 132, 140, 159], "display_text_impl": [1, 2, 5, 28, 37], "can_create_from_shape_impl": [1, 2, 5, 28, 38, 39, 55, 57, 64], "parameters_from_shape_impl": [1, 2, 5, 28, 55, 64], "transformation_from_shape_impl": [1, 2, 5, 28, 30, 31, 64], "get_launcher_assign": [1, 2, 5], "produce_junction_test": [1, 2, 5, 9], "produce_opt_lit_test": [1, 2, 5], "produce_ground_grid": [1, 2, 5], "produce_ground_on_face_grid": [1, 2, 5], "produce_fram": [1, 2, 5], "merge_layout_layers_on_fac": [1, 2, 5, 142, 161], "merge_layout_lay": [1, 2, 5], "produce_structur": [1, 2, 5], "get_box": [1, 2, 5], "get_filter_region": [1, 2, 5], "insert_filtered_el": [1, 2, 5], "get_ground_bump_loc": [1, 2, 5], "post_build": [1, 2, 5, 28, 37], "produce_launch": [1, 2, 5, 95, 130, 190], "produce_n_launch": [1, 2, 5], "make_grid_loc": [1, 2, 5], "get_ground_tsv_loc": [1, 2, 5], "crossing_twofac": [1, 2], "crossingtwofac": [1, 2, 6], "daisy_woven": [1, 2], "daisywoven": [1, 2, 7], "dc_test": [1, 2], "dctest": [1, 2, 8], "demo": [1, 2, 186, 188, 189, 190], "produce_qubit": [1, 2, 9, 10, 17, 26, 95, 130, 131], "produce_coupl": [1, 2, 9, 10, 17], "produce_control_lin": [1, 2, 9, 10], "produce_drivelin": [1, 2, 9, 10, 17], "produce_fluxlin": [1, 2, 9, 10, 87, 92], "produce_readout_structur": [1, 2, 9, 10], "produce_probelin": [1, 2, 9, 10, 17], "demo_twofac": [1, 2, 189], "demotwofac": [1, 2, 10, 189], "empti": [1, 2, 5, 13, 25, 29, 32, 34, 36, 37, 38, 43, 48, 56, 57, 58, 63, 66, 84, 85, 88, 89, 90, 93, 97, 126, 136, 141, 154, 163, 164, 178, 185, 194, 195, 196], "make_empty_area": [1, 2, 11], "junction_test": [1, 2], "junctiontest": [1, 2, 12], "junction_test2": [1, 2], "junctiontest2": [1, 2, 13], "coerce_parameters_impl": [1, 2, 13, 28, 37, 44, 45, 63, 65, 69, 70, 87, 92, 132, 135, 136], "launcher": [1, 2, 5, 7, 8, 18, 20, 23, 28, 50, 93, 128, 130, 162, 186, 190], "lithography_test": [1, 2], "lithographytest": [1, 2, 15], "create_pattern": [1, 2, 15, 16], "lithography_test_twofac": [1, 2], "lithographytesttwofac": [1, 2, 16], "munch_qubit": [1, 2], "munchqubit": [1, 2, 17], "produce_readout_reson": [1, 2, 17, 26, 95, 130], "quality_factor": [1, 2, 159, 189], "qualityfactor": [1, 2, 18, 84, 159, 189], "quality_factor_twofac": [1, 2], "qualityfactortwofac": [1, 2, 19], "produce_reson": [1, 2, 19], "sample_holder_test": [1, 2], "sampleholdertest": [1, 2, 20], "shape": [1, 2, 5, 13, 18, 25, 28, 29, 31, 32, 33, 35, 37, 38, 43, 55, 58, 63, 64, 77, 82, 84, 88, 89, 90, 92, 97, 122, 126, 136, 140, 141, 156, 161, 167, 185, 186, 188, 190, 195, 196, 198, 200], "simpl": [1, 2, 13, 84, 86, 118, 126, 136, 137, 173, 189, 193], "single_xmon": [1, 2], "singlexmon": [1, 2, 23], "qubits_refpoint": [1, 2, 23], "stripe": [1, 2, 5, 15, 16, 138, 139], "tsv_test": [1, 2], "tsvtest": [1, 2, 25], "create_xsect": [1, 2, 25], "xmons_direct_coupl": [1, 2], "xmonsdirectcoupl": [1, 2, 26], "element": [1, 2, 3, 5, 13, 22, 23, 25, 27, 70, 72, 76, 83, 84, 88, 89, 90, 92, 93, 100, 102, 106, 109, 124, 126, 127, 132, 136, 140, 141, 142, 145, 151, 152, 154, 158, 159, 161, 162, 163, 164, 166, 167, 173, 175, 177, 179, 184, 187, 188, 189, 194, 196, 197, 199], "airbridg": [1, 3, 4, 18, 19, 28, 29, 37, 52, 54, 55, 56, 58, 63, 66, 126, 133, 142, 159, 166, 185, 195], "default_typ": [1, 28, 30, 31, 32, 33, 40, 41, 44, 45, 51, 52, 59, 60, 69, 70, 132, 135, 136], "creat": [1, 2, 5, 28, 30, 31, 32, 37, 40, 41, 44, 45, 51, 52, 59, 60, 63, 64, 65, 69, 70, 75, 76, 79, 83, 84, 85, 86, 92, 96, 97, 98, 102, 105, 108, 113, 122, 126, 127, 128, 129, 130, 131, 132, 135, 136, 143, 149, 150, 154, 158, 159, 161, 165, 166, 171, 174, 176, 177, 178, 179, 181, 182, 184, 185, 186, 187, 189, 190, 193, 194, 195, 196, 198], "airbridge_multi_fac": [1, 28, 30], "airbridgemultifac": [1, 28, 30, 32], "airbridge_rectangular": [1, 28, 30], "airbridgerectangular": [1, 28, 30, 33], "flip_chip_connector": [1, 28], "flipchipconnector": [1, 28, 40, 41, 42, 63], "flip_chip_connector_dc": [1, 28, 40], "flipchipconnectordc": [1, 28, 40, 42], "flip_chip_connector_rf": [1, 28, 40], "flipchipconnectorrf": [1, 28, 40, 43, 190], "get_sim_port": [1, 28, 34, 36, 37, 38, 40, 43, 48, 56, 57, 87, 88, 89, 90, 93, 195], "fluxlin": [1, 9, 23, 26, 28, 37, 87, 92, 93, 131], "fluxline_standard": [1, 28, 44], "fluxlinestandard": [1, 28, 44, 46], "fluxline_straight": [1, 28, 44], "fluxlinestraight": [1, 28, 44, 47], "marker": [1, 5, 13, 28, 35, 55, 83, 134, 150, 167], "produce_geometri": [1, 28, 51, 52], "get_marker_loc": [1, 28, 51, 52, 54], "get_marker_region": [1, 28, 51, 52, 54], "marker_standard": [1, 28, 51], "markerstandard": [1, 28, 51, 53], "mask_marker_fc": [1, 28, 51], "maskmarkerfc": [1, 28, 51, 54], "create_cross": [1, 28, 51, 54], "tsv": [1, 5, 25, 28, 37, 126, 141], "tsv_ellips": [1, 28, 59], "tsvellips": [1, 28, 59, 61], "produce_impl": [1, 28, 37, 59, 61, 171], "create_tsv_connector": [1, 28, 59, 61], "tsv_standard": [1, 28, 59], "tsvstandard": [1, 28, 59, 62], "airbridge_connect": [1, 28], "airbridgeconnect": [1, 28, 29, 63], "capacitive_x_coupl": [1, 28], "capacitivexcoupl": [1, 28, 34], "chip_fram": [1, 28], "chipfram": [1, 5, 6, 7, 10, 16, 19, 28, 35], "circular_capacitor": [1, 28], "circularcapacitor": [1, 28, 36], "get_refpoint": [1, 28, 37, 95, 126], "insert_cell_into": [1, 28, 37], "resolve_fac": [1, 28, 37], "create_cell_from_shap": [1, 28, 37], "create_subtyp": [1, 28, 37], "create_with_refpoint": [1, 28, 37], "add_el": [1, 28, 37, 70, 75, 95, 126, 145, 171, 190], "insert_cel": [1, 26, 28, 37, 76, 95, 126, 131, 145, 158, 171, 188, 190, 195], "face": [1, 5, 6, 7, 10, 13, 16, 19, 25, 28, 29, 31, 32, 35, 37, 38, 41, 43, 56, 58, 61, 62, 63, 64, 65, 66, 76, 79, 81, 82, 83, 84, 85, 90, 95, 97, 122, 123, 124, 126, 129, 136, 141, 142, 150, 161, 162, 166, 167, 181, 185, 187, 197], "pcell_params_by_nam": [1, 28, 37, 95, 126], "add_port": [1, 28, 37], "copy_port": [1, 28, 37], "get_schema": [1, 28, 37, 95, 97, 126], "get_lay": [1, 28, 37, 92, 95, 97, 126, 190], "raise_error_on_cel": [1, 28, 37], "add_protect": [1, 28, 37], "sync_paramet": [1, 28, 37], "left_and_right_waveguid": [1, 28, 37], "face_changer_waveguid": [1, 28, 37], "finger_capacitor_squar": [1, 28, 190], "fingercapacitorsquar": [1, 28, 38, 145, 190], "get_ground_region": [1, 28, 38], "finger_area_width": [1, 28, 38], "finger_area_length": [1, 28, 38], "cut_region": [1, 28, 38], "add_waveguid": [1, 28, 38], "finger_capacitor_tap": [1, 28], "fingercapacitortap": [1, 28, 39], "hanger_reson": [1, 28], "hangerreson": [1, 28, 48], "launcher_dc": [1, 28], "launcherdc": [1, 28, 50], "meander": [1, 3, 6, 18, 28, 56, 63, 118, 154, 185], "quarter_wave_cpw_reson": [1, 28], "quarterwavecpwreson": [1, 28, 56], "smooth_capacitor": [1, 28], "smoothcapacitor": [1, 19, 28, 57, 145], "spiral_resonator_polygon": [1, 28], "spiralresonatorpolygon": [1, 28, 58], "rectangular_paramet": [1, 28, 58], "waveguide_composit": [1, 28], "node": [1, 28, 63, 149, 154, 158, 163, 186, 187, 190, 193], "posit": [1, 17, 23, 25, 28, 31, 37, 55, 63, 64, 65, 83, 88, 89, 92, 93, 117, 150, 154, 156, 158, 163, 166, 185, 189, 190], "align": [1, 28, 37, 54, 63, 76, 83, 92, 126, 134, 150, 154, 167, 185, 189, 190], "inst_nam": [1, 9, 10, 28, 37, 63, 76, 126, 154, 167, 190], "angl": [1, 17, 28, 36, 63, 64, 65, 66, 88, 89, 151, 154], "length_befor": [1, 28, 63, 154], "length_incr": [1, 28, 63, 154], "meander_direct": [1, 28, 55, 63], "deseri": [1, 28, 63, 152], "nodes_from_str": [1, 28, 63], "waveguidecomposit": [1, 28, 63, 154, 158, 187, 190], "get_segment_cel": [1, 28, 63], "get_segment_length": [1, 28, 63], "produce_fixed_length_waveguid": [1, 28, 63], "snap_point": [1, 28, 63], "check_node_typ": [1, 28, 63], "produce_fixed_length_bend": [1, 28, 63], "waveguide_coplanar": [1, 28, 190], "waveguidecoplanar": [1, 28, 63, 64, 158, 185, 190], "produce_waveguid": [1, 28, 64, 95, 130], "get_corner_data": [1, 28, 64], "produce_end_termin": [1, 28, 64], "is_continu": [1, 28, 64], "waveguide_coplanar_curv": [1, 28], "arc": [1, 17, 28, 65, 88, 89, 151], "waveguidecoplanarcurv": [1, 28, 65], "build_geometri": [1, 28, 65, 67], "create_curve_arc": [1, 28, 65], "produce_curve_termin": [1, 28, 65], "waveguide_coplanar_splitt": [1, 28], "waveguidecoplanarsplitt": [1, 28, 66], "t_cross_paramet": [1, 28, 66], "waveguide_coplanar_straight": [1, 28], "waveguidecoplanarstraight": [1, 28, 67], "waveguide_coplanar_tap": [1, 28], "waveguidecoplanartap": [1, 28, 63, 68], "junction": [1, 5, 9, 10, 13, 23, 26, 82, 88, 89, 90, 91, 92, 124, 126, 131, 135, 136, 137, 166, 167, 171, 179, 181, 190, 194, 195], "manhattan": [1, 5, 10, 13, 23, 26, 69, 70, 72, 90, 92, 131, 136], "produce_manhattan_squid": [1, 69, 71], "produce_tp_smal": [1, 69, 71], "produce_tp_larg": [1, 69, 71], "produce_contact_pad": [1, 69, 71], "manhattan_single_junct": [1, 69], "manhattansinglejunct": [1, 69, 72], "produce_manhattan_junct": [1, 69, 72], "no_squid": [1, 69], "nosquid": [1, 69, 73], "sim": [1, 10, 13, 23, 26, 69, 70, 90, 92, 121, 131, 136, 177, 180, 191, 192, 193, 195, 196], "squid": [1, 10, 13, 23, 26, 69, 70, 71, 73, 74, 87, 90, 91, 92, 93, 124, 131, 136, 167], "layer_config": [1, 179, 190], "default_layer_config": [1, 78, 190], "example_layer_config": [1, 78, 190], "mask": [1, 5, 35, 52, 54, 142, 173, 177, 179, 180, 184, 187, 190, 198], "mask_export": [1, 81], "export_mask_set": [1, 81, 82], "export_design": [1, 81, 82], "export_chip": [1, 81, 82], "export_masks_of_fac": [1, 81, 82], "export_mask": [1, 81, 82], "export_doc": [1, 81, 82], "export_bitmap": [1, 81, 82], "get_mask_layout_full_nam": [1, 81, 82], "export_junction_paramet": [1, 81, 82], "mask_layout": [1, 81, 82, 84, 85, 189], "masklayout": [1, 81, 82, 83, 84, 85], "layout": [1, 25, 26, 28, 31, 37, 41, 45, 52, 60, 63, 70, 76, 81, 82, 83, 84, 85, 95, 96, 97, 98, 113, 119, 122, 123, 126, 128, 129, 130, 131, 136, 141, 150, 151, 159, 161, 162, 163, 165, 167, 171, 177, 179, 180, 185, 186, 188, 189, 190, 194, 195, 196, 197, 199, 200], "name": [1, 5, 7, 9, 10, 13, 17, 19, 22, 23, 25, 26, 29, 32, 35, 37, 38, 58, 61, 63, 66, 70, 75, 76, 77, 79, 81, 82, 83, 84, 85, 90, 92, 95, 97, 102, 103, 105, 106, 108, 109, 112, 113, 114, 115, 121, 123, 125, 126, 130, 136, 140, 141, 143, 150, 154, 158, 159, 160, 161, 162, 163, 164, 166, 167, 171, 173, 174, 176, 180, 181, 186, 188, 189, 190, 191, 195, 196, 197], "with_grid": [1, 5, 81, 83, 84, 85, 126, 189], "face_id": [1, 5, 13, 15, 16, 19, 25, 28, 29, 32, 37, 38, 58, 63, 76, 77, 81, 83, 84, 85, 90, 126, 136, 141, 190], "layers_to_mask": [1, 81, 83, 189], "covered_region_excluded_lay": [1, 81, 83], "chips_map": [1, 81, 83, 84, 85], "align_to": [1, 37, 76, 81, 83, 126, 189, 190], "chips_map_legend": [1, 81, 83, 84], "wafer_rad": [1, 81, 83], "wafer_cent": [1, 81, 83], "chips_map_offset": [1, 81, 83], "wafer_top_flat_length": [1, 81, 83], "wafer_bottom_flat_length": [1, 81, 83], "dice_width": [1, 35, 81, 83], "text_margin": [1, 35, 81, 83], "chip_siz": [1, 81, 83, 189], "edge_clear": [1, 81, 83, 189], "remove_chip": [1, 81, 83], "chip_box_offset": [1, 81, 83], "chip_tran": [1, 81, 83], "mask_name_offset": [1, 81, 83], "mask_name_scal": [1, 81, 83], "mask_name_box_margin": [1, 81, 83], "mask_text_scal": [1, 81, 83], "mask_markers_dict": [1, 81, 83], "mask_marker_offset": [1, 81, 83], "mask_export_lay": [1, 79, 81, 83, 84], "mask_export_density_lay": [1, 81, 83], "submask": [1, 81, 83], "extra_id": [1, 81, 83], "extra_chip": [1, 81, 83], "top_cel": [1, 76, 81, 83, 154, 158, 167, 188, 198], "added_chip": [1, 81, 83], "chips_placed_by_position_label": [1, 81, 83], "chip_copi": [1, 81, 83], "mirror_label": [1, 81, 83], "bbox_face_id": [1, 81, 83, 84, 85], "add_chips_map": [1, 81, 83, 85, 189], "overwrite_chips_by_position_label": [1, 81, 83], "insert_chip": [1, 81, 83], "insert_chip_copy_label": [1, 81, 83], "two_coordinates_to_position_label": [1, 81, 83], "position_label_to_two_coordin": [1, 81, 83], "mask_set": [1, 81, 82, 189], "maskset": [1, 81, 82, 84, 85, 189], "export_drc": [1, 81, 82, 84], "used_chip": [1, 81, 84], "export_path": [1, 81, 84, 110, 163, 189], "add_mask_layout": [1, 81, 84, 189], "add_multi_face_mask_layout": [1, 81, 84, 85], "add_chip": [1, 81, 84, 189], "export": [1, 76, 77, 79, 81, 82, 83, 84, 95, 96, 98, 102, 126, 128, 129, 130, 131, 150, 158, 162, 163, 167, 177, 179, 180, 181, 187, 188, 191, 194, 195, 197, 198, 200], "chips_map_from_box_map": [1, 81, 84], "multi_face_mask_layout": [1, 81], "multifacemasklayout": [1, 81, 84, 85], "qubit": [1, 9, 10, 17, 23, 26, 69, 102, 130, 131, 171, 179, 181, 185, 186, 190, 194, 195, 196], "circular_transmon_single_island": [1, 87], "circulartransmonsingleisland": [1, 87, 88], "concentric_transmon": [1, 87], "concentrictransmon": [1, 87, 89], "double_pad": [1, 87], "doublepad": [1, 87, 90, 91], "double_pads_splin": [1, 87], "doublepadssplin": [1, 87, 91], "produce_squid": [1, 87, 92, 132, 135, 136], "swissmon": [1, 87, 95, 99, 186, 195, 196], "simul": [1, 26, 34, 36, 37, 38, 43, 48, 56, 57, 74, 79, 88, 89, 90, 92, 93, 142, 166, 173, 177, 179, 180, 181, 184, 187, 190, 192, 193, 196, 200], "epr": [1, 56, 95, 109, 121, 124, 126, 194], "exampl": [1, 5, 28, 37, 63, 76, 77, 79, 84, 95, 99, 102, 109, 126, 152, 159, 163, 167, 171, 173, 176, 177, 178, 180, 181, 185, 187, 189, 191, 193, 194, 195, 196, 200], "partition_region": [1, 95, 99, 100, 101, 121, 126], "correction_cut": [1, 95, 99, 100, 101, 121], "extract_from": [1, 95, 99, 100], "extract_swissmon_from": [1, 95, 99, 101], "util": [1, 58, 66, 95, 99, 103, 177, 178, 179, 187, 190, 195, 196], "extract_child_simul": [1, 95, 99, 102], "ansi": [1, 95, 103, 115, 126, 147, 187, 193, 194, 195, 197], "ansys_export": [1, 95, 103, 104, 194, 196], "export_ansys_json": [1, 95, 103, 104, 105], "export_ansys_bat": [1, 95, 103, 104, 105], "export_ansi": [1, 95, 103, 104, 105, 194, 196, 197], "ansys_solut": [1, 95, 103, 104], "ansyssolut": [1, 95, 103, 104, 105, 106], "ansys_tool": [1, 95, 103, 104, 106, 194], "percent_refin": [1, 95, 103, 104, 106, 194], "maximum_pass": [1, 95, 103, 104, 106, 107, 109, 194], "minimum_pass": [1, 95, 103, 104, 106, 107, 109, 194], "minimum_converged_pass": [1, 95, 103, 104, 106, 194], "frequency_unit": [1, 95, 103, 104, 106, 194], "mesh_siz": [1, 95, 103, 104, 106, 107, 109], "simulation_flag": [1, 95, 103, 104, 106, 194], "ansys_project_templ": [1, 95, 103, 104, 106], "get_solution_data": [1, 95, 103, 104, 106, 107, 109], "ansyshfsssolut": [1, 95, 103, 104, 106], "frequenc": [1, 95, 103, 104, 106, 107, 109, 193, 194], "max_delta_": [1, 95, 103, 104, 106, 107, 109, 194], "sweep_en": [1, 95, 103, 104, 106, 194], "sweep_start": [1, 95, 103, 104, 106, 194], "sweep_end": [1, 95, 103, 104, 106, 194], "sweep_count": [1, 95, 103, 104, 106, 194], "sweep_typ": [1, 95, 103, 104, 106, 107, 109, 194], "capacitance_export": [1, 95, 103, 104, 106, 194], "integrate_energi": [1, 95, 103, 104, 106, 107, 109, 194], "integrate_magnetic_flux": [1, 95, 103, 104, 106], "ansysq3dsolut": [1, 95, 103, 104, 106], "percent_error": [1, 95, 103, 104, 106, 107, 109, 194], "ansyseigenmodesolut": [1, 95, 103, 104, 106], "min_frequ": [1, 95, 103, 104, 106, 194], "max_delta_f": [1, 95, 103, 104, 106, 194], "n_mode": [1, 95, 103, 104, 106, 194], "ansyscurrentsolut": [1, 95, 103, 104, 106], "ansysvoltagesolut": [1, 95, 103, 104, 106], "ansyscrosssectionsolut": [1, 95, 103, 104, 106], "get_ansys_solut": [1, 95, 103, 104, 106], "elmer": [1, 95, 103, 115, 173, 187, 192, 194, 195, 197], "elmer_export": [1, 95, 103, 107, 194, 196], "export_elmer_json": [1, 95, 103, 107, 108], "export_elmer_script": [1, 95, 103, 107, 108], "export_elm": [1, 95, 103, 107, 108, 193, 194, 196, 197], "elmer_solut": [1, 95, 103, 107], "elmersolut": [1, 95, 103, 107, 108, 109], "tool": [1, 55, 64, 95, 97, 103, 107, 109, 162, 177, 178, 179, 181, 185, 186, 187, 194, 195, 196, 199], "max_error_scal": [1, 95, 103, 107, 109], "max_outlier_fract": [1, 95, 103, 107, 109], "is_axisymmetr": [1, 95, 103, 107, 109], "mesh_level": [1, 95, 103, 107, 109], "vtu_output": [1, 95, 103, 107, 109], "elmervectorhelmholtzsolut": [1, 95, 103, 107, 109], "frequency_batch": [1, 95, 103, 107, 109], "london_penetration_depth": [1, 95, 97, 103, 107, 109, 122], "quadratic_approxim": [1, 95, 103, 107, 109], "second_kind_basi": [1, 95, 103, 107, 109], "use_av": [1, 95, 103, 107, 109], "conduct": [1, 95, 103, 107, 109], "nested_iter": [1, 95, 103, 107, 109], "convergence_toler": [1, 95, 103, 107, 109], "max_iter": [1, 95, 103, 107, 109], "elmercapacitancesolut": [1, 95, 103, 107, 109], "p_element_ord": [1, 95, 103, 107, 109], "linear_system_method": [1, 95, 103, 107, 109], "linear_system_precondit": [1, 95, 103, 107, 109], "elmercrosssectionsolut": [1, 95, 103, 107, 109, 121], "boundary_condit": [1, 95, 103, 107, 109], "run_inductance_sim": [1, 95, 103, 107, 109], "elmerepr3dsolut": [1, 95, 103, 107, 109, 126], "get_elmer_solut": [1, 95, 103, 107, 109], "sonnet": [1, 95, 103, 187, 197], "parser": [1, 95, 103, 116, 152], "apply_templ": [1, 95, 103, 116, 117], "polygon_head": [1, 95, 103, 116, 117], "symmetri": [1, 95, 103, 116, 117, 168], "box": [1, 5, 18, 19, 35, 52, 55, 76, 83, 84, 92, 95, 97, 103, 109, 116, 117, 122, 123, 126, 127, 134, 136, 153, 156, 162, 166, 181, 185, 186, 187, 189, 190, 197, 198], "refplan": [1, 95, 103, 116, 117], "port": [1, 5, 13, 17, 31, 34, 36, 37, 38, 39, 43, 48, 49, 56, 57, 63, 66, 88, 89, 90, 92, 93, 95, 96, 98, 103, 109, 114, 116, 117, 118, 126, 127, 128, 129, 130, 131, 136, 162, 166, 185, 186, 187, 190, 194, 196, 197], "control": [1, 17, 91, 95, 103, 116, 117, 118, 145, 151, 152, 164, 174, 175, 176, 177, 180, 190, 191, 193], "polygon": [1, 58, 64, 65, 95, 103, 116, 117, 118, 119, 122, 124, 126, 151, 168, 185, 190, 195, 198], "via": [1, 5, 25, 95, 103, 116, 117, 141, 191, 193, 195], "sonnet_export": [1, 95, 103, 116, 196], "poly_and_edge_indic": [1, 95, 103, 116, 118], "export_sonnet_son": [1, 95, 103, 116, 118, 196], "export_sonnet": [1, 95, 103, 116, 118, 196, 197], "xsection": [1, 95, 97, 103, 184, 187, 194], "epr_correction_export": [1, 95, 103, 120], "get_epr_correction_elmer_solut": [1, 95, 103, 120, 121], "get_epr_correction_simul": [1, 95, 100, 103, 120, 121], "xsection_export": [1, 95, 103, 120, 200], "xsection_cal": [1, 95, 103, 120, 122, 200], "create_xsections_from_simul": [1, 95, 103, 120, 122, 200], "separate_signal_layer_shap": [1, 95, 103, 120, 122], "find_layer_by_nam": [1, 95, 103, 120, 122], "free_layer_slot": [1, 95, 103, 120, 122], "visualise_xsection_cut_on_original_layout": [1, 95, 103, 120, 122], "export_and_run": [1, 95, 103, 192], "run_export_script": [1, 95, 103, 110], "run_simul": [1, 95, 103, 110], "export_singular": [1, 95, 103], "remote_export_and_run": [1, 95, 103], "remote_run_onli": [1, 95, 103, 112], "simulation_export": [1, 95, 103, 195, 196], "get_combined_paramet": [1, 95, 103, 113], "copy_content_into_directori": [1, 95, 103, 113], "get_post_process_command_lin": [1, 95, 103, 113], "export_simulation_json": [1, 95, 103, 113], "export_simulation_oa": [1, 95, 103, 113, 196], "sweep_simul": [1, 95, 103, 113, 195], "cross_sweep_simul": [1, 95, 103, 113, 195], "sweep_solut": [1, 95, 103, 113], "cross_sweep_solut": [1, 95, 103, 113], "cross_combin": [1, 95, 103, 113], "simulation_valid": [1, 95, 103], "validate_simul": [1, 95, 103, 114], "simulation_and_solution_types_match": [1, 95, 103, 114], "has_no_ports_when_requir": [1, 95, 103, 114], "has_edgeport_when_forbidden": [1, 95, 103, 114], "flux_integration_layer_exists_if_need": [1, 95, 103, 114], "get_port_nam": [1, 95, 103, 114], "validatesimerror": [1, 95, 103, 114], "solut": [1, 95, 103, 105, 106, 108, 109, 113, 114, 121, 176, 181, 194], "get_paramet": [1, 95, 97, 103, 115, 126], "export_lay": [1, 95, 103, 119], "find_edge_from_point_in_cel": [1, 95, 103, 119], "find_edge_from_point_in_polygon": [1, 95, 103, 119], "get_enclosing_polygon": [1, 95, 103, 119], "airbridges_sim": [1, 95], "airbridgessim": [1, 95, 96], "cross_section_simul": [1, 95, 122], "crosssectionsimul": [1, 95, 97, 105, 108, 122, 194, 195, 197], "process_lay": [1, 95, 97], "register_cell_layers_as_sim_lay": [1, 95, 97], "get_sim_lay": [1, 95, 97], "set_permitt": [1, 95, 97], "get_dict_by_lay": [1, 95, 97], "get_simulation_data": [1, 95, 97, 126], "empty_simul": [1, 95], "emptysimul": [1, 95, 98], "get_list_of_two": [1, 95, 123], "partitionregion": [1, 95, 100, 101, 109, 123, 126, 127], "limit_box": [1, 95, 123], "limit_fac": [1, 95, 123], "as_dict": [1, 95, 124], "internalport": [1, 95, 124, 126, 166, 195], "get_etch_polygon": [1, 95, 124], "edgeport": [1, 95, 114, 124, 166, 194, 195], "post_process": [1, 95, 105, 108, 113, 121, 196], "postprocess": [1, 95, 105, 108, 113, 121, 125], "get_command_lin": [1, 95, 125], "get_simulation_layer_by_nam": [1, 95, 126], "to_1d_list": [1, 95, 126], "from_cel": [1, 95, 96, 98, 126, 128, 129, 130, 131, 195, 196], "face_stack_list_of_list": [1, 95, 126], "ith_valu": [1, 95, 126], "face_z_level": [1, 95, 126], "region_from_lay": [1, 95, 126], "simplified_region": [1, 95, 126], "insert_lay": [1, 95, 126], "insert_stacked_up_lay": [1, 95, 126], "insert_layers_between_fac": [1, 95, 126], "create_simulation_lay": [1, 95, 96, 98, 126, 128, 129, 130, 131], "produce_lay": [1, 95, 126], "ground_grid_region": [1, 95, 126], "produce_waveguide_to_port": [1, 95, 126, 190, 195], "etched_lin": [1, 95, 126], "get_port_data": [1, 95, 126], "get_partition_region": [1, 95, 100, 123, 126], "delete_inst": [1, 95, 126], "visualise_region": [1, 95, 126], "single_element_simul": [1, 95, 195, 196], "get_single_element_sim_class": [1, 95, 100, 127, 166, 195, 196], "single_xmons_full_chip_sim": [1, 95], "singlexmonsfullchipsim": [1, 95, 128], "waveguides_sim": [1, 95], "waveguidessim": [1, 95, 129], "produce_guid": [1, 95, 129], "produce_ground_bump": [1, 95, 129], "xmons_direct_coupling_full_chip_sim": [1, 95], "xmonsdirectcouplingfullchipsim": [1, 95, 130], "produce_launchers_sma8": [1, 95, 130], "xmons_direct_coupling_sim": [1, 95], "xmonsdirectcouplingsim": [1, 95, 131], "test_structur": [1, 179], "junction_test_pad": [1, 132], "junctiontestpad": [1, 13, 92, 132, 135, 136, 137], "junction_test_pads_simpl": [1, 132, 135], "junctiontestpadssimpl": [1, 132, 135, 137], "airbridge_dc": [1, 132], "airbridgedc": [1, 132, 133], "cross_test": [1, 132], "crosstest": [1, 132, 134], "stripes_test": [1, 132], "stripestest": [1, 15, 16, 132, 138], "stripes_test_increasing_width": [1, 132], "stripestestincreasingwidth": [1, 132, 139], "teststructur": [1, 132, 133, 134, 136, 138, 139, 140, 141, 171], "produce_pad": [1, 132, 140], "produce_four_point_pad": [1, 132, 140], "produce_etched_region": [1, 132, 140], "tsv_test_pattern": [1, 132], "tsvtestpattern": [1, 132, 141], "area": [1, 13, 43, 52, 55, 58, 63, 71, 75, 76, 83, 90, 92, 118, 123, 124, 136, 137, 140, 142, 153, 181, 185, 190, 195], "areareceiv": [1, 142, 143], "put": [1, 63, 142, 143, 173, 185, 190], "get_area_and_dens": [1, 142, 143], "count_inst": [1, 142], "count_instances_in_cel": [1, 142, 144], "coupler_lib": [1, 142], "cap_param": [1, 19, 142, 145], "deep_delet": [1, 142], "deep_delete_pcel": [1, 142, 146], "deep_delete_al": [1, 142, 146], "defaults_help": [1, 142], "find_ansys_execut": [1, 142, 147], "depend": [1, 19, 124, 137, 142, 159, 166, 171, 173, 175, 180, 184, 190, 192, 193, 195], "install_kqc_gui_depend": [1, 142, 148], "edit_node_plugin": [1, 142], "editnodeplugin": [1, 142, 149], "create_dialog": [1, 142, 149], "update_node_from_form": [1, 142, 149], "update_form_from_nod": [1, 142, 149], "deselect": [1, 142, 149], "select": [1, 13, 71, 118, 142, 149, 158, 181, 185, 186, 188, 189, 190, 195, 200], "activ": [1, 76, 124, 142, 149, 150, 177, 180, 187, 193, 194], "deactiv": [1, 142, 149], "mouse_click_ev": [1, 142, 149], "mouse_moved_ev": [1, 142, 149], "has_tracking_posit": [1, 142, 149], "tracking_posit": [1, 142, 149], "updat": [1, 37, 126, 142, 149, 171, 175, 180, 184, 185, 188, 194, 200], "editnodepluginfactori": [1, 142, 149], "create_plugin": [1, 142, 149], "export_help": [1, 142, 195, 196], "generate_probepoints_json": [1, 142, 150], "generate_probepoints_from_fil": [1, 142, 150], "create_or_empty_tmp_directori": [1, 110, 142, 150, 196], "get_simulation_directori": [1, 142, 150], "get_active_or_new_layout": [1, 142, 150, 195, 196], "write_commit_reference_fil": [1, 142, 150], "write_export_machine_versions_fil": [1, 142, 150], "open_with_klayout_or_default_appl": [1, 142, 150, 196], "get_klayout_vers": [1, 142, 150], "export_drc_report": [1, 142, 150], "geometry_help": [1, 142], "vector_length_and_direct": [1, 142, 151], "point_shift_along_vector": [1, 142, 151], "get_direct": [1, 142, 151], "get_angl": [1, 142, 151], "get_cell_path_length": [1, 142, 151], "get_object_path_length": [1, 142, 151], "simple_region": [1, 142, 151], "region_with_merged_point": [1, 126, 142, 151], "region_with_merged_polygon": [1, 126, 142, 151], "merge_points_and_match_on_edg": [1, 142, 151], "is_clockwis": [1, 142, 151], "circle_polygon": [1, 142, 151], "arc_point": [1, 142, 151], "bspline_point": [1, 142, 151], "bezier_point": [1, 142, 151], "geometry_json_encod": [1, 142], "geometryjsonencod": [1, 142, 152], "default": [1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 78, 79, 83, 84, 85, 88, 89, 90, 91, 92, 93, 96, 97, 105, 108, 109, 118, 121, 122, 126, 128, 129, 130, 131, 133, 134, 136, 137, 138, 139, 141, 142, 145, 147, 150, 151, 152, 154, 156, 160, 161, 162, 163, 164, 166, 171, 173, 176, 179, 180, 181, 185, 186, 189, 190, 191, 194, 195, 196, 199, 200], "geometryjsondecod": [1, 142, 152], "encode_python_obj_as_dict": [1, 142, 152], "decode_dict_as_python_obj": [1, 142, 152], "groundgrid": [1, 142], "make_grid": [1, 142, 153], "gui_help": [1, 142], "get_nodes_near_posit": [1, 142, 154], "node_to_text": [1, 142, 154], "node_from_text": [1, 142, 154], "replace_nod": [1, 142, 154], "get_all_node_el": [1, 142, 154], "get_valid_node_el": [1, 142, 154], "import_help": [1, 142], "module_from_fil": [1, 142, 155], "label": [1, 5, 35, 37, 66, 76, 83, 126, 142, 157, 163, 170, 189], "labelorigin": [1, 142, 156], "bottomleft": [1, 142, 156], "bottomright": [1, 142, 156], "topleft": [1, 142, 156], "topright": [1, 142, 156], "produce_label": [1, 142, 156], "label_polygon": [1, 142], "get_text_polygon": [1, 142, 157], "load_font_polygon": [1, 142, 157], "layout_to_cod": [1, 142], "convert_cells_to_cod": [1, 142, 158], "get_node_param": [1, 142, 158], "extract_pcell_data_from_view": [1, 142, 158], "restore_pcells_to_view": [1, 142, 158], "library_help": [1, 142, 171, 178, 190], "load_librari": [1, 142, 159], "get_library_path": [1, 142, 159], "delete_all_librari": [1, 142, 159], "delete_librari": [1, 142, 159], "element_by_class_nam": [1, 142, 159], "to_module_nam": [1, 142, 159], "to_library_nam": [1, 142, 159], "log_rout": [1, 142], "route_log": [1, 142, 160], "merg": [1, 5, 63, 126, 142, 151, 170, 171, 190], "merge_lay": [1, 142, 161], "convert_child_instances_to_stat": [1, 142, 161], "netlist_extract": [1, 142], "export_cell_netlist": [1, 84, 142, 162], "extract_net": [1, 142, 162], "extract_circuit": [1, 142, 162], "netlist_graph": [1, 142], "network_as_graph": [1, 142, 163], "draw_graph": [1, 142, 163], "paramet": [1, 3, 4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 96, 97, 98, 100, 102, 105, 106, 108, 109, 110, 112, 113, 114, 115, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 166, 167, 168, 174, 175, 179, 186, 187, 188, 189, 193, 195, 196, 197, 199, 200], "add_parameters_from": [1, 142, 164, 171, 195], "add_paramet": [1, 142, 164, 171, 195], "pdt": [1, 142, 164, 190], "typedoubl": [1, 142, 164, 190], "typeint": [1, 142, 164], "typelist": [1, 142, 164], "typestr": [1, 142, 164], "typeshap": [1, 142, 164], "typeboolean": [1, 142, 164], "typelay": [1, 142, 164], "typenon": [1, 142, 164], "param": [1, 37, 63, 114, 126, 142, 164, 167, 171, 190], "get_al": [1, 142, 164], "plugin_startup": [1, 142], "register_plugin": [1, 142, 165], "refpoint": [1, 19, 23, 28, 33, 34, 36, 37, 38, 43, 48, 56, 57, 61, 63, 76, 79, 88, 89, 90, 91, 92, 93, 100, 102, 126, 127, 136, 140, 142, 150, 154, 158, 185, 187, 195], "layer": [1, 5, 13, 25, 27, 28, 29, 32, 33, 35, 37, 38, 52, 54, 58, 61, 63, 64, 65, 68, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 90, 92, 97, 106, 109, 114, 119, 121, 122, 123, 124, 126, 134, 136, 138, 139, 140, 141, 142, 143, 151, 156, 161, 162, 166, 167, 179, 181, 184, 185, 186, 187, 188, 194, 195, 200], "cell": [1, 5, 15, 16, 31, 34, 36, 37, 38, 41, 43, 45, 48, 52, 55, 56, 57, 60, 63, 64, 70, 75, 76, 82, 83, 84, 88, 89, 90, 92, 93, 95, 96, 97, 98, 119, 122, 126, 127, 128, 129, 130, 131, 136, 142, 143, 144, 145, 146, 150, 151, 154, 156, 158, 159, 161, 162, 166, 167, 171, 177, 185, 186, 188, 189, 190, 195, 196, 198], "tran": [1, 5, 9, 10, 37, 65, 67, 76, 83, 126, 140, 142, 166, 167, 195], "rec_level": [1, 37, 76, 126, 142, 166, 190], "dict": [1, 5, 63, 83, 92, 97, 100, 101, 106, 108, 109, 121, 136, 142, 150, 152, 157, 159, 166, 167, 195], "item": [1, 121, 126, 142, 152, 163, 166, 181], "kei": [1, 5, 23, 37, 79, 83, 84, 85, 106, 109, 113, 121, 126, 130, 142, 145, 150, 152, 158, 159, 161, 162, 166, 167, 173, 185, 191, 193], "valu": [1, 5, 13, 23, 27, 29, 34, 36, 37, 38, 43, 48, 56, 57, 58, 63, 64, 68, 76, 79, 82, 83, 84, 88, 89, 90, 93, 97, 106, 109, 118, 121, 122, 124, 126, 130, 136, 142, 150, 152, 154, 156, 158, 159, 161, 162, 164, 166, 167, 171, 173, 179, 184, 185, 186, 188, 190, 194, 195, 200], "refpointtosimport": [1, 34, 36, 37, 38, 43, 48, 56, 57, 88, 89, 90, 93, 142, 166, 195], "refpointtointernalport": [1, 142, 166], "refpointtoedgeport": [1, 142, 166], "waveguidetosimport": [1, 142, 166, 195], "toward": [1, 63, 126, 142, 166, 195], "side": [1, 3, 5, 6, 18, 19, 29, 34, 36, 37, 38, 43, 48, 56, 57, 61, 62, 66, 83, 88, 89, 90, 93, 122, 124, 126, 127, 140, 142, 158, 166, 168, 171, 189, 190, 194, 195], "use_internal_port": [1, 56, 126, 142, 166, 195], "waveguide_length": [1, 126, 131, 142, 151, 166, 195], "term1": [1, 58, 63, 64, 126, 130, 142, 166], "turn_radiu": [1, 126, 130, 142, 166], "b": [1, 13, 19, 25, 29, 31, 32, 36, 37, 38, 39, 43, 49, 57, 58, 63, 66, 68, 79, 90, 91, 126, 130, 136, 141, 142, 151, 166], "over_etch": [1, 126, 142, 166], "junctionsimport": [1, 142, 166, 195], "other_refpoint": [1, 142, 166], "float": [1, 5, 17, 63, 83, 106, 109, 117, 119, 121, 122, 124, 126, 142, 143, 152, 154, 166, 194, 195], "replace_junct": [1, 142], "junctionentri": [1, 142, 167], "extract_junct": [1, 142, 167], "check_static_cell_has_junct": [1, 142, 167], "place_junct": [1, 142, 167], "get_tuned_junction_json": [1, 142, 167], "copy_one_layer_of_cel": [1, 142, 167], "replace_squid": [1, 142, 167], "convert_cells_to_stat": [1, 142, 167], "symmetric_polygon": [1, 142, 190], "polygon_with_hsym": [1, 142, 168], "polygon_with_vsym": [1, 142, 168, 190], "polygon_with_sym": [1, 142, 168], "klayout_view": [1, 177, 179, 188], "klayoutview": [1, 76, 177, 187], "layout_view": [1, 76, 188], "focu": [1, 76, 188], "show": [1, 76, 138, 139, 163, 177, 181, 185, 186, 188, 189, 190, 195, 196], "close": [1, 52, 64, 76, 105, 151, 158, 181, 189], "cell_view": [1, 76, 188], "active_cel": [1, 76, 188], "clear_lay": [1, 76], "add_default_lay": [1, 76], "create_top_cel": [1, 76], "export_layers_bitmap": [1, 76], "export_all_layers_bitmap": [1, 76], "export_pcell_png": [1, 76, 188], "get_pixel": [1, 76], "get_active_cell_view": [1, 76], "get_active_layout": [1, 76], "get_active_cel": [1, 76], "missinguilibraryexcept": [1, 76], "resolve_default_layer_info": [1, 76], "layer_clust": [1, 179], "layerclust": [1, 77], "main_lay": [1, 77], "extra_lay": [1, 77], "all_lay": [1, 77], "pya_resolv": [1, 171, 179, 190, 195], "is_standalone_sess": [1, 86], "klayout_executable_command": [1, 86], "run": [1, 63, 76, 79, 86, 105, 108, 109, 110, 112, 122, 125, 148, 150, 173, 174, 176, 177, 178, 179, 180, 181, 184, 186, 187, 189, 190, 191, 193, 194, 196, 197, 198, 199, 200], "argument_pars": [1, 94], "run_kqc": [1, 94], "pcell": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 84, 87, 88, 89, 90, 91, 92, 93, 96, 97, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 154, 156, 157, 158, 159, 161, 162, 163, 164, 167, 174, 175, 184, 185, 186, 188, 190, 195, 198], "declar": [2, 3, 5, 6, 7, 12, 13, 14, 18, 19, 20, 21, 22, 23, 24, 26, 28, 29, 32, 33, 35, 36, 37, 38, 39, 42, 43, 49, 50, 53, 54, 55, 57, 58, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 87, 88, 89, 93, 132, 133, 134, 138, 139, 140, 141], "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 100, 106, 109, 114, 115, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 149, 152, 154, 156, 158, 159, 164, 166, 167, 171, 172, 174, 181, 184, 187, 188, 194, 196, 197], "consist": [2, 15, 16, 25, 35, 63, 64, 65, 79, 81, 84, 88, 89, 90, 91, 100, 137, 150, 152, 172, 179, 185, 193, 197], "thei": [2, 3, 6, 28, 63, 69, 79, 83, 85, 88, 89, 97, 119, 151, 161, 163, 167, 171, 173, 181, 188, 190, 194], "ar": [2, 3, 5, 6, 20, 23, 28, 30, 33, 37, 49, 63, 64, 65, 66, 69, 76, 79, 81, 83, 84, 85, 92, 97, 100, 102, 103, 106, 109, 110, 112, 114, 118, 121, 122, 123, 126, 130, 132, 140, 142, 144, 150, 151, 152, 154, 158, 159, 160, 161, 162, 163, 164, 165, 167, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200], "themselv": 2, "A": [2, 5, 9, 23, 26, 37, 52, 58, 63, 64, 65, 66, 76, 83, 84, 85, 88, 89, 90, 91, 102, 106, 109, 113, 114, 115, 118, 122, 126, 130, 131, 150, 151, 159, 163, 164, 166, 173, 177, 185, 186, 188, 189, 190, 194, 195, 198], "frame": [2, 5, 35, 49, 83, 185], "i": [2, 3, 5, 6, 7, 10, 16, 19, 23, 28, 29, 31, 32, 33, 34, 36, 37, 38, 39, 41, 43, 48, 49, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 68, 70, 75, 76, 79, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 96, 97, 98, 100, 102, 105, 106, 108, 109, 110, 113, 114, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 137, 138, 139, 140, 145, 148, 150, 151, 152, 153, 154, 156, 157, 158, 159, 161, 162, 163, 164, 166, 167, 169, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200], "alwai": [2, 109, 162, 177, 181, 190, 194], "method": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 32, 33, 34, 36, 37, 38, 39, 42, 43, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 76, 88, 89, 90, 93, 96, 97, 98, 109, 126, 128, 129, 130, 131, 133, 134, 137, 138, 139, 141, 152, 158, 171, 172, 177, 178, 181, 188, 190, 194, 195, 196, 200], "place": [2, 5, 18, 28, 34, 36, 37, 38, 43, 48, 52, 55, 56, 57, 58, 63, 64, 65, 76, 79, 83, 88, 89, 90, 93, 126, 127, 152, 158, 160, 166, 167, 171, 174, 178, 181, 186, 187, 188, 189, 190, 195, 196], "some": [2, 5, 13, 25, 28, 29, 32, 37, 38, 58, 63, 77, 84, 85, 90, 102, 105, 108, 114, 118, 126, 136, 141, 150, 151, 164, 167, 171, 174, 176, 177, 178, 180, 181, 185, 186, 188, 189, 190, 191, 194, 195, 198], "test": [2, 3, 4, 5, 9, 11, 13, 15, 16, 23, 25, 34, 69, 128, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 152, 167, 173, 175, 176, 177, 179, 180, 181, 184, 189, 190, 193, 196], "structur": [2, 5, 28, 69, 124, 132, 133, 136, 137, 140, 141, 163, 167, 177, 178, 179, 181, 187, 189, 194, 198], "after": [2, 13, 28, 63, 64, 71, 72, 79, 83, 90, 105, 108, 113, 122, 126, 127, 136, 164, 173, 176, 181, 184, 186, 188, 189, 190, 193, 196], "ad": [2, 19, 37, 63, 76, 83, 113, 124, 125, 126, 130, 150, 151, 156, 158, 162, 163, 164, 171, 173, 187, 195], "ground": [2, 5, 11, 17, 18, 35, 36, 37, 38, 39, 43, 48, 52, 55, 56, 57, 63, 64, 65, 67, 83, 84, 85, 88, 89, 90, 97, 118, 124, 126, 129, 145, 153, 156, 185, 186, 187, 190, 194, 195], "grid": [2, 5, 18, 35, 37, 55, 56, 63, 64, 65, 67, 83, 84, 85, 126, 140, 153, 156, 158, 185, 186, 187, 190], "which": [2, 5, 6, 7, 10, 16, 19, 23, 28, 34, 36, 37, 38, 43, 48, 56, 57, 63, 64, 65, 76, 77, 79, 81, 83, 84, 85, 87, 88, 89, 90, 93, 95, 96, 97, 98, 102, 109, 112, 113, 118, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 137, 138, 139, 140, 141, 142, 144, 145, 150, 151, 152, 153, 154, 156, 159, 161, 166, 167, 171, 173, 174, 176, 177, 178, 180, 184, 185, 188, 189, 190, 191, 193, 194, 195, 196, 197, 199, 200], "avoid": [2, 5, 13, 19, 25, 29, 32, 35, 37, 38, 58, 63, 64, 65, 90, 126, 136, 140, 141, 153, 156, 160, 161, 179, 185, 189, 190, 194], "can": [2, 5, 19, 23, 28, 36, 37, 52, 55, 58, 63, 64, 69, 70, 75, 76, 79, 81, 82, 84, 85, 87, 88, 89, 96, 97, 98, 100, 102, 109, 113, 114, 118, 121, 122, 123, 124, 126, 128, 129, 130, 131, 137, 150, 151, 152, 154, 158, 163, 166, 167, 169, 171, 173, 176, 177, 178, 180, 181, 184, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200], "produc": [2, 5, 9, 13, 19, 23, 31, 35, 45, 52, 58, 63, 64, 65, 66, 70, 75, 83, 92, 106, 109, 121, 122, 124, 126, 128, 130, 136, 137, 140, 145, 154, 156, 178, 189, 190, 193, 195, 196, 198, 200], "document": [2, 81, 82, 84, 95, 132, 171, 172, 175, 177, 178, 180, 181, 184, 185, 188, 189, 190, 198], "gener": [2, 5, 13, 30, 37, 55, 61, 64, 69, 70, 75, 76, 81, 83, 84, 85, 87, 90, 92, 97, 110, 122, 126, 132, 136, 151, 153, 154, 157, 158, 162, 164, 167, 173, 174, 177, 179, 185, 186, 187, 188, 189, 190, 193, 194, 196, 197, 200], "descript": [2, 132, 164, 171, 190, 198], "sourc": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 175, 177, 178, 180, 183, 184, 194, 195], "base": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 83, 84, 85, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 106, 109, 110, 114, 115, 123, 124, 125, 126, 128, 129, 130, 131, 133, 134, 136, 137, 138, 139, 140, 141, 143, 149, 151, 152, 156, 164, 166, 167, 171, 184, 189, 190, 193, 194, 195], "an": [3, 5, 26, 28, 29, 31, 32, 36, 37, 42, 43, 63, 64, 65, 76, 79, 83, 84, 85, 92, 102, 106, 108, 109, 113, 114, 122, 126, 127, 133, 137, 145, 150, 151, 152, 154, 158, 162, 163, 164, 166, 167, 168, 171, 176, 177, 180, 181, 185, 187, 188, 189, 191, 193, 194, 195, 196, 197, 198, 199, 200], "On": [3, 6, 176, 180, 186, 190, 191, 192], "left": [3, 5, 6, 13, 19, 23, 35, 37, 43, 48, 58, 65, 82, 83, 91, 97, 119, 122, 124, 126, 166, 181, 186, 189, 190, 195], "straight": [3, 6, 26, 45, 47, 58, 63, 64, 67, 92, 126, 131, 190], "vertic": [3, 6, 13, 24, 25, 32, 33, 47, 58, 83, 123, 126, 136, 141, 167, 168, 200], "waveguid": [3, 6, 17, 19, 20, 29, 37, 43, 48, 49, 55, 58, 63, 64, 65, 66, 67, 68, 88, 89, 90, 93, 97, 124, 126, 129, 131, 151, 154, 158, 162, 163, 166, 186, 187, 190, 194, 195], "cross": [3, 6, 23, 58, 66, 97, 106, 109, 113, 122, 134, 179, 185, 187, 190, 195, 197], "multipl": [3, 6, 63, 79, 84, 85, 88, 89, 100, 102, 122, 150, 161, 163, 167, 171, 176, 179, 181, 185, 188, 189, 190, 193, 195, 198], "time": [3, 6, 37, 105, 108, 109, 113, 118, 122, 166, 174, 179, 180, 181, 186, 188, 189, 191, 193, 195], "There": [3, 6, 23, 91, 137, 138, 139, 171, 174, 177, 180, 185, 189, 190, 191, 193, 194, 195], "right": [3, 6, 19, 23, 29, 37, 58, 68, 82, 83, 122, 124, 126, 166, 181, 185, 186, 188, 189, 190, 195], "likewis": [3, 6], "do": [3, 6, 37, 63, 79, 109, 126, 158, 172, 173, 176, 177, 178, 186, 188, 189, 190, 192, 193, 194, 195, 196], "ani": [3, 6, 19, 63, 64, 70, 75, 76, 84, 85, 96, 97, 98, 100, 101, 102, 109, 121, 126, 127, 128, 129, 130, 131, 137, 154, 159, 165, 170, 171, 176, 177, 181, 182, 185, 189, 190, 193, 194, 195, 196, 197], "point": [3, 4, 5, 6, 13, 25, 29, 32, 33, 36, 37, 38, 39, 55, 58, 63, 64, 65, 76, 83, 88, 89, 90, 91, 94, 119, 122, 126, 130, 131, 133, 136, 141, 150, 151, 158, 161, 163, 166, 168, 174, 178, 179, 185, 187, 188, 190, 193, 195, 198], "In": [3, 43, 63, 76, 79, 84, 96, 98, 113, 122, 126, 128, 129, 130, 131, 151, 171, 173, 176, 181, 184, 185, 186, 188, 189, 190, 194, 195, 196], "center": [3, 5, 13, 17, 18, 19, 23, 25, 29, 32, 33, 36, 37, 38, 41, 43, 48, 58, 61, 62, 63, 64, 65, 66, 73, 74, 83, 88, 89, 90, 91, 92, 93, 124, 126, 136, 140, 141, 151, 162, 166, 186, 189, 195], "arrai": [3, 5, 25, 83, 84, 137, 152, 198], "mechan": 3, "differ": [3, 5, 6, 13, 15, 16, 28, 36, 37, 43, 52, 58, 83, 84, 85, 97, 106, 122, 126, 136, 150, 162, 167, 171, 176, 178, 179, 184, 185, 189, 190, 193, 194, 195, 196], "length": [3, 5, 6, 9, 10, 12, 13, 15, 16, 17, 18, 19, 23, 24, 26, 29, 31, 32, 34, 35, 36, 38, 39, 48, 49, 55, 56, 57, 58, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 83, 90, 92, 93, 97, 106, 109, 117, 122, 124, 126, 129, 130, 131, 134, 136, 138, 139, 145, 151, 153, 154, 158, 161, 166, 185, 186, 190, 194, 195], "width": [3, 4, 5, 13, 17, 18, 19, 20, 25, 26, 29, 31, 32, 34, 35, 36, 37, 38, 39, 43, 45, 47, 48, 49, 50, 56, 57, 58, 61, 63, 64, 66, 70, 71, 72, 74, 76, 83, 88, 89, 90, 92, 93, 122, 124, 126, 130, 131, 133, 134, 136, 138, 139, 140, 141, 166, 190, 195], "child": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 29, 32, 33, 34, 36, 37, 38, 39, 42, 43, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 62, 64, 65, 66, 67, 68, 71, 72, 73, 74, 84, 88, 89, 90, 93, 102, 133, 134, 137, 138, 139, 141, 144, 154, 158, 161, 166, 190, 195], "re": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 29, 32, 33, 34, 36, 37, 38, 39, 42, 43, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 62, 64, 65, 66, 67, 68, 71, 72, 73, 74, 88, 89, 90, 93, 117, 124, 133, 134, 137, 138, 139, 141, 158, 164, 171, 188, 193], "defin": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 29, 32, 33, 34, 36, 37, 38, 39, 42, 43, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 79, 88, 89, 90, 91, 92, 93, 97, 100, 102, 105, 122, 126, 127, 133, 134, 137, 138, 139, 140, 141, 150, 152, 160, 162, 164, 167, 171, 178, 179, 186, 187, 189, 191, 193, 194, 195, 200], "thi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 42, 43, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 82, 83, 84, 85, 86, 88, 89, 90, 93, 95, 96, 97, 98, 100, 105, 108, 109, 122, 123, 124, 126, 128, 129, 130, 131, 133, 134, 136, 137, 138, 139, 141, 143, 148, 149, 151, 152, 154, 158, 159, 161, 162, 163, 164, 166, 167, 171, 173, 174, 176, 177, 178, 180, 181, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196], "int": [3, 4, 5, 6, 12, 13, 18, 20, 24, 25, 29, 32, 34, 35, 37, 38, 39, 43, 52, 54, 55, 56, 58, 63, 64, 65, 83, 88, 89, 90, 91, 96, 106, 109, 112, 117, 119, 122, 124, 126, 129, 133, 134, 136, 138, 139, 141, 151, 152, 154, 157], "number": [3, 4, 5, 6, 13, 18, 19, 20, 22, 23, 25, 29, 32, 34, 35, 37, 38, 39, 43, 52, 54, 55, 56, 57, 58, 63, 65, 66, 79, 81, 84, 88, 89, 90, 91, 96, 106, 109, 118, 122, 123, 124, 126, 129, 133, 134, 136, 138, 139, 141, 144, 145, 150, 151, 152, 153, 163, 167, 170, 190, 193, 194, 195], "pair": [3, 6, 13, 17, 54, 136, 152, 154, 158, 166, 184, 185], "10": [3, 5, 13, 17, 18, 19, 23, 25, 26, 29, 32, 34, 35, 37, 38, 48, 52, 56, 57, 58, 63, 66, 68, 88, 89, 90, 93, 106, 109, 126, 130, 134, 136, 141, 151, 153, 154, 169, 176, 177, 180, 193, 194, 195], "b_number": 3, "one": [3, 12, 17, 19, 23, 24, 58, 63, 65, 79, 81, 84, 85, 88, 89, 90, 91, 97, 105, 108, 113, 114, 122, 126, 150, 151, 152, 158, 160, 161, 162, 164, 165, 166, 167, 170, 171, 173, 176, 177, 180, 185, 187, 188, 190, 193, 194, 195, 196, 197], "5": [3, 13, 18, 19, 23, 25, 29, 32, 37, 38, 39, 57, 58, 63, 72, 73, 88, 89, 90, 93, 96, 106, 109, 122, 126, 129, 136, 141, 153, 164, 181, 193, 194], "full": [4, 5, 65, 76, 79, 86, 123, 151, 158, 163, 177, 179, 181, 185, 190, 192, 193, 195, 198], "4": [4, 5, 13, 17, 18, 19, 23, 84, 88, 89, 109, 121, 122, 126, 134, 136, 137, 151, 156, 164, 180, 181, 195], "dc": [4, 5, 7, 8, 32, 41, 42, 43, 50, 58, 63, 133], "n_step": 4, "increment": [4, 5, 13, 63, 139, 154, 167], "step": [4, 13, 15, 16, 63, 136, 151, 153, 167, 176, 180, 181, 186, 188, 189, 191], "1": [4, 5, 6, 7, 10, 13, 16, 17, 18, 19, 23, 26, 28, 29, 36, 37, 38, 43, 55, 56, 57, 58, 63, 68, 71, 72, 84, 88, 89, 90, 106, 109, 117, 121, 122, 123, 126, 131, 136, 138, 139, 143, 151, 156, 158, 163, 164, 175, 181, 186, 189, 190, 191, 193, 194, 195, 200], "test_width": 4, "doubl": [4, 5, 6, 13, 17, 18, 19, 20, 25, 26, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 45, 47, 48, 49, 50, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 88, 89, 90, 92, 93, 109, 126, 129, 130, 131, 133, 134, 136, 138, 139, 141, 168, 185, 186, 188, 194, 199], "singl": [4, 6, 10, 13, 17, 19, 23, 26, 57, 58, 63, 70, 72, 82, 84, 88, 90, 92, 100, 105, 108, 113, 126, 127, 131, 136, 158, 159, 164, 177, 178, 181, 187, 189, 190, 191, 193, 197, 198], "2000": [4, 19, 109, 133, 190], "unit": [4, 5, 6, 9, 10, 13, 17, 18, 19, 20, 25, 26, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 45, 47, 48, 49, 50, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66, 68, 70, 71, 72, 73, 74, 75, 88, 89, 90, 92, 93, 97, 106, 109, 122, 123, 124, 126, 129, 130, 131, 133, 134, 136, 138, 139, 141, 150, 151, 153, 171, 175, 177, 179, 190, 194], "\u03bcm": [4, 5, 6, 9, 10, 13, 17, 18, 19, 20, 25, 26, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 45, 47, 48, 49, 50, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66, 68, 70, 71, 72, 75, 88, 89, 90, 92, 93, 126, 129, 130, 131, 133, 134, 136, 138, 139, 141, 166, 190], "pixel": [5, 7, 76, 151, 198], "corner": [5, 7, 13, 35, 37, 38, 39, 52, 63, 64, 65, 156, 185, 186, 190], "dice": [5, 7, 35, 83], "edg": [5, 7, 12, 19, 20, 24, 35, 36, 52, 58, 63, 64, 73, 74, 83, 89, 90, 91, 109, 118, 119, 121, 122, 123, 124, 126, 129, 130, 140, 151, 153, 166, 178, 185, 195], "option": [5, 23, 32, 37, 58, 63, 83, 84, 85, 93, 100, 106, 109, 112, 118, 121, 122, 124, 126, 127, 137, 145, 158, 162, 173, 178, 180, 185, 186, 189, 190, 191, 193, 196, 200], "all": [5, 11, 28, 31, 34, 36, 37, 38, 43, 48, 56, 57, 61, 63, 64, 66, 76, 82, 83, 84, 85, 88, 89, 90, 93, 97, 100, 102, 108, 110, 112, 113, 121, 122, 126, 143, 151, 152, 154, 158, 159, 161, 164, 167, 171, 172, 173, 177, 178, 180, 181, 184, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196], "contain": [5, 22, 23, 28, 34, 36, 37, 38, 43, 48, 56, 57, 63, 69, 76, 77, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95, 97, 100, 102, 105, 108, 110, 112, 113, 121, 122, 126, 127, 134, 138, 139, 141, 143, 150, 152, 154, 156, 161, 162, 163, 166, 167, 171, 174, 175, 176, 177, 178, 179, 184, 185, 188, 189, 190, 193, 195, 196, 198, 200], "connector": [5, 19, 32, 37, 40, 41, 42, 43, 58, 61, 62, 63, 185], "between": [5, 6, 9, 10, 12, 13, 17, 18, 19, 23, 24, 25, 29, 32, 34, 35, 37, 38, 39, 41, 43, 57, 58, 61, 62, 63, 64, 79, 90, 93, 109, 122, 124, 126, 131, 134, 136, 138, 139, 140, 141, 143, 151, 153, 162, 179, 185, 194, 195], "librari": [5, 28, 31, 37, 41, 45, 52, 60, 63, 70, 76, 90, 91, 92, 93, 136, 140, 154, 159, 175, 176, 177, 179, 180, 181, 184, 185, 186, 187, 198, 199], "superconduct": [5, 37, 122, 140, 179], "quantum": [5, 28, 37, 69, 140, 179, 198], "circuit": [5, 28, 37, 140, 162, 179, 190, 198], "implement": [5, 13, 28, 31, 34, 36, 37, 38, 39, 43, 45, 48, 52, 55, 56, 57, 63, 64, 65, 70, 88, 89, 90, 92, 93, 97, 100, 126, 136, 150, 151, 152, 158, 166, 170, 190, 191, 193, 195, 198], "static": [5, 37, 54, 63, 64, 65, 67, 76, 83, 84, 126, 157, 161, 167, 185, 186], "chip_cel": [5, 82, 83], "return": [5, 34, 36, 37, 38, 43, 48, 52, 56, 57, 58, 63, 64, 65, 66, 76, 77, 83, 84, 86, 88, 89, 90, 92, 93, 97, 100, 102, 105, 106, 108, 109, 110, 113, 114, 115, 118, 119, 121, 122, 123, 124, 125, 126, 127, 130, 136, 143, 144, 145, 147, 150, 151, 152, 153, 154, 155, 157, 158, 159, 163, 164, 166, 167, 168, 188, 189, 190, 195], "dictionari": [5, 23, 37, 58, 66, 79, 83, 84, 85, 97, 106, 109, 113, 115, 121, 124, 126, 130, 145, 152, 159, 161, 162, 163, 164, 166, 190, 195], "assign": [5, 121, 166, 185, 190], "port_id": 5, "launcher_id": 5, "object": [5, 26, 34, 36, 37, 38, 43, 45, 48, 52, 56, 57, 63, 76, 77, 79, 82, 83, 84, 85, 88, 89, 90, 92, 93, 95, 97, 102, 103, 105, 108, 109, 113, 114, 115, 121, 122, 123, 124, 125, 126, 127, 131, 143, 149, 150, 151, 152, 154, 161, 162, 164, 166, 167, 171, 177, 179, 185, 186, 187, 188, 189, 190, 193, 194, 196, 197, 198, 199, 200], "junction_typ": [5, 9, 10, 13, 23, 26, 70, 71, 72, 73, 74, 75, 90, 92, 131, 136, 167, 195], "pad": [5, 9, 13, 29, 31, 32, 33, 34, 36, 38, 49, 50, 58, 71, 72, 74, 89, 90, 92, 93, 126, 133, 135, 136, 137, 140, 190, 195], "string": [5, 6, 7, 9, 10, 13, 14, 15, 16, 17, 19, 22, 23, 24, 25, 26, 29, 31, 32, 33, 34, 35, 37, 38, 41, 43, 45, 46, 47, 56, 58, 60, 61, 62, 63, 66, 70, 71, 72, 73, 74, 83, 84, 90, 92, 97, 106, 109, 110, 112, 113, 125, 126, 127, 129, 131, 136, 137, 141, 145, 150, 152, 154, 157, 158, 159, 160, 162, 163, 166, 189, 190], "type": [5, 9, 10, 13, 14, 15, 16, 18, 19, 23, 25, 26, 27, 29, 31, 32, 33, 35, 37, 41, 43, 45, 46, 47, 52, 56, 58, 60, 61, 62, 63, 66, 70, 71, 72, 73, 74, 79, 84, 86, 90, 92, 93, 109, 114, 118, 122, 124, 126, 127, 128, 131, 136, 137, 141, 143, 144, 145, 150, 151, 152, 154, 158, 162, 164, 167, 177, 178, 185, 187, 192, 194, 195, 200], "us": [5, 9, 11, 19, 23, 26, 28, 29, 34, 35, 36, 37, 38, 43, 48, 49, 52, 55, 56, 57, 58, 63, 64, 66, 68, 70, 75, 76, 79, 82, 83, 84, 85, 86, 88, 89, 90, 92, 93, 96, 97, 98, 100, 102, 103, 105, 106, 108, 109, 110, 112, 113, 118, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 136, 140, 145, 150, 151, 152, 153, 154, 157, 158, 159, 161, 162, 163, 164, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 186, 187, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200], "optic": [5, 15, 16, 134, 138, 139, 179, 198], "lithographi": [5, 15, 16, 126, 134, 138, 139, 198], "call": [5, 37, 57, 63, 84, 96, 97, 98, 100, 113, 122, 123, 126, 128, 129, 130, 131, 143, 152, 159, 161, 162, 171, 178, 181, 187, 188, 189, 190, 192, 193, 194, 195, 196, 198], "overrid": [5, 13, 83, 85, 96, 97, 98, 102, 121, 124, 126, 128, 129, 130, 131, 136, 171, 173, 191], "set": [5, 19, 37, 58, 63, 76, 81, 82, 84, 85, 97, 100, 102, 106, 109, 110, 118, 121, 122, 124, 126, 130, 150, 166, 170, 171, 173, 176, 177, 178, 179, 185, 186, 190, 191, 193, 194, 195, 196], "given": [5, 34, 36, 37, 38, 43, 48, 55, 56, 57, 58, 63, 64, 76, 79, 82, 84, 88, 89, 90, 92, 93, 97, 102, 106, 109, 121, 122, 123, 124, 125, 126, 127, 134, 136, 137, 138, 139, 141, 150, 151, 152, 155, 156, 157, 159, 161, 164, 166, 167, 171, 173, 189, 190, 193, 194, 195, 197], "pya": [5, 37, 52, 63, 79, 83, 84, 86, 92, 121, 122, 123, 126, 140, 151, 152, 154, 162, 164, 166, 168, 175, 189, 190, 195], "dbox": [5, 76, 92, 122, 123, 126, 189, 190, 195], "within": [5, 34, 36, 37, 38, 43, 48, 56, 57, 63, 88, 89, 90, 93, 100, 102, 109, 137, 167, 177, 178, 184, 197, 199], "id": [5, 6, 7, 10, 13, 16, 19, 25, 29, 32, 37, 38, 58, 63, 76, 79, 84, 85, 90, 126, 129, 136, 141, 150, 151, 163, 172, 177, 187, 188, 189, 199], "where": [5, 17, 19, 23, 34, 36, 37, 38, 43, 48, 56, 57, 58, 63, 64, 65, 70, 75, 83, 84, 85, 88, 89, 90, 93, 97, 100, 105, 108, 109, 110, 113, 118, 122, 123, 125, 126, 130, 150, 154, 156, 158, 161, 162, 166, 167, 171, 176, 180, 185, 188, 189, 190, 191, 193, 194, 195, 197], "frame_paramet": 5, "r0": [5, 37, 126, 140], "dtran": [5, 52, 65, 83, 127, 168, 190, 195], "toler": [5, 64, 109, 119, 126, 151, 161], "004": [5, 126, 161], "base_metal_gap": [5, 79, 161, 190], "combin": [5, 37, 97, 113, 126, 161, 179, 195], "three": [5, 17, 69, 126, 161, 177, 180, 184, 188, 189, 190, 193, 195], "subtract": [5, 52, 126, 140, 161], "insert": [5, 28, 35, 37, 58, 63, 76, 83, 92, 102, 126, 136, 140, 152, 161, 166, 177, 185, 187, 195], "oper": [5, 37, 63, 150, 161, 176, 177, 180, 185, 193], "base_metal_gap_wo_grid": [5, 92, 134, 136, 138, 139, 161, 162, 181, 185, 190], "base_metal_addit": [5, 161, 190], "ground_grid": [5, 161, 190], "info": [5, 112, 118, 126, 160, 161, 173, 193], "gap": [5, 13, 17, 18, 19, 20, 23, 25, 29, 32, 34, 35, 36, 37, 38, 39, 43, 45, 47, 48, 49, 56, 57, 58, 63, 64, 65, 66, 71, 72, 88, 89, 90, 93, 121, 123, 126, 136, 140, 141, 145, 151, 161, 166, 190, 195], "ignor": [5, 84, 92, 97, 126, 151, 161, 166, 176, 193], "while": [5, 23, 37, 79, 161, 162, 173, 178, 180, 181, 193], "\u00b5m": [5, 17, 35, 58, 63, 73, 74, 88, 89, 90, 92, 118, 126, 161], "possibli": [5, 52, 167, 181, 189, 190], "befor": [5, 37, 63, 64, 76, 84, 109, 123, 126, 154, 165, 176, 185, 196], "get": [5, 63, 76, 97, 121, 122, 143, 152, 162, 164, 171, 173, 174, 176, 177, 178, 179, 180, 184, 188, 191], "specifi": [5, 31, 32, 33, 37, 49, 63, 76, 83, 84, 85, 97, 109, 122, 124, 126, 150, 151, 152, 154, 155, 160, 162, 163, 164, 167, 173, 174, 184, 189, 191, 195, 196], "correctli": [5, 37, 64, 83, 185, 190], "resolv": [5, 83, 175, 190], "integ": [5, 6, 7, 10, 16, 19, 83, 124, 126, 151, 152, 157, 195], "filter_layer_list": 5, "transform": [5, 37, 52, 65, 76, 83, 92, 126, 127, 136, 140, 151, 166, 190], "filter_region": 5, "tupl": [5, 23, 37, 63, 64, 65, 76, 83, 84, 105, 108, 110, 113, 121, 122, 126, 130, 143, 150, 152, 154, 158, 164], "layer_nam": [5, 37, 76, 82, 97, 122, 126], "distanc": [5, 6, 17, 18, 19, 25, 29, 35, 43, 63, 64, 66, 88, 89, 90, 109, 121, 126, 130, 131, 134, 140, 141, 151, 154], "filter": [5, 112, 178], "region": [5, 37, 38, 52, 63, 83, 100, 102, 109, 121, 122, 123, 126, 127, 140, 151, 153, 157], "element_cel": 5, "shape_lay": 5, "locat": [5, 37, 52, 63, 76, 79, 83, 102, 105, 108, 118, 121, 124, 126, 130, 147, 156, 158, 163, 166, 167, 176, 177, 178, 180, 181, 185, 186, 188, 194, 195, 196], "rotat": [5, 37, 43, 63, 76, 83, 92, 126, 189, 190], "repeat": [5, 125], "list": [5, 6, 7, 9, 10, 13, 16, 17, 18, 19, 23, 25, 26, 28, 29, 32, 34, 35, 36, 37, 38, 43, 48, 52, 55, 56, 57, 58, 63, 64, 65, 66, 76, 77, 81, 83, 84, 85, 88, 89, 90, 91, 93, 97, 100, 101, 102, 105, 106, 108, 109, 110, 112, 113, 114, 118, 119, 121, 122, 123, 124, 125, 126, 127, 130, 131, 136, 141, 143, 150, 151, 152, 154, 156, 158, 159, 161, 162, 163, 164, 166, 167, 168, 173, 176, 177, 181, 184, 186, 190, 194, 195, 196, 197], "dpoint": [5, 37, 63, 64, 76, 83, 92, 119, 121, 122, 124, 126, 140, 150, 151, 154, 156, 162, 166, 189, 190, 195, 200], "degre": [5, 17, 36, 43, 63, 66, 83, 88, 89, 92, 109, 151, 189, 190], "bump_box": 5, "should": [5, 31, 34, 36, 37, 38, 43, 48, 56, 57, 58, 63, 64, 76, 77, 79, 88, 89, 90, 93, 96, 97, 98, 102, 109, 122, 123, 124, 126, 127, 128, 129, 130, 131, 148, 150, 152, 162, 164, 166, 167, 171, 172, 173, 174, 176, 177, 178, 180, 181, 185, 186, 188, 189, 190, 195, 199], "fill": [5, 97, 118, 170, 181, 185, 186, 190], "bump": [5, 32, 41, 43, 58, 63, 126, 129, 170, 195], "coordin": [5, 17, 37, 55, 63, 65, 76, 83, 90, 109, 122, 126, 140, 163, 166, 189], "mai": [5, 28, 37, 63, 76, 83, 84, 97, 124, 126, 127, 159, 161, 162, 163, 167, 171, 173, 174, 176, 177, 178, 180, 181, 184, 185, 186, 188, 189, 190, 192, 193], "post": [5, 37, 113, 122, 125, 194, 196, 197], "sampleholder_typ": [5, 14, 190], "launcher_assign": 5, "none": [5, 26, 31, 35, 37, 41, 45, 52, 60, 63, 70, 76, 82, 83, 84, 85, 86, 92, 97, 102, 105, 106, 108, 110, 112, 113, 114, 119, 121, 122, 123, 124, 125, 126, 127, 130, 131, 136, 140, 143, 145, 150, 151, 152, 158, 159, 162, 163, 164, 166, 167, 193, 195], "enabl": [5, 57, 63, 100, 106, 109, 123, 126, 130, 160, 179, 180, 185, 186, 190, 194], "typic": [5, 13, 25, 29, 32, 37, 38, 58, 63, 69, 90, 126, 136, 141, 145, 159, 162, 190, 195, 196, 197], "sampl": [5, 8, 18, 91, 130, 151], "holder": [5, 8, 18, 130], "size": [5, 29, 36, 38, 43, 57, 63, 68, 76, 83, 84, 88, 89, 109, 124, 126, 151, 156, 157, 163, 185, 189, 190], "self": [5, 37, 58, 63, 66, 70, 75, 83, 84, 92, 96, 97, 98, 126, 128, 129, 130, 131, 152, 172, 184, 190, 193, 195], "accordingli": [5, 37, 190], "wrapper": [5, 76, 130, 171], "around": [5, 19, 29, 35, 36, 37, 38, 52, 64, 65, 76, 83, 126, 150, 151, 156, 171, 179, 184, 185, 186, 189, 195], "configur": [5, 13, 20, 27, 43, 76, 78, 79, 83, 100, 114, 136, 137, 171, 178, 187], "mean": [5, 29, 36, 38, 43, 55, 57, 58, 63, 64, 68, 79, 122, 123, 126, 170, 171, 189, 190, 195], "index": [5, 19, 37, 63, 64, 65, 79, 119, 124, 126, 154, 166, 167, 177, 179, 190], "head": [5, 48, 130], "from": [5, 13, 19, 20, 23, 29, 31, 34, 35, 37, 49, 52, 58, 63, 64, 65, 66, 69, 71, 72, 76, 79, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 100, 102, 106, 109, 110, 112, 113, 119, 121, 122, 123, 124, 126, 128, 129, 130, 131, 136, 140, 143, 144, 147, 150, 151, 154, 155, 156, 157, 159, 160, 162, 164, 166, 167, 170, 171, 173, 174, 176, 177, 179, 180, 181, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 197, 198, 199, 200], "n": [5, 13, 25, 29, 32, 37, 38, 58, 63, 65, 88, 89, 90, 117, 126, 136, 141, 151, 152, 162, 178, 190, 193, 194], "launcher_typ": [5, 190], "launcher_width": [5, 20, 190], "launcher_gap": [5, 20, 190], "launcher_ind": [5, 20, 190], "pad_pitch": [5, 190], "port_id_remap": 5, "launcher_frame_gap": [5, 49], "chip_box": [5, 190], "chang": [5, 34, 36, 37, 38, 43, 48, 56, 57, 63, 88, 89, 90, 93, 127, 164, 167, 170, 171, 173, 176, 177, 178, 180, 181, 185, 186, 188, 190, 191, 195, 196, 199], "equal": [5, 123, 151, 158, 163, 166, 194], "distribut": [5, 63, 85, 180], "overridden": [5, 96, 97, 98, 126, 128, 129, 130, 131], "desir": [5, 37, 63, 64, 92, 156, 177, 185, 189, 191, 194, 195], "per": [5, 38, 57, 63, 66, 106, 137, 171, 193, 194], "disabl": [5, 13, 37, 71, 76, 90, 123, 126, 136, 166, 185, 186, 188], "argument": [5, 34, 36, 37, 38, 43, 48, 52, 56, 57, 63, 76, 84, 85, 88, 89, 90, 92, 93, 96, 97, 98, 100, 102, 106, 109, 110, 112, 121, 122, 125, 126, 127, 128, 129, 130, 131, 136, 154, 157, 164, 173, 180, 189, 190, 195, 196, 197], "If": [5, 37, 63, 66, 76, 85, 96, 97, 98, 100, 102, 106, 109, 110, 112, 121, 122, 123, 126, 127, 128, 129, 130, 131, 140, 150, 151, 152, 157, 158, 159, 160, 162, 163, 166, 167, 169, 172, 173, 174, 176, 177, 178, 180, 181, 182, 185, 188, 189, 190, 193, 195, 198, 199, 200], "neither": [5, 76], "rf": [5, 43, 178, 190], "most": [5, 119, 152, 154, 166, 171, 180, 181, 184, 185, 186, 188, 190, 193, 195, 198], "top": [5, 6, 19, 33, 41, 58, 76, 79, 83, 96, 97, 98, 122, 123, 126, 128, 129, 130, 131, 150, 158, 166, 167, 171, 185, 186, 188, 189, 190, 195, 198], "clockwis": [5, 13, 19, 35, 58, 83, 119, 151, 189], "order": [5, 19, 23, 58, 63, 64, 97, 109, 119, 122, 126, 151, 152, 171, 173, 185, 194, 195], "x": [5, 17, 34, 55, 63, 64, 83, 88, 89, 92, 109, 119, 121, 122, 140, 150, 154, 162, 163, 174, 180, 185, 187, 189, 190, 193, 194, 195, 196], "y": [5, 13, 55, 63, 83, 92, 109, 117, 119, 122, 136, 140, 150, 154, 162, 163, 174, 189, 194, 195, 196], "your": [5, 52, 97, 105, 108, 124, 126, 169, 170, 172, 173, 176, 177, 178, 179, 180, 181, 190, 191, 196], "For": [5, 19, 23, 28, 37, 63, 79, 83, 92, 102, 109, 126, 150, 152, 154, 158, 159, 163, 164, 165, 167, 171, 173, 177, 178, 180, 181, 185, 186, 188, 190, 193, 194, 195, 196], "flip": [5, 6, 16, 19, 32, 37, 40, 41, 43, 54, 58, 63, 129, 150, 185, 189, 190, 195], "": [5, 12, 17, 24, 34, 36, 37, 38, 43, 48, 49, 56, 57, 63, 76, 84, 86, 88, 89, 90, 92, 93, 102, 106, 119, 126, 127, 136, 150, 151, 157, 158, 162, 164, 166, 167, 171, 174, 176, 180, 181, 184, 185, 187, 189, 190, 191, 197, 199], "axi": [5, 13, 17, 24, 64, 88, 89, 92, 109, 136, 150, 167, 168], "rang": [5, 57, 152], "delta_x": 5, "100": [5, 13, 18, 25, 29, 32, 35, 37, 38, 43, 58, 60, 63, 64, 75, 90, 91, 92, 109, 117, 126, 129, 131, 134, 136, 138, 139, 141, 151, 186, 190, 195, 196], "delta_i": 5, "x0": 5, "y0": 5, "separ": [5, 13, 37, 71, 72, 76, 84, 90, 91, 97, 109, 122, 126, 136, 152, 154, 158, 159, 161, 178, 180, 181, 185, 186, 190, 191, 195, 196], "along": [5, 58, 109, 167, 200], "dimens": [5, 20, 76, 123, 126, 174, 194, 195], "displac": [5, 92, 190], "tsv_box": 5, "boolean": [5, 9, 10, 13, 18, 21, 23, 25, 29, 32, 34, 35, 37, 38, 43, 49, 52, 54, 55, 56, 58, 63, 64, 65, 66, 67, 68, 71, 72, 76, 83, 84, 90, 92, 97, 126, 128, 129, 130, 136, 140, 141, 160], "make": [5, 28, 41, 83, 84, 85, 86, 105, 108, 109, 126, 164, 170, 171, 173, 174, 176, 177, 178, 179, 180, 181, 185, 186, 188, 189, 190, 191, 195, 196, 200], "plane": [5, 36, 38, 39, 52, 88, 89, 126, 185, 186, 189, 190], "fals": [5, 13, 18, 19, 21, 25, 29, 32, 34, 35, 37, 38, 43, 49, 52, 54, 55, 56, 58, 63, 64, 65, 66, 67, 68, 71, 72, 76, 82, 83, 84, 90, 92, 97, 105, 106, 108, 109, 110, 112, 117, 118, 121, 123, 124, 125, 126, 128, 129, 136, 141, 151, 152, 156, 158, 159, 163, 166, 167, 189, 190, 193, 194, 195], "merge_base_metal_gap": 5, "a_cap": 5, "conductor": [5, 13, 17, 18, 19, 25, 29, 32, 37, 38, 43, 58, 63, 64, 66, 88, 89, 90, 126, 136, 141, 166], "cap": [5, 19], "b_cap": 5, "with_gnd_tsv": 5, "through": [5, 25, 57, 58, 64, 84, 85, 106, 141, 151, 173, 174, 188, 195], "silicon": [5, 25, 126, 141, 190, 195, 198], "with_face1_gnd_tsv": 5, "tsv_grid_spac": 5, "space": [5, 12, 13, 15, 16, 19, 24, 26, 58, 63, 97, 129, 130, 131, 134, 136, 138, 139, 154, 156, 159, 177], "300": [5, 6, 48, 49, 58, 88, 89, 126], "edge_from_tsv": 5, "clearanc": [5, 52, 63, 83], "550": [5, 17, 126], "tsv_edge_to_tsv_edge_separ": 5, "exist": [5, 76, 83, 96, 97, 98, 113, 122, 126, 128, 129, 130, 131, 150, 151, 154, 159, 163, 167, 171, 176, 180, 181, 185, 190, 195, 196], "250": [5, 89, 91], "tsv_edge_to_nearest_el": 5, "with_gnd_bump": 5, "indium": [5, 126, 195], "bump_grid_spac": 5, "120": [5, 88, 89, 93, 170, 172], "edge_from_bump": 5, "bump_edge_to_bump_edge_separ": 5, "95": 5, "frames_en": [5, 6, 7, 10, 16, 19], "drawn": [5, 6, 7, 10, 16, 19, 181, 195, 198], "frames_marker_dist": 5, "each": [5, 13, 18, 23, 26, 35, 36, 37, 58, 63, 64, 65, 66, 76, 79, 81, 82, 83, 84, 85, 88, 89, 91, 93, 97, 100, 106, 109, 122, 126, 131, 137, 140, 150, 151, 154, 157, 158, 159, 161, 162, 163, 167, 171, 176, 177, 178, 181, 185, 188, 189, 190, 191, 193, 194, 195, 196, 197, 200], "1500": [5, 35], "1000": [5, 17, 18, 48, 56, 58, 76, 79, 109, 126, 190], "frames_diagonal_squar": 5, "diagon": [5, 35, 52, 194], "squar": [5, 12, 24, 35, 38, 52, 83, 84, 140, 158, 177, 181, 190], "2": [5, 13, 18, 19, 23, 25, 26, 33, 34, 38, 39, 45, 57, 63, 71, 75, 83, 90, 92, 106, 109, 122, 131, 136, 137, 141, 151, 156, 164, 175, 176, 179, 190, 191, 193, 194, 195], "frames_mirror": 5, "mirror": [5, 9, 10, 13, 19, 82, 83, 92, 136, 156, 167, 168, 189], "true": [5, 9, 10, 13, 18, 19, 23, 29, 32, 37, 56, 58, 63, 64, 71, 72, 76, 83, 84, 85, 90, 97, 105, 106, 109, 110, 112, 118, 126, 128, 129, 130, 136, 144, 150, 151, 152, 154, 158, 159, 160, 161, 163, 164, 166, 167, 171, 186, 188, 189, 190, 193, 194, 195], "frames_dice_width": 5, "street": 5, "200": [5, 13, 17, 19, 25, 35, 58, 63, 93, 141, 190], "140": 5, "face_box": 5, "8500": 5, "dice_grid_margin": [5, 35], "margin": [5, 13, 19, 25, 29, 32, 35, 37, 38, 58, 60, 63, 68, 71, 72, 83, 90, 126, 136, 141, 156, 190, 195, 196], "name_mask": [5, 35], "m000": [5, 35], "name_chip": [5, 7, 9, 10, 17, 22, 35], "ctest": [5, 35], "name_copi": [5, 35, 83], "copi": [5, 35, 37, 63, 83, 113, 158, 168, 171, 190, 191, 196, 197], "name_brand": [5, 35], "brand": [5, 35], "marker_typ": [5, 13, 35, 52], "lower": [5, 13, 23, 35, 74, 92, 123, 126, 181, 194, 195], "standard": [5, 13, 25, 26, 35, 45, 46, 52, 53, 60, 62, 63, 92, 130, 131, 141, 151, 154, 160, 180, 181], "chip_dicing_in_base_met": [5, 35], "line": [5, 6, 9, 17, 18, 19, 35, 36, 48, 56, 64, 84, 90, 91, 113, 119, 125, 126, 138, 139, 141, 151, 154, 170, 174, 176, 177, 185, 186, 187, 188, 189, 190, 196, 197, 198, 199], "metal": [5, 11, 13, 25, 29, 32, 35, 37, 38, 41, 49, 58, 63, 64, 65, 67, 68, 71, 72, 74, 90, 92, 93, 97, 109, 121, 122, 123, 124, 126, 129, 136, 140, 141, 166, 190, 194, 195], "addit": [5, 13, 29, 35, 37, 49, 63, 64, 65, 67, 68, 71, 72, 79, 83, 90, 96, 98, 109, 122, 125, 126, 128, 129, 130, 131, 136, 170, 173, 185, 189, 190, 194], "bound": [5, 35, 55, 63, 83, 92, 123, 126, 136, 153, 156, 162, 185], "10000": [5, 18, 35, 97, 126, 189], "bump_typ": [5, 32, 41, 43, 58, 63], "choic": [5, 6, 10, 13, 14, 15, 16, 18, 19, 23, 25, 26, 29, 31, 32, 33, 34, 41, 43, 45, 46, 47, 56, 58, 60, 61, 62, 63, 66, 70, 71, 72, 73, 74, 90, 92, 106, 109, 131, 136, 137, 141, 164, 171, 177, 194], "tsv_type": [5, 25, 60, 61, 62, 141], "ellips": [5, 25, 60, 61, 141], "bottom": [6, 33, 41, 58, 73, 74, 79, 83, 122, 123, 126, 166, 171, 186, 189, 190, 195], "transmiss": [6, 18, 56, 64, 141], "3": [6, 17, 18, 19, 23, 26, 34, 38, 39, 47, 54, 65, 83, 88, 89, 93, 109, 122, 126, 131, 151, 156, 164, 173, 175, 176, 180, 181, 194, 195], "crossing_length": 6, "400": [6, 17, 58, 88, 89, 126, 190], "cross_talk_dist": 6, "meander_fac": 6, "two": [6, 9, 17, 35, 36, 38, 39, 41, 43, 55, 61, 62, 63, 71, 83, 89, 90, 91, 92, 122, 123, 126, 140, 150, 151, 154, 162, 166, 171, 176, 185, 189, 190, 193, 194, 195, 196, 200], "daisi": 7, "woven": 7, "includ": [7, 9, 10, 13, 18, 25, 28, 29, 32, 37, 38, 56, 58, 63, 69, 71, 72, 82, 84, 85, 90, 92, 97, 105, 108, 122, 126, 128, 136, 141, 150, 151, 152, 158, 167, 169, 173, 174, 179, 180, 184, 185, 189, 190, 194, 196, 200], "text": [7, 35, 37, 63, 79, 83, 122, 124, 126, 138, 139, 154, 156, 157, 166, 177, 186, 190], "manual": [7, 30, 58, 63, 69, 70, 75, 79, 84, 87, 100, 106, 109, 124, 148, 150, 173, 175, 179, 181, 189, 194, 195, 196, 198], "pattern": [7, 58, 179], "No": [7, 10, 13, 23, 26, 70, 73, 90, 92, 109, 131, 136, 180], "input": [7, 17, 19, 43, 58, 63, 122, 151, 154, 193, 195, 200], "demonstr": [9, 10, 17, 177, 178, 185, 186, 200], "four": [9, 23, 52, 91, 133, 140, 151, 156, 162, 189], "readout": [9, 10, 17, 23, 90, 91], "reson": [9, 10, 17, 18, 19, 23, 48, 56, 58, 128, 185, 194], "probe": [9, 17, 140, 150], "charg": [9, 186], "qubit_a_nr": [9, 10], "qubit_b_nr": [9, 10], "port_nr": [9, 126, 195], "qubit_nr": [9, 10], "cap_finger_nr": [9, 10], "probeline_nam": [9, 10], "readout_res_length": [9, 10, 17, 23, 189], "5000": [9, 10, 23, 58, 130, 189, 190], "5100": [9, 10, 23], "5200": [9, 10, 23], "5300": [9, 10, 23], "include_coupl": [9, 10, 189], "coupler": [9, 10, 17, 18, 19, 23, 26, 34, 36, 38, 56, 88, 89, 90, 91, 93, 126, 131, 145, 186, 195], "3d": [10, 28, 109, 121, 126, 185, 190, 195], "integr": [10, 28, 106, 108, 109, 114, 184, 185, 187, 190, 197], "multi": [10, 29, 31, 32, 56, 58, 63, 66, 79, 84, 85, 126, 178, 179, 187, 190], "featur": [10, 37, 63, 102, 152, 177, 178, 179, 180, 181, 186, 187, 188, 189, 190, 197], "dt": 10, "almost": [11, 162, 190], "remov": [11, 34, 52, 83, 84, 126, 129, 150, 151, 159, 160, 164, 167, 174, 176, 177, 179, 190], "ebl": [11, 77, 179, 189], "edge_len": [12, 24], "80": [12, 13, 24, 36, 66, 88, 89, 91], "inter_spac": [12, 24], "20": [12, 17, 18, 19, 24, 29, 31, 36, 38, 39, 68, 88, 89, 90, 91, 92, 138, 139, 193, 195], "pad_width": [13, 72, 90, 136, 140], "500": [13, 19, 25, 34, 48, 50, 56, 58, 63, 90, 109, 133, 136, 141, 157, 190, 195], "junctions_horizont": [13, 136], "horizont": [13, 18, 23, 25, 58, 72, 83, 90, 136, 140, 141, 168], "small_loop_area": 13, "small": [13, 22, 64, 170, 190, 193], "loop": [13, 71, 75, 90, 92, 136], "large_loop_area": 13, "larg": [13, 178, 193], "130": [13, 190], "junction_width_smal": 13, "finger": [13, 17, 18, 19, 23, 34, 38, 39, 56, 57, 71, 72, 90, 93, 136, 145], "15": [13, 88, 89, 134, 195], "junction_width_larg": 13, "08": [13, 131], "junction_width_step_increment_smal": 13, "01": [13, 106, 109, 119, 126], "junction_width_step_increment_larg": 13, "03": 13, "pads_loop": 13, "central": [13, 189], "6": [13, 17, 18, 19, 23, 25, 29, 32, 37, 38, 48, 58, 63, 66, 72, 88, 89, 90, 126, 136, 141, 151, 164], "turn": [13, 19, 25, 29, 32, 34, 36, 37, 38, 43, 48, 56, 57, 58, 63, 88, 89, 90, 93, 109, 126, 131, 136, 141, 166, 171, 185, 190], "64": [13, 25, 29, 32, 37, 38, 58, 63, 90, 126, 136, 141, 151, 180], "r": [13, 25, 29, 32, 37, 38, 43, 58, 63, 64, 65, 90, 126, 136, 141, 151, 152, 166, 173, 176, 177, 190, 193, 196, 199], "radiu": [13, 25, 29, 32, 36, 37, 38, 39, 55, 58, 63, 64, 65, 72, 83, 88, 89, 90, 93, 126, 136, 141, 151, 166, 190], "protect": [13, 25, 29, 32, 37, 38, 58, 63, 68, 90, 126, 136, 141], "1t1": [13, 25, 29, 32, 37, 38, 58, 63, 79, 83, 84, 90, 126, 129, 136, 141, 150, 181, 185, 189, 190, 195], "2b1": [13, 25, 29, 32, 37, 38, 58, 63, 79, 83, 90, 126, 136, 141, 189, 190, 195], "1b1": [13, 25, 29, 32, 37, 38, 58, 63, 90, 126, 136, 141], "2t1": [13, 25, 29, 32, 37, 38, 58, 63, 79, 83, 90, 126, 136, 141, 190], "display_nam": [13, 25, 29, 32, 37, 38, 58, 63, 90, 126, 136, 141], "displai": [13, 25, 29, 32, 37, 38, 58, 63, 76, 90, 126, 136, 141, 185, 188, 189], "gui": [13, 25, 28, 29, 32, 37, 38, 55, 58, 63, 64, 76, 79, 90, 110, 112, 126, 136, 141, 148, 150, 154, 158, 171, 175, 177, 179, 180, 181, 184, 186, 187, 188, 190, 192, 195, 197, 198, 199], "protect_opposite_fac": [13, 25, 29, 32, 37, 38, 58, 63, 90, 126, 136, 141], "appli": [13, 25, 29, 32, 37, 38, 58, 63, 65, 76, 83, 84, 85, 90, 109, 121, 123, 126, 127, 136, 140, 141, 171, 185, 195], "onli": [13, 25, 29, 32, 34, 36, 37, 38, 43, 48, 56, 57, 58, 63, 64, 70, 83, 84, 85, 88, 89, 90, 92, 93, 97, 102, 109, 110, 123, 126, 132, 136, 137, 141, 144, 148, 152, 154, 157, 161, 164, 165, 166, 167, 171, 173, 176, 177, 178, 180, 181, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 200], "signal": [13, 25, 29, 32, 37, 38, 58, 63, 90, 97, 122, 124, 126, 136, 141, 166, 185, 194, 195], "carri": [13, 25, 29, 32, 37, 38, 58, 63, 90, 126, 136, 141], "opposing_face_id_group": [13, 25, 29, 32, 37, 38, 58, 63, 90, 126, 136, 141], "oppos": [13, 25, 29, 32, 37, 38, 58, 63, 90, 126, 136, 141, 195], "group": [13, 25, 29, 32, 37, 38, 58, 63, 69, 79, 90, 117, 118, 126, 136, 141, 150, 153, 181, 185, 190], "etch_opposite_fac": [13, 25, 29, 32, 37, 38, 58, 63, 90, 126, 136, 141], "etch": [13, 19, 25, 29, 32, 37, 38, 58, 63, 79, 90, 122, 123, 124, 126, 136, 141], "opposit": [13, 19, 25, 29, 32, 37, 38, 58, 63, 90, 126, 129, 136, 141, 195], "too": [13, 25, 29, 32, 37, 38, 49, 58, 63, 64, 65, 67, 68, 90, 126, 136, 141, 162, 164, 176, 177, 178], "etch_opposite_face_margin": [13, 19, 25, 29, 32, 37, 38, 58, 63, 90, 126, 136, 141], "area_height": [13, 136], "height": [13, 17, 19, 34, 72, 76, 83, 90, 121, 123, 124, 126, 133, 136, 140, 156, 195], "1900": [13, 136], "area_width": [13, 136], "1300": [13, 19, 136], "pad_spac": [13, 136], "only_pad": [13, 136], "pad_configur": [13, 136], "junction_width_step": [13, 136], "automat": [13, 39, 55, 58, 63, 71, 76, 81, 83, 86, 97, 105, 136, 158, 171, 173, 174, 176, 177, 180, 181, 184, 185, 188, 189, 190, 191, 193], "junction_width": [13, 70, 90, 92, 136], "junction_test_pads_typ": [13, 136, 137], "junction_test_pads_paramet": [13, 136], "extra": [13, 19, 29, 33, 45, 63, 64, 66, 70, 83, 90, 92, 118, 136, 156, 167, 180], "_junction_test_pads_paramet": [13, 136], "previou": [13, 45, 63, 70, 90, 92, 136, 151, 176, 177, 185, 188, 189, 190], "state": [13, 45, 70, 90, 92, 136, 191, 193], "_paramet": [13, 37, 45, 70, 90, 92, 136], "mirror_squid": [13, 92, 136], "its": [13, 37, 58, 63, 64, 83, 92, 97, 102, 109, 126, 136, 150, 151, 152, 167, 171, 173, 185, 189, 190, 191], "junction_paramet": [13, 70, 90, 92, 136], "_junction_paramet": [13, 70, 90, 92, 136], "finger_overshoot": [13, 71, 72, 90, 136], "include_base_metal_gap": [13, 71, 72, 90, 136], "shadow_margin": [13, 71, 72, 90, 136], "shadow": [13, 71, 72, 90, 136], "compact_geometri": [13, 71, 90, 136], "compact": [13, 71, 90, 136, 152], "geometri": [13, 34, 36, 37, 38, 43, 48, 52, 56, 57, 61, 62, 71, 88, 89, 90, 92, 93, 96, 97, 98, 122, 123, 126, 128, 129, 130, 131, 136, 157, 162, 167, 170, 179, 181, 185, 187, 188, 190, 194, 197, 198, 200], "separate_junct": [13, 71, 72, 90, 136], "offset_compens": [13, 71, 72, 90, 136], "lead": [13, 38, 57, 71, 72, 90, 109, 136, 166, 176, 193, 195], "offset": [13, 63, 71, 72, 83, 90, 93, 136], "mirror_offset": [13, 71, 72, 90, 136], "move": [13, 55, 63, 71, 72, 90, 92, 136, 151, 173, 181, 185, 186], "finger_overlap": [13, 71, 72, 90, 136], "insid": [13, 36, 57, 58, 63, 71, 72, 90, 97, 106, 109, 122, 124, 126, 136, 152, 158, 166, 181, 185, 188, 189, 190, 195, 198], "single_junct": [13, 71, 90, 136], "second": [13, 17, 32, 37, 43, 71, 90, 109, 112, 121, 122, 126, 136, 151, 190, 191, 193, 196], "predefin": [14, 64, 122, 185], "sma8": [14, 18, 130, 190], "ard24": [14, 18], "dc24": 14, "num_strip": [15, 16, 138, 139], "min_width": [15, 16], "max_width": [15, 16], "stripe_test": [15, 16], "stripe_test_increasing_width": [15, 16], "architectur": [16, 175, 179, 180, 190], "circular": [17, 36, 62, 83, 88, 152], "island": [17, 36, 88, 89, 90, 91, 92, 93, 194, 195], "drivelin": [17, 88, 89, 90, 91], "11500": 17, "12700": 17, "8000": [17, 117], "kappa_finger_control": 17, "capacitor": [17, 18, 19, 34, 36, 38, 39, 56, 57, 63, 145, 162, 185, 190], "32": [17, 88, 89], "21": [17, 18, 19, 23], "46": 17, "coupler_length": 17, "9800": 17, "couplers_a_qb1": 17, "couplers_b_qb1": 17, "couplers_angle_qb1": 17, "0deg": [17, 88, 89], "225": 17, "315": 17, "couplers_width_qb1": 17, "radial": [17, 88, 89], "30": [17, 18, 25, 56, 60, 61, 67, 88, 89, 106, 133, 141, 190, 194], "50": [17, 25, 35, 90, 117, 124, 158, 166], "couplers_arc_amplitude_qb1": 17, "angular": [17, 88, 89], "extens": [17, 88, 89, 124, 126, 174, 175, 180, 191, 194], "25": [17, 32, 41, 58, 195], "65": 17, "couplers_a_qb2": 17, "couplers_b_qb2": 17, "couplers_angle_qb2": 17, "couplers_width_qb2": 17, "couplers_arc_amplitude_qb2": 17, "35": [17, 88, 89], "drive_line_offset": 17, "end": [17, 29, 32, 55, 58, 63, 64, 65, 105, 108, 112, 121, 123, 126, 129, 166, 167, 173, 174, 185, 188, 189, 194, 195], "drive": [17, 88, 89, 90, 130], "ground_gap": [17, 36, 57, 88, 89, 90], "1400": 17, "900": [17, 190], "coupler_ext": [17, 90], "150": [17, 88, 90, 93, 190], "island1_ext": [17, 90], "first": [17, 18, 23, 37, 43, 55, 58, 63, 64, 76, 79, 90, 121, 122, 125, 126, 151, 164, 166, 171, 174, 176, 177, 179, 180, 185, 187, 189, 190, 192, 193, 195, 196], "island2_ext": [17, 90], "drive_posit": [17, 90], "1100": 17, "island_island_gap": [17, 90], "em1": 17, "res_length": [18, 19], "physic": [18, 19, 29, 36, 38, 43, 57, 63, 68, 105, 108, 109, 163, 193, 198, 200], "5434": [18, 19], "5429": [18, 19], "5374": [18, 19], "5412": [18, 19], "5493": [18, 19], "5589": [18, 19], "n_finger": [18, 19, 23, 56], "planar": [18, 19, 97], "l_finger": [18, 19, 23, 56], "23": [18, 19, 23], "9": [18, 19, 23, 180, 189, 190], "14": [18, 19, 23, 25, 176, 177], "28": [18, 19, 165, 177, 180], "type_coupl": [18, 19, 23, 56], "interdigit": [18, 19, 23, 56, 145], "n_ab": [18, 56, 133], "res_term": [18, 56], "termin": [18, 56, 58, 63, 64, 65, 112, 126, 129, 166, 176, 177, 180, 189, 191, 194, 195], "galvan": [18, 41, 56], "res_beg": [18, 56], "begin": [18, 56, 58, 65, 139, 189, 191], "res_a": [18, 19, 48, 56], "res_b": [18, 19, 48, 56], "12": [18, 19, 29, 68, 72, 74, 90, 92, 93, 106, 126, 194], "tl_airbridg": [18, 56], "res_airbridge_typ": [18, 56], "rectangular": [18, 29, 31, 33, 49, 56, 58, 63, 64, 65, 66, 83, 93, 189], "sample_holder_typ": 18, "marker_safeti": 18, "curv": [18, 64, 65, 151], "feedline_bend_dist": 18, "feedlin": [18, 23, 36, 38], "bend": [18, 55, 63, 64, 195], "resonators_both_sid": 18, "both": [18, 19, 29, 30, 32, 37, 63, 70, 75, 86, 109, 115, 126, 166, 171, 174, 178, 189, 193, 195, 196], "max_res_len": [18, 56], "exceed": [18, 56], "becom": [18, 56, 63, 79, 125, 188, 194, 195], "1e": [18, 56, 109, 122, 131], "ground_grid_in_trac": [18, 55, 56, 63, 64, 65, 67], "trace": [18, 29, 48, 49, 56, 63, 64, 65, 67, 68, 124], "border": [18, 126], "preliminari": 19, "resonator_typ": 19, "connector_dist": [19, 58], "extra_resonator_avoid": 19, "extra_resonator_etch": 19, "spiral": [19, 58, 185], "attach": [19, 83, 159, 189], "pl_": 19, "_t_port_c": 19, "identifi": [19, 84, 102, 110, 162, 163, 170, 189, 190, 191], "long": [19, 170, 177, 190, 193, 194, 195], "same": [19, 23, 36, 37, 38, 55, 63, 76, 83, 84, 85, 97, 122, 126, 151, 158, 161, 162, 163, 164, 167, 171, 176, 177, 178, 181, 185, 188, 189, 190, 191, 193, 195], "wai": [19, 22, 37, 63, 84, 85, 119, 122, 166, 171, 177, 179, 180, 181, 184, 185, 189, 190, 195, 196], "direct": [19, 22, 32, 33, 37, 49, 55, 63, 64, 83, 92, 109, 123, 126, 130, 144, 151, 154, 166, 185, 190, 195], "_corner": [19, 166], "cpw": [19, 25, 56, 141], "exclud": [19, 164, 166], "finger_control": [19, 57], "solid": [19, 194], "twofac": 19, "ground_grid_avoid": [19, 37, 92, 190], "counter": [19, 58, 151], "resonator_fac": 19, "2100": 19, "2900": 19, "3700": 19, "4500": 19, "spiral_box_height": 19, "spiral_box_width": 19, "x_indent": 19, "indent": [19, 20, 152], "800": [19, 58], "cap_res_dist": 19, "waveguide_indent": 19, "At": [19, 186], "bridge_spac": [19, 58], "parametr": [20, 179, 185], "connect": [20, 22, 23, 38, 43, 49, 50, 58, 64, 88, 89, 118, 124, 126, 137, 140, 158, 185, 186, 190, 195], "pairwis": 20, "coplanar": [20, 43, 63, 64, 65, 67, 68, 163, 185, 190, 194], "n_launcher": 20, "40": [20, 32, 36, 41, 43, 58, 63], "launcher_pitch": 20, "pitch": [20, 25, 141], "635": 20, "160": [20, 186], "96": 20, "520": 20, "tunabl": 21, "veri": [22, 64, 76, 185, 188, 190, 195, 196], "coupl": [23, 48, 186, 194], "half": [23, 91, 190], "abov": [23, 58, 126, 158, 177, 178, 181, 185, 186, 188, 193, 194, 196, 197], "below": [23, 29, 58, 121, 123, 126, 144, 158, 167, 169, 176, 184, 188, 189, 190, 191, 193, 194, 195, 197], "chargelin": [23, 93], "whose": [23, 158, 161], "upper": [23, 74, 92, 123, 126, 195], "six": 23, "5400": [23, 189], "5500": [23, 189], "use_test_reson": [23, 128], "test_res_length": 23, "5600": [23, 189], "5800": 23, "metrologi": 25, "segment": [25, 58, 63, 64, 65, 67, 68, 121, 126, 185], "crossect": 25, "analysi": [25, 106, 118, 194], "array_form": 25, "array_layout": 25, "metrology_pitch": 25, "cpw_distanc": [25, 141], "placehold": [25, 141, 189], "hor_dist": [25, 141], "ver_dist": [25, 141], "tsv_diamet": [25, 60, 141], "diamet": [25, 32, 41, 58, 60, 141], "tsv_margin": [25, 60, 141], "tsv_elliptical_width": [25, 61, 141], "ellipt": [25, 61, 141], "pos_start": [26, 130], "end_i": [26, 130], "c_kappa_l_fing": 26, "dedic": [26, 122, 126, 131, 195, 197], "function": [26, 31, 37, 45, 57, 58, 63, 66, 70, 75, 79, 82, 84, 86, 92, 95, 97, 100, 102, 110, 114, 121, 122, 123, 126, 127, 130, 131, 143, 145, 148, 151, 152, 154, 161, 162, 164, 167, 170, 171, 172, 178, 187, 189, 190, 193, 194, 195, 197], "also": [26, 28, 37, 49, 55, 63, 64, 65, 67, 76, 83, 84, 85, 86, 87, 92, 93, 108, 115, 123, 126, 131, 136, 138, 139, 140, 144, 150, 151, 152, 158, 159, 160, 162, 164, 167, 171, 173, 174, 176, 177, 178, 179, 180, 181, 184, 185, 188, 189, 190, 191, 193, 194, 195, 197, 199], "assum": [26, 64, 65, 76, 84, 126, 131, 180, 186, 194, 195], "follow": [26, 58, 63, 64, 76, 79, 81, 82, 96, 97, 98, 126, 128, 129, 130, 131, 151, 152, 158, 159, 163, 169, 170, 171, 172, 173, 176, 177, 178, 180, 181, 185, 188, 189, 190, 191, 193, 194, 195, 196, 197, 200], "attribut": [26, 37, 82, 124, 131, 164, 171, 172], "arm_width_a": [26, 130, 131], "arm_width_b": [26, 130, 131], "qubit_spac": [26, 130, 131], "fluxline_typ": [26, 45, 46, 47, 92, 131, 195], "rr_cpl_width": [26, 131], "arm": [26, 38, 92, 93, 130, 131, 134, 136, 190], "24": [26, 93, 130, 131], "rr": [26, 131], "qb": [26, 131], "um": [26, 93, 124, 126, 131, 156, 163], "file": [27, 37, 69, 76, 77, 79, 81, 82, 83, 84, 105, 106, 108, 109, 110, 113, 118, 122, 125, 126, 148, 150, 155, 157, 160, 162, 163, 167, 169, 171, 173, 174, 176, 177, 178, 179, 180, 181, 185, 186, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199], "thing": [27, 81, 171, 181, 190, 193], "path": [27, 58, 63, 64, 76, 82, 86, 105, 106, 108, 110, 113, 118, 121, 122, 125, 130, 150, 151, 155, 159, 162, 163, 173, 177, 178, 180, 184, 185, 190, 191, 192, 193, 196, 200], "sub": [27, 37, 63, 64, 71, 83, 92, 123, 126, 167, 171, 185, 189], "repres": [28, 63, 64, 65, 70, 75, 76, 81, 83, 84, 85, 122, 179, 188, 195], "form": [28, 63, 97, 106, 109, 115, 119, 126, 158, 170, 171], "being": [28, 79, 176, 190], "pcelldeclarationhelp": [28, 37, 171], "load": [28, 69, 84, 87, 90, 91, 93, 155, 157, 159, 163, 167, 171, 188, 189, 190], "klayout": [28, 63, 64, 76, 79, 86, 122, 126, 148, 150, 157, 158, 159, 160, 162, 165, 171, 173, 174, 176, 177, 179, 181, 184, 185, 186, 187, 189, 190, 195, 197, 198, 199], "code": [28, 30, 34, 36, 37, 38, 43, 48, 55, 56, 57, 63, 64, 69, 70, 75, 76, 87, 88, 89, 90, 92, 93, 97, 136, 152, 158, 167, 170, 171, 173, 175, 176, 177, 178, 179, 180, 181, 184, 187, 188, 195, 196, 198, 199], "share": [28, 92, 126, 151, 193], "them": [28, 97, 106, 162, 171, 176, 177, 178, 181, 184, 185, 189, 190, 195], "have": [28, 31, 34, 36, 37, 38, 43, 48, 52, 56, 57, 63, 64, 76, 79, 83, 84, 85, 87, 88, 89, 90, 93, 102, 106, 122, 126, 150, 151, 158, 159, 162, 164, 166, 167, 171, 173, 174, 176, 177, 178, 180, 181, 182, 185, 186, 188, 189, 190, 191, 192, 194, 195, 200], "easi": [28, 176, 178, 179], "support": [28, 36, 63, 76, 103, 108, 109, 118, 150, 152, 157, 177, 179, 180, 185, 190, 191, 193, 194, 195, 197, 200], "concept": [28, 185, 188, 190, 195], "belong": [28, 79, 102, 162, 190], "certain": [28, 34, 36, 37, 38, 43, 48, 56, 57, 77, 83, 84, 88, 89, 90, 93, 126, 176, 177, 178, 190, 195], "determin": [28, 37, 52, 63, 64, 83, 84, 105, 106, 109, 126, 140, 158, 160, 166, 167, 189, 190, 191, 194, 195], "actual": [28, 31, 45, 63, 64, 65, 70, 75, 83, 84, 92, 103, 173, 177, 181, 188, 189, 190, 195, 200], "refer": [28, 35, 36, 37, 38, 39, 76, 79, 82, 88, 89, 126, 150, 151, 152, 166, 169, 171, 176, 177, 178, 185, 188, 190, 196], "taper": [29, 39, 49, 63, 68, 90], "bridge_gap_width": 29, "with_side_airbridg": 29, "With": [29, 79, 171, 185, 189], "with_right_waveguid": 29, "gap_between_bridg": 29, "inner": [29, 89, 126, 195], "adjac": [29, 63, 126, 151, 153], "bridg": [29, 31, 32, 33, 55, 58, 63, 66, 96, 190], "waveguide_extra": 29, "taper_length": [29, 39, 63, 68], "31": [29, 68, 152], "41592653589793": [29, 68], "m2": [29, 68, 180], "a2": [29, 36, 37, 38, 43, 57, 63, 66, 68], "non": [29, 36, 38, 43, 55, 57, 58, 63, 68, 106, 122, 126, 151, 152, 157, 170, 194, 195], "b2": [29, 36, 37, 38, 43, 57, 63, 66, 68], "add_met": [29, 49, 63, 64, 65, 67, 68], "add": [29, 32, 37, 49, 55, 61, 63, 64, 65, 67, 68, 76, 83, 84, 96, 98, 109, 118, 122, 126, 128, 129, 130, 131, 140, 164, 171, 173, 181, 186, 189, 190, 191, 195, 196], "airbridge_typ": [29, 31, 32, 33, 58, 63, 66], "bridge_width": [29, 31, 32, 58], "pad_length": [29, 31, 32, 58], "22": [29, 72, 90, 173, 176, 180], "bridge_length": [29, 31, 58, 190], "60": [29, 39, 88, 89], "without": [31, 45, 58, 63, 70, 75, 76, 83, 86, 92, 119, 126, 137, 177, 178, 180, 181, 185, 189, 190, 191, 193, 195, 199], "subclass": [31, 34, 36, 37, 38, 43, 48, 52, 56, 57, 63, 84, 85, 88, 89, 90, 92, 93, 97, 106, 109, 126, 152, 164, 187, 194, 196, 197], "otherwis": [31, 32, 33, 37, 63, 64, 76, 96, 98, 110, 112, 123, 126, 127, 128, 129, 130, 131, 152, 159, 167, 176, 180, 185, 195], "user": [31, 32, 33, 37, 61, 63, 76, 84, 92, 112, 170, 173, 174, 176, 177, 179, 180, 184, 189, 190, 191, 193, 195], "classmethod": [31, 34, 36, 37, 38, 41, 43, 45, 48, 52, 54, 56, 57, 60, 63, 70, 88, 89, 90, 93, 97, 126, 136, 164, 171, 195], "18": [31, 45], "44": [31, 58, 190], "equival": [32, 63, 152], "origin": [32, 33, 37, 41, 61, 62, 65, 66, 73, 74, 76, 83, 122, 126, 151, 156, 190], "geometr": [32, 33, 41, 61, 62, 151, 179], "include_bump": [32, 58], "ubm_diamet": [32, 41, 58], "under": [32, 37, 41, 58, 76, 84, 102, 121, 124, 126, 159, 173, 176, 181, 184, 185, 188, 190], "bump_diamet": [32, 41, 58], "part": [33, 48, 49, 58, 84, 92, 93, 109, 123, 124, 126, 136, 151, 176, 185, 186, 188, 189, 190, 193, 194], "port_a": [33, 37, 63], "port_b": [33, 37, 63, 190], "closest": [33, 35, 119, 126, 140, 150, 158, 195], "pad_extra": 33, "capacit": [34, 57, 90, 91, 106, 109, 124, 131, 166, 187, 193, 195, 197], "fem": [34, 193], "comput": [34, 69, 118, 151, 191, 193, 194], "when": [34, 36, 37, 38, 43, 48, 56, 57, 63, 64, 76, 83, 88, 89, 90, 93, 102, 109, 112, 114, 122, 123, 124, 126, 150, 166, 167, 170, 171, 173, 174, 177, 180, 185, 188, 189, 190, 191, 193, 195, 198], "best": [34, 36, 37, 38, 43, 48, 56, 57, 88, 89, 90, 93, 177, 180, 190], "practic": [34, 36, 37, 38, 43, 48, 56, 57, 63, 88, 89, 90, 93, 171, 184, 195], "effect": [34, 36, 37, 38, 43, 48, 56, 57, 88, 89, 90, 93, 106, 126, 127, 130, 156, 176, 178, 194], "serv": [34, 36, 37, 38, 43, 48, 56, 57, 88, 89, 90, 93], "deriv": [34, 36, 37, 38, 43, 48, 56, 57, 63, 88, 89, 90, 93, 100, 102, 127, 144, 151, 171, 190], "noth": [34, 36, 37, 38, 43, 48, 56, 57, 88, 89, 90, 93, 164, 188], "els": [34, 36, 37, 38, 43, 48, 56, 57, 88, 89, 90, 93, 152], "cl": [34, 36, 37, 38, 43, 48, 52, 56, 57, 88, 89, 90, 93, 97, 126, 145, 164, 195], "you": [34, 36, 37, 38, 43, 48, 52, 56, 57, 58, 76, 88, 89, 90, 93, 105, 108, 122, 152, 158, 169, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 184, 185, 186, 188, 189, 190, 191, 192, 194, 195, 196, 198, 199, 200], "need": [34, 36, 37, 38, 43, 48, 52, 56, 57, 58, 63, 64, 77, 79, 86, 88, 89, 90, 93, 95, 97, 100, 102, 125, 148, 150, 151, 163, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 184, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197], "decid": [34, 36, 37, 38, 43, 48, 56, 57, 88, 89, 90, 93, 195], "x_coupler_length": 34, "x_coupler_height": 34, "x_coupler_vari": 34, "variant": [34, 46, 47, 81, 84, 189], "either": [34, 37, 58, 69, 70, 75, 76, 79, 84, 85, 87, 100, 126, 137, 151, 166, 176, 185, 190, 195, 197], "remove_capacitor": 34, "finger_numb": [34, 38, 39], "finger_width": [34, 38, 39, 57], "finger_gap": [34, 38, 39, 57], "finger_gap_end": [34, 38], "marker_dist": 35, "diagonal_squar": [35, 52], "use_face_prefix": 35, "prefix": [35, 37, 76, 82, 100, 101, 102, 108, 113, 122, 125, 126, 140, 178, 190], "chip_dicing_width": 35, "chip_dicing_line_length": 35, "chip_dicing_gap_length": 35, "dash": [35, 185], "outer": [36, 49, 83, 89, 140], "semi": 36, "fix": [36, 38, 57, 63, 126, 178, 180], "imped": [36, 88, 89, 124], "r_inner": [36, 89], "r_outer": [36, 89], "extern": [36, 89, 179, 184, 187, 190, 195, 196], "swept_angl": 36, "cover": [36, 52, 83, 123, 126, 145, 153, 166, 178, 185, 189, 194], "180": [36, 43, 63, 66, 89], "outer_island_width": [36, 89], "fixed_length": [36, 38, 57], "auto": [36, 38, 57, 190], "cell_transf": [37, 126], "extract": [37, 100, 102, 158, 162, 166, 167], "specif": [37, 52, 63, 70, 75, 76, 81, 82, 83, 84, 97, 102, 114, 126, 152, 166, 169, 171, 173, 176, 177, 180, 181, 185, 188, 190, 195, 196, 197], "convert": [37, 63, 83, 126, 152, 154, 158, 159, 161, 162, 166, 167, 184, 186, 187], "target": [37, 63, 143, 166, 177, 180], "system": [37, 79, 109, 150, 166, 173, 176, 177, 180, 181, 187, 193, 196], "recurs": [37, 76, 126, 152, 161, 166], "level": [37, 76, 123, 126, 150, 152, 158, 166, 170, 171, 178, 184, 185, 188, 190, 193, 200], "look": [37, 76, 125, 126, 127, 159, 166, 176, 179, 190], "subcel": [37, 63, 76, 92, 126, 136, 166, 190], "behav": 37, "like": [37, 63, 70, 75, 84, 100, 152, 164, 171, 173, 174, 177, 178, 180, 181, 185, 189, 190, 193, 194], "target_cel": 37, "label_tran": [37, 76, 126], "note": [37, 58, 63, 76, 83, 84, 100, 109, 154, 165, 166, 171, 173, 176, 177, 178, 179, 185, 189, 190, 191, 193, 199], "To": [37, 84, 85, 86, 100, 106, 109, 130, 152, 173, 174, 176, 180, 181, 185, 188, 189, 190, 193, 194, 195, 199, 200], "inherit": [37, 171, 190, 195], "It": [37, 63, 64, 76, 83, 84, 85, 86, 92, 126, 136, 152, 171, 173, 176, 177, 178, 179, 180, 181, 185, 186, 190, 192, 193, 195, 196], "directli": [37, 63, 76, 126, 178, 184, 185, 189, 190, 193], "take": [37, 76, 97, 102, 122, 126, 127, 152, 164, 166, 176, 185, 186, 193, 194, 196, 197, 200], "provid": [37, 76, 85, 95, 126, 152, 173, 185, 188, 194, 195, 200], "keyword": [37, 52, 63, 76, 84, 85, 96, 97, 98, 121, 126, 128, 129, 130, 131, 195], "placement": [37, 52, 76, 83, 126, 130, 167, 174], "parent": [37, 76, 126, 130, 166, 167, 171], "allow": [37, 63, 64, 76, 83, 92, 106, 109, 126, 136, 152, 171, 177, 179, 180, 181, 185, 193, 194, 199], "possibl": [37, 52, 58, 63, 64, 76, 84, 92, 126, 137, 164, 171, 173, 176, 177, 181, 185, 190, 191, 193, 194, 196, 198], "instanc": [37, 52, 63, 76, 84, 85, 106, 109, 126, 127, 144, 145, 149, 154, 158, 161, 162, 163, 167, 171, 176, 177, 185, 186, 188, 190, 194, 195, 196, 197, 198], "properti": [37, 61, 76, 83, 85, 97, 126, 163, 164, 167, 171, 184, 185, 186, 188, 190], "rel": [37, 76, 92, 102, 105, 106, 109, 121, 126, 136, 156, 159, 166, 171, 190, 194], "dvector": [37, 76, 83, 92, 126, 151], "must": [37, 63, 64, 76, 123, 126, 151, 154, 165, 166, 167, 176, 177, 181, 188, 190, 193, 194, 195, 196, 199], "default_fac": [37, 79, 190], "doe": [37, 63, 124, 158, 173, 176, 181, 185, 193, 197, 200], "necessarili": [37, 64], "subtyp": 37, "abstract": [37, 97, 126, 171], "care": [37, 151, 176, 178], "str": [37, 63, 83, 100, 101, 102, 105, 106, 108, 109, 111, 112, 115, 117, 121, 122, 124, 126, 127, 143, 150, 152, 154, 157, 158, 159, 164, 167], "indic": [37, 79, 121, 126, 166, 190, 194, 195], "refpoint_transform": 37, "conveni": [37, 63, 83, 86, 126, 192, 195], "new": [37, 76, 96, 97, 98, 113, 126, 128, 129, 130, 131, 143, 149, 150, 154, 159, 164, 167, 170, 171, 176, 177, 178, 181, 185, 186, 187, 189], "present": [37, 114, 126, 167, 173, 176, 180], "avail": [37, 76, 92, 122, 126, 171, 177, 181, 185, 190, 193, 194, 196, 200], "give": [37, 109, 126, 176, 180, 181, 190, 194], "current": [37, 76, 86, 103, 106, 118, 126, 150, 180, 185, 187, 189, 190, 191, 195], "po": [37, 130, 140], "well": [37, 102, 119, 151, 167, 189, 195, 200], "netlist": [37, 84, 162, 163, 184, 189], "Will": [37, 122], "decor": [37, 164, 171, 195], "annot": [37, 61, 64, 65, 79, 174, 184, 190], "evalu": 37, "replac": [37, 83, 84, 154, 167, 176, 189, 196], "mark": [37, 79, 188], "go": [37, 76, 126, 169, 173, 174, 186, 188, 190, 195, 199], "_to_": 37, "cell_inst": 37, "new_nam": 37, "definit": [37, 113, 126, 158, 171, 179, 181, 189, 190, 191, 193, 198], "expos": [37, 63, 86, 188], "renam": 37, "nopar": [37, 97, 126], "abstract_class": [37, 97, 126], "ancestor": [37, 97, 126, 171], "up": [37, 97, 105, 106, 108, 109, 124, 126, 127, 153, 157, 159, 165, 166, 171, 176, 177, 178, 179, 185, 188, 190, 193, 194, 195, 197], "draw": [37, 61, 63, 163, 177, 179, 181, 184, 190, 195, 196], "error_msg": 37, "error": [37, 105, 108, 109, 113, 114, 118, 160, 173, 176, 179, 180, 181, 185, 188, 190], "rais": [37, 63, 113, 114, 152, 154, 167, 188], "valueerror": [37, 63, 152, 154], "messag": [37, 76, 114, 170, 180, 181], "pure": [37, 194], "doesn": [37, 97, 102, 126, 185, 195], "t": [37, 43, 63, 66, 79, 97, 102, 114, 126, 152, 171, 173, 176, 177, 180, 185, 190, 193, 195], "dpolygon": [37, 123, 168, 190], "etc": [37, 63, 79, 122, 126, 162, 167, 171, 176, 181, 190, 198], "primari": [37, 176, 194], "abc": 37, "syncronis": 37, "json": [37, 82, 105, 108, 113, 122, 125, 150, 152, 162, 163, 167, 193, 194, 196, 200], "represent": [37, 63, 83, 151, 152, 193], "sever": [37, 63, 76, 152, 171, 176, 181, 185, 189, 190, 195, 196, 197], "editor": [37, 86, 176, 177, 180, 181, 184, 186, 188, 189, 190, 196, 199], "particularli": [37, 164], "figur": [37, 163, 195], "out": [37, 76, 112, 126, 157, 158, 166, 176, 177, 180, 189, 190, 191, 194], "fluxline_width": [37, 45, 47], "fluxline_paramet": [37, 45, 92], "Or": [37, 84, 86], "consid": [37, 64, 83, 97, 122, 151, 154, 177, 194, 195], "descend": [37, 161, 171], "common": [37, 52, 95, 102, 113, 179, 180, 188, 196], "respect": [37, 63, 123, 124, 126, 134, 156, 168, 195], "adjust": [37, 39, 63, 185], "_port": 37, "orient": [37, 63, 121, 167], "output_rot": [37, 43, 63], "x_max": 38, "y_max": 38, "x_end": 38, "y_left": 38, "y_right": 38, "ground_pad": 38, "ground_gap_ratio": 38, "ratio": [38, 39, 49, 76, 187, 197], "finger_length": [38, 39], "corner_r": [38, 39], "maintain": [39, 170, 176, 180], "match": [41, 84, 85, 114, 181, 191, 196], "contact": [41, 150], "over": [41, 63, 85, 106, 109, 126, 158, 164, 173, 176, 188, 194, 195], "inter": [42, 43], "output": [43, 63, 108, 109, 122, 143, 152, 154, 158, 160, 173, 177, 184, 190, 191, 193, 194, 196, 197, 200], "chosen": [43, 55, 58, 76, 114, 185, 191, 193], "inter_bump_dist": [43, 63], "w": [43, 58, 63, 64, 130], "connector_a": [43, 58, 63], "connector_b": [43, 58, 63], "round_connector": [43, 58, 63], "round": [43, 58, 63, 72, 90, 93, 109, 126, 157, 190], "n_center_bump": [43, 63], "seri": [43, 63, 91, 96, 196], "fluxline_gap_width": [45, 47], "_fluxline_paramet": [45, 92], "hanger": 48, "coupling_length": 48, "head_length": 48, "resonator_length": [48, 56], "total": [48, 55, 63, 73, 74, 92, 109, 126, 133, 143, 151, 193, 194], "ground_width": 48, "middl": [48, 63, 126, 127, 189, 195], "wirebond": [49, 50], "west": [49, 93, 150], "east": [49, 93, 150], "scale": [49, 83], "a_launch": 49, "b_launcher": 49, "l": [49, 67, 172], "240": 49, "144": 49, "cell_mark": [52, 54], "kwarg": [52, 54, 58, 63, 66, 76, 83, 84, 85, 96, 97, 98, 126, 128, 129, 130, 131, 143, 145, 152, 159, 164], "wafer": [52, 83, 85, 189, 190, 198], "By": [52, 55, 83, 84, 85, 92, 109, 126, 152, 160, 170, 188, 189, 190, 191, 193, 198], "own": [52, 93, 122, 150, 173, 176, 179, 180, 181, 190], "wish": [52, 176, 189], "custom": [52, 63, 79, 88, 89, 108, 114, 122, 123, 152, 174, 179, 193], "hous": 52, "encod": [52, 152], "prefer": [52, 148, 171, 174, 177, 186, 192, 193, 198], "inst": [52, 54, 144], "surround": [52, 167], "extend": [52, 63, 64, 126, 166, 179, 189, 190], "box_margin": 52, "window": [52, 54, 76, 108, 150, 151, 173, 175, 180, 181, 185, 186, 188, 189, 192, 196, 199], "flyover": [52, 54], "arm_length": [54, 92, 93, 136, 190, 195], "arm_width": [54, 93, 190], "ubm": 54, "arrow_numb": 54, "arrow": [54, 188], "start_point": 55, "end_point": 55, "altern": [55, 58, 63, 64, 84, 106, 109, 112, 126, 162, 167, 176, 193, 194, 196], "shown": [55, 76, 110, 112, 122, 162, 163, 171, 185, 188, 193], "latter": [55, 63, 84, 173], "cannot": [55, 63, 154, 180, 190, 191], "edit": [55, 63, 64, 154, 177, 181, 184, 186, 187, 190, 199], "minim": [55, 63, 102], "taken": [55, 64, 65, 91, 122, 126, 151, 158, 171, 184, 195], "underli": [55, 190], "equidist": 55, "n_bridg": [55, 63, 96], "600": 55, "3000": [55, 190], "probeline_length": 56, "probelin": 56, "smooth": [56, 57, 145], "intern": [56, 97, 126, 166, 185, 194, 195, 196], "continu": [57, 58, 63, 64, 151, 178], "numer": 57, "optim": 57, "achiev": [57, 63, 92], "growth": 57, "relat": [57, 79, 114, 179, 182, 190], "input_path": 58, "goe": [58, 63, 151], "last": [58, 63, 64, 79, 100, 125, 126, 151, 189, 190], "poly_path": 58, "unless": [58, 176, 177, 180, 189], "alreadi": [58, 76, 105, 112, 122, 176, 186, 189, 190], "longer": [58, 161, 164, 185], "than": [58, 63, 76, 79, 83, 109, 121, 126, 151, 158, 160, 162, 171, 179, 180, 188, 190, 193, 194], "vertex": 58, "parallel": [58, 84, 129, 176, 189, 193], "polygon_path": 58, "want": [58, 83, 100, 158, 167, 174, 176, 177, 178, 185, 188, 189, 190, 192, 193, 195, 196, 200], "choos": [58, 84, 92, 136, 177, 180, 181, 185, 186, 188, 189, 190, 191, 193, 200], "attempt": [58, 152, 162, 176], "find": [58, 86, 119, 147, 154, 159, 171, 178, 180, 190], "largest": [58, 151], "zero": [58, 122, 126, 195], "independ": [58, 176, 177, 193], "n_bridges_pattern": 58, "neg": [58, 126, 152], "so": [58, 63, 84, 96, 97, 98, 102, 122, 126, 128, 129, 130, 131, 150, 151, 166, 167, 171, 173, 176, 177, 178, 180, 181, 185, 188, 190, 194, 196, 199], "above_spac": 58, "below_spac": 58, "right_spac": 58, "x_space": 58, "y_space": 58, "bridges_left": 58, "bridges_bottom": 58, "bridges_right": 58, "bridges_top": 58, "easili": [58, 66, 118, 145, 177, 178, 179, 190], "old": [58, 66, 159, 160, 167, 189], "spiralresonatorrectangl": 58, "bx": [58, 63, 64], "ex": [58, 63, 64, 180], "auto_spac": 58, "include_connector_length": 58, "manual_spac": 58, "term2": [58, 63, 64, 130], "substrat": [61, 62, 109, 121, 122, 123, 126, 190, 195], "e": [62, 63, 66, 83, 92, 109, 127, 130, 152, 162, 167, 171, 173, 177, 190, 191, 192, 193, 194], "composit": [63, 100, 171, 185, 187], "suppli": [63, 64, 85, 96, 98, 126, 128, 129, 130, 131, 150, 195], "serial": [63, 152], "from_seri": 63, "ast": [63, 154], "literal_ev": [63, 154], "node_object": 63, "node_obj": 63, "element_nam": 63, "human": [63, 179, 184], "readabl": [63, 184], "storag": [63, 185], "conform": [63, 118], "format": [63, 97, 150, 158, 169, 193, 194, 196, 197], "class_str": 63, "parameter_dict": 63, "__str__": 63, "omit": [63, 180, 189, 190, 195], "made": [63, 92, 161, 162, 163, 194, 195], "perspect": 63, "rout": [63, 126, 160, 185, 190], "As": [63, 181, 185, 188, 189, 190], "bonu": 63, "arbitrari": [63, 64, 152, 190], "next": [63, 123, 126, 138, 139, 151, 181, 185, 188, 195], "waypoint": [63, 64], "except": [63, 64, 76, 84, 114, 121, 152, 154, 162, 164, 167, 171, 185, 188], "collinear": 63, "back": [63, 190, 191], "pass": [63, 76, 84, 85, 96, 97, 98, 100, 102, 106, 109, 110, 126, 128, 129, 130, 131, 151, 152, 158, 159, 163, 171, 190, 195], "ab_across": 63, "across": [63, 124, 195], "evenli": 63, "preced": 63, "calcul": [63, 83, 92, 100, 106, 109, 124, 136, 177, 185, 190, 194], "ab_to_ab_spac": 63, "ab_to_node_clear": 63, "former": 63, "densiti": [63, 83, 143, 185], "fact": 63, "instead": [63, 66, 76, 84, 109, 152, 154, 171, 173, 176, 181, 185, 190, 191, 193, 194, 195], "normal": [63, 124, 171, 173, 190], "those": [63, 123, 152, 185, 189, 191], "correct": [63, 86, 100, 102, 121, 154, 171, 180, 181, 190, 191], "compar": [63, 64, 152, 157, 184, 190], "notabl": 63, "detail": [63, 95, 109, 173, 176, 177, 181, 188, 190, 194, 196, 197], "everi": [63, 64, 125, 152, 167, 171, 174, 177, 185, 198], "done": [63, 109, 177, 178, 185, 190, 192, 193, 194, 199], "segment_length": 63, "individu": [63, 83, 84, 85, 109, 122, 126, 170, 176, 177, 185, 195], "regular": [63, 180, 189, 195, 196], "test_waveguide_composit": [63, 188], "lym": [63, 167, 185, 188, 196], "script": [63, 76, 105, 108, 110, 112, 113, 125, 150, 158, 167, 173, 174, 176, 177, 180, 181, 184, 185, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200], "were": [63, 100, 158, 167], "explicitli": [63, 102, 109, 150, 180, 193], "implicitli": 63, "node_index": [63, 149, 154], "_created_": 63, "associ": [63, 76, 163, 188], "particular": [63, 181, 188, 190], "subscel": 63, "appear": [63, 181, 185, 186, 188, 198], "retriev": 63, "itself": [63, 102, 176, 181, 190, 194], "count": [63, 126, 144, 195], "consecut": [63, 153], "special": [63, 151, 185], "consequ": [63, 91, 162], "accumul": 63, "oni": 63, "report": [63, 84, 109, 178], "route_funct": 63, "initial_guess": 63, "waveguide_param": 63, "lambda": 63, "f": [63, 66, 122, 124, 131, 173, 188], "more": [63, 79, 81, 84, 105, 108, 118, 122, 126, 162, 170, 171, 172, 173, 176, 177, 179, 181, 184, 185, 188, 189, 190, 193, 194, 195, 196, 197, 199], "compon": [63, 162], "tune": [63, 92, 167, 195], "weight": 63, "initi": [63, 76, 96, 97, 98, 126, 128, 129, 130, 131, 158, 166, 188, 189], "reason": [63, 171, 190], "interfac": [63, 109, 121, 122, 126, 181, 194, 195], "snap": [63, 158], "behavior": [63, 76, 152], "unmodifi": 63, "requir": [63, 76, 109, 114, 148, 158, 171, 172, 175, 176, 178, 180, 181, 184, 185, 189, 190, 193, 195, 196, 197, 200], "chain": 63, "iter": [63, 64, 106, 109, 152, 158, 194], "approri": 63, "target_len": 63, "point_a": 63, "point_a_corn": 63, "point_b": 63, "point_b_corn": 63, "endpoint": [63, 64, 122, 151, 162], "enable_gui_edit": [63, 154], "gui_path": 63, "gui_path_shadow": 63, "hidden": [63, 79, 164, 171, 190], "detect": [63, 185], "tight_rout": 63, "tight": 63, "airbridge_param": 63, "radio": 64, "bent": 64, "open": [64, 90, 91, 150, 174, 176, 180, 181, 183, 185, 186, 187, 188, 189, 193, 194, 199], "dpath": [64, 190], "partial": [64, 185, 186], "case": [64, 79, 84, 86, 113, 122, 126, 150, 161, 167, 174, 177, 178, 180, 181, 184, 185, 188, 189, 190, 191, 194, 195], "guid": [64, 84, 129, 172, 173, 179, 181, 185, 195], "visibl": [64, 76, 176, 180, 181, 185, 188, 189, 190], "graphic": [64, 83, 151, 181], "due": [64, 171, 180], "precis": [64, 122, 126, 179, 194], "arithmet": 64, "corner_safety_overlap": 64, "point1": 64, "point2": 64, "point3": 64, "data": [64, 79, 83, 95, 97, 106, 109, 122, 124, 125, 126, 158, 163, 167, 180, 188, 190, 194, 196, 197], "v1": 64, "v2": 64, "alpha1": 64, "alpha2": 64, "corner_po": 64, "vector": [64, 151], "elem": [64, 65], "point_1": 64, "point_2": 64, "term_len": [64, 65], "face_index": [64, 65], "One": [64, 126, 156, 162, 177, 185, 195], "waveguide_cel": 64, "annotation_lay": 64, "enough": [64, 158], "neighbor": [64, 185], "begin_shapes_rec": 64, "we": [64, 79, 83, 100, 126, 162, 166, 167, 170, 171, 172, 176, 177, 180, 181, 185, 188, 189, 190, 193, 195, 196, 198], "unsign": [64, 151], "maximum": [64, 76, 106, 109, 193, 194], "tline": 64, "amount": [64, 126, 151, 191, 193], "ensur": [64, 114, 152, 171], "overlap": [64, 126, 151, 153, 162, 190], "001": [64, 109], "stop": [65, 106, 109, 151, 176, 188, 194], "radian": [65, 151], "circl": [65, 151, 188], "alpha": 65, "left_gap_inn": 65, "left_gap_out": 65, "right_gap_inn": 65, "right_gap_out": 65, "left_protect": 65, "right_protect": 65, "would": [65, 86, 102, 152, 154, 162, 177, 178, 185, 190], "rad": 65, "141592653589793": 65, "multiwai": 66, "splitter": 66, "letter": [66, 79, 112, 157, 159, 181], "length_extra": 66, "length_extra_sid": 66, "waveguidecoplanartcross": 66, "measur": [66, 88, 89, 126, 133, 188, 200], "11": [66, 121, 126, 176, 177], "270": 66, "use_airbridg": 66, "centr": [66, 88, 89], "bridge_dist": 66, "a_list": 66, "b_list": 66, "port_nam": [66, 114], "c": [66, 84, 130, 171], "d": [66, 84, 126, 152, 176, 189, 193], "g": [66, 83, 152, 167, 190], "h": [66, 124, 131], "j": [66, 194], "design": [69, 70, 75, 82, 84, 87, 92, 167, 174, 177, 179, 184, 185, 188, 194, 197, 198], "packag": [69, 86, 95, 170, 173, 176, 177, 179, 184, 190, 191, 192, 194, 198, 200], "oasi": [69, 113, 119], "devic": [69, 92, 136, 190], "research": 69, "qcd1": 69, "qcd2": 69, "qcd3": 69, "thu": [70, 75, 194], "junctionnam": 70, "02": [70, 90, 92, 136], "style": [71, 72, 170, 175, 179, 190], "distinct": [71, 180, 185], "top_pad_lay": 71, "edge_height": 71, "small_loop_height": 71, "loop_bottom_i": 71, "delta_j": 71, "finger_margin": 71, "junction_shapes_top": 71, "junction_shapes_bottom": 71, "shadow_shap": 71, "h_pad_height": 71, "v_pad_width": 71, "pad_overlap": 71, "tp_width": 71, "tp_height": 71, "rounding_param": 71, "bp_height": 71, "bp_gap_x": 71, "big_loop_height": 71, "include_base_metal_addit": [72, 90], "pad_height": [72, 90, 133, 140], "pad_to_pad_separ": [72, 90], "x_offset": [72, 90], "pad_rounding_radiu": [72, 90], "junction_total_length": [73, 74, 92, 126], "26": 73, "33": [74, 92, 126], "junction_upper_pad_width": [74, 92, 126], "8": [74, 92, 121, 126, 163, 164, 171], "junction_upper_pad_length": [74, 92, 126], "13": [74, 92, 126, 180], "junction_lower_pad_width": [74, 92, 126], "junction_lower_pad_length": [74, 92, 126], "squidnam": 75, "loop_area": [75, 90, 92, 136], "background_color": 76, "ffffff": 76, "helper": [76, 85, 97, 114, 121, 126, 142, 151, 159, 166, 177, 190, 195], "render": [76, 126], "environ": [76, 118, 173, 175, 176, 180, 191, 193, 197, 198, 200], "layoutview": [76, 188], "cellview": [76, 188], "view": [76, 79, 84, 109, 149, 158, 165, 177, 178, 181, 185, 188, 190, 193, 196, 199], "imag": [76, 81, 163, 173, 174, 177, 179, 180, 187, 188, 189, 191, 193, 194, 195], "tab": [76, 152, 185, 186, 188, 189], "standalon": [76, 86, 150, 171, 175, 176, 179, 180, 189, 192], "python": [76, 86, 125, 152, 154, 155, 158, 171, 172, 173, 175, 179, 181, 184, 187, 188, 189, 191, 192, 193, 194, 196, 199, 200], "mode": [76, 148, 177, 181, 184, 186, 188, 193, 196, 199], "keep": [76, 171, 177, 185, 189], "scope": [76, 177], "macro": [76, 158, 167, 176, 179, 180, 181, 184, 185, 187, 189, 190, 196, 198, 199], "applic": [76, 150, 151, 180, 186, 187, 199], "command": [76, 84, 86, 94, 113, 125, 158, 172, 173, 174, 176, 177, 178, 180, 187, 188, 190, 191, 193, 199], "act": [76, 124], "onc": [76, 108, 123, 148, 166, 171, 181, 185, 186, 188, 189, 190, 191, 193, 195, 196, 200], "png": [76, 174], "jupyt": [76, 175], "notebook": [76, 175], "inlin": [76, 185], "wrap": [76, 77], "whether": [76, 90, 92, 121, 124, 125, 136, 150, 173, 192, 194], "background": [76, 191], "color": [76, 190, 195], "html": [76, 79, 173, 174, 180], "white": 76, "fit": [76, 109, 188, 190], "zoom": [76, 185, 186, 188], "main": [76, 83, 94, 108, 109, 162, 173, 177, 181, 184, 185, 188, 189, 190, 197, 198], "ipython": 76, "bold": [76, 185, 188], "clear": 76, "popul": [76, 83, 84, 158], "top_cell_nam": 76, "filenam": [76, 82, 119, 160, 162], "layers_set": 76, "directori": [76, 82, 112, 113, 150, 171, 173, 174, 176, 177, 178, 179, 180, 184, 188, 189, 190, 191, 196], "max_siz": 76, "bigger": 76, "pixelbuff": 76, "whole": [76, 129, 186], "hierarchi": [76, 83, 84, 144, 158, 167, 171, 178, 185, 187, 188, 189], "correspondingli": 76, "viewport": 76, "aspect": [76, 92], "Not": [76, 108, 166], "deprec": [76, 83, 167], "miss": [76, 148, 167, 178, 188], "ui": 76, "layerinfo": [76, 79, 122, 143, 161, 190], "default_lay": [76, 79, 184, 190], "valid": [76, 114, 126, 154, 172, 177, 194], "cluster": [77, 191, 193], "process": [77, 79, 84, 96, 98, 106, 113, 122, 125, 126, 128, 129, 130, 131, 166, 176, 179, 180, 181, 184, 187, 189, 190, 193, 194, 196, 197], "inform": [77, 84, 122, 126, 169, 171, 181, 184, 185, 189, 190, 194, 195, 196, 200], "about": [77, 171, 176, 179, 180, 184, 188, 190, 200], "togeth": [77, 151, 164, 176, 195], "220": 79, "reserv": [79, 97, 109], "127": [79, 190], "128": [79, 88, 190], "255": [79, 190], "work": [79, 84, 102, 122, 171, 173, 176, 177, 180, 181, 185, 188, 189, 190, 192, 195, 198, 200], "anoth": [79, 90, 91, 93, 152, 166, 167, 171, 185, 190], "stack": [79, 97, 121, 126, 187, 188, 197], "bond": 79, "denot": [79, 109, 189, 190], "manufactur": 79, "necessari": [79, 105, 167, 177, 192, 193], "deposit": [79, 122], "auxiliari": [79, 189], "field": [79, 97, 109, 126, 154, 166, 191], "229": 79, "organis": 79, "accord": [79, 83, 122, 167, 174, 177], "www": [79, 109, 118, 180, 193, 196], "de": [79, 124, 180], "doc": [79, 106, 109, 164, 173, 174, 177, 184, 194, 195], "qt5": 79, "layer_sourc": 79, "flat": [79, 83, 171], "map": [79, 83, 84, 85, 102, 162, 187, 195], "subset": 79, "minor": [79, 170], "twist": 79, "1t1_base_metal_gap": 79, "invert": [79, 82], "skip_extra": 82, "bitmap": [82, 84], "oa": [82, 83, 84, 122, 150, 157, 167, 184, 189, 193, 196, 200], "gd": [82, 105, 108, 150, 167, 184, 189, 193], "chip_nam": [82, 83], "chip_dir": 82, "alt_netlist": [82, 84, 162], "export_dir": 82, "subdirectori": [82, 181, 184], "modifi": [82, 83, 90, 91, 122, 126, 151, 177, 179, 181, 187, 188, 190, 191], "mask_document": 82, "md": 82, "spec_lay": 82, "mask_graphical_rep": 82, "postfix": [83, 162, 178], "creation": [83, 166, 193], "2d": [83, 84, 109, 121, 150], "exact": [83, 180, 185, 188], "minimum": [83, 106, 109, 151, 176, 177, 194], "violat": 83, "conflict": 83, "never": 83, "factor": [83, 159], "coverag": [83, 178], "uniqu": [83, 150, 158, 162, 163, 190, 191, 197], "position_label": 83, "outsid": [83, 91, 109, 177, 190], "dure": [83, 152, 177], "calcualt": 83, "k": [83, 162], "rigtht": 83, "90": [83, 189, 190], "what": [83, 118, 172, 188, 190, 195], "translat": [83, 180], "chips_dict": 83, "overwrit": [83, 92, 173, 193], "ones": [83, 159, 176, 177], "_": [83, 109, 149, 190, 195], "bbox": [83, 143], "labels_cel": 83, "mask_name_for_chip": 83, "row": [83, 97, 194], "column": [83, 97, 194], "c03": 83, "posixpath": [84, 122], "home": [84, 122, 173, 189], "runner": [84, 122], "tmp": [84, 112, 173, 177, 184, 190, 191, 193, 196], "add_mask_name_to_chip": 84, "These": [84, 85, 103, 158, 171, 174, 176, 184, 188, 189, 190, 196], "Then": [84, 109, 167, 176, 185, 186, 196], "entir": [84, 144, 173, 188], "switch": [84, 199], "debug": [84, 126, 160, 188, 189, 199], "limit": [84, 97, 123, 167, 173, 180, 194, 195, 196], "concurr": [84, 176], "cpu": [84, 178, 180], "resourc": [84, 191, 193], "manag": [84, 149, 173, 176, 180, 181, 188, 191, 193, 200], "purpos": [84, 126, 132, 171, 177, 185, 195], "drc": [84, 150, 184, 185], "similar": [84, 109, 166, 188, 193, 194, 195, 196], "folder": [84, 105, 108, 112, 113, 121, 125, 173, 174, 176, 177, 178, 184, 189, 190, 191, 192, 193, 194, 196, 197, 200], "tmp_path": [84, 150, 189], "mask_layout_typ": [84, 85], "extra_face_param": [84, 85], "ident": [84, 85, 162, 163, 167, 171, 177], "overwritten": 84, "extra_kwarg": 84, "variant_nam": 84, "complex": [84, 179, 185, 194], "polymorph": 84, "here": [84, 160, 175, 181, 185, 190, 193, 198], "rest": 84, "quick_demo": [84, 177, 189], "py": [84, 105, 108, 112, 171, 173, 174, 176, 177, 178, 180, 189, 190, 191, 192, 193, 194, 196, 200], "further": [84, 173, 181, 189, 190, 195], "qdg": 84, "o": [84, 86, 152, 176, 180], "cpu_count": 84, "whichev": 84, "smaller": [84, 126, 151], "remove_guiding_shap": 84, "box_map": 84, "mask_map": 84, "nxn": 84, "mxm": 84, "mnxmn": 84, "usual": [85, 102, 122, 124, 162, 176, 181, 188, 189, 190, 192, 193, 195], "instanti": [85, 166, 171, 177, 195], "extra_param": 85, "modul": [86, 108, 151, 155, 159, 171, 172, 175, 176, 178, 179, 180, 181, 184, 190, 192], "import": [86, 105, 158, 159, 163, 171, 173, 174, 177, 178, 180, 181, 184, 185, 188, 189, 190, 195, 196], "api": [86, 164, 170, 174, 177, 179, 181, 185, 186, 188, 190, 193, 194, 195, 196, 198], "usag": [86, 159, 175, 179, 181, 185, 187, 188, 189, 193, 194, 195, 196], "db": [86, 171], "execut": [86, 105, 108, 113, 125, 147, 173, 178, 180, 188, 189, 193, 196, 197], "session": 86, "found": [86, 114, 147, 150, 158, 169, 173, 180, 184, 190, 193, 194, 200], "transmon": [88, 89], "josephson": [88, 89], "r_island": 88, "squid_angl": [88, 89], "couplers_r": [88, 89], "couplers_a": [88, 89], "couplers_b": [88, 89], "couplers_angl": [88, 89], "340": [88, 89], "210": [88, 89], "couplers_width": [88, 89], "couplers_arc_amplitud": [88, 89], "45": [88, 89, 121, 126], "drive_angl": [88, 89], "drive_dist": [88, 89], "concentr": 89, "290": 89, "rectangl": [90, 91, 122, 171, 185], "shunt": [90, 91], "north": [90, 91, 93], "join": [90, 91], "700": 90, "ground_gap_r": 90, "coupler_r": 90, "coupler_a": 90, "coupler_offset": 90, "squid_offset": 90, "island1_r": 90, "island2_r": 90, "450": 90, "island1_taper_width": 90, "island1_taper_junction_width": 90, "island2_taper_width": 90, "island2_taper_junction_width": 90, "70": 90, "with_squid": 90, "spline": [91, 151], "construct": [91, 113, 151, 167, 189, 195], "island_splin": 91, "island_spline_sampl": 91, "collect": [92, 150, 185, 190], "routin": 92, "beam": 92, "customari": 92, "probepoint": [92, 150], "simpli": [92, 126, 152, 173, 195], "appropri": [92, 166, 170, 171, 190], "probe_ground": 92, "probe_island": 92, "probe_island_1": 92, "probe_island_2": 92, "transf": [92, 136], "only_arm": [92, 136], "base_metal_gap_for_ebl": [92, 136], "right_sid": [92, 136], "help": [92, 136, 176, 177, 178, 179, 185, 188], "dcplxtran": [92, 136, 167], "rot": 92, "flux": [92, 106, 114, 130], "flux_corn": 92, "origin_fluxlin": 92, "origin_squid": 92, "port_common": 92, "howev": [92, 126, 177, 180, 181, 185, 189, 190, 193], "might": [92, 105, 108, 109, 173, 176, 180, 181, 193], "tweak": 92, "south": 93, "gap_width": [93, 195], "wne": 93, "cpl_width": [93, 131], "cpl_length": 93, "cpl_gap": 93, "102": 93, "port_width": 93, "cl_offset": 93, "island_r": 93, "arg": [94, 110, 112, 143, 150, 152, 167, 173], "args_for_script": 94, "entri": [94, 150, 167, 180, 181, 189], "consol": [94, 112, 160, 180, 189, 192], "pars": [96, 97, 98, 110, 126, 128, 129, 130, 131, 154], "readi": [96, 98, 126, 128, 129, 130, 131], "co": 97, "intend": [97, 126, 195, 200], "materi": [97, 109, 122, 126, 193, 194], "don": [97, 171, 176, 177, 180], "obei": 97, "vacuum": [97, 109, 121, 122, 123, 126, 195], "word": [97, 159, 181], "result": [97, 102, 106, 140, 150, 151, 152, 191, 193, 194, 197], "matric": [97, 106, 194], "introduc": [97, 122, 126, 195], "dielectr": [97, 126, 195], "permitt": [97, 121, 122, 126], "regist": [97, 165, 171, 183], "reset": 97, "param_nam": [97, 164, 174], "cast": [97, 126], "simulation_lay": 97, "relev": [97, 126, 166, 194, 195], "london": [97, 122, 194], "penetr": [97, 122, 194], "depth": [97, 122, 194], "m": [97, 121, 126, 177, 193], "xsection_source_class": 97, "schema": [97, 167], "ignore_process_lay": 97, "boundari": [97, 109, 126, 194], "extra_json_data": [97, 126], "store": [97, 126, 143, 167, 189, 194, 195], "virtual": [97, 126, 177, 180], "partit": [100, 102, 121, 123, 126, 127, 193], "pointer": 100, "partition_region_funct": [100, 127], "could": [100, 112, 118, 152, 170, 172, 173, 190, 193, 195], "differenti": [100, 122], "cut": [100, 102, 121, 122, 200], "meant": [100, 184, 190], "refpoint_prefix": [100, 101, 102, 140], "parameter_remap_funct": [100, 101, 102], "callabl": [100, 101, 102, 121, 122, 127], "reus": [100, 157], "compos": 100, "needed_paramet": 102, "stub": [102, 126, 131], "parit": 102, "recommend": [102, 122, 176, 177, 180, 185, 189, 193, 194], "suppos": [102, 189, 195], "But": 102, "qubit_a": 102, "program": [103, 179, 186, 188, 192], "hfss": [103, 106, 194, 195, 197], "q3d": [103, 106, 194, 195, 197], "write": [105, 108, 113, 118, 150, 171, 173, 174, 176, 177, 178, 180, 190, 193, 195, 199, 200], "json_filenam": [105, 108, 113, 125], "file_prefix": [105, 108, 113], "exit_after_run": 105, "execution_script": 105, "import_and_simul": 105, "use_rel_path": 105, "batch": [105, 125, 184, 196], "bat": [105, 113, 196], "electron": [105, 147, 194, 196, 197], "desktop": [105, 193, 194, 196, 197], "sequenc": [105, 108, 139, 151], "script_fold": [105, 108], "bool": [105, 106, 108, 109, 110, 112, 117, 124, 126, 150, 151, 161, 167], "import_script": 105, "skip_error": [105, 108], "solution_param": [105, 106, 108, 109], "skip": [105, 108, 109, 152], "caus": [105, 108, 127, 151, 152, 176], "carefulli": [105, 108, 170, 195], "sens": [105, 108, 186, 188], "wast": [105, 108], "bad": [105, 108], "ghz": [106, 109, 194], "percentag": [106, 194], "mesh": [106, 109, 118, 193, 194], "refin": [106, 109, 194], "how": [106, 126, 167, 171, 177, 180, 181, 185, 190, 191, 194, 195], "mani": [106, 126, 169, 176, 177, 179, 180, 184, 185, 189, 190, 193, 194, 195], "meet": [106, 185, 194], "criterion": [106, 109, 194], "maxim": [106, 109], "templat": [106, 174, 179], "classvar": [106, 109, 115], "101": [106, 194], "interpol": [106, 109, 194], "multifrequ": [106, 194], "sweep": [106, 109, 113, 118, 122, 167, 187, 193, 194, 197], "lowest": [106, 126, 194, 195], "highest": [106, 126, 194], "discret": [106, 194], "fast": [106, 170, 194], "energi": [106, 108, 109, 187, 197], "save": [106, 125, 167, 181, 190, 191, 194, 195], "magnet": [106, 114], "pec": 106, "sheet": [106, 121, 126, 195], "matrix": [106, 109, 151, 187, 193, 197], "nomin": 106, "moment": [106, 186], "eigenmod": [106, 187, 197], "eigenfrequ": [106, 194], "solv": [106, 194], "excit": [106, 124, 194], "voltag": 106, "induct": [106, 109, 117, 124, 131, 166, 194], "workflow": [108, 118, 173, 179, 181, 185, 187, 188, 193, 197], "script_fil": 108, "compile_elmer_modul": 108, "launch": [108, 176, 180, 189, 190, 199], "compil": [108, 109, 177, 180, 191], "runtim": [108, 173], "model": [108, 124, 126, 177, 193, 194, 195], "005": 109, "factori": 109, "adapt": [109, 195], "fraction": 109, "outlier": 109, "symmetr": 109, "big": [109, 189], "larger": [109, 126, 193], "finer": 109, "divid": [109, 171, 177, 184, 190, 193], "dim": [109, 123], "term": [109, 123, 126, 178, 194, 195], "entiti": 109, "expans": [109, 123, 126, 151, 166], "constant": [109, 126, 171, 194], "slope": 109, "increas": [109, 122, 139, 173, 193], "global_max": 109, "global": 109, "less": [109, 118, 171, 180], "awai": [109, 123, 124, 126, 151, 154, 190], "vtu": 109, "paraview": [109, 173, 192, 193, 196], "off": [109, 126, 188], "slightli": [109, 180], "faster": [109, 118, 167], "explicit": 109, "wave": [109, 126, 195], "equat": 109, "converg": 109, "supercurr": 109, "flow": 109, "thick": [109, 121, 122, 126, 195], "finit": 109, "nedelec": 109, "kind": [109, 177, 190], "formul": [109, 127], "vectorhelmholtz": 109, "potenti": [109, 124, 190], "v": [109, 117, 170], "electr": [109, 194], "nic": 109, "funet": 109, "fi": 109, "pub": 109, "sci": 109, "elmermodelsmanu": 109, "pdf": [109, 118], "warn": [109, 160, 180], "experiment": [109, 198], "poor": [109, 193], "film": 109, "nest": [109, 126], "solver": [109, 193, 194, 196], "calc": 109, "wave_equ": [109, 194], "mg": 109, "09": 109, "ilu0": 109, "polynomi": [109, 151], "p": [109, 149], "multigrid": 109, "bicgstab": 109, "mention": [109, 126, 173], "elmersolv": [109, 173, 193], "umfpack": 109, "mump": 109, "pardiso": 109, "superlu": 109, "softwar": [109, 169, 173, 183, 193, 196], "redund": 109, "precondition": 109, "linear": [109, 170], "condit": [109, 194], "xmin": [109, 117], "xmax": [109, 117], "ymin": [109, 117], "ymax": [109, 117], "just": [109, 171, 173, 176, 177, 181, 190, 195], "impend": 109, "electrostat": 109, "epr_3d": 109, "export_script": 110, "quiet": [110, 112], "export_onli": 110, "basenam": [110, 191], "dialog": [110, 112, 181, 185, 192], "describ": [110, 126, 145, 151, 158, 172, 177, 185, 190, 192, 194, 195, 197], "stdout": [110, 160], "print": [110, 152, 158, 159, 160, 189], "export_path_identifi": 110, "script_export_path": 110, "remote_host": 111, "singularity_remote_path": 111, "ssh_login": 112, "kqc_remote_tmp_path": [112, 191], "detach_simul": 112, "poll_interv": 112, "export_path_basenam": 112, "local": [112, 170, 173, 174, 177, 180, 181, 186, 188, 191], "remot": [112, 187, 193, 197], "host": [112, 175, 177, 191, 193], "froce": 112, "q": [112, 177, 186, 192], "ssh": [112, 191], "login": 112, "hostnam": 112, "detach": [112, 191], "wait": 112, "finish": [112, 186, 191, 193], "poll": [112, 191], "interv": [112, 191], "export_tmp_dir": 112, "source_path": 113, "content": [113, 150, 179, 181, 193], "sh": [113, 173, 191, 193, 196], "json_data": 113, "json_file_path": 113, "sim_class": [113, 195, 196], "sim_paramet": [113, 195], "vari": [113, 190, 193, 195], "sol_class": 113, "sol_paramet": 113, "analys": 114, "inconsist": 114, "criteria": 114, "met": 114, "check": [114, 148, 152, 167, 176, 177, 184, 190, 194, 199], "least": [114, 151, 154, 167, 176, 180, 185, 188, 190], "presenc": 114, "validation_typ": 114, "handl": [114, 143, 171, 185, 190, 193, 197], "filename_templ": 117, "filename_output": 117, "rule": [117, 126, 174, 184], "nvertic": 117, "debugid": 117, "ilevel": 117, "mtype": 117, "filltyp": 117, "conmax": 117, "edge_mesh": 117, "sym": 117, "xwidth": 117, "ywidth": 117, "xcell": 117, "ycell": 117, "materials_typ": 117, "si": 117, "bt": 117, "port_ipoli": 117, "portnum": 117, "ipolygon": 117, "ivertex": 117, "port_typ": 117, "std": 117, "xcord": 117, "ycord": 117, "resist": [117, 124, 166], "react": 117, "capac": 117, "control_typ": 117, "dbu": [117, 118, 119, 122, 123, 143], "fill_typ": [117, 118], "poli": 117, "detailed_reson": 118, "lower_accuraci": 118, "ab": 118, "staircas": 118, "simulation_safeti": 118, "son": [118, 196], "sonnetsoftwar": 118, "download": [118, 173, 180], "techdoc": 118, "enhanced_resonance_detection_featur": 118, "fine": [118, 164], "coars": 118, "accur": 118, "good": [118, 189], "everyth": [118, 181, 185, 190], "output_format": [119, 158], "intersect": 119, "override_arg": 121, "ma_eps_r": 121, "ms_eps_r": 121, "sa_eps_r": 121, "ma_thick": [121, 122], "0048": 121, "ms_thick": [121, 122], "0003": 121, "sa_thick": [121, 122], "0024": 121, "ma_bg_eps_r": 121, "ms_bg_eps_r": 121, "sa_bg_eps_r": 121, "metal_height": [121, 126, 195], "p1": [121, 122, 126], "p2": [121, 122, 126], "metal_edg": 121, "later": [121, 123, 141, 167, 178, 181, 190], "mer": 121, "x_revers": 121, "closer": [121, 126, 151, 158], "z": [121, 123, 126, 173, 199], "z_revers": 121, "ma": [121, 126], "sa": [121, 126], "approxim": [121, 126], "input_oa": 122, "output_oa": 122, "cut1": 122, "cut2": 122, "process_path": 122, "kqc_process": [122, 200], "parameters_path": 122, "plugin": [122, 149, 165, 172, 176, 200], "down": [122, 124, 126, 185, 186, 188, 190], "output_path": 122, "pathlib": 122, "pyacor": 122, "post_processing_funct": 122, "oxidise_layers_funct": 122, "_oxidise_lay": 122, "ma_permitt": 122, "ms_permitt": 122, "sa_permitt": 122, "vertical_cul": 122, "mer_box": 122, "magnification_ord": 122, "perform": [122, 126, 167, 173, 177, 193, 194], "oxid": 122, "expect": [122, 170, 180], "signatur": 122, "pyhint": 122, "air": 122, "cull": 122, "retain": 122, "_mer": 122, "suffix": [122, 123, 150, 163], "magnif": [122, 185], "accomod": 122, "spacial": 122, "10x": 122, "100x": 122, "thin": [122, 126, 195], "sort_kei": [122, 152], "sort": [122, 152], "pick": 122, "tie": 122, "break": [122, 170, 173], "slot": 122, "cut_label": 122, "width_ratio": 122, "visualis": [122, 123, 126, 177], "request": [122, 160, 167, 173, 191, 193], "xsection_cut": 122, "_1": 122, "_2": 122, "multipli": 122, "scalar": [123, 126], "vertical_dimens": 123, "metal_edge_dimens": 123, "accept": [123, 145, 154, 170, 176, 194], "domain": [123, 126, 195], "preview": [123, 126], "databas": [123, 151, 153, 198], "sign": 123, "metal_region": [123, 140], "etch_region": 123, "reactanc": [124, 166], "renorm": [124, 194], "ideal": 124, "rlc": [124, 194], "lump": [124, 126, 194, 195], "real": 124, "ohm": 124, "omega": 124, "imaginari": 124, "henri": 124, "farad": 124, "signal_loc": [124, 194, 195], "ground_loc": [124, 194, 195], "signal_lay": [124, 166], "etch_width": 124, "forc": [124, 126, 194], "deembed_len": [124, 166, 194], "embed": 124, "micron": [124, 157], "port_siz": [124, 126], "repeat_for_each": 125, "data_file_prefix": 125, "dimension": [126, 179, 194, 195], "basic": [126, 175, 176, 184, 185, 186, 187, 188, 198], "built": [126, 173, 174, 181, 185, 190, 195, 199], "principl": [126, 154], "imagin": [126, 195], "surfac": [126, 194, 195], "touch": [126, 190], "face_stack": [126, 195], "lower_box_height": [126, 195], "account": [126, 156, 158, 171, 191, 193, 195], "pile": [126, 195], "That": [126, 194, 195], "leav": [126, 195], "substrate_height": [126, 195], "chip_dist": [126, 195], "infinit": [126, 152, 195], "insul": 126, "dielectric_height": [126, 195], "grid_siz": [126, 153], "expand": [126, 151], "resolut": 126, "list_or_const": 126, "ordin": 126, "short": [126, 185, 198], "duplic": [126, 151, 161, 176], "ascend": 126, "simplifi": 126, "polygon_toler": 126, "shrink": 126, "minimum_point_spac": 126, "z0": 126, "z1": 126, "split": [126, 151], "opp_i": 126, "__init__": 126, "hole": [126, 153], "subtract_kei": 126, "port_kwarg": 126, "engin": 126, "infer": [126, 150, 167], "brought": [126, 166], "at_edg": 126, "signal_edg": 126, "ground_edg": 126, "material_dict": 126, "member": [126, 152], "overriden": 126, "whatev": [126, 180], "delet": [126, 159, 161, 181, 185], "access": [126, 177, 180, 185, 187], "append": [126, 151, 160, 162, 163, 195], "dtext": 126, "ground_grid_box": 126, "use_port": 126, "upper_box_height": 126, "fixed_level_stackup": 126, "375": 126, "substrate_box": 126, "correspondingsubstr": 126, "fulli": [126, 177, 194], "substrate_materi": 126, "electromagnet": 126, "dielectric_loss_tang": 126, "airbridge_height": 126, "dielectric_materi": 126, "vertical_over_etch": 126, "hollow_tsv": 126, "hollow": 126, "constructor": [126, 152, 195], "tls_layer_thick": 126, "tl": [126, 194], "tls_layer_materi": 126, "tls_sheet_approxim": 126, "detach_tls_sheets_from_bodi": 126, "significantli": 126, "improv": [126, 177, 178, 180], "element_class": 127, "ignore_port": [127, 195], "transformation_from_cent": 127, "xs1": 128, "xs2": 128, "cpw_length": 129, "n_guid": 129, "guide_face_id": 129, "add_bump": 129, "port_termination_end": 129, "use_edge_port": 129, "etch_whole_opposite_fac": 129, "qubit_cel": 130, "center_x": 130, "center_i": 130, "wn": [130, 190], "en": 130, "sw": [130, 150], "se": [130, 150], "nw": [130, 150], "ne": [130, 150], "enable_flux_lin": 130, "enable_drive_lin": 130, "enable_transmission_lin": 130, "transmit": 130, "66": 131, "junction_induct": 131, "35e": 131, "junction_capacit": 131, "16": [131, 190], "num_cross": 134, "cross_width": 134, "cross_length": 134, "cross_spac": 134, "cross_box_dist": 134, "stripe_width": 138, "stripe_length": [138, 139], "stripe_spac": [138, 139], "min_stripe_width": 139, "stripe_step": 139, "widen": 139, "pads_region": 140, "pad_spacing_x": 140, "pad_spacing_i": 140, "connect_pad": 140, "refpoint_dist": 140, "resembl": 141, "fenc": 141, "profil": [141, 191], "tsv_array_form": 141, "tileoutputreceiv": 143, "tilingprocessor": 143, "brief": [143, 149], "ix": 143, "ii": 143, "tile": 143, "obj": [143, 151], "clip": 143, "layer_info": 143, "rho": 143, "frac": 143, "pcell_class": 144, "isinst": 144, "pcell_declar": 144, "coupler_typ": 145, "element_kei": 145, "useless": 145, "latest": [147, 173, 177, 180, 196], "instal": [147, 148, 173, 175, 179, 184, 186, 190, 192, 193, 196, 197, 199, 200], "against": [148, 184], "txt": [148, 176, 177, 180, 193, 196], "upgrad": [148, 176, 177, 179, 180], "stand": [148, 158, 184, 197], "alon": [148, 158, 184, 197], "pip": [148, 176, 177, 180, 192, 193, 196], "sync": [148, 177], "venv": [148, 176, 177], "startup": [148, 154, 177], "button": [149, 186, 188], "prio": 149, "__": 149, "pluginfactori": 149, "flip_fac": 150, "default_probe_typ": 150, "default_probe_suffix": 150, "millimet": 150, "tell": 150, "site": [150, 177, 180], "cell_fil": 150, "dir_nam": 150, "tri": [150, 173], "write_versions_fil": 150, "commit_refer": [150, 193], "git": [150, 170, 175, 176, 177, 180, 184], "revis": [150, 198], "written": [150, 196], "export_machine_vers": 150, "filepath": 150, "maco": [150, 175, 180, 186], "linux": [150, 173, 175, 177, 180, 184, 186, 189, 193, 196], "drc_script": 150, "name_drc_report": 150, "lyrdb": 150, "1t1_waveguide_path": 151, "2b1_waveguide_path": 151, "sum": 151, "children": 151, "objectinstpath": 151, "outward": 151, "whenev": [151, 170, 188], "elimin": [151, 152], "simple_polygon": 151, "polygon_point": 151, "counterclockwis": 151, "283185307179586": 151, "pi": 151, "control_point": 151, "sample_point": 151, "startpoint": 151, "uniformli": 151, "cubic": 151, "subsequ": 151, "slide": 151, "unlik": 151, "bezier": 151, "guarante": [151, 152, 181], "kaihuai": 151, "qin": 151, "proceed": 151, "pacif": 151, "98": 151, "sixth": 151, "confer": 151, "singapor": 151, "1998": 151, "pp": 151, "37": 151, "43": [151, 171], "doi": [151, 169], "1109": 151, "pccga": 151, "731996": 151, "uniform": [151, 195], "prepend": 151, "tangent": 151, "third": [151, 180, 193], "fourth": 151, "skipkei": 152, "ensure_ascii": 152, "check_circular": 152, "allow_nan": 152, "jsonencod": 152, "sensibl": 152, "typeerror": 152, "incom": 152, "ascii": 152, "charact": [152, 156, 157, 170], "escap": 152, "prevent": [152, 180], "recursionerror": 152, "nan": 152, "infin": 152, "compliant": 152, "javascript": 152, "decod": 152, "regress": 152, "dai": 152, "basi": [152, 171, 195], "pretti": 152, "newlin": 152, "item_separ": 152, "key_separ": 152, "whitespac": 152, "serializ": 152, "def": [152, 190, 195], "try": [152, 176, 177, 180], "let": [152, 177, 190], "jsondecod": 152, "object_hook": 152, "rpc": 152, "hint": 152, "object_pairs_hook": 152, "prioriti": [152, 185], "parse_float": 152, "num_str": 152, "datatyp": 152, "decim": 152, "parse_int": 152, "parse_const": 152, "invalid": 152, "encount": [152, 173], "strict": [152, 171], "context": [152, 167], "parseabl": 152, "boundbox": 153, "avoid_region": 153, "grid_step": 153, "group_n": 153, "speed": [153, 157, 166, 178, 193], "box_siz": 154, "require_gui_editing_en": 154, "search": [154, 179], "captur": 154, "invers": 154, "treat": [154, 162, 171], "strip": 154, "liter": 154, "namespac": [154, 164], "comma": [154, 158], "multilin": 154, "waveguide_inst": 154, "usabl": 154, "x_corner": 154, "slow": [154, 188, 189], "clumsi": 154, "curat": 154, "node_editor_valid_el": 154, "kept": 154, "file_path": 155, "enum": 156, "origin_offset": 156, "layer_protect": 156, "350": 156, "nearest": 157, "lai": 157, "font_polygon": 157, "cach": 157, "print_waveguides_as_composit": 158, "add_instance_nam": 158, "refpoint_snap": 158, "grid_snap": 158, "include_import": 158, "create_cod": 158, "past": 158, "statement": [158, 181], "node_param": 158, "complet": [158, 174, 177, 181, 190, 193], "flatten": 158, "flush": 159, "src_path": 159, "memori": [159, 173, 193], "_kqc_librari": 159, "class_nam": 159, "pascalcas": [159, 171], "lowercas": [159, 181], "module_nam": 159, "_to_module_nam": 159, "titl": [159, 169], "qualiti": 159, "lowest_visible_level": 160, "remove_old_handl": 160, "log": [160, 189], "logfil": 160, "monitor": 160, "handler": 160, "root": [160, 173, 178, 184, 190], "logger": 160, "critic": 160, "cell_list": 161, "layer_1": 161, "layer_2": 161, "layer_merg": 161, "only_el": 161, "prune": 161, "contrast": 161, "convert_to_stat": 161, "anywher": [161, 181], "net": 162, "subcircuit": [162, 163], "terminologi": [162, 179, 187], "eda": 162, "resistor": 162, "pin": [162, 177], "wire": 162, "conceptu": 162, "analog": 162, "exactli": 162, "subcircuit_id": [162, 163], "unconnect": 162, "cell_nam": [162, 163], "subcircuit_loc": 162, "_pya_typ": 162, "subcircuit_origin": 162, "breakdown": 162, "regadless": 162, "absolut": [162, 177, 190], "cell_map": 162, "internal_cel": 162, "network": 163, "networkx": [163, 180], "graph": [163, 171, 177, 184], "cell_typ": 163, "instance_nam": 163, "obtain": [163, 195], "with_label": 163, "with_posit": 163, "figsiz": 163, "spring": 163, "matplotlib": 163, "interact": [163, 187], "plot": 163, "param_with_default_valu": 164, "wildcard": 164, "simplic": [164, 171], "grain": 164, "pcellparameterdeclar": 164, "data_typ": 164, "plain": [164, 171, 181], "docstr": [164, 172, 174, 185], "sphinx": [164, 174], "owner": 164, "registr": [165, 190], "happen": 165, "demand": 166, "builder": [166, 195], "ground_refpoint": 166, "port_squid_a": [166, 195], "port_squid_b": [166, 195], "separate_island_internal_port": 166, "commonli": [166, 190], "export_tuned_junct": 167, "class_typ": 167, "parent_nam": 167, "tuned_junction_paramet": 167, "qb1": 167, "testarray_nw": 167, "squid_0": 167, "squid_3": 167, "testarrai": 167, "even": [167, 171, 173, 177, 180, 188], "quick": [167, 190], "jsonabl": 167, "exhaust": 167, "read": [167, 173, 180, 181, 185, 190], "write_path": 167, "layer_str": 167, "visual": [167, 177, 190, 193], "again": [167, 173, 176, 188, 189], "parameter_nam": 167, "parameter_start": 167, "parameter_step": 167, "parameter_end": 167, "swept": 167, "squid_index": 167, "mirror_tran": 168, "project": [169, 171, 178, 180, 191, 193], "public": [169, 170, 173, 178], "citat": 169, "bib": 169, "zenodo": 169, "click": [169, 176, 179, 180, 181, 185, 187, 188, 189, 190, 199], "badg": 169, "cucurachi": 169, "daniel": 169, "da": 169, "soumya": 169, "ranjan": 169, "giri": 169, "rakshyakar": 169, "gusenkova": 169, "daria": 169, "guthri": 169, "andrew": 169, "inel": 169, "sinan": 169, "janzs\u00f3": 169, "d\u00e1vid": 169, "jenei": 169, "m\u00e1t\u00e9": 169, "juliusson": 169, "kristinn": 169, "kotilahti": 169, "jann": 169, "landra": 169, "alessandro": 169, "moretti": 169, "roberto": 169, "myll\u00e4ri": 169, "tuoma": 169, "ockeloen": 169, "korppi": 169, "caspar": 169, "r\u00e4bin\u00e4": 169, "jukka": 169, "savola": [169, 194], "niko": 169, "smirnov": 169, "pavel": 169, "takala": 169, "eeli": 169, "wubben": 169, "leon": 169, "month": 169, "jun": 169, "year": 169, "2021": 169, "publish": [169, 173], "5281": 169, "4944796": 169, "url": 169, "welcom": 170, "commun": [170, 193], "contributor": 170, "licens": [170, 194], "agreement": 170, "websit": [170, 173], "review": 170, "approv": 170, "pr": 170, "forward": [170, 193], "strategi": 170, "histori": 170, "pleas": [170, 176, 177, 178, 182, 183, 193, 194, 195, 196, 200], "organ": [170, 178, 188, 190], "commit": [170, 177], "meaning": [170, 190], "black": [170, 171, 172], "permit": [170, 190], "pep": [170, 171], "440": 170, "scheme": 170, "miniv": 170, "major": 170, "micro": 170, "offici": 170, "releas": [170, 173, 179, 200], "salt": [170, 176, 177, 179, 180, 184, 190], "incompat": 170, "backward": [170, 177], "seriou": 170, "cosmet": 170, "affect": [170, 179, 180, 193], "explain": [171, 172, 176, 185, 188, 190, 196], "diagram": 171, "oval": 171, "concret": 171, "leaf": 171, "green": [171, 188, 195], "natur": 171, "ever": 171, "live": 171, "create_cel": 171, "properli": [171, 176, 178, 181], "variabl": [171, 173, 177, 184, 188, 190, 191, 193, 194], "descriptor": 171, "hierarch": 171, "transpar": 171, "caller": 171, "default_parameter_valu": 171, "technic": [171, 190, 194], "intent": 171, "otherclass": 171, "param_a": 171, "param_b": 171, "myclass": 171, "param_c": 171, "42": 171, "param_d": 171, "41": 171, "syntax": [171, 190, 195], "bit": [171, 180, 186, 190], "revers": 171, "why": [171, 172], "bodi": 171, "kqc_library_nam": 171, "downstream": 171, "discov": 171, "convent": [171, 178, 180, 190], "comment": [172, 180, 185, 188, 190], "someth": [172, 193], "feel": 172, "probabl": [172, 180], "rewritten": 172, "clearli": 172, "builtin": 172, "googl": 172, "dockerfil": 173, "addition": [173, 193, 195], "kl_file": 173, "md5": 173, "hash": [173, 177, 184, 190], "kl_hash": 173, "klayout_0": 173, "29": [173, 180], "1_amd64": 173, "deb": 173, "421df42661a3d795b534da5048261044": 173, "ubuntu": [173, 176, 180], "quickli": 173, "m00x": 173, "volum": 173, "pwd": 173, "ghcr": 173, "io": [173, 200], "mount": 173, "run_script": 173, "nc": 173, "rx": [173, 190], "cours": [173, 190], "wd": 173, "older": [173, 177, 186], "hyperv": 173, "backend": 173, "ram": 173, "1gb": 173, "entrypoint": 173, "push": [173, 191], "branch": [173, 181, 188], "pipelin": [173, 178], "pull": [173, 176], "registri": 173, "sylab": 173, "quick_start": 173, "better": [173, 178, 195], "hpc": 173, "tutori": [173, 179, 181, 187, 188], "libexec": 173, "kqclib": [173, 193], "repo": 173, "ora": 173, "pem": 173, "rsa": 173, "encrypt": 173, "successfulli": [173, 176, 177, 199], "singularity_priv": 173, "privat": [173, 178], "now": [173, 181, 188, 190], "create_link": 173, "among": [173, 179], "elmersolver_mpi": 173, "elmergrid": [173, 193], "symbol": [173, 184, 188, 190, 191, 193], "link": [173, 176, 180, 181, 184, 188, 190, 191, 193], "rememb": [173, 176, 185], "bin": [173, 191], "prepar": [173, 193], "klayout_packag": [173, 176, 177, 184, 188, 190, 191, 192, 193, 194, 196, 200], "And": [173, 190], "waveguides_sim_compar": [173, 177, 192, 193], "sure": [173, 176, 177, 178, 181, 185, 188, 190, 191, 196, 200], "ride": 173, "python_execut": [173, 193], "subsystem": 173, "wsl": 173, "problem": [173, 176, 177, 180, 181, 182, 194], "stuck": 173, "workload": [173, 191, 193], "simple_workload_manag": 173, "subfold": [173, 190], "kqc_tmp_path": [173, 177], "waveguides_sim_elm": [173, 193], "affor": 173, "gmsh": [173, 187, 191, 192, 196, 197], "rst": 174, "rebuild": 174, "clean": 174, "apidoc": 174, "sphinxext": 174, "make_pcell_imag": 174, "pcell_imag": 174, "markers_for_png": 174, "x_2": 174, "y_2": 174, "ruler": [174, 200], "illustr": [174, 185, 195], "satisfactori": 174, "x2": 174, "y2": 174, "setup": [175, 179, 180, 181, 185, 186, 190, 191, 192, 197, 199, 200], "prerequisit": 175, "unlink": 175, "secondari": [175, 200], "symlink": 175, "reproduc": 175, "secur": [175, 193, 196], "exclus": 175, "pypi": [175, 184], "cli": 175, "docker": 175, "ci": [175, 177, 178, 184], "singular": [175, 184, 191, 193], "contribut": [175, 179], "come": [176, 190], "pre": [176, 195], "04": [176, 180], "platform": [176, 177, 180], "lt": [176, 180], "clone": [176, 177, 180], "cd": [176, 177, 178], "python3": 176, "setup_within_klayout": [176, 177, 184], "virtualenv": 176, "libpython": 176, "dll": 176, "known": [176, 179, 181], "issu": [176, 179, 181, 182], "downgrad": [176, 181], "ask": 176, "restart": [176, 181, 185, 186, 188, 199], "afterward": [176, 177], "evolv": [176, 190], "realli": [176, 189], "simultan": 176, "kqc_2nd": 176, "know": [176, 177, 180, 186], "klayout_hom": 176, "klayout_alt": 176, "mix": 176, "subsect": 176, "ln": 176, "path_to_kqcircuit": 176, "kqcircuits_script": [176, 184, 188, 189, 190], "kqcircuits_requir": [176, 184, 190], "prompt": [176, 177], "administr": 176, "privileg": 176, "homepath": [176, 180], "mklink": 176, "powershel": 176, "ye": 176, "mayb": 176, "won": [176, 177], "bulk": 176, "win": [176, 177, 184], "mac": [176, 177, 180, 184, 189], "debugg": [177, 187], "autom": [177, 179, 197, 200], "suitabl": [177, 180, 194, 195], "viewer": [177, 186, 196], "compat": [177, 180], "safe": 177, "interfer": 177, "yet": [177, 185, 200], "bracket": 177, "trust": 177, "easier": 177, "troubleshoot": 177, "subsitut": 177, "dep": 177, "rewrit": 177, "wipe": 177, "advanc": [177, 185, 188], "categori": 177, "core": [177, 178, 193], "linter": 177, "netlist_as_graph": [177, 180, 184], "publicli": 177, "abl": [177, 188], "upload": 177, "double_pads_sim": [177, 194], "elsewher": [177, 189], "ipynb": [177, 194], "tofu": 177, "rare": [177, 190], "verifi": [177, 180, 189], "legitim": 177, "constraint": 177, "unsaf": 177, "substitut": 177, "tox": 178, "pytest": [178, 184], "pylint": 178, "lint": 178, "ini": 178, "framework": [178, 179, 194, 197], "num": 178, "reflect": 178, "propos": 178, "test_load_librari": 178, "test_invalid_nam": 178, "approach": [178, 181, 193, 195], "u": [178, 190], "our": [178, 181, 190], "understand": [178, 188], "unfortun": 178, "repetit": 178, "consider": 178, "cov": 178, "comprehens": 178, "happi": 178, "failur": 178, "similarli": [178, 195, 196], "bug": [178, 188], "fail": 178, "prior": 178, "wil": 178, "reintroduc": 178, "conftest": 178, "reduc": [179, 194], "effort": 179, "processor": 179, "instantli": 179, "exchang": 179, "qpu": 179, "assembl": 179, "fabric": [179, 180], "miscellan": [179, 187, 190], "trademark": 179, "page": [179, 190, 200], "simplest": [180, 195], "instant": 180, "rather": 180, "codebas": 180, "simulation_script": 180, "parti": 180, "mask_script": 180, "yourself": 180, "homebrew": 180, "brew": 180, "cask": 180, "becaus": [180, 188, 189], "app": 180, "finder": 180, "bugfix": 180, "stabil": 180, "27": [180, 186], "17": 180, "microsoft": 180, "server": 180, "2022": 180, "talk": 180, "mental": 180, "appdata": [180, 192], "klayout_app": 180, "st": 180, "dynam": [180, 195], "sonoma": 180, "still": [180, 189], "higher": 180, "heavyweight": 180, "hw": 180, "proce": 180, "bigsur": 180, "setuptool": 180, "_distutils_hack": 180, "v52": 180, "v57": 180, "instruct": [180, 185], "sometim": [180, 188], "dir": 180, "binari": [180, 192], "__path__": 180, "queri": 180, "sy": 180, "version_info": 180, "x86_64": 180, "modern": 180, "macbook": 180, "henc": [180, 196], "numpi": 180, "scipi": 180, "macosx_10_9_x86_64": 180, "fetch": 180, "macosx_10_9_arm64": 180, "notic": [180, 189], "easiest": [181, 190], "migrat": 181, "uninstal": 181, "recent": 181, "menu": [181, 186, 187, 188, 190, 198], "panel": [181, 185, 186, 187, 190], "drag": [181, 185, 186, 188, 199], "press": [181, 185, 186, 188], "f2": [181, 185, 186], "underscor": 181, "f5": [181, 188, 189], "my": 181, "my_el": 181, "myelement": [181, 190], "capit": 181, "ctrl": 181, "reload": [181, 185, 187, 190], "drop": [181, 185, 186, 199], "canva": 181, "my_packag": 181, "safest": 181, "quirk": 181, "broken": 181, "reinstal": 181, "earlier": 181, "reloc": 181, "behind": 181, "tqdm": 181, "question": 182, "idea": 182, "discuss": 182, "polici": 183, "high": [184, 200], "pictur": 184, "console_script": 184, "mainli": [184, 190, 195], "librair": [184, 190], "variou": 184, "check_layer_prop": 184, "create_element_from_path": [184, 190], "gdiff": 184, "get_klayout_python_info": 184, "oas2dxf": 184, "dxf": 184, "mostli": [185, 190], "highlight": 185, "navig": [185, 186], "shift": [185, 186, 188, 189], "block": [185, 190], "toolbox": 185, "toolbar": [185, 186], "evok": 185, "anim": 185, "bring": 185, "few": [185, 193], "situat": 185, "accid": 185, "confirm": 185, "del": 185, "video": 185, "flexibl": [185, 195], "enter": 185, "export_cells_as_cod": 185, "nearbi": 185, "hardcod": [185, 190], "nice": 185, "x_port_a": 185, "x_port_a_corn": 185, "anywai": [185, 190], "unhid": [185, 186], "1t1_ground_grid": 185, "arrang": 185, "minut": 185, "anyth": 185, "quit": 186, "power": 186, "shortcut": 186, "ok": 186, "chiplibrari": 186, "mous": 186, "scroll": [186, 200], "littl": 186, "esc": 186, "hotkei": 187, "introduct": 187, "samplehold": 187, "particip": [187, 197], "pyepr": [187, 197], "demo_placing_a_pcel": 188, "icon": 188, "plai": 188, "exclam": 188, "often": [188, 190], "task": [188, 193, 199], "toggl": 188, "breakpoint": 188, "red": 188, "f9": 188, "stage": 188, "pop": 188, "cancel": 188, "asterisk": 188, "caught": 188, "unrespons": 188, "heavi": 188, "though": 188, "demo_pya_bas": 188, "test_wgc_airbridg": 188, "learn": 188, "photomask": 189, "product": 189, "effici": [189, 193], "observ": 189, "multiprocess": 189, "test_mask": 189, "de1": 189, "roughli": 189, "logging_setup": 189, "spcifi": 189, "de2": 189, "5700": 189, "dt1": 189, "qf1": 189, "my_chip": 189, "mcf": 189, "proper": 189, "complic": [189, 193, 199], "mdemo": 189, "ch2": 189, "45000": 189, "30000": 189, "ch1": 189, "sx1": 189, "jt1": 189, "ac1": 189, "st1": 189, "jt2": 189, "65000": 189, "interest": 189, "fragment": 189, "fragmet": 189, "centerd": 189, "exploit": 189, "tip": 190, "trick": 190, "unlock": 190, "myelement2": 190, "offer": [190, 194], "nicer": 190, "myqubit": 190, "my_qubit": 190, "rubi": 190, "hide": 190, "simplecross": 190, "hold": 190, "len1": 190, "len2": 190, "cross_poli": 190, "simple_cross": 190, "scratch": 190, "especi": 190, "explan": [190, 191], "newchip1": 190, "default_samplehold": 190, "half_width": 190, "cross_cel": 190, "new_chip1": 190, "rf16": 190, "12000": 190, "refpoint_nam": 190, "cap_refpoint": 190, "wn_port": 190, "wn_port_corn": 190, "port_b_corn": 190, "perhap": 190, "someel": 190, "refpoint_of_some_el": 190, "existing_ref": 190, "everywher": 190, "something_port": 190, "something_port_corn": 190, "wherev": 190, "logic": [190, 194], "hard": 190, "tree": 190, "strictli": 190, "aptli": 190, "wo": 190, "laid": 190, "encompass": 190, "plu": 190, "groud": 190, "formula": 190, "intuit": 190, "2nd": 190, "indium_bump": 190, "swap": 190, "layer_config_path": 190, "simpler": 190, "x_base_metal_gap_wo_grid": 190, "x_ground_grid_avoid": 190, "133": 190, "x_port": 190, "154": 190, "x_new_lay": 190, "999": 190, "new_lay": 190, "although": 190, "newli": 190, "default_layer_prop": 190, "rm": 190, "rd": 190, "element_path": 190, "incorpor": 190, "pycharm": 190, "studio": 190, "vim": 190, "neovim": 190, "slurm": [191, 193], "password": 191, "openmpi": 191, "install_softwar": 191, "mpi": [191, 193], "machin": [191, 193], "send": 191, "singularity_path": 191, "bash": 191, "sbatch_paramet": [191, 193], "kqc_remote_account": [191, 193], "sim_1": 191, "sim_2": 191, "sim_n": 191, "job": 191, "sim_i_tmp_fold": 191, "nohup_runid": 191, "runid": 191, "watch": 191, "cat": 191, "shell": [192, 193], "liner": 192, "initialis": 192, "admin": 192, "priviledg": 192, "elmer_help": 193, "gmsh_helper": 193, "sif": 193, "capacitancematrix": 193, "electric_potenti": 193, "pvsm": 193, "waveguides_n_guides_1": 193, "waveguides_n_guides_2": 193, "n_worker": 193, "elmer_n_process": 193, "thread": 193, "openmp": 193, "elmer_n_thread": 193, "benefici": 193, "relationship": 193, "independentprocess": 193, "parallelizationsecond": 193, "ofparallel": 193, "sequenti": 193, "worker": 193, "floor": 193, "run_gmsh_gui": 193, "run_elmergrid": 193, "run_elm": 193, "run_paraview": 193, "omp": 193, "gmsh_n_thread": 193, "bsd": 193, "benefit": 193, "multithread": 193, "sbatch": 193, "max_threads_per_nod": 193, "max": 193, "elmer_mem": 193, "64g": 193, "elmer_tim": 193, "00": 193, "gmsh_mem": 193, "alloc": 193, "gmsh_time": 193, "project_0": 193, "bill": 193, "simulation_mesh": 193, "afterok": 193, "sent": 193, "queue": 193, "elmerfem": [193, 196], "elmercsc": [193, 196], "org": [193, 196], "suffic": 193, "scatter": 194, "snp": 194, "touchston": 194, "s1p": 194, "s2p": 194, "s3p": 194, "forth": 194, "emploi": 194, "export_paramet": [194, 196], "extractor": [194, 197], "consult": [194, 195], "estim": 194, "mutual": 194, "c_i_j": 194, "c_i_i": 194, "lifetim": 194, "eig": 194, "eigenvalu": 194, "_energi": 194, "cv": 194, "export_epr": 194, "post_process_script": 194, "_epr": 194, "csv": 194, "accuraci": 194, "cpw_cross_section_sim": 194, "waveguides_sim_xsect": [194, 200], "xmons_direct_coupling_pyepr": 194, "pyepr_exampl": 194, "t_1": 194, "intermediate_processing_command": 194, "t1_estim": 194, "queu": 194, "lossi": 194, "coher": 194, "master": 194, "thesi": 194, "2023": 194, "focus": 195, "distinguish": 195, "snippet": 195, "refp": 195, "mandatori": [195, 196], "100um": 195, "port_2": 195, "port_2_corn": 195, "port_3": 195, "port_3_corn": 195, "multipurpos": 195, "airbridge_flyov": 195, "joint": 195, "parameter": [195, 196], "purpl": 195, "troubl": 195, "port_cplr0": 195, "port_cplr1": 195, "port_cplr2": 195, "revert": 195, "essenti": 195, "swissmonsimul": 195, "port_cplr0_corn": 195, "port_cplr1_corn": 195, "port_cplr2_corn": 195, "squid_port_squid_a": 195, "squid_port_squid_b": 195, "portion": 195, "variat": 195, "procedur": 195, "eas": 195, "arm_length_500": 195, "gap_sweep": 195, "ansys_execut": 196, "swissmon_simulation_output": 196, "dir_path": 196, "ironpython": 196, "gdsii": 196, "meta": 196, "occurr": 196, "incomplet": 196, "manner": 196, "dev": 196, "abil": 197, "until": 197, "guidanc": 197, "summari": 198, "parameteriz": 198, "primit": 198, "emb": 198, "onto": 198, "archiv": 198, "traceabl": 198, "thought": 198, "manipul": 199, "interpret": 199, "browser": 199, "low": 200, "7": 200, "newest": 200, "lightweight": 200, "klayoutmatthia": 200, "docintro": 200, "docrefer": 200, "docgrow": 200, "docetch": 200}, "objects": {"": [[1, 0, 0, "-", "kqcircuits"]], "kqcircuits": [[2, 0, 0, "-", "chips"], [27, 0, 0, "-", "defaults"], [28, 0, 0, "-", "elements"], [69, 0, 0, "-", "junctions"], [76, 0, 0, "-", "klayout_view"], [77, 0, 0, "-", "layer_cluster"], [78, 0, 0, "-", "layer_config"], [81, 0, 0, "-", "masks"], [86, 0, 0, "-", "pya_resolver"], [87, 0, 0, "-", "qubits"], [94, 0, 0, "-", "run"], [95, 0, 0, "-", "simulations"], [132, 0, 0, "-", "test_structures"], [142, 0, 0, "-", "util"]], "kqcircuits.chips": [[3, 0, 0, "-", "airbridge_crossings"], [4, 0, 0, "-", "airbridge_dc_test"], [5, 0, 0, "-", "chip"], [6, 0, 0, "-", "crossing_twoface"], [7, 0, 0, "-", "daisy_woven"], [8, 0, 0, "-", "dc_test"], [9, 0, 0, "-", "demo"], [10, 0, 0, "-", "demo_twoface"], [11, 0, 0, "-", "empty"], [12, 0, 0, "-", "junction_test"], [13, 0, 0, "-", "junction_test2"], [14, 0, 0, "-", "launchers"], [15, 0, 0, "-", "lithography_test"], [16, 0, 0, "-", "lithography_test_twoface"], [17, 0, 0, "-", "munch_qubits"], [18, 0, 0, "-", "quality_factor"], [19, 0, 0, "-", "quality_factor_twoface"], [20, 0, 0, "-", "sample_holder_test"], [21, 0, 0, "-", "shaping"], [22, 0, 0, "-", "simple"], [23, 0, 0, "-", "single_xmons"], [24, 0, 0, "-", "stripes"], [25, 0, 0, "-", "tsv_test"], [26, 0, 0, "-", "xmons_direct_coupling"]], "kqcircuits.chips.airbridge_crossings": [[3, 1, 1, "", "AirbridgeCrossings"]], "kqcircuits.chips.airbridge_crossings.AirbridgeCrossings": [[3, 2, 1, "", "build"]], "kqcircuits.chips.airbridge_dc_test": [[4, 1, 1, "", "AirbridgeDcTest"]], "kqcircuits.chips.airbridge_dc_test.AirbridgeDcTest": [[4, 2, 1, "", "build"]], "kqcircuits.chips.chip": [[5, 1, 1, "", "Chip"]], "kqcircuits.chips.chip.Chip": [[5, 3, 1, "", "LIBRARY_DESCRIPTION"], [5, 3, 1, "", "LIBRARY_NAME"], [5, 3, 1, "", "LIBRARY_PATH"], [5, 2, 1, "", "can_create_from_shape_impl"], [5, 2, 1, "", "display_text_impl"], [5, 2, 1, "", "get_box"], [5, 2, 1, "", "get_filter_regions"], [5, 2, 1, "", "get_ground_bump_locations"], [5, 2, 1, "", "get_ground_tsv_locations"], [5, 2, 1, "", "get_launcher_assignments"], [5, 2, 1, "", "insert_filtered_elements"], [5, 2, 1, "", "make_grid_locations"], [5, 2, 1, "", "merge_layout_layers"], [5, 2, 1, "", "merge_layout_layers_on_face"], [5, 2, 1, "", "parameters_from_shape_impl"], [5, 2, 1, "", "post_build"], [5, 2, 1, "", "produce_frame"], [5, 2, 1, "", "produce_ground_grid"], [5, 2, 1, "", "produce_ground_on_face_grid"], [5, 2, 1, "", "produce_junction_tests"], [5, 2, 1, "", "produce_launchers"], [5, 2, 1, "", "produce_n_launchers"], [5, 2, 1, "", "produce_opt_lit_tests"], [5, 2, 1, "", "produce_structures"], [5, 2, 1, "", "transformation_from_shape_impl"]], "kqcircuits.chips.crossing_twoface": [[6, 1, 1, "", "CrossingTwoface"]], "kqcircuits.chips.crossing_twoface.CrossingTwoface": [[6, 2, 1, "", "build"]], "kqcircuits.chips.daisy_woven": [[7, 1, 1, "", "DaisyWoven"]], "kqcircuits.chips.daisy_woven.DaisyWoven": [[7, 2, 1, "", "build"]], "kqcircuits.chips.dc_test": [[8, 1, 1, "", "DcTest"]], "kqcircuits.chips.dc_test.DcTest": [[8, 2, 1, "", "build"]], "kqcircuits.chips.demo": [[9, 1, 1, "", "Demo"]], "kqcircuits.chips.demo.Demo": [[9, 2, 1, "", "build"], [9, 2, 1, "", "produce_control_lines"], [9, 2, 1, "", "produce_coupler"], [9, 2, 1, "", "produce_couplers"], [9, 2, 1, "", "produce_driveline"], [9, 2, 1, "", "produce_fluxline"], [9, 2, 1, "", "produce_junction_tests"], [9, 2, 1, "", "produce_probeline"], [9, 2, 1, "", "produce_probelines"], [9, 2, 1, "", "produce_qubit"], [9, 2, 1, "", "produce_qubits"], [9, 2, 1, "", "produce_readout_structure"], [9, 2, 1, "", "produce_readout_structures"]], "kqcircuits.chips.demo_twoface": [[10, 1, 1, "", "DemoTwoface"]], "kqcircuits.chips.demo_twoface.DemoTwoface": [[10, 2, 1, "", "build"], [10, 2, 1, "", "produce_control_lines"], [10, 2, 1, "", "produce_coupler"], [10, 2, 1, "", "produce_couplers"], [10, 2, 1, "", "produce_driveline"], [10, 2, 1, "", "produce_fluxline"], [10, 2, 1, "", "produce_probeline"], [10, 2, 1, "", "produce_probelines"], [10, 2, 1, "", "produce_qubit"], [10, 2, 1, "", "produce_qubits"], [10, 2, 1, "", "produce_readout_structure"], [10, 2, 1, "", "produce_readout_structures"]], "kqcircuits.chips.empty": [[11, 1, 1, "", "Empty"]], "kqcircuits.chips.empty.Empty": [[11, 2, 1, "", "build"], [11, 2, 1, "", "make_empty_area"]], "kqcircuits.chips.junction_test": [[12, 1, 1, "", "JunctionTest"]], "kqcircuits.chips.junction_test.JunctionTest": [[12, 2, 1, "", "build"]], "kqcircuits.chips.junction_test2": [[13, 1, 1, "", "JunctionTest2"]], "kqcircuits.chips.junction_test2.JunctionTest2": [[13, 2, 1, "", "build"], [13, 2, 1, "", "coerce_parameters_impl"]], "kqcircuits.chips.launchers": [[14, 1, 1, "", "Launchers"]], "kqcircuits.chips.launchers.Launchers": [[14, 2, 1, "", "build"]], "kqcircuits.chips.lithography_test": [[15, 1, 1, "", "LithographyTest"]], "kqcircuits.chips.lithography_test.LithographyTest": [[15, 2, 1, "", "build"], [15, 2, 1, "", "create_pattern"]], "kqcircuits.chips.lithography_test_twoface": [[16, 1, 1, "", "LithographyTestTwoface"]], "kqcircuits.chips.lithography_test_twoface.LithographyTestTwoface": [[16, 2, 1, "", "build"], [16, 2, 1, "", "create_pattern"]], "kqcircuits.chips.munch_qubits": [[17, 1, 1, "", "MunchQubits"]], "kqcircuits.chips.munch_qubits.MunchQubits": [[17, 2, 1, "", "build"], [17, 2, 1, "", "produce_coupler"], [17, 2, 1, "", "produce_drivelines"], [17, 2, 1, "", "produce_probeline"], [17, 2, 1, "", "produce_qubits"], [17, 2, 1, "", "produce_readout_resonators"]], "kqcircuits.chips.quality_factor": [[18, 1, 1, "", "QualityFactor"]], "kqcircuits.chips.quality_factor.QualityFactor": [[18, 2, 1, "", "build"]], "kqcircuits.chips.quality_factor_twoface": [[19, 1, 1, "", "QualityFactorTwoface"]], "kqcircuits.chips.quality_factor_twoface.QualityFactorTwoface": [[19, 2, 1, "", "build"], [19, 2, 1, "", "produce_resonator"]], "kqcircuits.chips.sample_holder_test": [[20, 1, 1, "", "SampleHolderTest"]], "kqcircuits.chips.sample_holder_test.SampleHolderTest": [[20, 2, 1, "", "build"]], "kqcircuits.chips.shaping": [[21, 1, 1, "", "Shaping"]], "kqcircuits.chips.shaping.Shaping": [[21, 2, 1, "", "build"]], "kqcircuits.chips.simple": [[22, 1, 1, "", "Simple"]], "kqcircuits.chips.simple.Simple": [[22, 2, 1, "", "build"]], "kqcircuits.chips.single_xmons": [[23, 1, 1, "", "SingleXmons"]], "kqcircuits.chips.single_xmons.SingleXmons": [[23, 2, 1, "", "build"], [23, 3, 1, "", "launchers"], [23, 3, 1, "", "qubits_refpoints"]], "kqcircuits.chips.stripes": [[24, 1, 1, "", "Stripes"]], "kqcircuits.chips.stripes.Stripes": [[24, 2, 1, "", "build"]], "kqcircuits.chips.tsv_test": [[25, 1, 1, "", "TsvTest"]], "kqcircuits.chips.tsv_test.TsvTest": [[25, 2, 1, "", "build"], [25, 2, 1, "", "create_xsection"]], "kqcircuits.chips.xmons_direct_coupling": [[26, 1, 1, "", "XMonsDirectCoupling"]], "kqcircuits.chips.xmons_direct_coupling.XMonsDirectCoupling": [[26, 2, 1, "", "build"], [26, 2, 1, "", "produce_qubits"], [26, 2, 1, "", "produce_readout_resonator"]], "kqcircuits.elements": [[29, 0, 0, "-", "airbridge_connection"], [30, 0, 0, "-", "airbridges"], [34, 0, 0, "-", "capacitive_x_coupler"], [35, 0, 0, "-", "chip_frame"], [36, 0, 0, "-", "circular_capacitor"], [37, 0, 0, "-", "element"], [38, 0, 0, "-", "finger_capacitor_square"], [39, 0, 0, "-", "finger_capacitor_taper"], [40, 0, 0, "-", "flip_chip_connectors"], [44, 0, 0, "-", "fluxlines"], [48, 0, 0, "-", "hanger_resonator"], [49, 0, 0, "-", "launcher"], [50, 0, 0, "-", "launcher_dc"], [51, 0, 0, "-", "markers"], [55, 0, 0, "-", "meander"], [56, 0, 0, "-", "quarter_wave_cpw_resonator"], [57, 0, 0, "-", "smooth_capacitor"], [58, 0, 0, "-", "spiral_resonator_polygon"], [59, 0, 0, "-", "tsvs"], [63, 0, 0, "-", "waveguide_composite"], [64, 0, 0, "-", "waveguide_coplanar"], [65, 0, 0, "-", "waveguide_coplanar_curved"], [66, 0, 0, "-", "waveguide_coplanar_splitter"], [67, 0, 0, "-", "waveguide_coplanar_straight"], [68, 0, 0, "-", "waveguide_coplanar_taper"]], "kqcircuits.elements.airbridge_connection": [[29, 1, 1, "", "AirbridgeConnection"]], "kqcircuits.elements.airbridge_connection.AirbridgeConnection": [[29, 2, 1, "", "build"]], "kqcircuits.elements.airbridges": [[31, 0, 0, "-", "airbridge"], [32, 0, 0, "-", "airbridge_multi_face"], [33, 0, 0, "-", "airbridge_rectangular"]], "kqcircuits.elements.airbridges.airbridge": [[31, 1, 1, "", "Airbridge"]], "kqcircuits.elements.airbridges.airbridge.Airbridge": [[31, 2, 1, "", "create"], [31, 3, 1, "", "default_type"], [31, 2, 1, "", "transformation_from_shape_impl"]], "kqcircuits.elements.airbridges.airbridge_multi_face": [[32, 1, 1, "", "AirbridgeMultiFace"]], "kqcircuits.elements.airbridges.airbridge_multi_face.AirbridgeMultiFace": [[32, 2, 1, "", "build"], [32, 3, 1, "", "default_type"]], "kqcircuits.elements.airbridges.airbridge_rectangular": [[33, 1, 1, "", "AirbridgeRectangular"]], "kqcircuits.elements.airbridges.airbridge_rectangular.AirbridgeRectangular": [[33, 2, 1, "", "build"], [33, 3, 1, "", "default_type"]], "kqcircuits.elements.capacitive_x_coupler": [[34, 1, 1, "", "CapacitiveXCoupler"]], "kqcircuits.elements.capacitive_x_coupler.CapacitiveXCoupler": [[34, 2, 1, "", "build"], [34, 2, 1, "", "get_sim_ports"]], "kqcircuits.elements.chip_frame": [[35, 1, 1, "", "ChipFrame"]], "kqcircuits.elements.chip_frame.ChipFrame": [[35, 2, 1, "", "build"]], "kqcircuits.elements.circular_capacitor": [[36, 1, 1, "", "CircularCapacitor"]], "kqcircuits.elements.circular_capacitor.CircularCapacitor": [[36, 2, 1, "", "build"], [36, 2, 1, "", "get_sim_ports"]], "kqcircuits.elements.element": [[37, 1, 1, "", "Element"], [37, 4, 1, "", "get_refpoints"], [37, 4, 1, "", "insert_cell_into"], [37, 4, 1, "", "resolve_face"]], "kqcircuits.elements.element.Element": [[37, 3, 1, "", "LIBRARY_DESCRIPTION"], [37, 3, 1, "", "LIBRARY_NAME"], [37, 3, 1, "", "LIBRARY_PATH"], [37, 2, 1, "", "add_element"], [37, 2, 1, "", "add_port"], [37, 2, 1, "", "add_protection"], [37, 2, 1, "", "build"], [37, 2, 1, "", "copy_port"], [37, 2, 1, "", "create"], [37, 2, 1, "", "create_cell_from_shape"], [37, 2, 1, "", "create_subtype"], [37, 2, 1, "", "create_with_refpoints"], [37, 2, 1, "", "display_text_impl"], [37, 2, 1, "", "face"], [37, 2, 1, "", "face_changer_waveguides"], [37, 2, 1, "", "get_layer"], [37, 2, 1, "", "get_refpoints"], [37, 2, 1, "", "get_schema"], [37, 2, 1, "", "get_sim_ports"], [37, 2, 1, "", "insert_cell"], [37, 2, 1, "", "left_and_right_waveguides"], [37, 2, 1, "", "pcell_params_by_name"], [37, 2, 1, "", "post_build"], [37, 2, 1, "", "produce_impl"], [37, 2, 1, "", "raise_error_on_cell"], [37, 2, 1, "", "sync_parameters"]], "kqcircuits.elements.finger_capacitor_square": [[38, 1, 1, "", "FingerCapacitorSquare"]], "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare": [[38, 2, 1, "", "add_waveguides"], [38, 2, 1, "", "build"], [38, 2, 1, "", "can_create_from_shape_impl"], [38, 2, 1, "", "cut_region"], [38, 2, 1, "", "finger_area_length"], [38, 2, 1, "", "finger_area_width"], [38, 2, 1, "", "get_ground_region"], [38, 2, 1, "", "get_sim_ports"]], "kqcircuits.elements.finger_capacitor_taper": [[39, 1, 1, "", "FingerCapacitorTaper"]], "kqcircuits.elements.finger_capacitor_taper.FingerCapacitorTaper": [[39, 2, 1, "", "build"], [39, 2, 1, "", "can_create_from_shape_impl"]], "kqcircuits.elements.flip_chip_connectors": [[41, 0, 0, "-", "flip_chip_connector"], [42, 0, 0, "-", "flip_chip_connector_dc"], [43, 0, 0, "-", "flip_chip_connector_rf"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector": [[41, 1, 1, "", "FlipChipConnector"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector.FlipChipConnector": [[41, 2, 1, "", "create"], [41, 3, 1, "", "default_type"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc": [[42, 1, 1, "", "FlipChipConnectorDc"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc.FlipChipConnectorDc": [[42, 2, 1, "", "build"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf": [[43, 1, 1, "", "FlipChipConnectorRf"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf.FlipChipConnectorRf": [[43, 2, 1, "", "build"], [43, 2, 1, "", "get_sim_ports"]], "kqcircuits.elements.fluxlines": [[45, 0, 0, "-", "fluxline"], [46, 0, 0, "-", "fluxline_standard"], [47, 0, 0, "-", "fluxline_straight"]], "kqcircuits.elements.fluxlines.fluxline": [[45, 1, 1, "", "Fluxline"]], "kqcircuits.elements.fluxlines.fluxline.Fluxline": [[45, 2, 1, "", "coerce_parameters_impl"], [45, 2, 1, "", "create"], [45, 3, 1, "", "default_type"]], "kqcircuits.elements.fluxlines.fluxline_standard": [[46, 1, 1, "", "FluxlineStandard"]], "kqcircuits.elements.fluxlines.fluxline_standard.FluxlineStandard": [[46, 2, 1, "", "build"]], "kqcircuits.elements.fluxlines.fluxline_straight": [[47, 1, 1, "", "FluxlineStraight"]], "kqcircuits.elements.fluxlines.fluxline_straight.FluxlineStraight": [[47, 2, 1, "", "build"]], "kqcircuits.elements.hanger_resonator": [[48, 1, 1, "", "HangerResonator"]], "kqcircuits.elements.hanger_resonator.HangerResonator": [[48, 2, 1, "", "build"], [48, 2, 1, "", "get_sim_ports"]], "kqcircuits.elements.launcher": [[49, 1, 1, "", "Launcher"]], "kqcircuits.elements.launcher.Launcher": [[49, 2, 1, "", "build"]], "kqcircuits.elements.launcher_dc": [[50, 1, 1, "", "LauncherDC"]], "kqcircuits.elements.launcher_dc.LauncherDC": [[50, 2, 1, "", "build"]], "kqcircuits.elements.markers": [[52, 0, 0, "-", "marker"], [53, 0, 0, "-", "marker_standard"], [54, 0, 0, "-", "mask_marker_fc"]], "kqcircuits.elements.markers.marker": [[52, 1, 1, "", "Marker"]], "kqcircuits.elements.markers.marker.Marker": [[52, 2, 1, "", "create"], [52, 3, 1, "", "default_type"], [52, 2, 1, "", "get_marker_locations"], [52, 2, 1, "", "get_marker_region"], [52, 2, 1, "", "produce_geometry"]], "kqcircuits.elements.markers.marker_standard": [[53, 1, 1, "", "MarkerStandard"]], "kqcircuits.elements.markers.marker_standard.MarkerStandard": [[53, 2, 1, "", "build"]], "kqcircuits.elements.markers.mask_marker_fc": [[54, 1, 1, "", "MaskMarkerFc"]], "kqcircuits.elements.markers.mask_marker_fc.MaskMarkerFc": [[54, 2, 1, "", "build"], [54, 2, 1, "", "create_cross"], [54, 2, 1, "", "get_marker_locations"], [54, 2, 1, "", "get_marker_region"]], "kqcircuits.elements.meander": [[55, 1, 1, "", "Meander"]], "kqcircuits.elements.meander.Meander": [[55, 2, 1, "", "build"], [55, 2, 1, "", "can_create_from_shape_impl"], [55, 2, 1, "", "parameters_from_shape_impl"]], "kqcircuits.elements.quarter_wave_cpw_resonator": [[56, 1, 1, "", "QuarterWaveCpwResonator"]], "kqcircuits.elements.quarter_wave_cpw_resonator.QuarterWaveCpwResonator": [[56, 2, 1, "", "build"], [56, 2, 1, "", "get_sim_ports"]], "kqcircuits.elements.smooth_capacitor": [[57, 1, 1, "", "SmoothCapacitor"]], "kqcircuits.elements.smooth_capacitor.SmoothCapacitor": [[57, 2, 1, "", "build"], [57, 2, 1, "", "can_create_from_shape_impl"], [57, 2, 1, "", "get_sim_ports"]], "kqcircuits.elements.spiral_resonator_polygon": [[58, 1, 1, "", "SpiralResonatorPolygon"], [58, 4, 1, "", "rectangular_parameters"]], "kqcircuits.elements.spiral_resonator_polygon.SpiralResonatorPolygon": [[58, 2, 1, "", "build"]], "kqcircuits.elements.tsvs": [[60, 0, 0, "-", "tsv"], [61, 0, 0, "-", "tsv_ellipse"], [62, 0, 0, "-", "tsv_standard"]], "kqcircuits.elements.tsvs.tsv": [[60, 1, 1, "", "Tsv"]], "kqcircuits.elements.tsvs.tsv.Tsv": [[60, 2, 1, "", "create"], [60, 3, 1, "", "default_type"]], "kqcircuits.elements.tsvs.tsv_ellipse": [[61, 1, 1, "", "TsvEllipse"]], "kqcircuits.elements.tsvs.tsv_ellipse.TsvEllipse": [[61, 2, 1, "", "create_tsv_connector"], [61, 2, 1, "", "produce_impl"]], "kqcircuits.elements.tsvs.tsv_standard": [[62, 1, 1, "", "TsvStandard"]], "kqcircuits.elements.tsvs.tsv_standard.TsvStandard": [[62, 2, 1, "", "build"]], "kqcircuits.elements.waveguide_composite": [[63, 1, 1, "", "Node"], [63, 1, 1, "", "WaveguideComposite"], [63, 4, 1, "", "produce_fixed_length_bend"]], "kqcircuits.elements.waveguide_composite.Node": [[63, 3, 1, "", "align"], [63, 3, 1, "", "angle"], [63, 2, 1, "", "deserialize"], [63, 3, 1, "", "element"], [63, 3, 1, "", "inst_name"], [63, 3, 1, "", "length_before"], [63, 3, 1, "", "length_increment"], [63, 3, 1, "", "meander_direction"], [63, 2, 1, "", "nodes_from_string"], [63, 3, 1, "", "position"]], "kqcircuits.elements.waveguide_composite.WaveguideComposite": [[63, 2, 1, "", "build"], [63, 2, 1, "", "check_node_type"], [63, 2, 1, "", "coerce_parameters_impl"], [63, 2, 1, "", "create"], [63, 2, 1, "", "get_segment_cells"], [63, 2, 1, "", "get_segment_lengths"], [63, 2, 1, "", "produce_fixed_length_waveguide"], [63, 2, 1, "", "snap_point"]], "kqcircuits.elements.waveguide_coplanar": [[64, 1, 1, "", "WaveguideCoplanar"]], "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar": [[64, 2, 1, "", "build"], [64, 2, 1, "", "can_create_from_shape_impl"], [64, 2, 1, "", "get_corner_data"], [64, 2, 1, "", "is_continuous"], [64, 2, 1, "", "parameters_from_shape_impl"], [64, 2, 1, "", "produce_end_termination"], [64, 2, 1, "", "produce_waveguide"], [64, 2, 1, "", "transformation_from_shape_impl"]], "kqcircuits.elements.waveguide_coplanar_curved": [[65, 1, 1, "", "WaveguideCoplanarCurved"], [65, 4, 1, "", "arc"]], "kqcircuits.elements.waveguide_coplanar_curved.WaveguideCoplanarCurved": [[65, 2, 1, "", "build"], [65, 2, 1, "", "build_geometry"], [65, 2, 1, "", "coerce_parameters_impl"], [65, 2, 1, "", "create_curve_arcs"], [65, 2, 1, "", "produce_curve_termination"]], "kqcircuits.elements.waveguide_coplanar_splitter": [[66, 1, 1, "", "WaveguideCoplanarSplitter"], [66, 4, 1, "", "t_cross_parameters"]], "kqcircuits.elements.waveguide_coplanar_splitter.WaveguideCoplanarSplitter": [[66, 2, 1, "", "build"]], "kqcircuits.elements.waveguide_coplanar_straight": [[67, 1, 1, "", "WaveguideCoplanarStraight"]], "kqcircuits.elements.waveguide_coplanar_straight.WaveguideCoplanarStraight": [[67, 2, 1, "", "build"], [67, 2, 1, "", "build_geometry"]], "kqcircuits.elements.waveguide_coplanar_taper": [[68, 1, 1, "", "WaveguideCoplanarTaper"]], "kqcircuits.elements.waveguide_coplanar_taper.WaveguideCoplanarTaper": [[68, 2, 1, "", "build"]], "kqcircuits.junctions": [[70, 0, 0, "-", "junction"], [71, 0, 0, "-", "manhattan"], [72, 0, 0, "-", "manhattan_single_junction"], [73, 0, 0, "-", "no_squid"], [74, 0, 0, "-", "sim"], [75, 0, 0, "-", "squid"]], "kqcircuits.junctions.junction": [[70, 1, 1, "", "Junction"]], "kqcircuits.junctions.junction.Junction": [[70, 3, 1, "", "LIBRARY_DESCRIPTION"], [70, 3, 1, "", "LIBRARY_NAME"], [70, 3, 1, "", "LIBRARY_PATH"], [70, 2, 1, "", "coerce_parameters_impl"], [70, 2, 1, "", "create"], [70, 3, 1, "", "default_type"]], "kqcircuits.junctions.manhattan": [[71, 1, 1, "", "Manhattan"]], "kqcircuits.junctions.manhattan.Manhattan": [[71, 2, 1, "", "build"], [71, 2, 1, "", "produce_contact_pads"], [71, 2, 1, "", "produce_manhattan_squid"], [71, 2, 1, "", "produce_tp_large"], [71, 2, 1, "", "produce_tp_small"]], "kqcircuits.junctions.manhattan_single_junction": [[72, 1, 1, "", "ManhattanSingleJunction"]], "kqcircuits.junctions.manhattan_single_junction.ManhattanSingleJunction": [[72, 2, 1, "", "build"], [72, 2, 1, "", "produce_manhattan_junction"]], "kqcircuits.junctions.no_squid": [[73, 1, 1, "", "NoSquid"]], "kqcircuits.junctions.no_squid.NoSquid": [[73, 2, 1, "", "build"]], "kqcircuits.junctions.sim": [[74, 1, 1, "", "Sim"]], "kqcircuits.junctions.sim.Sim": [[74, 2, 1, "", "build"]], "kqcircuits.junctions.squid": [[75, 1, 1, "", "Squid"]], "kqcircuits.klayout_view": [[76, 1, 1, "", "KLayoutView"], [76, 6, 1, "", "MissingUILibraryException"], [76, 4, 1, "", "resolve_default_layer_info"]], "kqcircuits.klayout_view.KLayoutView": [[76, 5, 1, "", "active_cell"], [76, 2, 1, "", "add_default_layers"], [76, 5, 1, "", "cell_view"], [76, 2, 1, "", "clear_layers"], [76, 2, 1, "", "close"], [76, 2, 1, "", "create_top_cell"], [76, 2, 1, "", "export_all_layers_bitmap"], [76, 2, 1, "", "export_layers_bitmaps"], [76, 2, 1, "", "export_pcell_png"], [76, 2, 1, "", "focus"], [76, 2, 1, "", "get_active_cell"], [76, 2, 1, "", "get_active_cell_view"], [76, 2, 1, "", "get_active_layout"], [76, 2, 1, "", "get_pixels"], [76, 2, 1, "", "insert_cell"], [76, 5, 1, "", "layout"], [76, 3, 1, "", "layout_view"], [76, 2, 1, "", "show"], [76, 5, 1, "", "top_cell"]], "kqcircuits.layer_cluster": [[77, 1, 1, "", "LayerCluster"]], "kqcircuits.layer_cluster.LayerCluster": [[77, 2, 1, "", "all_layers"], [77, 3, 1, "", "extra_layers"], [77, 3, 1, "", "face_id"], [77, 3, 1, "", "main_layers"]], "kqcircuits.layer_config": [[79, 0, 0, "-", "default_layer_config"], [80, 0, 0, "-", "example_layer_config"]], "kqcircuits.masks": [[82, 0, 0, "-", "mask_export"], [83, 0, 0, "-", "mask_layout"], [84, 0, 0, "-", "mask_set"], [85, 0, 0, "-", "multi_face_mask_layout"]], "kqcircuits.masks.mask_export": [[82, 4, 1, "", "export_bitmaps"], [82, 4, 1, "", "export_chip"], [82, 4, 1, "", "export_designs"], [82, 4, 1, "", "export_docs"], [82, 4, 1, "", "export_junction_parameters"], [82, 4, 1, "", "export_mask"], [82, 4, 1, "", "export_mask_set"], [82, 4, 1, "", "export_masks_of_face"], [82, 4, 1, "", "get_mask_layout_full_name"]], "kqcircuits.masks.mask_layout": [[83, 1, 1, "", "MaskLayout"]], "kqcircuits.masks.mask_layout.MaskLayout": [[83, 2, 1, "", "add_chips_map"], [83, 3, 1, "", "added_chips"], [83, 3, 1, "", "align_to"], [83, 3, 1, "", "bbox_face_ids"], [83, 2, 1, "", "build"], [83, 3, 1, "", "chip_box_offset"], [83, 3, 1, "", "chip_copies"], [83, 3, 1, "", "chip_size"], [83, 3, 1, "", "chip_trans"], [83, 3, 1, "", "chips_map"], [83, 3, 1, "", "chips_map_legend"], [83, 3, 1, "", "chips_map_offset"], [83, 3, 1, "", "chips_placed_by_position_label"], [83, 3, 1, "", "covered_region_excluded_layers"], [83, 3, 1, "", "dice_width"], [83, 3, 1, "", "edge_clearance"], [83, 3, 1, "", "extra_chips"], [83, 3, 1, "", "extra_id"], [83, 2, 1, "", "face"], [83, 3, 1, "", "face_id"], [83, 2, 1, "", "insert_chip_copy_labels"], [83, 2, 1, "", "insert_chips"], [83, 3, 1, "", "layers_to_mask"], [83, 3, 1, "", "layout"], [83, 3, 1, "", "mask_export_density_layers"], [83, 3, 1, "", "mask_export_layers"], [83, 3, 1, "", "mask_marker_offset"], [83, 3, 1, "", "mask_markers_dict"], [83, 3, 1, "", "mask_name_box_margin"], [83, 3, 1, "", "mask_name_offset"], [83, 3, 1, "", "mask_name_scale"], [83, 3, 1, "", "mask_text_scale"], [83, 3, 1, "", "mirror_labels"], [83, 3, 1, "", "name"], [83, 2, 1, "", "overwrite_chips_by_position_label"], [83, 2, 1, "", "position_label_to_two_coordinates"], [83, 3, 1, "", "remove_chips"], [83, 3, 1, "", "submasks"], [83, 3, 1, "", "text_margin"], [83, 3, 1, "", "top_cell"], [83, 2, 1, "", "two_coordinates_to_position_label"], [83, 3, 1, "", "version"], [83, 3, 1, "", "wafer_bottom_flat_length"], [83, 3, 1, "", "wafer_center"], [83, 3, 1, "", "wafer_rad"], [83, 3, 1, "", "wafer_top_flat_length"], [83, 3, 1, "", "with_grid"]], "kqcircuits.masks.mask_set": [[84, 1, 1, "", "MaskSet"]], "kqcircuits.masks.mask_set.MaskSet": [[84, 2, 1, "", "add_chip"], [84, 2, 1, "", "add_mask_layout"], [84, 2, 1, "", "add_multi_face_mask_layout"], [84, 2, 1, "", "build"], [84, 2, 1, "", "chips_map_from_box_map"], [84, 3, 1, "", "chips_map_legend"], [84, 2, 1, "", "export"], [84, 3, 1, "", "export_drc"], [84, 3, 1, "", "export_path"], [84, 3, 1, "", "layout"], [84, 3, 1, "", "mask_export_layers"], [84, 3, 1, "", "mask_layouts"], [84, 3, 1, "", "name"], [84, 3, 1, "", "used_chips"], [84, 3, 1, "", "version"], [84, 3, 1, "", "with_grid"]], "kqcircuits.masks.multi_face_mask_layout": [[85, 1, 1, "", "MultiFaceMaskLayout"]], "kqcircuits.masks.multi_face_mask_layout.MultiFaceMaskLayout": [[85, 2, 1, "", "add_chips_map"], [85, 3, 1, "", "face_ids"], [85, 3, 1, "", "mask_layouts"]], "kqcircuits.pya_resolver": [[86, 4, 1, "", "is_standalone_session"], [86, 4, 1, "", "klayout_executable_command"]], "kqcircuits.qubits": [[88, 0, 0, "-", "circular_transmon_single_island"], [89, 0, 0, "-", "concentric_transmon"], [90, 0, 0, "-", "double_pads"], [91, 0, 0, "-", "double_pads_splines"], [92, 0, 0, "-", "qubit"], [93, 0, 0, "-", "swissmon"]], "kqcircuits.qubits.circular_transmon_single_island": [[88, 1, 1, "", "CircularTransmonSingleIsland"]], "kqcircuits.qubits.circular_transmon_single_island.CircularTransmonSingleIsland": [[88, 2, 1, "", "build"], [88, 2, 1, "", "get_sim_ports"]], "kqcircuits.qubits.concentric_transmon": [[89, 1, 1, "", "ConcentricTransmon"]], "kqcircuits.qubits.concentric_transmon.ConcentricTransmon": [[89, 2, 1, "", "build"], [89, 2, 1, "", "get_sim_ports"]], "kqcircuits.qubits.double_pads": [[90, 1, 1, "", "DoublePads"]], "kqcircuits.qubits.double_pads.DoublePads": [[90, 2, 1, "", "build"], [90, 2, 1, "", "get_sim_ports"]], "kqcircuits.qubits.double_pads_splines": [[91, 1, 1, "", "DoublePadsSplines"]], "kqcircuits.qubits.qubit": [[92, 1, 1, "", "Qubit"]], "kqcircuits.qubits.qubit.Qubit": [[92, 3, 1, "", "LIBRARY_DESCRIPTION"], [92, 3, 1, "", "LIBRARY_NAME"], [92, 3, 1, "", "LIBRARY_PATH"], [92, 2, 1, "", "coerce_parameters_impl"], [92, 2, 1, "", "produce_fluxline"], [92, 2, 1, "", "produce_squid"]], "kqcircuits.qubits.swissmon": [[93, 1, 1, "", "Swissmon"]], "kqcircuits.qubits.swissmon.Swissmon": [[93, 2, 1, "", "build"], [93, 2, 1, "", "get_sim_ports"]], "kqcircuits.run": [[94, 4, 1, "", "argument_parser"], [94, 4, 1, "", "run"], [94, 4, 1, "", "run_kqc"]], "kqcircuits.simulations": [[96, 0, 0, "-", "airbridges_sim"], [97, 0, 0, "-", "cross_section_simulation"], [98, 0, 0, "-", "empty_simulation"], [103, 0, 0, "-", "export"], [123, 0, 0, "-", "partition_region"], [124, 0, 0, "-", "port"], [125, 0, 0, "-", "post_process"], [126, 0, 0, "-", "simulation"], [127, 0, 0, "-", "single_element_simulation"], [128, 0, 0, "-", "single_xmons_full_chip_sim"], [129, 0, 0, "-", "waveguides_sim"], [130, 0, 0, "-", "xmons_direct_coupling_full_chip_sim"], [131, 0, 0, "-", "xmons_direct_coupling_sim"]], "kqcircuits.simulations.airbridges_sim": [[96, 1, 1, "", "AirbridgesSim"]], "kqcircuits.simulations.airbridges_sim.AirbridgesSim": [[96, 2, 1, "", "build"]], "kqcircuits.simulations.cross_section_simulation": [[97, 1, 1, "", "CrossSectionSimulation"]], "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation": [[97, 3, 1, "", "LIBRARY_NAME"], [97, 2, 1, "", "build"], [97, 2, 1, "", "get_dict_by_layers"], [97, 2, 1, "", "get_layers"], [97, 2, 1, "", "get_parameters"], [97, 2, 1, "", "get_schema"], [97, 2, 1, "", "get_sim_layer"], [97, 2, 1, "", "get_simulation_data"], [97, 2, 1, "", "process_layers"], [97, 2, 1, "", "register_cell_layers_as_sim_layers"], [97, 2, 1, "", "set_permittivity"]], "kqcircuits.simulations.empty_simulation": [[98, 1, 1, "", "EmptySimulation"]], "kqcircuits.simulations.empty_simulation.EmptySimulation": [[98, 2, 1, "", "build"]], "kqcircuits.simulations.epr": [[100, 0, 0, "-", "example"], [101, 0, 0, "-", "swissmon"], [102, 0, 0, "-", "utils"]], "kqcircuits.simulations.epr.example": [[100, 4, 1, "", "correction_cuts"], [100, 4, 1, "", "extract_from"], [100, 4, 1, "", "partition_regions"]], "kqcircuits.simulations.epr.swissmon": [[101, 4, 1, "", "correction_cuts"], [101, 4, 1, "", "extract_swissmon_from"], [101, 4, 1, "", "partition_regions"]], "kqcircuits.simulations.epr.utils": [[102, 4, 1, "", "extract_child_simulation"]], "kqcircuits.simulations.export": [[104, 0, 0, "-", "ansys"], [107, 0, 0, "-", "elmer"], [110, 0, 0, "-", "export_and_run"], [111, 0, 0, "-", "export_singularity"], [112, 0, 0, "-", "remote_export_and_run"], [113, 0, 0, "-", "simulation_export"], [114, 0, 0, "-", "simulation_validate"], [115, 0, 0, "-", "solution"], [116, 0, 0, "-", "sonnet"], [119, 0, 0, "-", "util"], [120, 0, 0, "-", "xsection"]], "kqcircuits.simulations.export.ansys": [[105, 0, 0, "-", "ansys_export"], [106, 0, 0, "-", "ansys_solution"]], "kqcircuits.simulations.export.ansys.ansys_export": [[105, 4, 1, "", "export_ansys"], [105, 4, 1, "", "export_ansys_bat"], [105, 4, 1, "", "export_ansys_json"]], "kqcircuits.simulations.export.ansys.ansys_solution": [[106, 1, 1, "", "AnsysCrossSectionSolution"], [106, 1, 1, "", "AnsysCurrentSolution"], [106, 1, 1, "", "AnsysEigenmodeSolution"], [106, 1, 1, "", "AnsysHfssSolution"], [106, 1, 1, "", "AnsysQ3dSolution"], [106, 1, 1, "", "AnsysSolution"], [106, 1, 1, "", "AnsysVoltageSolution"], [106, 4, 1, "", "get_ansys_solution"]], "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCrossSectionSolution": [[106, 3, 1, "", "ansys_tool"], [106, 3, 1, "", "frequency"], [106, 2, 1, "", "get_solution_data"], [106, 3, 1, "", "integrate_energies"], [106, 3, 1, "", "percent_error"]], "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCurrentSolution": [[106, 3, 1, "", "ansys_tool"], [106, 3, 1, "", "frequency"], [106, 2, 1, "", "get_solution_data"], [106, 3, 1, "", "integrate_energies"], [106, 3, 1, "", "integrate_magnetic_flux"], [106, 3, 1, "", "max_delta_e"]], "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution": [[106, 3, 1, "", "ansys_tool"], [106, 2, 1, "", "get_solution_data"], [106, 3, 1, "", "integrate_energies"], [106, 3, 1, "", "integrate_magnetic_flux"], [106, 3, 1, "", "max_delta_f"], [106, 3, 1, "", "min_frequency"], [106, 3, 1, "", "n_modes"]], "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution": [[106, 3, 1, "", "ansys_tool"], [106, 3, 1, "", "capacitance_export"], [106, 3, 1, "", "frequency"], [106, 2, 1, "", "get_solution_data"], [106, 3, 1, "", "integrate_energies"], [106, 3, 1, "", "integrate_magnetic_flux"], [106, 3, 1, "", "max_delta_s"], [106, 3, 1, "", "sweep_count"], [106, 3, 1, "", "sweep_enabled"], [106, 3, 1, "", "sweep_end"], [106, 3, 1, "", "sweep_start"], [106, 3, 1, "", "sweep_type"]], "kqcircuits.simulations.export.ansys.ansys_solution.AnsysQ3dSolution": [[106, 3, 1, "", "ansys_tool"], [106, 3, 1, "", "frequency"], [106, 2, 1, "", "get_solution_data"], [106, 3, 1, "", "percent_error"]], "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution": [[106, 3, 1, "", "ansys_project_template"], [106, 3, 1, "", "ansys_tool"], [106, 3, 1, "", "frequency_units"], [106, 2, 1, "", "get_solution_data"], [106, 3, 1, "", "maximum_passes"], [106, 3, 1, "", "mesh_size"], [106, 3, 1, "", "minimum_converged_passes"], [106, 3, 1, "", "minimum_passes"], [106, 3, 1, "", "percent_refinement"], [106, 3, 1, "", "simulation_flags"]], "kqcircuits.simulations.export.ansys.ansys_solution.AnsysVoltageSolution": [[106, 3, 1, "", "ansys_tool"], [106, 3, 1, "", "frequency"], [106, 2, 1, "", "get_solution_data"], [106, 3, 1, "", "integrate_energies"], [106, 3, 1, "", "integrate_magnetic_flux"], [106, 3, 1, "", "max_delta_e"]], "kqcircuits.simulations.export.elmer": [[108, 0, 0, "-", "elmer_export"], [109, 0, 0, "-", "elmer_solution"]], "kqcircuits.simulations.export.elmer.elmer_export": [[108, 4, 1, "", "export_elmer"], [108, 4, 1, "", "export_elmer_json"], [108, 4, 1, "", "export_elmer_script"]], "kqcircuits.simulations.export.elmer.elmer_solution": [[109, 1, 1, "", "ElmerCapacitanceSolution"], [109, 1, 1, "", "ElmerCrossSectionSolution"], [109, 1, 1, "", "ElmerEPR3DSolution"], [109, 1, 1, "", "ElmerSolution"], [109, 1, 1, "", "ElmerVectorHelmholtzSolution"], [109, 4, 1, "", "get_elmer_solution"]], "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCapacitanceSolution": [[109, 3, 1, "", "convergence_tolerance"], [109, 3, 1, "", "integrate_energies"], [109, 3, 1, "", "linear_system_method"], [109, 3, 1, "", "linear_system_preconditioning"], [109, 3, 1, "", "max_iterations"], [109, 3, 1, "", "p_element_order"], [109, 3, 1, "", "tool"]], "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution": [[109, 3, 1, "", "boundary_conditions"], [109, 3, 1, "", "convergence_tolerance"], [109, 3, 1, "", "integrate_energies"], [109, 3, 1, "", "linear_system_method"], [109, 3, 1, "", "linear_system_preconditioning"], [109, 3, 1, "", "max_iterations"], [109, 3, 1, "", "p_element_order"], [109, 3, 1, "", "run_inductance_sim"], [109, 3, 1, "", "tool"]], "kqcircuits.simulations.export.elmer.elmer_solution.ElmerEPR3DSolution": [[109, 3, 1, "", "convergence_tolerance"], [109, 3, 1, "", "linear_system_method"], [109, 3, 1, "", "linear_system_preconditioning"], [109, 3, 1, "", "max_iterations"], [109, 3, 1, "", "p_element_order"], [109, 3, 1, "", "tool"]], "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution": [[109, 2, 1, "", "get_solution_data"], [109, 3, 1, "", "is_axisymmetric"], [109, 3, 1, "", "max_error_scale"], [109, 3, 1, "", "max_outlier_fraction"], [109, 3, 1, "", "maximum_passes"], [109, 3, 1, "", "mesh_levels"], [109, 3, 1, "", "mesh_size"], [109, 3, 1, "", "minimum_passes"], [109, 3, 1, "", "percent_error"], [109, 3, 1, "", "tool"], [109, 3, 1, "", "vtu_output"]], "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution": [[109, 3, 1, "", "conductivity"], [109, 3, 1, "", "convergence_tolerance"], [109, 3, 1, "", "frequency"], [109, 3, 1, "", "frequency_batch"], [109, 3, 1, "", "london_penetration_depth"], [109, 3, 1, "", "max_delta_s"], [109, 3, 1, "", "max_iterations"], [109, 3, 1, "", "nested_iteration"], [109, 3, 1, "", "quadratic_approximation"], [109, 3, 1, "", "second_kind_basis"], [109, 3, 1, "", "sweep_type"], [109, 3, 1, "", "tool"], [109, 3, 1, "", "use_av"]], "kqcircuits.simulations.export.export_and_run": [[110, 4, 1, "", "export_and_run"], [110, 4, 1, "", "run_export_script"], [110, 4, 1, "", "run_simulations"]], "kqcircuits.simulations.export.export_singularity": [[111, 4, 1, "", "export_singularity"]], "kqcircuits.simulations.export.remote_export_and_run": [[112, 4, 1, "", "remote_export_and_run"], [112, 4, 1, "", "remote_run_only"]], "kqcircuits.simulations.export.simulation_export": [[113, 4, 1, "", "copy_content_into_directory"], [113, 4, 1, "", "cross_combine"], [113, 4, 1, "", "cross_sweep_simulation"], [113, 4, 1, "", "cross_sweep_solution"], [113, 4, 1, "", "export_simulation_json"], [113, 4, 1, "", "export_simulation_oas"], [113, 4, 1, "", "get_combined_parameters"], [113, 4, 1, "", "get_post_process_command_lines"], [113, 4, 1, "", "sweep_simulation"], [113, 4, 1, "", "sweep_solution"]], "kqcircuits.simulations.export.simulation_validate": [[114, 6, 1, "", "ValidateSimError"], [114, 4, 1, "", "flux_integration_layer_exists_if_needed"], [114, 4, 1, "", "get_port_names"], [114, 4, 1, "", "has_edgeport_when_forbidden"], [114, 4, 1, "", "has_no_ports_when_required"], [114, 4, 1, "", "simulation_and_solution_types_match"], [114, 4, 1, "", "validate_simulation"]], "kqcircuits.simulations.export.solution": [[115, 1, 1, "", "Solution"]], "kqcircuits.simulations.export.solution.Solution": [[115, 2, 1, "", "get_parameters"], [115, 3, 1, "", "name"]], "kqcircuits.simulations.export.sonnet": [[117, 0, 0, "-", "parser"], [118, 0, 0, "-", "sonnet_export"]], "kqcircuits.simulations.export.sonnet.parser": [[117, 4, 1, "", "apply_template"], [117, 4, 1, "", "box"], [117, 4, 1, "", "control"], [117, 4, 1, "", "polygon_head"], [117, 4, 1, "", "polygons"], [117, 4, 1, "", "port"], [117, 4, 1, "", "refplane"], [117, 4, 1, "", "refplanes"], [117, 4, 1, "", "symmetry"], [117, 4, 1, "", "via"]], "kqcircuits.simulations.export.sonnet.sonnet_export": [[118, 4, 1, "", "export_sonnet"], [118, 4, 1, "", "export_sonnet_son"], [118, 4, 1, "", "poly_and_edge_indices"]], "kqcircuits.simulations.export.util": [[119, 4, 1, "", "export_layers"], [119, 4, 1, "", "find_edge_from_point_in_cell"], [119, 4, 1, "", "find_edge_from_point_in_polygons"], [119, 4, 1, "", "get_enclosing_polygon"]], "kqcircuits.simulations.export.xsection": [[121, 0, 0, "-", "epr_correction_export"], [122, 0, 0, "-", "xsection_export"]], "kqcircuits.simulations.export.xsection.epr_correction_export": [[121, 4, 1, "", "get_epr_correction_elmer_solution"], [121, 4, 1, "", "get_epr_correction_simulations"]], "kqcircuits.simulations.export.xsection.xsection_export": [[122, 4, 1, "", "create_xsections_from_simulations"], [122, 4, 1, "", "find_layer_by_name"], [122, 4, 1, "", "free_layer_slots"], [122, 4, 1, "", "separate_signal_layer_shapes"], [122, 4, 1, "", "visualise_xsection_cut_on_original_layout"], [122, 4, 1, "", "xsection_call"]], "kqcircuits.simulations.partition_region": [[123, 1, 1, "", "PartitionRegion"], [123, 4, 1, "", "get_list_of_two"]], "kqcircuits.simulations.partition_region.PartitionRegion": [[123, 2, 1, "", "limit_box"], [123, 2, 1, "", "limit_face"]], "kqcircuits.simulations.port": [[124, 1, 1, "", "EdgePort"], [124, 1, 1, "", "InternalPort"], [124, 1, 1, "", "Port"]], "kqcircuits.simulations.port.InternalPort": [[124, 2, 1, "", "get_etch_polygon"]], "kqcircuits.simulations.port.Port": [[124, 2, 1, "", "as_dict"]], "kqcircuits.simulations.post_process": [[125, 1, 1, "", "PostProcess"]], "kqcircuits.simulations.post_process.PostProcess": [[125, 2, 1, "", "get_command_line"]], "kqcircuits.simulations.simulation": [[126, 1, 1, "", "Simulation"], [126, 4, 1, "", "get_simulation_layer_by_name"], [126, 4, 1, "", "to_1d_list"]], "kqcircuits.simulations.simulation.Simulation": [[126, 3, 1, "", "LIBRARY_NAME"], [126, 2, 1, "", "add_element"], [126, 2, 1, "", "build"], [126, 2, 1, "", "create_simulation_layers"], [126, 2, 1, "", "delete_instances"], [126, 2, 1, "", "etched_line"], [126, 2, 1, "", "face"], [126, 2, 1, "", "face_stack_list_of_lists"], [126, 2, 1, "", "face_z_levels"], [126, 2, 1, "", "from_cell"], [126, 2, 1, "", "get_layer"], [126, 2, 1, "", "get_layers"], [126, 2, 1, "", "get_parameters"], [126, 2, 1, "", "get_partition_regions"], [126, 2, 1, "", "get_port_data"], [126, 2, 1, "", "get_refpoints"], [126, 2, 1, "", "get_schema"], [126, 2, 1, "", "get_simulation_data"], [126, 2, 1, "", "ground_grid_region"], [126, 2, 1, "", "insert_cell"], [126, 2, 1, "", "insert_layer"], [126, 2, 1, "", "insert_layers_between_faces"], [126, 2, 1, "", "insert_stacked_up_layers"], [126, 2, 1, "", "ith_value"], [126, 2, 1, "", "pcell_params_by_name"], [126, 3, 1, "", "ports"], [126, 2, 1, "", "produce_layers"], [126, 2, 1, "", "produce_waveguide_to_port"], [126, 2, 1, "", "region_from_layer"], [126, 2, 1, "", "simplified_region"], [126, 2, 1, "", "visualise_region"]], "kqcircuits.simulations.single_element_simulation": [[127, 4, 1, "", "get_single_element_sim_class"]], "kqcircuits.simulations.single_xmons_full_chip_sim": [[128, 1, 1, "", "SingleXmonsFullChipSim"]], "kqcircuits.simulations.single_xmons_full_chip_sim.SingleXmonsFullChipSim": [[128, 2, 1, "", "build"]], "kqcircuits.simulations.waveguides_sim": [[129, 1, 1, "", "WaveGuidesSim"]], "kqcircuits.simulations.waveguides_sim.WaveGuidesSim": [[129, 2, 1, "", "build"], [129, 2, 1, "", "produce_ground_bumps"], [129, 2, 1, "", "produce_guides"]], "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim": [[130, 1, 1, "", "XMonsDirectCouplingFullChipSim"]], "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim": [[130, 2, 1, "", "build"], [130, 2, 1, "", "produce_launcher"], [130, 2, 1, "", "produce_launchers_SMA8"], [130, 2, 1, "", "produce_qubit"], [130, 2, 1, "", "produce_readout_resonator"], [130, 2, 1, "", "produce_waveguide"]], "kqcircuits.simulations.xmons_direct_coupling_sim": [[131, 1, 1, "", "XMonsDirectCouplingSim"]], "kqcircuits.simulations.xmons_direct_coupling_sim.XMonsDirectCouplingSim": [[131, 2, 1, "", "build"], [131, 2, 1, "", "produce_qubits"]], "kqcircuits.test_structures": [[133, 0, 0, "-", "airbridge_dc"], [134, 0, 0, "-", "cross_test"], [135, 0, 0, "-", "junction_test_pads"], [138, 0, 0, "-", "stripes_test"], [139, 0, 0, "-", "stripes_test_increasing_width"], [140, 0, 0, "-", "test_structure"], [141, 0, 0, "-", "tsv_test_pattern"]], "kqcircuits.test_structures.airbridge_dc": [[133, 1, 1, "", "AirbridgeDC"]], "kqcircuits.test_structures.airbridge_dc.AirbridgeDC": [[133, 2, 1, "", "build"]], "kqcircuits.test_structures.cross_test": [[134, 1, 1, "", "CrossTest"]], "kqcircuits.test_structures.cross_test.CrossTest": [[134, 2, 1, "", "build"]], "kqcircuits.test_structures.junction_test_pads": [[136, 0, 0, "-", "junction_test_pads"], [137, 0, 0, "-", "junction_test_pads_simple"]], "kqcircuits.test_structures.junction_test_pads.junction_test_pads": [[136, 1, 1, "", "JunctionTestPads"]], "kqcircuits.test_structures.junction_test_pads.junction_test_pads.JunctionTestPads": [[136, 2, 1, "", "coerce_parameters_impl"], [136, 2, 1, "", "create"], [136, 3, 1, "", "default_type"], [136, 2, 1, "", "produce_squid"]], "kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple": [[137, 1, 1, "", "JunctionTestPadsSimple"]], "kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple.JunctionTestPadsSimple": [[137, 2, 1, "", "build"]], "kqcircuits.test_structures.stripes_test": [[138, 1, 1, "", "StripesTest"]], "kqcircuits.test_structures.stripes_test.StripesTest": [[138, 2, 1, "", "build"]], "kqcircuits.test_structures.stripes_test_increasing_width": [[139, 1, 1, "", "StripesTestIncreasingWidth"]], "kqcircuits.test_structures.stripes_test_increasing_width.StripesTestIncreasingWidth": [[139, 2, 1, "", "build"]], "kqcircuits.test_structures.test_structure": [[140, 1, 1, "", "TestStructure"]], "kqcircuits.test_structures.test_structure.TestStructure": [[140, 3, 1, "", "LIBRARY_DESCRIPTION"], [140, 3, 1, "", "LIBRARY_NAME"], [140, 3, 1, "", "LIBRARY_PATH"], [140, 2, 1, "", "produce_etched_region"], [140, 2, 1, "", "produce_four_point_pads"], [140, 2, 1, "", "produce_pad"]], "kqcircuits.test_structures.tsv_test_pattern": [[141, 1, 1, "", "TsvTestPattern"]], "kqcircuits.test_structures.tsv_test_pattern.TsvTestPattern": [[141, 2, 1, "", "build"]], "kqcircuits.util": [[143, 0, 0, "-", "area"], [144, 0, 0, "-", "count_instances"], [145, 0, 0, "-", "coupler_lib"], [146, 0, 0, "-", "deep_delete"], [147, 0, 0, "-", "defaults_helper"], [148, 0, 0, "-", "dependencies"], [149, 0, 0, "-", "edit_node_plugin"], [150, 0, 0, "-", "export_helper"], [151, 0, 0, "-", "geometry_helper"], [152, 0, 0, "-", "geometry_json_encoder"], [153, 0, 0, "-", "groundgrid"], [154, 0, 0, "-", "gui_helper"], [155, 0, 0, "-", "import_helper"], [156, 0, 0, "-", "label"], [157, 0, 0, "-", "label_polygons"], [158, 0, 0, "-", "layout_to_code"], [159, 0, 0, "-", "library_helper"], [160, 0, 0, "-", "log_router"], [161, 0, 0, "-", "merge"], [162, 0, 0, "-", "netlist_extraction"], [163, 0, 0, "-", "netlist_graph"], [164, 0, 0, "-", "parameters"], [165, 0, 0, "-", "plugin_startup"], [166, 0, 0, "-", "refpoints"], [167, 0, 0, "-", "replace_junctions"], [168, 0, 0, "-", "symmetric_polygons"]], "kqcircuits.util.area": [[143, 1, 1, "", "AreaReceiver"], [143, 4, 1, "", "get_area_and_density"]], "kqcircuits.util.area.AreaReceiver": [[143, 2, 1, "", "put"]], "kqcircuits.util.count_instances": [[144, 4, 1, "", "count_instances_in_cell"]], "kqcircuits.util.coupler_lib": [[145, 4, 1, "", "cap_params"]], "kqcircuits.util.deep_delete": [[146, 4, 1, "", "deep_delete_all"], [146, 4, 1, "", "deep_delete_pcells"]], "kqcircuits.util.defaults_helper": [[147, 4, 1, "", "find_ansys_executable"]], "kqcircuits.util.dependencies": [[148, 4, 1, "", "install_kqc_gui_dependencies"]], "kqcircuits.util.edit_node_plugin": [[149, 1, 1, "", "EditNodePlugin"], [149, 1, 1, "", "EditNodePluginFactory"]], "kqcircuits.util.edit_node_plugin.EditNodePlugin": [[149, 2, 1, "", "activated"], [149, 2, 1, "", "create_dialog"], [149, 2, 1, "", "deactivated"], [149, 2, 1, "", "deselect"], [149, 2, 1, "", "has_tracking_position"], [149, 2, 1, "", "mouse_click_event"], [149, 2, 1, "", "mouse_moved_event"], [149, 2, 1, "", "select"], [149, 2, 1, "", "tracking_position"], [149, 2, 1, "", "update"], [149, 2, 1, "", "update_form_from_node"], [149, 2, 1, "", "update_node_from_form"]], "kqcircuits.util.edit_node_plugin.EditNodePluginFactory": [[149, 2, 1, "", "create_plugin"]], "kqcircuits.util.export_helper": [[150, 4, 1, "", "create_or_empty_tmp_directory"], [150, 4, 1, "", "export_drc_report"], [150, 4, 1, "", "generate_probepoints_from_file"], [150, 4, 1, "", "generate_probepoints_json"], [150, 4, 1, "", "get_active_or_new_layout"], [150, 4, 1, "", "get_klayout_version"], [150, 4, 1, "", "get_simulation_directory"], [150, 4, 1, "", "open_with_klayout_or_default_application"], [150, 4, 1, "", "write_commit_reference_file"], [150, 4, 1, "", "write_export_machine_versions_file"]], "kqcircuits.util.geometry_helper": [[151, 4, 1, "", "arc_points"], [151, 4, 1, "", "bezier_points"], [151, 4, 1, "", "bspline_points"], [151, 4, 1, "", "circle_polygon"], [151, 4, 1, "", "get_angle"], [151, 4, 1, "", "get_cell_path_length"], [151, 4, 1, "", "get_direction"], [151, 4, 1, "", "get_object_path_length"], [151, 4, 1, "", "is_clockwise"], [151, 4, 1, "", "merge_points_and_match_on_edges"], [151, 4, 1, "", "point_shift_along_vector"], [151, 4, 1, "", "region_with_merged_points"], [151, 4, 1, "", "region_with_merged_polygons"], [151, 4, 1, "", "simple_region"], [151, 4, 1, "", "vector_length_and_direction"]], "kqcircuits.util.geometry_json_encoder": [[152, 1, 1, "", "GeometryJsonDecoder"], [152, 1, 1, "", "GeometryJsonEncoder"], [152, 4, 1, "", "decode_dict_as_python_obj"], [152, 4, 1, "", "encode_python_obj_as_dict"]], "kqcircuits.util.geometry_json_encoder.GeometryJsonEncoder": [[152, 2, 1, "", "default"]], "kqcircuits.util.groundgrid": [[153, 4, 1, "", "make_grid"]], "kqcircuits.util.gui_helper": [[154, 4, 1, "", "get_all_node_elements"], [154, 4, 1, "", "get_nodes_near_position"], [154, 4, 1, "", "get_valid_node_elements"], [154, 4, 1, "", "node_from_text"], [154, 4, 1, "", "node_to_text"], [154, 4, 1, "", "replace_node"]], "kqcircuits.util.import_helper": [[155, 4, 1, "", "module_from_file"]], "kqcircuits.util.label": [[156, 1, 1, "", "LabelOrigin"], [156, 4, 1, "", "produce_label"]], "kqcircuits.util.label.LabelOrigin": [[156, 3, 1, "", "BOTTOMLEFT"], [156, 3, 1, "", "BOTTOMRIGHT"], [156, 3, 1, "", "TOPLEFT"], [156, 3, 1, "", "TOPRIGHT"]], "kqcircuits.util.label_polygons": [[157, 4, 1, "", "get_text_polygon"], [157, 4, 1, "", "load_font_polygons"]], "kqcircuits.util.layout_to_code": [[158, 4, 1, "", "convert_cells_to_code"], [158, 4, 1, "", "extract_pcell_data_from_views"], [158, 4, 1, "", "get_node_params"], [158, 4, 1, "", "restore_pcells_to_views"]], "kqcircuits.util.library_helper": [[159, 4, 1, "", "delete_all_libraries"], [159, 4, 1, "", "delete_library"], [159, 4, 1, "", "element_by_class_name"], [159, 4, 1, "", "get_library_paths"], [159, 4, 1, "", "load_libraries"], [159, 4, 1, "", "to_library_name"], [159, 4, 1, "", "to_module_name"]], "kqcircuits.util.log_router": [[160, 4, 1, "", "route_log"]], "kqcircuits.util.merge": [[161, 4, 1, "", "convert_child_instances_to_static"], [161, 4, 1, "", "merge_layers"], [161, 4, 1, "", "merge_layout_layers_on_face"]], "kqcircuits.util.netlist_extraction": [[162, 4, 1, "", "export_cell_netlist"], [162, 4, 1, "", "extract_circuits"], [162, 4, 1, "", "extract_nets"]], "kqcircuits.util.netlist_graph": [[163, 4, 1, "", "draw_graph"], [163, 4, 1, "", "network_as_graph"]], "kqcircuits.util.parameters": [[164, 1, 1, "", "Param"], [164, 4, 1, "", "add_parameter"], [164, 4, 1, "", "add_parameters_from"], [164, 1, 1, "", "pdt"]], "kqcircuits.util.parameters.Param": [[164, 2, 1, "", "get_all"]], "kqcircuits.util.parameters.pdt": [[164, 3, 1, "", "TypeBoolean"], [164, 3, 1, "", "TypeDouble"], [164, 3, 1, "", "TypeInt"], [164, 3, 1, "", "TypeLayer"], [164, 3, 1, "", "TypeList"], [164, 3, 1, "", "TypeNone"], [164, 3, 1, "", "TypeShape"], [164, 3, 1, "", "TypeString"]], "kqcircuits.util.plugin_startup": [[165, 4, 1, "", "register_plugins"]], "kqcircuits.util.refpoints": [[166, 1, 1, "", "JunctionSimPort"], [166, 1, 1, "", "RefpointToEdgePort"], [166, 1, 1, "", "RefpointToInternalPort"], [166, 1, 1, "", "RefpointToSimPort"], [166, 1, 1, "", "Refpoints"], [166, 1, 1, "", "WaveguideToSimPort"]], "kqcircuits.util.refpoints.JunctionSimPort": [[166, 3, 1, "", "face"], [166, 3, 1, "", "floating"], [166, 3, 1, "", "other_refpoint"], [166, 3, 1, "", "refpoint"]], "kqcircuits.util.refpoints.RefpointToSimPort": [[166, 3, 1, "", "face"], [166, 3, 1, "", "refpoint"]], "kqcircuits.util.refpoints.Refpoints": [[166, 3, 1, "", "cell"], [166, 2, 1, "", "dict"], [166, 2, 1, "", "items"], [166, 2, 1, "", "keys"], [166, 3, 1, "", "layer"], [166, 3, 1, "", "rec_levels"], [166, 3, 1, "", "trans"], [166, 2, 1, "", "values"]], "kqcircuits.util.refpoints.WaveguideToSimPort": [[166, 3, 1, "", "a"], [166, 3, 1, "", "airbridge"], [166, 3, 1, "", "b"], [166, 3, 1, "", "face"], [166, 3, 1, "", "over_etching"], [166, 3, 1, "", "refpoint"], [166, 3, 1, "", "side"], [166, 3, 1, "", "term1"], [166, 3, 1, "", "towards"], [166, 3, 1, "", "turn_radius"], [166, 3, 1, "", "use_internal_ports"], [166, 3, 1, "", "waveguide_length"]], "kqcircuits.util.replace_junctions": [[167, 1, 1, "", "JunctionEntry"], [167, 4, 1, "", "check_static_cell_has_junctions"], [167, 4, 1, "", "convert_cells_to_static"], [167, 4, 1, "", "copy_one_layer_of_cell"], [167, 4, 1, "", "extract_junctions"], [167, 4, 1, "", "get_tuned_junction_json"], [167, 4, 1, "", "place_junctions"], [167, 4, 1, "", "replace_squid"], [167, 4, 1, "", "replace_squids"]], "kqcircuits.util.symmetric_polygons": [[168, 4, 1, "", "polygon_with_hsym"], [168, 4, 1, "", "polygon_with_sym"], [168, 4, 1, "", "polygon_with_vsym"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function", "5": "py:property", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"about": 0, "api": 1, "document": [1, 174, 179], "modul": [1, 2, 28, 30, 40, 44, 51, 59, 69, 78, 81, 87, 95, 103, 104, 107, 116, 120, 132, 135, 142, 177], "content": [1, 2, 28, 30, 40, 44, 51, 59, 69, 78, 81, 87, 95, 103, 104, 107, 116, 120, 132, 135, 142], "kqcircuit": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 177, 181, 190], "chip": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 181, 189, 190], "airbridge_cross": 3, "airbridge_dc_test": 4, "crossing_twofac": 6, "daisy_woven": 7, "dc_test": 8, "demo": 9, "demo_twofac": 10, "empti": 11, "junction_test": 12, "junction_test2": 13, "launcher": [14, 49], "lithography_test": 15, "lithography_test_twofac": 16, "munch_qubit": 17, "quality_factor": 18, "quality_factor_twofac": 19, "sample_holder_test": 20, "shape": 21, "simpl": 22, "single_xmon": 23, "stripe": 24, "tsv_test": 25, "xmons_direct_coupl": 26, "default": 27, "element": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 171, 181, 185, 190, 195], "airbridge_connect": 29, "airbridg": [30, 31, 32, 33], "airbridge_multi_fac": 32, "airbridge_rectangular": 33, "capacitive_x_coupl": 34, "chip_fram": 35, "circular_capacitor": 36, "finger_capacitor_squar": 38, "finger_capacitor_tap": 39, "flip_chip_connector": [40, 41, 42, 43], "flip_chip_connector_dc": 42, "flip_chip_connector_rf": 43, "fluxlin": [44, 45, 46, 47], "fluxline_standard": 46, "fluxline_straight": 47, "hanger_reson": 48, "launcher_dc": 50, "marker": [51, 52, 53, 54], "marker_standard": 53, "mask_marker_fc": 54, "meander": 55, "quarter_wave_cpw_reson": 56, "smooth_capacitor": 57, "spiral_resonator_polygon": 58, "tsv": [59, 60, 61, 62], "tsv_ellips": 61, "tsv_standard": 62, "waveguide_composit": 63, "waveguide_coplanar": 64, "waveguide_coplanar_curv": 65, "waveguide_coplanar_splitt": 66, "waveguide_coplanar_straight": 67, "waveguide_coplanar_tap": 68, "junction": [69, 70, 71, 72, 73, 74, 75], "manhattan": 71, "manhattan_single_junct": 72, "no_squid": 73, "sim": 74, "squid": 75, "klayout_view": 76, "layer_clust": 77, "layer_config": [78, 79, 80], "default_layer_config": 79, "example_layer_config": 80, "mask": [81, 82, 83, 84, 85, 189], "mask_export": 82, "mask_layout": 83, "mask_set": 84, "multi_face_mask_layout": 85, "pya_resolv": 86, "qubit": [87, 88, 89, 90, 91, 92, 93], "circular_transmon_single_island": 88, "concentric_transmon": 89, "double_pad": 90, "double_pads_splin": 91, "swissmon": [93, 101], "run": [94, 188, 192], "simul": [95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 191, 194, 195, 197], "airbridges_sim": 96, "cross_section_simul": 97, "empty_simul": 98, "epr": [99, 100, 101, 102], "exampl": [100, 188, 190], "util": [102, 119, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 184], "export": [103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 189, 192, 193, 196], "ansi": [104, 105, 106, 196], "ansys_export": 105, "ansys_solut": 106, "elmer": [107, 108, 109, 191, 193, 196], "elmer_export": 108, "elmer_solut": 109, "export_and_run": 110, "export_singular": 111, "remote_export_and_run": 112, "simulation_export": 113, "simulation_valid": 114, "solut": 115, "sonnet": [116, 117, 118, 196], "parser": 117, "sonnet_export": 118, "xsection": [120, 121, 122, 200], "epr_correction_export": 121, "xsection_export": 122, "partition_region": 123, "port": [124, 195], "post_process": 125, "single_element_simul": 127, "single_xmons_full_chip_sim": 128, "waveguides_sim": 129, "xmons_direct_coupling_full_chip_sim": 130, "xmons_direct_coupling_sim": 131, "test_structur": [132, 133, 134, 135, 136, 137, 138, 139, 140, 141], "airbridge_dc": 133, "cross_test": 134, "junction_test_pad": [135, 136, 137], "junction_test_pads_simpl": 137, "stripes_test": 138, "stripes_test_increasing_width": 139, "tsv_test_pattern": 141, "area": 143, "count_inst": 144, "coupler_lib": 145, "deep_delet": 146, "defaults_help": 147, "depend": [148, 176, 177], "edit_node_plugin": 149, "export_help": 150, "geometry_help": 151, "geometry_json_encod": 152, "groundgrid": 153, "gui_help": 154, "import_help": 155, "label": 156, "label_polygon": 157, "layout_to_cod": 158, "library_help": 159, "log_rout": 160, "merg": 161, "netlist_extract": 162, "netlist_graph": 163, "paramet": [164, 171, 185, 190, 194], "plugin_startup": 165, "refpoint": [166, 190], "replace_junct": 167, "symmetric_polygon": 168, "cite": 169, "contribut": 170, "version": [170, 180], "architectur": 171, "pcell": 171, "librari": [171, 188, 190], "pya": 171, "resolv": 171, "code": [172, 185, 190, 200], "style": 172, "contain": 173, "cli": 173, "usag": [173, 177, 199], "docker": 173, "ci": 173, "singular": 173, "develop": [175, 176, 177, 188], "guid": [175, 187], "gui": [176, 185, 196, 200], "setup": [176, 177], "prerequisit": [176, 177], "python": [176, 177, 180, 190], "sourc": 176, "instal": [176, 177, 180, 181], "unlink": 176, "updat": [176, 177], "secondari": 176, "manual": [176, 180], "symlink": 176, "linux": 176, "maco": 176, "window": 176, "standalon": 177, "1": 177, "basic": [177, 189], "2": 177, "reproduc": 177, "secur": 177, "3": 177, "exclus": 177, "environ": 177, "extens": 177, "pypi": 177, "jupyt": 177, "notebook": 177, "requir": 177, "test": 178, "unit": 178, "kqc": [179, 200], "logo": 179, "indic": 179, "tabl": 179, "klayout": [180, 188, 196, 200], "known": 180, "issu": 180, "differ": 180, "packag": [180, 181], "get": 181, "start": 181, "salt": 181, "first": [181, 188], "look": 181, "around": 181, "set": 181, "up": 181, "user": [181, 187], "directori": 181, "defin": [181, 190], "custom": 181, "upgrad": 181, "remov": 181, "releas": 181, "note": 181, "support": 182, "trademark": 183, "gener": [184, 195], "structur": [184, 190], "miscellan": 184, "file": [184, 190, 200], "system": [184, 190], "hierarchi": [184, 190], "featur": [185, 194], "us": [185, 188], "hotkei": 185, "introduct": 185, "place": 185, "modifi": [185, 189], "waveguid": 185, "edit": 185, "waveguidecomposit": 185, "node": 185, "convert": 185, "menu": 185, "command": 185, "point": 186, "click": 186, "workflow": [186, 190, 191], "tutori": [186, 189, 190], "macro": 188, "interact": 188, "applic": 188, "creat": [188, 200], "new": [188, 190], "panel": 188, "access": 188, "current": 188, "activ": 188, "klayoutview": 188, "debugg": 188, "reload": 188, "script": 189, "ground": 189, "grid": 189, "ad": [189, 190], "multi": 189, "face": [189, 190, 195], "composit": 189, "map": 189, "class": [190, 195], "build": 190, "an": 190, "insert": 190, "samplehold": 190, "type": 190, "layer": 190, "configur": 190, "open": 190, "from": [190, 196], "id": 190, "remot": 191, "one": 192, "line": 192, "gmsh": 193, "": 194, "matrix": 194, "capacit": 194, "eigenmod": 194, "energi": 194, "integr": 194, "particip": 194, "ratio": 194, "cross": [194, 200], "section": [194, 200], "pyepr": 194, "object": 195, "The": 195, "box": 195, "stack": 195, "subclass": 195, "singl": 195, "geometri": [195, 196], "sweep": 195, "function": 196, "extern": 197, "tool": [197, 200], "terminologi": 198, "imag": 200, "call": 200, "process": 200, "x": 200}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"About": [[0, "about"]], "API documentation": [[1, "api-documentation"]], "Module contents": [[1, "module-kqcircuits"], [2, "module-kqcircuits.chips"], [28, "module-kqcircuits.elements"], [30, "module-kqcircuits.elements.airbridges"], [40, "module-kqcircuits.elements.flip_chip_connectors"], [44, "module-kqcircuits.elements.fluxlines"], [51, "module-kqcircuits.elements.markers"], [59, "module-kqcircuits.elements.tsvs"], [69, "module-kqcircuits.junctions"], [78, "module-kqcircuits.layer_config"], [81, "module-kqcircuits.masks"], [87, "module-kqcircuits.qubits"], [95, "module-kqcircuits.simulations"], [103, "module-kqcircuits.simulations.export"], [104, "module-kqcircuits.simulations.export.ansys"], [107, "module-kqcircuits.simulations.export.elmer"], [116, "module-kqcircuits.simulations.export.sonnet"], [120, "module-kqcircuits.simulations.export.xsection"], [132, "module-kqcircuits.test_structures"], [135, "module-kqcircuits.test_structures.junction_test_pads"], [142, "module-kqcircuits.util"]], "kqcircuits.chips": [[2, "kqcircuits-chips"]], "kqcircuits.chips.airbridge_crossings": [[3, "module-kqcircuits.chips.airbridge_crossings"]], "kqcircuits.chips.airbridge_dc_test": [[4, "module-kqcircuits.chips.airbridge_dc_test"]], "kqcircuits.chips.chip": [[5, "module-kqcircuits.chips.chip"]], "kqcircuits.chips.crossing_twoface": [[6, "module-kqcircuits.chips.crossing_twoface"]], "kqcircuits.chips.daisy_woven": [[7, "module-kqcircuits.chips.daisy_woven"]], "kqcircuits.chips.dc_test": [[8, "module-kqcircuits.chips.dc_test"]], "kqcircuits.chips.demo": [[9, "module-kqcircuits.chips.demo"]], "kqcircuits.chips.demo_twoface": [[10, "module-kqcircuits.chips.demo_twoface"]], "kqcircuits.chips.empty": [[11, "module-kqcircuits.chips.empty"]], "kqcircuits.chips.junction_test": [[12, "module-kqcircuits.chips.junction_test"]], "kqcircuits.chips.junction_test2": [[13, "module-kqcircuits.chips.junction_test2"]], "kqcircuits.chips.launchers": [[14, "module-kqcircuits.chips.launchers"]], "kqcircuits.chips.lithography_test": [[15, "module-kqcircuits.chips.lithography_test"]], "kqcircuits.chips.lithography_test_twoface": [[16, "module-kqcircuits.chips.lithography_test_twoface"]], "kqcircuits.chips.munch_qubits": [[17, "module-kqcircuits.chips.munch_qubits"]], "kqcircuits.chips.quality_factor": [[18, "module-kqcircuits.chips.quality_factor"]], "kqcircuits.chips.quality_factor_twoface": [[19, "module-kqcircuits.chips.quality_factor_twoface"]], "kqcircuits.chips.sample_holder_test": [[20, "module-kqcircuits.chips.sample_holder_test"]], "kqcircuits.chips.shaping": [[21, "module-kqcircuits.chips.shaping"]], "kqcircuits.chips.simple": [[22, "module-kqcircuits.chips.simple"]], "kqcircuits.chips.single_xmons": [[23, "module-kqcircuits.chips.single_xmons"]], "kqcircuits.chips.stripes": [[24, "module-kqcircuits.chips.stripes"]], "kqcircuits.chips.tsv_test": [[25, "module-kqcircuits.chips.tsv_test"]], "kqcircuits.chips.xmons_direct_coupling": [[26, "module-kqcircuits.chips.xmons_direct_coupling"]], "kqcircuits.defaults": [[27, "module-kqcircuits.defaults"]], "kqcircuits.elements": [[28, "kqcircuits-elements"]], "kqcircuits.elements.airbridge_connection": [[29, "module-kqcircuits.elements.airbridge_connection"]], "kqcircuits.elements.airbridges": [[30, "kqcircuits-elements-airbridges"]], "kqcircuits.elements.airbridges.airbridge": [[31, "module-kqcircuits.elements.airbridges.airbridge"]], "kqcircuits.elements.airbridges.airbridge_multi_face": [[32, "module-kqcircuits.elements.airbridges.airbridge_multi_face"]], "kqcircuits.elements.airbridges.airbridge_rectangular": [[33, "module-kqcircuits.elements.airbridges.airbridge_rectangular"]], "kqcircuits.elements.capacitive_x_coupler": [[34, "module-kqcircuits.elements.capacitive_x_coupler"]], "kqcircuits.elements.chip_frame": [[35, "module-kqcircuits.elements.chip_frame"]], "kqcircuits.elements.circular_capacitor": [[36, "module-kqcircuits.elements.circular_capacitor"]], "kqcircuits.elements.element": [[37, "module-kqcircuits.elements.element"]], "kqcircuits.elements.finger_capacitor_square": [[38, "module-kqcircuits.elements.finger_capacitor_square"]], "kqcircuits.elements.finger_capacitor_taper": [[39, "module-kqcircuits.elements.finger_capacitor_taper"]], "kqcircuits.elements.flip_chip_connectors": [[40, "kqcircuits-elements-flip-chip-connectors"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector": [[41, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc": [[42, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf": [[43, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf"]], "kqcircuits.elements.fluxlines": [[44, "kqcircuits-elements-fluxlines"]], "kqcircuits.elements.fluxlines.fluxline": [[45, "module-kqcircuits.elements.fluxlines.fluxline"]], "kqcircuits.elements.fluxlines.fluxline_standard": [[46, "module-kqcircuits.elements.fluxlines.fluxline_standard"]], "kqcircuits.elements.fluxlines.fluxline_straight": [[47, "module-kqcircuits.elements.fluxlines.fluxline_straight"]], "kqcircuits.elements.hanger_resonator": [[48, "module-kqcircuits.elements.hanger_resonator"]], "kqcircuits.elements.launcher": [[49, "module-kqcircuits.elements.launcher"]], "kqcircuits.elements.launcher_dc": [[50, "module-kqcircuits.elements.launcher_dc"]], "kqcircuits.elements.markers": [[51, "kqcircuits-elements-markers"]], "kqcircuits.elements.markers.marker": [[52, "module-kqcircuits.elements.markers.marker"]], "kqcircuits.elements.markers.marker_standard": [[53, "module-kqcircuits.elements.markers.marker_standard"]], "kqcircuits.elements.markers.mask_marker_fc": [[54, "module-kqcircuits.elements.markers.mask_marker_fc"]], "kqcircuits.elements.meander": [[55, "module-kqcircuits.elements.meander"]], "kqcircuits.elements.quarter_wave_cpw_resonator": [[56, "module-kqcircuits.elements.quarter_wave_cpw_resonator"]], "kqcircuits.elements.smooth_capacitor": [[57, "module-kqcircuits.elements.smooth_capacitor"]], "kqcircuits.elements.spiral_resonator_polygon": [[58, "module-kqcircuits.elements.spiral_resonator_polygon"]], "kqcircuits.elements.tsvs": [[59, "kqcircuits-elements-tsvs"]], "kqcircuits.elements.tsvs.tsv": [[60, "module-kqcircuits.elements.tsvs.tsv"]], "kqcircuits.elements.tsvs.tsv_ellipse": [[61, "module-kqcircuits.elements.tsvs.tsv_ellipse"]], "kqcircuits.elements.tsvs.tsv_standard": [[62, "module-kqcircuits.elements.tsvs.tsv_standard"]], "kqcircuits.elements.waveguide_composite": [[63, "module-kqcircuits.elements.waveguide_composite"]], "kqcircuits.elements.waveguide_coplanar": [[64, "module-kqcircuits.elements.waveguide_coplanar"]], "kqcircuits.elements.waveguide_coplanar_curved": [[65, "module-kqcircuits.elements.waveguide_coplanar_curved"]], "kqcircuits.elements.waveguide_coplanar_splitter": [[66, "module-kqcircuits.elements.waveguide_coplanar_splitter"]], "kqcircuits.elements.waveguide_coplanar_straight": [[67, "module-kqcircuits.elements.waveguide_coplanar_straight"]], "kqcircuits.elements.waveguide_coplanar_taper": [[68, "module-kqcircuits.elements.waveguide_coplanar_taper"]], "kqcircuits.junctions": [[69, "kqcircuits-junctions"]], "kqcircuits.junctions.junction": [[70, "module-kqcircuits.junctions.junction"]], "kqcircuits.junctions.manhattan": [[71, "module-kqcircuits.junctions.manhattan"]], "kqcircuits.junctions.manhattan_single_junction": [[72, "module-kqcircuits.junctions.manhattan_single_junction"]], "kqcircuits.junctions.no_squid": [[73, "module-kqcircuits.junctions.no_squid"]], "kqcircuits.junctions.sim": [[74, "module-kqcircuits.junctions.sim"]], "kqcircuits.junctions.squid": [[75, "module-kqcircuits.junctions.squid"]], "kqcircuits.klayout_view": [[76, "module-kqcircuits.klayout_view"]], "kqcircuits.layer_cluster": [[77, "module-kqcircuits.layer_cluster"]], "kqcircuits.layer_config": [[78, "kqcircuits-layer-config"]], "kqcircuits.layer_config.default_layer_config": [[79, "module-kqcircuits.layer_config.default_layer_config"]], "kqcircuits.layer_config.example_layer_config": [[80, "module-kqcircuits.layer_config.example_layer_config"]], "kqcircuits.masks": [[81, "kqcircuits-masks"]], "kqcircuits.masks.mask_export": [[82, "module-kqcircuits.masks.mask_export"]], "kqcircuits.masks.mask_layout": [[83, "module-kqcircuits.masks.mask_layout"]], "kqcircuits.masks.mask_set": [[84, "module-kqcircuits.masks.mask_set"]], "kqcircuits.masks.multi_face_mask_layout": [[85, "module-kqcircuits.masks.multi_face_mask_layout"]], "kqcircuits.pya_resolver": [[86, "module-kqcircuits.pya_resolver"]], "kqcircuits.qubits": [[87, "kqcircuits-qubits"]], "kqcircuits.qubits.circular_transmon_single_island": [[88, "module-kqcircuits.qubits.circular_transmon_single_island"]], "kqcircuits.qubits.concentric_transmon": [[89, "module-kqcircuits.qubits.concentric_transmon"]], "kqcircuits.qubits.double_pads": [[90, "module-kqcircuits.qubits.double_pads"]], "kqcircuits.qubits.double_pads_splines": [[91, "module-kqcircuits.qubits.double_pads_splines"]], "kqcircuits.qubits.qubit": [[92, "module-kqcircuits.qubits.qubit"]], "kqcircuits.qubits.swissmon": [[93, "module-kqcircuits.qubits.swissmon"]], "kqcircuits.run": [[94, "module-kqcircuits.run"]], "kqcircuits.simulations": [[95, "kqcircuits-simulations"]], "kqcircuits.simulations.airbridges_sim": [[96, "module-kqcircuits.simulations.airbridges_sim"]], "kqcircuits.simulations.cross_section_simulation": [[97, "module-kqcircuits.simulations.cross_section_simulation"]], "kqcircuits.simulations.empty_simulation": [[98, "module-kqcircuits.simulations.empty_simulation"]], "kqcircuits.simulations.epr": [[99, "kqcircuits-simulations-epr"]], "kqcircuits.simulations.epr.example": [[100, "module-kqcircuits.simulations.epr.example"]], "kqcircuits.simulations.epr.swissmon": [[101, "module-kqcircuits.simulations.epr.swissmon"]], "kqcircuits.simulations.epr.utils": [[102, "module-kqcircuits.simulations.epr.utils"]], "kqcircuits.simulations.export": [[103, "kqcircuits-simulations-export"]], "kqcircuits.simulations.export.ansys": [[104, "kqcircuits-simulations-export-ansys"]], "kqcircuits.simulations.export.ansys.ansys_export": [[105, "module-kqcircuits.simulations.export.ansys.ansys_export"]], "kqcircuits.simulations.export.ansys.ansys_solution": [[106, "module-kqcircuits.simulations.export.ansys.ansys_solution"]], "kqcircuits.simulations.export.elmer": [[107, "kqcircuits-simulations-export-elmer"]], "kqcircuits.simulations.export.elmer.elmer_export": [[108, "module-kqcircuits.simulations.export.elmer.elmer_export"]], "kqcircuits.simulations.export.elmer.elmer_solution": [[109, "module-kqcircuits.simulations.export.elmer.elmer_solution"]], "kqcircuits.simulations.export.export_and_run": [[110, "module-kqcircuits.simulations.export.export_and_run"]], "kqcircuits.simulations.export.export_singularity": [[111, "module-kqcircuits.simulations.export.export_singularity"]], "kqcircuits.simulations.export.remote_export_and_run": [[112, "module-kqcircuits.simulations.export.remote_export_and_run"]], "kqcircuits.simulations.export.simulation_export": [[113, "module-kqcircuits.simulations.export.simulation_export"]], "kqcircuits.simulations.export.simulation_validate": [[114, "module-kqcircuits.simulations.export.simulation_validate"]], "kqcircuits.simulations.export.solution": [[115, "module-kqcircuits.simulations.export.solution"]], "kqcircuits.simulations.export.sonnet": [[116, "kqcircuits-simulations-export-sonnet"]], "kqcircuits.simulations.export.sonnet.parser": [[117, "module-kqcircuits.simulations.export.sonnet.parser"]], "kqcircuits.simulations.export.sonnet.sonnet_export": [[118, "module-kqcircuits.simulations.export.sonnet.sonnet_export"]], "kqcircuits.simulations.export.util": [[119, "module-kqcircuits.simulations.export.util"]], "kqcircuits.simulations.export.xsection": [[120, "kqcircuits-simulations-export-xsection"]], "kqcircuits.simulations.export.xsection.epr_correction_export": [[121, "module-kqcircuits.simulations.export.xsection.epr_correction_export"]], "kqcircuits.simulations.export.xsection.xsection_export": [[122, "module-kqcircuits.simulations.export.xsection.xsection_export"]], "kqcircuits.simulations.partition_region": [[123, "module-kqcircuits.simulations.partition_region"]], "kqcircuits.simulations.port": [[124, "module-kqcircuits.simulations.port"]], "kqcircuits.simulations.post_process": [[125, "module-kqcircuits.simulations.post_process"]], "kqcircuits.simulations.simulation": [[126, "module-kqcircuits.simulations.simulation"]], "kqcircuits.simulations.single_element_simulation": [[127, "module-kqcircuits.simulations.single_element_simulation"]], "kqcircuits.simulations.single_xmons_full_chip_sim": [[128, "module-kqcircuits.simulations.single_xmons_full_chip_sim"]], "kqcircuits.simulations.waveguides_sim": [[129, "module-kqcircuits.simulations.waveguides_sim"]], "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim": [[130, "module-kqcircuits.simulations.xmons_direct_coupling_full_chip_sim"]], "kqcircuits.simulations.xmons_direct_coupling_sim": [[131, "module-kqcircuits.simulations.xmons_direct_coupling_sim"]], "kqcircuits.test_structures": [[132, "kqcircuits-test-structures"]], "kqcircuits.test_structures.airbridge_dc": [[133, "module-kqcircuits.test_structures.airbridge_dc"]], "kqcircuits.test_structures.cross_test": [[134, "module-kqcircuits.test_structures.cross_test"]], "kqcircuits.test_structures.junction_test_pads": [[135, "kqcircuits-test-structures-junction-test-pads"]], "kqcircuits.test_structures.junction_test_pads.junction_test_pads": [[136, "module-kqcircuits.test_structures.junction_test_pads.junction_test_pads"]], "kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple": [[137, "module-kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple"]], "kqcircuits.test_structures.stripes_test": [[138, "module-kqcircuits.test_structures.stripes_test"]], "kqcircuits.test_structures.stripes_test_increasing_width": [[139, "module-kqcircuits.test_structures.stripes_test_increasing_width"]], "kqcircuits.test_structures.test_structure": [[140, "module-kqcircuits.test_structures.test_structure"]], "kqcircuits.test_structures.tsv_test_pattern": [[141, "module-kqcircuits.test_structures.tsv_test_pattern"]], "kqcircuits.util": [[142, "kqcircuits-util"]], "kqcircuits.util.area": [[143, "module-kqcircuits.util.area"]], "kqcircuits.util.count_instances": [[144, "module-kqcircuits.util.count_instances"]], "kqcircuits.util.coupler_lib": [[145, "module-kqcircuits.util.coupler_lib"]], "kqcircuits.util.deep_delete": [[146, "module-kqcircuits.util.deep_delete"]], "kqcircuits.util.defaults_helper": [[147, "module-kqcircuits.util.defaults_helper"]], "kqcircuits.util.dependencies": [[148, "module-kqcircuits.util.dependencies"]], "kqcircuits.util.edit_node_plugin": [[149, "module-kqcircuits.util.edit_node_plugin"]], "kqcircuits.util.export_helper": [[150, "module-kqcircuits.util.export_helper"]], "kqcircuits.util.geometry_helper": [[151, "module-kqcircuits.util.geometry_helper"]], "kqcircuits.util.geometry_json_encoder": [[152, "module-kqcircuits.util.geometry_json_encoder"]], "kqcircuits.util.groundgrid": [[153, "module-kqcircuits.util.groundgrid"]], "kqcircuits.util.gui_helper": [[154, "module-kqcircuits.util.gui_helper"]], "kqcircuits.util.import_helper": [[155, "module-kqcircuits.util.import_helper"]], "kqcircuits.util.label": [[156, "module-kqcircuits.util.label"]], "kqcircuits.util.label_polygons": [[157, "module-kqcircuits.util.label_polygons"]], "kqcircuits.util.layout_to_code": [[158, "module-kqcircuits.util.layout_to_code"]], "kqcircuits.util.library_helper": [[159, "module-kqcircuits.util.library_helper"]], "kqcircuits.util.log_router": [[160, "module-kqcircuits.util.log_router"]], "kqcircuits.util.merge": [[161, "module-kqcircuits.util.merge"]], "kqcircuits.util.netlist_extraction": [[162, "module-kqcircuits.util.netlist_extraction"]], "kqcircuits.util.netlist_graph": [[163, "module-kqcircuits.util.netlist_graph"]], "kqcircuits.util.parameters": [[164, "module-kqcircuits.util.parameters"]], "kqcircuits.util.plugin_startup": [[165, "module-kqcircuits.util.plugin_startup"]], "kqcircuits.util.refpoints": [[166, "module-kqcircuits.util.refpoints"]], "kqcircuits.util.replace_junctions": [[167, "module-kqcircuits.util.replace_junctions"]], "kqcircuits.util.symmetric_polygons": [[168, "module-kqcircuits.util.symmetric_polygons"]], "Citing": [[169, "citing"]], "Contributing": [[170, "contributing"]], "Versioning": [[170, "versioning"]], "Architecture": [[171, "architecture"]], "Elements": [[171, "elements"]], "PCell parameters": [[171, "pcell-parameters"]], "Libraries": [[171, "libraries"], [190, "libraries"]], "pya resolver": [[171, "pya-resolver"]], "Coding Style": [[172, "coding-style"]], "Containers": [[173, "containers"]], "CLI usage": [[173, "cli-usage"]], "Docker CI usage": [[173, "docker-ci-usage"]], "Singularity usage": [[173, "singularity-usage"]], "Documentation": [[174, "documentation"], [179, "documentation"]], "Developer Guide": [[175, "developer-guide"]], "Developer GUI Setup": [[176, "developer-gui-setup"]], "Prerequisites": [[176, "prerequisites"], [177, "prerequisites"]], "Python": [[176, "python"]], "Sources": [[176, "sources"]], "Install": [[176, "install"]], "Unlinking": [[176, "unlinking"]], "Update": [[176, "update"]], "Secondary install": [[176, "secondary-install"]], "Manual installation": [[176, "manual-installation"]], "Symlinks in Linux or MacOS": [[176, "symlinks-in-linux-or-macos"]], "Symlinks in Windows": [[176, "symlinks-in-windows"]], "Installing dependencies": [[176, "installing-dependencies"]], "Developer Standalone module Setup": [[177, "developer-standalone-module-setup"]], "Installation": [[177, "installation"], [180, "installation"]], "1. Basic installation": [[177, "basic-installation"]], "2. Reproducible, Secure Installation": [[177, "reproducible-secure-installation"]], "3. KQCircuits exclusive python environment": [[177, "kqcircuits-exclusive-python-environment"]], "Dependency extensions": [[177, "dependency-extensions"]], "PyPI Installation": [[177, "pypi-installation"]], "Usage": [[177, "usage"], [199, "usage"]], "Jupyter notebook usage": [[177, "jupyter-notebook-usage"]], "Updating the required dependencies": [[177, "updating-the-required-dependencies"]], "Testing": [[178, "testing"]], "Unit tests": [[178, "unit-tests"]], "KQC logo": [[179, "logo"]], "Indices and tables": [[179, "indices-and-tables"]], "KLayout": [[180, "klayout"]], "Known installation issues": [[180, "known-installation-issues"]], "Installing different Python package versions to KLayout manually": [[180, "installing-different-python-package-versions-to-klayout-manually"]], "Getting started (Salt package)": [[181, "getting-started-salt-package"]], "Installing KQCircuits Salt Package": [[181, "installing-kqcircuits-salt-package"]], "First look around": [[181, "first-look-around"]], "Setting up a user package directory": [[181, "setting-up-a-user-package-directory"]], "Defining a custom element": [[181, "defining-a-custom-element"]], "Defining a custom chip": [[181, "defining-a-custom-chip"]], "Upgrading or Removing Salt Package": [[181, "upgrading-or-removing-salt-package"]], "Release Notes": [[181, "release-notes"]], "Support": [[182, "support"]], "Trademarks": [[183, "trademarks"]], "General Structure and Miscellaneous Utilities": [[184, "general-structure-and-miscellaneous-utilities"]], "File system hierarchy": [[184, "file-system-hierarchy"], [190, "file-system-hierarchy"]], "Miscellaneous Utilities": [[184, "miscellaneous-utilities"]], "GUI Features": [[185, "gui-features"]], "Useful hotkeys": [[185, "useful-hotkeys"]], "Introduction to Elements": [[185, "introduction-to-elements"]], "Placing Elements": [[185, "placing-elements"]], "Modifying Element parameters": [[185, "modifying-element-parameters"]], "Modifying waveguides": [[185, "modifying-waveguides"]], "Editing WaveguideComposite Nodes": [[185, "editing-waveguidecomposite-nodes"]], "Converting elements placed in GUI into code": [[185, "converting-elements-placed-in-gui-into-code"]], "Useful Menu Commands": [[185, "useful-menu-commands"]], "Point-and-click workflow tutorial": [[186, "point-and-click-workflow-tutorial"]], "User Guide": [[187, "user-guide"]], "Macro development": [[188, "macro-development"]], "Running the first example": [[188, "running-the-first-example"]], "Interacting with the KLayout application": [[188, "interacting-with-the-klayout-application"]], "Creating a new panel": [[188, "creating-a-new-panel"]], "Accessing the currently active panel": [[188, "accessing-the-currently-active-panel"]], "Using KLayoutView": [[188, "using-klayoutview"]], "Debugger": [[188, "debugger"]], "Reloading libraries": [[188, "reloading-libraries"]], "Examples": [[188, "examples"]], "Mask export": [[189, "mask-export"]], "Tutorial": [[189, "tutorial"]], "Basic mask script and export": [[189, "basic-mask-script-and-export"]], "Ground grid": [[189, "ground-grid"]], "Adding and modifying chips": [[189, "adding-and-modifying-chips"]], "Multi-face masks": [[189, "multi-face-masks"]], "Composite mask maps": [[189, "composite-mask-maps"]], "Python workflow tutorial": [[190, "python-workflow-tutorial"]], "Structure of Element code": [[190, "structure-of-element-code"]], "Element class": [[190, "element-class"]], "Parameters": [[190, "parameters"]], "Build": [[190, "build"]], "Example of defining an Element class": [[190, "example-of-defining-an-element-class"]], "Example of defining a Chip and inserting elements into it": [[190, "example-of-defining-a-chip-and-inserting-elements-into-it"]], "Defining sampleholder types": [[190, "defining-sampleholder-types"]], "Refpoints": [[190, "refpoints"]], "KQCircuits\u2019 Layers": [[190, "kqcircuits-layers"]], "Faces": [[190, "faces"]], "Layer configuration files": [[190, "layer-configuration-files"]], "Adding a new face": [[190, "adding-a-new-face"]], "Opening Element or Chip from an IDE": [[190, "opening-element-or-chip-from-an-ide"]], "Elmer remote simulations workflow": [[191, "elmer-remote-simulations-workflow"]], "Run and export in one line": [[192, "run-and-export-in-one-line"]], "Gmsh/Elmer export": [[193, "gmsh-elmer-export"]], "Simulation features": [[194, "simulation-features"]], "S-parameter matrix": [[194, "s-parameter-matrix"]], "Capacitance matrix": [[194, "capacitance-matrix"]], "Eigenmode": [[194, "eigenmode"]], "Energy integrals and participation ratio": [[194, "energy-integrals-and-participation-ratio"]], "Cross-sectional simulations": [[194, "cross-sectional-simulations"]], "pyEPR": [[194, "pyepr"]], "Simulation objects": [[195, "simulation-objects"]], "The Simulation class": [[195, "the-simulation-class"]], "Box": [[195, "box"]], "Ports": [[195, "ports"]], "Face stack": [[195, "face-stack"]], "Simulation subclass": [[195, "simulation-subclass"]], "Single element subclass": [[195, "single-element-subclass"]], "General subclass": [[195, "general-subclass"]], "Geometry sweeps": [[195, "geometry-sweeps"]], "Export functions": [[196, "export-functions"]], "Ansys export": [[196, "ansys-export"]], "Elmer export": [[196, "elmer-export"]], "Sonnet export": [[196, "sonnet-export"]], "Geometry from Klayout GUI": [[196, "geometry-from-klayout-gui"]], "External simulation tools": [[197, "external-simulation-tools"]], "Terminology": [[198, "terminology"]], "Creating cross section images": [[200, "creating-cross-section-images"]], "KLayout GUI XSection tool": [[200, "klayout-gui-xsection-tool"]], "XSection call in KQC code": [[200, "xsection-call-in-kqc-code"]], "Process files (.xs)": [[200, "process-files-xs"]]}, "indexentries": {"kqcircuits": [[1, "module-kqcircuits"]], "module": [[1, "module-kqcircuits"], [2, "module-kqcircuits.chips"], [3, "module-kqcircuits.chips.airbridge_crossings"], [4, "module-kqcircuits.chips.airbridge_dc_test"], [5, "module-kqcircuits.chips.chip"], [6, "module-kqcircuits.chips.crossing_twoface"], [7, "module-kqcircuits.chips.daisy_woven"], [8, "module-kqcircuits.chips.dc_test"], [9, "module-kqcircuits.chips.demo"], [10, "module-kqcircuits.chips.demo_twoface"], [11, "module-kqcircuits.chips.empty"], [12, "module-kqcircuits.chips.junction_test"], [13, "module-kqcircuits.chips.junction_test2"], [14, "module-kqcircuits.chips.launchers"], [15, "module-kqcircuits.chips.lithography_test"], [16, "module-kqcircuits.chips.lithography_test_twoface"], [17, "module-kqcircuits.chips.munch_qubits"], [18, "module-kqcircuits.chips.quality_factor"], [19, "module-kqcircuits.chips.quality_factor_twoface"], [20, "module-kqcircuits.chips.sample_holder_test"], [21, "module-kqcircuits.chips.shaping"], [22, "module-kqcircuits.chips.simple"], [23, "module-kqcircuits.chips.single_xmons"], [24, "module-kqcircuits.chips.stripes"], [25, "module-kqcircuits.chips.tsv_test"], [26, "module-kqcircuits.chips.xmons_direct_coupling"], [27, "module-kqcircuits.defaults"], [28, "module-kqcircuits.elements"], [29, "module-kqcircuits.elements.airbridge_connection"], [30, "module-kqcircuits.elements.airbridges"], [31, "module-kqcircuits.elements.airbridges.airbridge"], [32, "module-kqcircuits.elements.airbridges.airbridge_multi_face"], [33, "module-kqcircuits.elements.airbridges.airbridge_rectangular"], [34, "module-kqcircuits.elements.capacitive_x_coupler"], [35, "module-kqcircuits.elements.chip_frame"], [36, "module-kqcircuits.elements.circular_capacitor"], [37, "module-kqcircuits.elements.element"], [38, "module-kqcircuits.elements.finger_capacitor_square"], [39, "module-kqcircuits.elements.finger_capacitor_taper"], [40, "module-kqcircuits.elements.flip_chip_connectors"], [41, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector"], [42, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc"], [43, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf"], [44, "module-kqcircuits.elements.fluxlines"], [45, "module-kqcircuits.elements.fluxlines.fluxline"], [46, "module-kqcircuits.elements.fluxlines.fluxline_standard"], [47, "module-kqcircuits.elements.fluxlines.fluxline_straight"], [48, "module-kqcircuits.elements.hanger_resonator"], [49, "module-kqcircuits.elements.launcher"], [50, "module-kqcircuits.elements.launcher_dc"], [51, "module-kqcircuits.elements.markers"], [52, "module-kqcircuits.elements.markers.marker"], [53, "module-kqcircuits.elements.markers.marker_standard"], [54, "module-kqcircuits.elements.markers.mask_marker_fc"], [55, "module-kqcircuits.elements.meander"], [56, "module-kqcircuits.elements.quarter_wave_cpw_resonator"], [57, "module-kqcircuits.elements.smooth_capacitor"], [58, "module-kqcircuits.elements.spiral_resonator_polygon"], [59, "module-kqcircuits.elements.tsvs"], [60, "module-kqcircuits.elements.tsvs.tsv"], [61, "module-kqcircuits.elements.tsvs.tsv_ellipse"], [62, "module-kqcircuits.elements.tsvs.tsv_standard"], [63, "module-kqcircuits.elements.waveguide_composite"], [64, "module-kqcircuits.elements.waveguide_coplanar"], [65, "module-kqcircuits.elements.waveguide_coplanar_curved"], [66, "module-kqcircuits.elements.waveguide_coplanar_splitter"], [67, "module-kqcircuits.elements.waveguide_coplanar_straight"], [68, "module-kqcircuits.elements.waveguide_coplanar_taper"], [69, "module-kqcircuits.junctions"], [70, "module-kqcircuits.junctions.junction"], [71, "module-kqcircuits.junctions.manhattan"], [72, "module-kqcircuits.junctions.manhattan_single_junction"], [73, "module-kqcircuits.junctions.no_squid"], [74, "module-kqcircuits.junctions.sim"], [75, "module-kqcircuits.junctions.squid"], [76, "module-kqcircuits.klayout_view"], [77, "module-kqcircuits.layer_cluster"], [78, "module-kqcircuits.layer_config"], [79, "module-kqcircuits.layer_config.default_layer_config"], [80, "module-kqcircuits.layer_config.example_layer_config"], [81, "module-kqcircuits.masks"], [82, "module-kqcircuits.masks.mask_export"], [83, "module-kqcircuits.masks.mask_layout"], [84, "module-kqcircuits.masks.mask_set"], [85, "module-kqcircuits.masks.multi_face_mask_layout"], [86, "module-kqcircuits.pya_resolver"], [87, "module-kqcircuits.qubits"], [88, "module-kqcircuits.qubits.circular_transmon_single_island"], [89, "module-kqcircuits.qubits.concentric_transmon"], [90, "module-kqcircuits.qubits.double_pads"], [91, "module-kqcircuits.qubits.double_pads_splines"], [92, "module-kqcircuits.qubits.qubit"], [93, "module-kqcircuits.qubits.swissmon"], [94, "module-kqcircuits.run"], [95, "module-kqcircuits.simulations"], [96, "module-kqcircuits.simulations.airbridges_sim"], [97, "module-kqcircuits.simulations.cross_section_simulation"], [98, "module-kqcircuits.simulations.empty_simulation"], [100, "module-kqcircuits.simulations.epr.example"], [101, "module-kqcircuits.simulations.epr.swissmon"], [102, "module-kqcircuits.simulations.epr.utils"], [103, "module-kqcircuits.simulations.export"], [104, "module-kqcircuits.simulations.export.ansys"], [105, "module-kqcircuits.simulations.export.ansys.ansys_export"], [106, "module-kqcircuits.simulations.export.ansys.ansys_solution"], [107, "module-kqcircuits.simulations.export.elmer"], [108, "module-kqcircuits.simulations.export.elmer.elmer_export"], [109, "module-kqcircuits.simulations.export.elmer.elmer_solution"], [110, "module-kqcircuits.simulations.export.export_and_run"], [111, "module-kqcircuits.simulations.export.export_singularity"], [112, "module-kqcircuits.simulations.export.remote_export_and_run"], [113, "module-kqcircuits.simulations.export.simulation_export"], [114, "module-kqcircuits.simulations.export.simulation_validate"], [115, "module-kqcircuits.simulations.export.solution"], [116, "module-kqcircuits.simulations.export.sonnet"], [117, "module-kqcircuits.simulations.export.sonnet.parser"], [118, "module-kqcircuits.simulations.export.sonnet.sonnet_export"], [119, "module-kqcircuits.simulations.export.util"], [120, "module-kqcircuits.simulations.export.xsection"], [121, "module-kqcircuits.simulations.export.xsection.epr_correction_export"], [122, "module-kqcircuits.simulations.export.xsection.xsection_export"], [123, "module-kqcircuits.simulations.partition_region"], [124, "module-kqcircuits.simulations.port"], [125, "module-kqcircuits.simulations.post_process"], [126, "module-kqcircuits.simulations.simulation"], [127, "module-kqcircuits.simulations.single_element_simulation"], [128, "module-kqcircuits.simulations.single_xmons_full_chip_sim"], [129, "module-kqcircuits.simulations.waveguides_sim"], [130, "module-kqcircuits.simulations.xmons_direct_coupling_full_chip_sim"], [131, "module-kqcircuits.simulations.xmons_direct_coupling_sim"], [132, "module-kqcircuits.test_structures"], [133, "module-kqcircuits.test_structures.airbridge_dc"], [134, "module-kqcircuits.test_structures.cross_test"], [135, "module-kqcircuits.test_structures.junction_test_pads"], [136, "module-kqcircuits.test_structures.junction_test_pads.junction_test_pads"], [137, "module-kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple"], [138, "module-kqcircuits.test_structures.stripes_test"], [139, "module-kqcircuits.test_structures.stripes_test_increasing_width"], [140, "module-kqcircuits.test_structures.test_structure"], [141, "module-kqcircuits.test_structures.tsv_test_pattern"], [142, "module-kqcircuits.util"], [143, "module-kqcircuits.util.area"], [144, "module-kqcircuits.util.count_instances"], [145, "module-kqcircuits.util.coupler_lib"], [146, "module-kqcircuits.util.deep_delete"], [147, "module-kqcircuits.util.defaults_helper"], [148, "module-kqcircuits.util.dependencies"], [149, "module-kqcircuits.util.edit_node_plugin"], [150, "module-kqcircuits.util.export_helper"], [151, "module-kqcircuits.util.geometry_helper"], [152, "module-kqcircuits.util.geometry_json_encoder"], [153, "module-kqcircuits.util.groundgrid"], [154, "module-kqcircuits.util.gui_helper"], [155, "module-kqcircuits.util.import_helper"], [156, "module-kqcircuits.util.label"], [157, "module-kqcircuits.util.label_polygons"], [158, "module-kqcircuits.util.layout_to_code"], [159, "module-kqcircuits.util.library_helper"], [160, "module-kqcircuits.util.log_router"], [161, "module-kqcircuits.util.merge"], [162, "module-kqcircuits.util.netlist_extraction"], [163, "module-kqcircuits.util.netlist_graph"], [164, "module-kqcircuits.util.parameters"], [165, "module-kqcircuits.util.plugin_startup"], [166, "module-kqcircuits.util.refpoints"], [167, "module-kqcircuits.util.replace_junctions"], [168, "module-kqcircuits.util.symmetric_polygons"]], "kqcircuits.chips": [[2, "module-kqcircuits.chips"]], "airbridgecrossings (class in kqcircuits.chips.airbridge_crossings)": [[3, "kqcircuits.chips.airbridge_crossings.AirbridgeCrossings"]], "build() (kqcircuits.chips.airbridge_crossings.airbridgecrossings method)": [[3, "kqcircuits.chips.airbridge_crossings.AirbridgeCrossings.build"]], "kqcircuits.chips.airbridge_crossings": [[3, "module-kqcircuits.chips.airbridge_crossings"]], "airbridgedctest (class in kqcircuits.chips.airbridge_dc_test)": [[4, "kqcircuits.chips.airbridge_dc_test.AirbridgeDcTest"]], "build() (kqcircuits.chips.airbridge_dc_test.airbridgedctest method)": [[4, "kqcircuits.chips.airbridge_dc_test.AirbridgeDcTest.build"]], "kqcircuits.chips.airbridge_dc_test": [[4, "module-kqcircuits.chips.airbridge_dc_test"]], "chip (class in kqcircuits.chips.chip)": [[5, "kqcircuits.chips.chip.Chip"]], "library_description (kqcircuits.chips.chip.chip attribute)": [[5, "kqcircuits.chips.chip.Chip.LIBRARY_DESCRIPTION"]], "library_name (kqcircuits.chips.chip.chip attribute)": [[5, "kqcircuits.chips.chip.Chip.LIBRARY_NAME"]], "library_path (kqcircuits.chips.chip.chip attribute)": [[5, "kqcircuits.chips.chip.Chip.LIBRARY_PATH"]], "can_create_from_shape_impl() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.can_create_from_shape_impl"]], "display_text_impl() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.display_text_impl"]], "get_box() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.get_box"]], "get_filter_regions() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.get_filter_regions"]], "get_ground_bump_locations() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.get_ground_bump_locations"]], "get_ground_tsv_locations() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.get_ground_tsv_locations"]], "get_launcher_assignments() (kqcircuits.chips.chip.chip static method)": [[5, "kqcircuits.chips.chip.Chip.get_launcher_assignments"]], "insert_filtered_elements() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.insert_filtered_elements"]], "kqcircuits.chips.chip": [[5, "module-kqcircuits.chips.chip"]], "make_grid_locations() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.make_grid_locations"]], "merge_layout_layers() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.merge_layout_layers"]], "merge_layout_layers_on_face() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.merge_layout_layers_on_face"]], "parameters_from_shape_impl() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.parameters_from_shape_impl"]], "post_build() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.post_build"]], "produce_frame() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.produce_frame"]], "produce_ground_grid() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.produce_ground_grid"]], "produce_ground_on_face_grid() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.produce_ground_on_face_grid"]], "produce_junction_tests() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.produce_junction_tests"]], "produce_launchers() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.produce_launchers"]], "produce_n_launchers() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.produce_n_launchers"]], "produce_opt_lit_tests() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.produce_opt_lit_tests"]], "produce_structures() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.produce_structures"]], "transformation_from_shape_impl() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.transformation_from_shape_impl"]], "crossingtwoface (class in kqcircuits.chips.crossing_twoface)": [[6, "kqcircuits.chips.crossing_twoface.CrossingTwoface"]], "build() (kqcircuits.chips.crossing_twoface.crossingtwoface method)": [[6, "kqcircuits.chips.crossing_twoface.CrossingTwoface.build"]], "kqcircuits.chips.crossing_twoface": [[6, "module-kqcircuits.chips.crossing_twoface"]], "daisywoven (class in kqcircuits.chips.daisy_woven)": [[7, "kqcircuits.chips.daisy_woven.DaisyWoven"]], "build() (kqcircuits.chips.daisy_woven.daisywoven method)": [[7, "kqcircuits.chips.daisy_woven.DaisyWoven.build"]], "kqcircuits.chips.daisy_woven": [[7, "module-kqcircuits.chips.daisy_woven"]], "dctest (class in kqcircuits.chips.dc_test)": [[8, "kqcircuits.chips.dc_test.DcTest"]], "build() (kqcircuits.chips.dc_test.dctest method)": [[8, "kqcircuits.chips.dc_test.DcTest.build"]], "kqcircuits.chips.dc_test": [[8, "module-kqcircuits.chips.dc_test"]], "demo (class in kqcircuits.chips.demo)": [[9, "kqcircuits.chips.demo.Demo"]], "build() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.build"]], "kqcircuits.chips.demo": [[9, "module-kqcircuits.chips.demo"]], "produce_control_lines() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_control_lines"]], "produce_coupler() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_coupler"]], "produce_couplers() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_couplers"]], "produce_driveline() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_driveline"]], "produce_fluxline() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_fluxline"]], "produce_junction_tests() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_junction_tests"]], "produce_probeline() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_probeline"]], "produce_probelines() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_probelines"]], "produce_qubit() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_qubit"]], "produce_qubits() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_qubits"]], "produce_readout_structure() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_readout_structure"]], "produce_readout_structures() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_readout_structures"]], "demotwoface (class in kqcircuits.chips.demo_twoface)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface"]], "build() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.build"]], "kqcircuits.chips.demo_twoface": [[10, "module-kqcircuits.chips.demo_twoface"]], "produce_control_lines() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_control_lines"]], "produce_coupler() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_coupler"]], "produce_couplers() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_couplers"]], "produce_driveline() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_driveline"]], "produce_fluxline() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_fluxline"]], "produce_probeline() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_probeline"]], "produce_probelines() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_probelines"]], "produce_qubit() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_qubit"]], "produce_qubits() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_qubits"]], "produce_readout_structure() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_readout_structure"]], "produce_readout_structures() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_readout_structures"]], "empty (class in kqcircuits.chips.empty)": [[11, "kqcircuits.chips.empty.Empty"]], "build() (kqcircuits.chips.empty.empty method)": [[11, "kqcircuits.chips.empty.Empty.build"]], "kqcircuits.chips.empty": [[11, "module-kqcircuits.chips.empty"]], "make_empty_area() (kqcircuits.chips.empty.empty method)": [[11, "kqcircuits.chips.empty.Empty.make_empty_area"]], "junctiontest (class in kqcircuits.chips.junction_test)": [[12, "kqcircuits.chips.junction_test.JunctionTest"]], "build() (kqcircuits.chips.junction_test.junctiontest method)": [[12, "kqcircuits.chips.junction_test.JunctionTest.build"]], "kqcircuits.chips.junction_test": [[12, "module-kqcircuits.chips.junction_test"]], "junctiontest2 (class in kqcircuits.chips.junction_test2)": [[13, "kqcircuits.chips.junction_test2.JunctionTest2"]], "build() (kqcircuits.chips.junction_test2.junctiontest2 method)": [[13, "kqcircuits.chips.junction_test2.JunctionTest2.build"]], "coerce_parameters_impl() (kqcircuits.chips.junction_test2.junctiontest2 method)": [[13, "kqcircuits.chips.junction_test2.JunctionTest2.coerce_parameters_impl"]], "kqcircuits.chips.junction_test2": [[13, "module-kqcircuits.chips.junction_test2"]], "launchers (class in kqcircuits.chips.launchers)": [[14, "kqcircuits.chips.launchers.Launchers"]], "build() (kqcircuits.chips.launchers.launchers method)": [[14, "kqcircuits.chips.launchers.Launchers.build"]], "kqcircuits.chips.launchers": [[14, "module-kqcircuits.chips.launchers"]], "lithographytest (class in kqcircuits.chips.lithography_test)": [[15, "kqcircuits.chips.lithography_test.LithographyTest"]], "build() (kqcircuits.chips.lithography_test.lithographytest method)": [[15, "kqcircuits.chips.lithography_test.LithographyTest.build"]], "create_pattern() (kqcircuits.chips.lithography_test.lithographytest method)": [[15, "kqcircuits.chips.lithography_test.LithographyTest.create_pattern"]], "kqcircuits.chips.lithography_test": [[15, "module-kqcircuits.chips.lithography_test"]], "lithographytesttwoface (class in kqcircuits.chips.lithography_test_twoface)": [[16, "kqcircuits.chips.lithography_test_twoface.LithographyTestTwoface"]], "build() (kqcircuits.chips.lithography_test_twoface.lithographytesttwoface method)": [[16, "kqcircuits.chips.lithography_test_twoface.LithographyTestTwoface.build"]], "create_pattern() (kqcircuits.chips.lithography_test_twoface.lithographytesttwoface method)": [[16, "kqcircuits.chips.lithography_test_twoface.LithographyTestTwoface.create_pattern"]], "kqcircuits.chips.lithography_test_twoface": [[16, "module-kqcircuits.chips.lithography_test_twoface"]], "munchqubits (class in kqcircuits.chips.munch_qubits)": [[17, "kqcircuits.chips.munch_qubits.MunchQubits"]], "build() (kqcircuits.chips.munch_qubits.munchqubits method)": [[17, "kqcircuits.chips.munch_qubits.MunchQubits.build"]], "kqcircuits.chips.munch_qubits": [[17, "module-kqcircuits.chips.munch_qubits"]], "produce_coupler() (kqcircuits.chips.munch_qubits.munchqubits method)": [[17, "kqcircuits.chips.munch_qubits.MunchQubits.produce_coupler"]], "produce_drivelines() (kqcircuits.chips.munch_qubits.munchqubits method)": [[17, "kqcircuits.chips.munch_qubits.MunchQubits.produce_drivelines"]], "produce_probeline() (kqcircuits.chips.munch_qubits.munchqubits method)": [[17, "kqcircuits.chips.munch_qubits.MunchQubits.produce_probeline"]], "produce_qubits() (kqcircuits.chips.munch_qubits.munchqubits method)": [[17, "kqcircuits.chips.munch_qubits.MunchQubits.produce_qubits"]], "produce_readout_resonators() (kqcircuits.chips.munch_qubits.munchqubits method)": [[17, "kqcircuits.chips.munch_qubits.MunchQubits.produce_readout_resonators"]], "qualityfactor (class in kqcircuits.chips.quality_factor)": [[18, "kqcircuits.chips.quality_factor.QualityFactor"]], "build() (kqcircuits.chips.quality_factor.qualityfactor method)": [[18, "kqcircuits.chips.quality_factor.QualityFactor.build"]], "kqcircuits.chips.quality_factor": [[18, "module-kqcircuits.chips.quality_factor"]], "qualityfactortwoface (class in kqcircuits.chips.quality_factor_twoface)": [[19, "kqcircuits.chips.quality_factor_twoface.QualityFactorTwoface"]], "build() (kqcircuits.chips.quality_factor_twoface.qualityfactortwoface method)": [[19, "kqcircuits.chips.quality_factor_twoface.QualityFactorTwoface.build"]], "kqcircuits.chips.quality_factor_twoface": [[19, "module-kqcircuits.chips.quality_factor_twoface"]], "produce_resonator() (kqcircuits.chips.quality_factor_twoface.qualityfactortwoface method)": [[19, "kqcircuits.chips.quality_factor_twoface.QualityFactorTwoface.produce_resonator"]], "sampleholdertest (class in kqcircuits.chips.sample_holder_test)": [[20, "kqcircuits.chips.sample_holder_test.SampleHolderTest"]], "build() (kqcircuits.chips.sample_holder_test.sampleholdertest method)": [[20, "kqcircuits.chips.sample_holder_test.SampleHolderTest.build"]], "kqcircuits.chips.sample_holder_test": [[20, "module-kqcircuits.chips.sample_holder_test"]], "shaping (class in kqcircuits.chips.shaping)": [[21, "kqcircuits.chips.shaping.Shaping"]], "build() (kqcircuits.chips.shaping.shaping method)": [[21, "kqcircuits.chips.shaping.Shaping.build"]], "kqcircuits.chips.shaping": [[21, "module-kqcircuits.chips.shaping"]], "simple (class in kqcircuits.chips.simple)": [[22, "kqcircuits.chips.simple.Simple"]], "build() (kqcircuits.chips.simple.simple method)": [[22, "kqcircuits.chips.simple.Simple.build"]], "kqcircuits.chips.simple": [[22, "module-kqcircuits.chips.simple"]], "singlexmons (class in kqcircuits.chips.single_xmons)": [[23, "kqcircuits.chips.single_xmons.SingleXmons"]], "build() (kqcircuits.chips.single_xmons.singlexmons method)": [[23, "kqcircuits.chips.single_xmons.SingleXmons.build"]], "kqcircuits.chips.single_xmons": [[23, "module-kqcircuits.chips.single_xmons"]], "launchers (kqcircuits.chips.single_xmons.singlexmons attribute)": [[23, "kqcircuits.chips.single_xmons.SingleXmons.launchers"]], "qubits_refpoints (kqcircuits.chips.single_xmons.singlexmons attribute)": [[23, "kqcircuits.chips.single_xmons.SingleXmons.qubits_refpoints"]], "stripes (class in kqcircuits.chips.stripes)": [[24, "kqcircuits.chips.stripes.Stripes"]], "build() (kqcircuits.chips.stripes.stripes method)": [[24, "kqcircuits.chips.stripes.Stripes.build"]], "kqcircuits.chips.stripes": [[24, "module-kqcircuits.chips.stripes"]], "tsvtest (class in kqcircuits.chips.tsv_test)": [[25, "kqcircuits.chips.tsv_test.TsvTest"]], "build() (kqcircuits.chips.tsv_test.tsvtest method)": [[25, "kqcircuits.chips.tsv_test.TsvTest.build"]], "create_xsection() (kqcircuits.chips.tsv_test.tsvtest method)": [[25, "kqcircuits.chips.tsv_test.TsvTest.create_xsection"]], "kqcircuits.chips.tsv_test": [[25, "module-kqcircuits.chips.tsv_test"]], "xmonsdirectcoupling (class in kqcircuits.chips.xmons_direct_coupling)": [[26, "kqcircuits.chips.xmons_direct_coupling.XMonsDirectCoupling"]], "build() (kqcircuits.chips.xmons_direct_coupling.xmonsdirectcoupling method)": [[26, "kqcircuits.chips.xmons_direct_coupling.XMonsDirectCoupling.build"]], "kqcircuits.chips.xmons_direct_coupling": [[26, "module-kqcircuits.chips.xmons_direct_coupling"]], "produce_qubits() (kqcircuits.chips.xmons_direct_coupling.xmonsdirectcoupling method)": [[26, "kqcircuits.chips.xmons_direct_coupling.XMonsDirectCoupling.produce_qubits"]], "produce_readout_resonator() (kqcircuits.chips.xmons_direct_coupling.xmonsdirectcoupling method)": [[26, "kqcircuits.chips.xmons_direct_coupling.XMonsDirectCoupling.produce_readout_resonator"]], "kqcircuits.defaults": [[27, "module-kqcircuits.defaults"]], "kqcircuits.elements": [[28, "module-kqcircuits.elements"]], "airbridgeconnection (class in kqcircuits.elements.airbridge_connection)": [[29, "kqcircuits.elements.airbridge_connection.AirbridgeConnection"]], "build() (kqcircuits.elements.airbridge_connection.airbridgeconnection method)": [[29, "kqcircuits.elements.airbridge_connection.AirbridgeConnection.build"]], "kqcircuits.elements.airbridge_connection": [[29, "module-kqcircuits.elements.airbridge_connection"]], "kqcircuits.elements.airbridges": [[30, "module-kqcircuits.elements.airbridges"]], "airbridge (class in kqcircuits.elements.airbridges.airbridge)": [[31, "kqcircuits.elements.airbridges.airbridge.Airbridge"]], "create() (kqcircuits.elements.airbridges.airbridge.airbridge class method)": [[31, "kqcircuits.elements.airbridges.airbridge.Airbridge.create"]], "default_type (kqcircuits.elements.airbridges.airbridge.airbridge attribute)": [[31, "kqcircuits.elements.airbridges.airbridge.Airbridge.default_type"]], "kqcircuits.elements.airbridges.airbridge": [[31, "module-kqcircuits.elements.airbridges.airbridge"]], "transformation_from_shape_impl() (kqcircuits.elements.airbridges.airbridge.airbridge method)": [[31, "kqcircuits.elements.airbridges.airbridge.Airbridge.transformation_from_shape_impl"]], "airbridgemultiface (class in kqcircuits.elements.airbridges.airbridge_multi_face)": [[32, "kqcircuits.elements.airbridges.airbridge_multi_face.AirbridgeMultiFace"]], "build() (kqcircuits.elements.airbridges.airbridge_multi_face.airbridgemultiface method)": [[32, "kqcircuits.elements.airbridges.airbridge_multi_face.AirbridgeMultiFace.build"]], "default_type (kqcircuits.elements.airbridges.airbridge_multi_face.airbridgemultiface attribute)": [[32, "kqcircuits.elements.airbridges.airbridge_multi_face.AirbridgeMultiFace.default_type"]], "kqcircuits.elements.airbridges.airbridge_multi_face": [[32, "module-kqcircuits.elements.airbridges.airbridge_multi_face"]], "airbridgerectangular (class in kqcircuits.elements.airbridges.airbridge_rectangular)": [[33, "kqcircuits.elements.airbridges.airbridge_rectangular.AirbridgeRectangular"]], "build() (kqcircuits.elements.airbridges.airbridge_rectangular.airbridgerectangular method)": [[33, "kqcircuits.elements.airbridges.airbridge_rectangular.AirbridgeRectangular.build"]], "default_type (kqcircuits.elements.airbridges.airbridge_rectangular.airbridgerectangular attribute)": [[33, "kqcircuits.elements.airbridges.airbridge_rectangular.AirbridgeRectangular.default_type"]], "kqcircuits.elements.airbridges.airbridge_rectangular": [[33, "module-kqcircuits.elements.airbridges.airbridge_rectangular"]], "capacitivexcoupler (class in kqcircuits.elements.capacitive_x_coupler)": [[34, "kqcircuits.elements.capacitive_x_coupler.CapacitiveXCoupler"]], "build() (kqcircuits.elements.capacitive_x_coupler.capacitivexcoupler method)": [[34, "kqcircuits.elements.capacitive_x_coupler.CapacitiveXCoupler.build"]], "get_sim_ports() (kqcircuits.elements.capacitive_x_coupler.capacitivexcoupler class method)": [[34, "kqcircuits.elements.capacitive_x_coupler.CapacitiveXCoupler.get_sim_ports"]], "kqcircuits.elements.capacitive_x_coupler": [[34, "module-kqcircuits.elements.capacitive_x_coupler"]], "chipframe (class in kqcircuits.elements.chip_frame)": [[35, "kqcircuits.elements.chip_frame.ChipFrame"]], "build() (kqcircuits.elements.chip_frame.chipframe method)": [[35, "kqcircuits.elements.chip_frame.ChipFrame.build"]], "kqcircuits.elements.chip_frame": [[35, "module-kqcircuits.elements.chip_frame"]], "circularcapacitor (class in kqcircuits.elements.circular_capacitor)": [[36, "kqcircuits.elements.circular_capacitor.CircularCapacitor"]], "build() (kqcircuits.elements.circular_capacitor.circularcapacitor method)": [[36, "kqcircuits.elements.circular_capacitor.CircularCapacitor.build"]], "get_sim_ports() (kqcircuits.elements.circular_capacitor.circularcapacitor class method)": [[36, "kqcircuits.elements.circular_capacitor.CircularCapacitor.get_sim_ports"]], "kqcircuits.elements.circular_capacitor": [[36, "module-kqcircuits.elements.circular_capacitor"]], "element (class in kqcircuits.elements.element)": [[37, "kqcircuits.elements.element.Element"]], "library_description (kqcircuits.elements.element.element attribute)": [[37, "kqcircuits.elements.element.Element.LIBRARY_DESCRIPTION"]], "library_name (kqcircuits.elements.element.element attribute)": [[37, "kqcircuits.elements.element.Element.LIBRARY_NAME"]], "library_path (kqcircuits.elements.element.element attribute)": [[37, "kqcircuits.elements.element.Element.LIBRARY_PATH"]], "add_element() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.add_element"]], "add_port() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.add_port"]], "add_protection() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.add_protection"]], "build() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.build"]], "copy_port() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.copy_port"]], "create() (kqcircuits.elements.element.element class method)": [[37, "kqcircuits.elements.element.Element.create"]], "create_cell_from_shape() (kqcircuits.elements.element.element static method)": [[37, "kqcircuits.elements.element.Element.create_cell_from_shape"]], "create_subtype() (kqcircuits.elements.element.element class method)": [[37, "kqcircuits.elements.element.Element.create_subtype"]], "create_with_refpoints() (kqcircuits.elements.element.element class method)": [[37, "kqcircuits.elements.element.Element.create_with_refpoints"]], "display_text_impl() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.display_text_impl"]], "face() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.face"]], "face_changer_waveguides() (kqcircuits.elements.element.element static method)": [[37, "kqcircuits.elements.element.Element.face_changer_waveguides"]], "get_layer() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.get_layer"]], "get_refpoints() (in module kqcircuits.elements.element)": [[37, "kqcircuits.elements.element.get_refpoints"]], "get_refpoints() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.get_refpoints"]], "get_schema() (kqcircuits.elements.element.element class method)": [[37, "kqcircuits.elements.element.Element.get_schema"]], "get_sim_ports() (kqcircuits.elements.element.element class method)": [[37, "kqcircuits.elements.element.Element.get_sim_ports"]], "insert_cell() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.insert_cell"]], "insert_cell_into() (in module kqcircuits.elements.element)": [[37, "kqcircuits.elements.element.insert_cell_into"]], "kqcircuits.elements.element": [[37, "module-kqcircuits.elements.element"]], "left_and_right_waveguides() (kqcircuits.elements.element.element static method)": [[37, "kqcircuits.elements.element.Element.left_and_right_waveguides"]], "pcell_params_by_name() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.pcell_params_by_name"]], "post_build() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.post_build"]], "produce_impl() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.produce_impl"]], "raise_error_on_cell() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.raise_error_on_cell"]], "resolve_face() (in module kqcircuits.elements.element)": [[37, "kqcircuits.elements.element.resolve_face"]], "sync_parameters() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.sync_parameters"]], "fingercapacitorsquare (class in kqcircuits.elements.finger_capacitor_square)": [[38, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare"]], "add_waveguides() (kqcircuits.elements.finger_capacitor_square.fingercapacitorsquare method)": [[38, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare.add_waveguides"]], "build() (kqcircuits.elements.finger_capacitor_square.fingercapacitorsquare method)": [[38, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare.build"]], "can_create_from_shape_impl() (kqcircuits.elements.finger_capacitor_square.fingercapacitorsquare method)": [[38, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare.can_create_from_shape_impl"]], "cut_region() (kqcircuits.elements.finger_capacitor_square.fingercapacitorsquare method)": [[38, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare.cut_region"]], "finger_area_length() (kqcircuits.elements.finger_capacitor_square.fingercapacitorsquare method)": [[38, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare.finger_area_length"]], "finger_area_width() (kqcircuits.elements.finger_capacitor_square.fingercapacitorsquare method)": [[38, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare.finger_area_width"]], "get_ground_region() (kqcircuits.elements.finger_capacitor_square.fingercapacitorsquare method)": [[38, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare.get_ground_region"]], "get_sim_ports() (kqcircuits.elements.finger_capacitor_square.fingercapacitorsquare class method)": [[38, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare.get_sim_ports"]], "kqcircuits.elements.finger_capacitor_square": [[38, "module-kqcircuits.elements.finger_capacitor_square"]], "fingercapacitortaper (class in kqcircuits.elements.finger_capacitor_taper)": [[39, "kqcircuits.elements.finger_capacitor_taper.FingerCapacitorTaper"]], "build() (kqcircuits.elements.finger_capacitor_taper.fingercapacitortaper method)": [[39, "kqcircuits.elements.finger_capacitor_taper.FingerCapacitorTaper.build"]], "can_create_from_shape_impl() (kqcircuits.elements.finger_capacitor_taper.fingercapacitortaper method)": [[39, "kqcircuits.elements.finger_capacitor_taper.FingerCapacitorTaper.can_create_from_shape_impl"]], "kqcircuits.elements.finger_capacitor_taper": [[39, "module-kqcircuits.elements.finger_capacitor_taper"]], "kqcircuits.elements.flip_chip_connectors": [[40, "module-kqcircuits.elements.flip_chip_connectors"]], "flipchipconnector (class in kqcircuits.elements.flip_chip_connectors.flip_chip_connector)": [[41, "kqcircuits.elements.flip_chip_connectors.flip_chip_connector.FlipChipConnector"]], "create() (kqcircuits.elements.flip_chip_connectors.flip_chip_connector.flipchipconnector class method)": [[41, "kqcircuits.elements.flip_chip_connectors.flip_chip_connector.FlipChipConnector.create"]], "default_type (kqcircuits.elements.flip_chip_connectors.flip_chip_connector.flipchipconnector attribute)": [[41, "kqcircuits.elements.flip_chip_connectors.flip_chip_connector.FlipChipConnector.default_type"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector": [[41, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector"]], "flipchipconnectordc (class in kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc)": [[42, "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc.FlipChipConnectorDc"]], "build() (kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc.flipchipconnectordc method)": [[42, "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc.FlipChipConnectorDc.build"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc": [[42, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc"]], "flipchipconnectorrf (class in kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf)": [[43, "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf.FlipChipConnectorRf"]], "build() (kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf.flipchipconnectorrf method)": [[43, "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf.FlipChipConnectorRf.build"]], "get_sim_ports() (kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf.flipchipconnectorrf class method)": [[43, "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf.FlipChipConnectorRf.get_sim_ports"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf": [[43, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf"]], "kqcircuits.elements.fluxlines": [[44, "module-kqcircuits.elements.fluxlines"]], "fluxline (class in kqcircuits.elements.fluxlines.fluxline)": [[45, "kqcircuits.elements.fluxlines.fluxline.Fluxline"]], "coerce_parameters_impl() (kqcircuits.elements.fluxlines.fluxline.fluxline method)": [[45, "kqcircuits.elements.fluxlines.fluxline.Fluxline.coerce_parameters_impl"]], "create() (kqcircuits.elements.fluxlines.fluxline.fluxline class method)": [[45, "kqcircuits.elements.fluxlines.fluxline.Fluxline.create"]], "default_type (kqcircuits.elements.fluxlines.fluxline.fluxline attribute)": [[45, "kqcircuits.elements.fluxlines.fluxline.Fluxline.default_type"]], "kqcircuits.elements.fluxlines.fluxline": [[45, "module-kqcircuits.elements.fluxlines.fluxline"]], "fluxlinestandard (class in kqcircuits.elements.fluxlines.fluxline_standard)": [[46, "kqcircuits.elements.fluxlines.fluxline_standard.FluxlineStandard"]], "build() (kqcircuits.elements.fluxlines.fluxline_standard.fluxlinestandard method)": [[46, "kqcircuits.elements.fluxlines.fluxline_standard.FluxlineStandard.build"]], "kqcircuits.elements.fluxlines.fluxline_standard": [[46, "module-kqcircuits.elements.fluxlines.fluxline_standard"]], "fluxlinestraight (class in kqcircuits.elements.fluxlines.fluxline_straight)": [[47, "kqcircuits.elements.fluxlines.fluxline_straight.FluxlineStraight"]], "build() (kqcircuits.elements.fluxlines.fluxline_straight.fluxlinestraight method)": [[47, "kqcircuits.elements.fluxlines.fluxline_straight.FluxlineStraight.build"]], "kqcircuits.elements.fluxlines.fluxline_straight": [[47, "module-kqcircuits.elements.fluxlines.fluxline_straight"]], "hangerresonator (class in kqcircuits.elements.hanger_resonator)": [[48, "kqcircuits.elements.hanger_resonator.HangerResonator"]], "build() (kqcircuits.elements.hanger_resonator.hangerresonator method)": [[48, "kqcircuits.elements.hanger_resonator.HangerResonator.build"]], "get_sim_ports() (kqcircuits.elements.hanger_resonator.hangerresonator class method)": [[48, "kqcircuits.elements.hanger_resonator.HangerResonator.get_sim_ports"]], "kqcircuits.elements.hanger_resonator": [[48, "module-kqcircuits.elements.hanger_resonator"]], "launcher (class in kqcircuits.elements.launcher)": [[49, "kqcircuits.elements.launcher.Launcher"]], "build() (kqcircuits.elements.launcher.launcher method)": [[49, "kqcircuits.elements.launcher.Launcher.build"]], "kqcircuits.elements.launcher": [[49, "module-kqcircuits.elements.launcher"]], "launcherdc (class in kqcircuits.elements.launcher_dc)": [[50, "kqcircuits.elements.launcher_dc.LauncherDC"]], "build() (kqcircuits.elements.launcher_dc.launcherdc method)": [[50, "kqcircuits.elements.launcher_dc.LauncherDC.build"]], "kqcircuits.elements.launcher_dc": [[50, "module-kqcircuits.elements.launcher_dc"]], "kqcircuits.elements.markers": [[51, "module-kqcircuits.elements.markers"]], "marker (class in kqcircuits.elements.markers.marker)": [[52, "kqcircuits.elements.markers.marker.Marker"]], "create() (kqcircuits.elements.markers.marker.marker class method)": [[52, "kqcircuits.elements.markers.marker.Marker.create"]], "default_type (kqcircuits.elements.markers.marker.marker attribute)": [[52, "kqcircuits.elements.markers.marker.Marker.default_type"]], "get_marker_locations() (kqcircuits.elements.markers.marker.marker class method)": [[52, "kqcircuits.elements.markers.marker.Marker.get_marker_locations"]], "get_marker_region() (kqcircuits.elements.markers.marker.marker class method)": [[52, "kqcircuits.elements.markers.marker.Marker.get_marker_region"]], "kqcircuits.elements.markers.marker": [[52, "module-kqcircuits.elements.markers.marker"]], "produce_geometry() (kqcircuits.elements.markers.marker.marker method)": [[52, "kqcircuits.elements.markers.marker.Marker.produce_geometry"]], "markerstandard (class in kqcircuits.elements.markers.marker_standard)": [[53, "kqcircuits.elements.markers.marker_standard.MarkerStandard"]], "build() (kqcircuits.elements.markers.marker_standard.markerstandard method)": [[53, "kqcircuits.elements.markers.marker_standard.MarkerStandard.build"]], "kqcircuits.elements.markers.marker_standard": [[53, "module-kqcircuits.elements.markers.marker_standard"]], "maskmarkerfc (class in kqcircuits.elements.markers.mask_marker_fc)": [[54, "kqcircuits.elements.markers.mask_marker_fc.MaskMarkerFc"]], "build() (kqcircuits.elements.markers.mask_marker_fc.maskmarkerfc method)": [[54, "kqcircuits.elements.markers.mask_marker_fc.MaskMarkerFc.build"]], "create_cross() (kqcircuits.elements.markers.mask_marker_fc.maskmarkerfc static method)": [[54, "kqcircuits.elements.markers.mask_marker_fc.MaskMarkerFc.create_cross"]], "get_marker_locations() (kqcircuits.elements.markers.mask_marker_fc.maskmarkerfc class method)": [[54, "kqcircuits.elements.markers.mask_marker_fc.MaskMarkerFc.get_marker_locations"]], "get_marker_region() (kqcircuits.elements.markers.mask_marker_fc.maskmarkerfc class method)": [[54, "kqcircuits.elements.markers.mask_marker_fc.MaskMarkerFc.get_marker_region"]], "kqcircuits.elements.markers.mask_marker_fc": [[54, "module-kqcircuits.elements.markers.mask_marker_fc"]], "meander (class in kqcircuits.elements.meander)": [[55, "kqcircuits.elements.meander.Meander"]], "build() (kqcircuits.elements.meander.meander method)": [[55, "kqcircuits.elements.meander.Meander.build"]], "can_create_from_shape_impl() (kqcircuits.elements.meander.meander method)": [[55, "kqcircuits.elements.meander.Meander.can_create_from_shape_impl"]], "kqcircuits.elements.meander": [[55, "module-kqcircuits.elements.meander"]], "parameters_from_shape_impl() (kqcircuits.elements.meander.meander method)": [[55, "kqcircuits.elements.meander.Meander.parameters_from_shape_impl"]], "quarterwavecpwresonator (class in kqcircuits.elements.quarter_wave_cpw_resonator)": [[56, "kqcircuits.elements.quarter_wave_cpw_resonator.QuarterWaveCpwResonator"]], "build() (kqcircuits.elements.quarter_wave_cpw_resonator.quarterwavecpwresonator method)": [[56, "kqcircuits.elements.quarter_wave_cpw_resonator.QuarterWaveCpwResonator.build"]], "get_sim_ports() (kqcircuits.elements.quarter_wave_cpw_resonator.quarterwavecpwresonator class method)": [[56, "kqcircuits.elements.quarter_wave_cpw_resonator.QuarterWaveCpwResonator.get_sim_ports"]], "kqcircuits.elements.quarter_wave_cpw_resonator": [[56, "module-kqcircuits.elements.quarter_wave_cpw_resonator"]], "smoothcapacitor (class in kqcircuits.elements.smooth_capacitor)": [[57, "kqcircuits.elements.smooth_capacitor.SmoothCapacitor"]], "build() (kqcircuits.elements.smooth_capacitor.smoothcapacitor method)": [[57, "kqcircuits.elements.smooth_capacitor.SmoothCapacitor.build"]], "can_create_from_shape_impl() (kqcircuits.elements.smooth_capacitor.smoothcapacitor method)": [[57, "kqcircuits.elements.smooth_capacitor.SmoothCapacitor.can_create_from_shape_impl"]], "get_sim_ports() (kqcircuits.elements.smooth_capacitor.smoothcapacitor class method)": [[57, "kqcircuits.elements.smooth_capacitor.SmoothCapacitor.get_sim_ports"]], "kqcircuits.elements.smooth_capacitor": [[57, "module-kqcircuits.elements.smooth_capacitor"]], "spiralresonatorpolygon (class in kqcircuits.elements.spiral_resonator_polygon)": [[58, "kqcircuits.elements.spiral_resonator_polygon.SpiralResonatorPolygon"]], "build() (kqcircuits.elements.spiral_resonator_polygon.spiralresonatorpolygon method)": [[58, "kqcircuits.elements.spiral_resonator_polygon.SpiralResonatorPolygon.build"]], "kqcircuits.elements.spiral_resonator_polygon": [[58, "module-kqcircuits.elements.spiral_resonator_polygon"]], "rectangular_parameters() (in module kqcircuits.elements.spiral_resonator_polygon)": [[58, "kqcircuits.elements.spiral_resonator_polygon.rectangular_parameters"]], "kqcircuits.elements.tsvs": [[59, "module-kqcircuits.elements.tsvs"]], "tsv (class in kqcircuits.elements.tsvs.tsv)": [[60, "kqcircuits.elements.tsvs.tsv.Tsv"]], "create() (kqcircuits.elements.tsvs.tsv.tsv class method)": [[60, "kqcircuits.elements.tsvs.tsv.Tsv.create"]], "default_type (kqcircuits.elements.tsvs.tsv.tsv attribute)": [[60, "kqcircuits.elements.tsvs.tsv.Tsv.default_type"]], "kqcircuits.elements.tsvs.tsv": [[60, "module-kqcircuits.elements.tsvs.tsv"]], "tsvellipse (class in kqcircuits.elements.tsvs.tsv_ellipse)": [[61, "kqcircuits.elements.tsvs.tsv_ellipse.TsvEllipse"]], "create_tsv_connector() (kqcircuits.elements.tsvs.tsv_ellipse.tsvellipse method)": [[61, "kqcircuits.elements.tsvs.tsv_ellipse.TsvEllipse.create_tsv_connector"]], "kqcircuits.elements.tsvs.tsv_ellipse": [[61, "module-kqcircuits.elements.tsvs.tsv_ellipse"]], "produce_impl() (kqcircuits.elements.tsvs.tsv_ellipse.tsvellipse method)": [[61, "kqcircuits.elements.tsvs.tsv_ellipse.TsvEllipse.produce_impl"]], "tsvstandard (class in kqcircuits.elements.tsvs.tsv_standard)": [[62, "kqcircuits.elements.tsvs.tsv_standard.TsvStandard"]], "build() (kqcircuits.elements.tsvs.tsv_standard.tsvstandard method)": [[62, "kqcircuits.elements.tsvs.tsv_standard.TsvStandard.build"]], "kqcircuits.elements.tsvs.tsv_standard": [[62, "module-kqcircuits.elements.tsvs.tsv_standard"]], "node (class in kqcircuits.elements.waveguide_composite)": [[63, "kqcircuits.elements.waveguide_composite.Node"]], "waveguidecomposite (class in kqcircuits.elements.waveguide_composite)": [[63, "kqcircuits.elements.waveguide_composite.WaveguideComposite"]], "align (kqcircuits.elements.waveguide_composite.node attribute)": [[63, "kqcircuits.elements.waveguide_composite.Node.align"]], "angle (kqcircuits.elements.waveguide_composite.node attribute)": [[63, "kqcircuits.elements.waveguide_composite.Node.angle"]], "build() (kqcircuits.elements.waveguide_composite.waveguidecomposite method)": [[63, "kqcircuits.elements.waveguide_composite.WaveguideComposite.build"]], "check_node_type() (kqcircuits.elements.waveguide_composite.waveguidecomposite method)": [[63, "kqcircuits.elements.waveguide_composite.WaveguideComposite.check_node_type"]], "coerce_parameters_impl() (kqcircuits.elements.waveguide_composite.waveguidecomposite method)": [[63, "kqcircuits.elements.waveguide_composite.WaveguideComposite.coerce_parameters_impl"]], "create() (kqcircuits.elements.waveguide_composite.waveguidecomposite class method)": [[63, "kqcircuits.elements.waveguide_composite.WaveguideComposite.create"]], "deserialize() (kqcircuits.elements.waveguide_composite.node class method)": [[63, "kqcircuits.elements.waveguide_composite.Node.deserialize"]], "element (kqcircuits.elements.waveguide_composite.node attribute)": [[63, "kqcircuits.elements.waveguide_composite.Node.element"]], "get_segment_cells() (kqcircuits.elements.waveguide_composite.waveguidecomposite static method)": [[63, "kqcircuits.elements.waveguide_composite.WaveguideComposite.get_segment_cells"]], "get_segment_lengths() (kqcircuits.elements.waveguide_composite.waveguidecomposite static method)": [[63, "kqcircuits.elements.waveguide_composite.WaveguideComposite.get_segment_lengths"]], "inst_name (kqcircuits.elements.waveguide_composite.node attribute)": [[63, "kqcircuits.elements.waveguide_composite.Node.inst_name"]], "kqcircuits.elements.waveguide_composite": [[63, "module-kqcircuits.elements.waveguide_composite"]], "length_before (kqcircuits.elements.waveguide_composite.node attribute)": [[63, "kqcircuits.elements.waveguide_composite.Node.length_before"]], "length_increment (kqcircuits.elements.waveguide_composite.node attribute)": [[63, "kqcircuits.elements.waveguide_composite.Node.length_increment"]], "meander_direction (kqcircuits.elements.waveguide_composite.node attribute)": [[63, "kqcircuits.elements.waveguide_composite.Node.meander_direction"]], "nodes_from_string() (kqcircuits.elements.waveguide_composite.node static method)": [[63, "kqcircuits.elements.waveguide_composite.Node.nodes_from_string"]], "position (kqcircuits.elements.waveguide_composite.node attribute)": [[63, "kqcircuits.elements.waveguide_composite.Node.position"]], "produce_fixed_length_bend() (in module kqcircuits.elements.waveguide_composite)": [[63, "kqcircuits.elements.waveguide_composite.produce_fixed_length_bend"]], "produce_fixed_length_waveguide() (kqcircuits.elements.waveguide_composite.waveguidecomposite static method)": [[63, "kqcircuits.elements.waveguide_composite.WaveguideComposite.produce_fixed_length_waveguide"]], "snap_point() (kqcircuits.elements.waveguide_composite.waveguidecomposite method)": [[63, "kqcircuits.elements.waveguide_composite.WaveguideComposite.snap_point"]], "waveguidecoplanar (class in kqcircuits.elements.waveguide_coplanar)": [[64, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar"]], "build() (kqcircuits.elements.waveguide_coplanar.waveguidecoplanar method)": [[64, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar.build"]], "can_create_from_shape_impl() (kqcircuits.elements.waveguide_coplanar.waveguidecoplanar method)": [[64, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar.can_create_from_shape_impl"]], "get_corner_data() (kqcircuits.elements.waveguide_coplanar.waveguidecoplanar static method)": [[64, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar.get_corner_data"]], "is_continuous() (kqcircuits.elements.waveguide_coplanar.waveguidecoplanar static method)": [[64, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar.is_continuous"]], "kqcircuits.elements.waveguide_coplanar": [[64, "module-kqcircuits.elements.waveguide_coplanar"]], "parameters_from_shape_impl() (kqcircuits.elements.waveguide_coplanar.waveguidecoplanar method)": [[64, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar.parameters_from_shape_impl"]], "produce_end_termination() (kqcircuits.elements.waveguide_coplanar.waveguidecoplanar static method)": [[64, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar.produce_end_termination"]], "produce_waveguide() (kqcircuits.elements.waveguide_coplanar.waveguidecoplanar method)": [[64, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar.produce_waveguide"]], "transformation_from_shape_impl() (kqcircuits.elements.waveguide_coplanar.waveguidecoplanar method)": [[64, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar.transformation_from_shape_impl"]], "waveguidecoplanarcurved (class in kqcircuits.elements.waveguide_coplanar_curved)": [[65, "kqcircuits.elements.waveguide_coplanar_curved.WaveguideCoplanarCurved"]], "arc() (in module kqcircuits.elements.waveguide_coplanar_curved)": [[65, "kqcircuits.elements.waveguide_coplanar_curved.arc"]], "build() (kqcircuits.elements.waveguide_coplanar_curved.waveguidecoplanarcurved method)": [[65, "kqcircuits.elements.waveguide_coplanar_curved.WaveguideCoplanarCurved.build"]], "build_geometry() (kqcircuits.elements.waveguide_coplanar_curved.waveguidecoplanarcurved static method)": [[65, "kqcircuits.elements.waveguide_coplanar_curved.WaveguideCoplanarCurved.build_geometry"]], "coerce_parameters_impl() (kqcircuits.elements.waveguide_coplanar_curved.waveguidecoplanarcurved method)": [[65, "kqcircuits.elements.waveguide_coplanar_curved.WaveguideCoplanarCurved.coerce_parameters_impl"]], "create_curve_arcs() (kqcircuits.elements.waveguide_coplanar_curved.waveguidecoplanarcurved static method)": [[65, "kqcircuits.elements.waveguide_coplanar_curved.WaveguideCoplanarCurved.create_curve_arcs"]], "kqcircuits.elements.waveguide_coplanar_curved": [[65, "module-kqcircuits.elements.waveguide_coplanar_curved"]], "produce_curve_termination() (kqcircuits.elements.waveguide_coplanar_curved.waveguidecoplanarcurved static method)": [[65, "kqcircuits.elements.waveguide_coplanar_curved.WaveguideCoplanarCurved.produce_curve_termination"]], "waveguidecoplanarsplitter (class in kqcircuits.elements.waveguide_coplanar_splitter)": [[66, "kqcircuits.elements.waveguide_coplanar_splitter.WaveguideCoplanarSplitter"]], "build() (kqcircuits.elements.waveguide_coplanar_splitter.waveguidecoplanarsplitter method)": [[66, "kqcircuits.elements.waveguide_coplanar_splitter.WaveguideCoplanarSplitter.build"]], "kqcircuits.elements.waveguide_coplanar_splitter": [[66, "module-kqcircuits.elements.waveguide_coplanar_splitter"]], "t_cross_parameters() (in module kqcircuits.elements.waveguide_coplanar_splitter)": [[66, "kqcircuits.elements.waveguide_coplanar_splitter.t_cross_parameters"]], "waveguidecoplanarstraight (class in kqcircuits.elements.waveguide_coplanar_straight)": [[67, "kqcircuits.elements.waveguide_coplanar_straight.WaveguideCoplanarStraight"]], "build() (kqcircuits.elements.waveguide_coplanar_straight.waveguidecoplanarstraight method)": [[67, "kqcircuits.elements.waveguide_coplanar_straight.WaveguideCoplanarStraight.build"]], "build_geometry() (kqcircuits.elements.waveguide_coplanar_straight.waveguidecoplanarstraight static method)": [[67, "kqcircuits.elements.waveguide_coplanar_straight.WaveguideCoplanarStraight.build_geometry"]], "kqcircuits.elements.waveguide_coplanar_straight": [[67, "module-kqcircuits.elements.waveguide_coplanar_straight"]], "waveguidecoplanartaper (class in kqcircuits.elements.waveguide_coplanar_taper)": [[68, "kqcircuits.elements.waveguide_coplanar_taper.WaveguideCoplanarTaper"]], "build() (kqcircuits.elements.waveguide_coplanar_taper.waveguidecoplanartaper method)": [[68, "kqcircuits.elements.waveguide_coplanar_taper.WaveguideCoplanarTaper.build"]], "kqcircuits.elements.waveguide_coplanar_taper": [[68, "module-kqcircuits.elements.waveguide_coplanar_taper"]], "kqcircuits.junctions": [[69, "module-kqcircuits.junctions"]], "junction (class in kqcircuits.junctions.junction)": [[70, "kqcircuits.junctions.junction.Junction"]], "library_description (kqcircuits.junctions.junction.junction attribute)": [[70, "kqcircuits.junctions.junction.Junction.LIBRARY_DESCRIPTION"]], "library_name (kqcircuits.junctions.junction.junction attribute)": [[70, "kqcircuits.junctions.junction.Junction.LIBRARY_NAME"]], "library_path (kqcircuits.junctions.junction.junction attribute)": [[70, "kqcircuits.junctions.junction.Junction.LIBRARY_PATH"]], "coerce_parameters_impl() (kqcircuits.junctions.junction.junction method)": [[70, "kqcircuits.junctions.junction.Junction.coerce_parameters_impl"]], "create() (kqcircuits.junctions.junction.junction class method)": [[70, "kqcircuits.junctions.junction.Junction.create"]], "default_type (kqcircuits.junctions.junction.junction attribute)": [[70, "kqcircuits.junctions.junction.Junction.default_type"]], "kqcircuits.junctions.junction": [[70, "module-kqcircuits.junctions.junction"]], "manhattan (class in kqcircuits.junctions.manhattan)": [[71, "kqcircuits.junctions.manhattan.Manhattan"]], "build() (kqcircuits.junctions.manhattan.manhattan method)": [[71, "kqcircuits.junctions.manhattan.Manhattan.build"]], "kqcircuits.junctions.manhattan": [[71, "module-kqcircuits.junctions.manhattan"]], "produce_contact_pads() (kqcircuits.junctions.manhattan.manhattan method)": [[71, "kqcircuits.junctions.manhattan.Manhattan.produce_contact_pads"]], "produce_manhattan_squid() (kqcircuits.junctions.manhattan.manhattan method)": [[71, "kqcircuits.junctions.manhattan.Manhattan.produce_manhattan_squid"]], "produce_tp_large() (kqcircuits.junctions.manhattan.manhattan method)": [[71, "kqcircuits.junctions.manhattan.Manhattan.produce_tp_large"]], "produce_tp_small() (kqcircuits.junctions.manhattan.manhattan method)": [[71, "kqcircuits.junctions.manhattan.Manhattan.produce_tp_small"]], "manhattansinglejunction (class in kqcircuits.junctions.manhattan_single_junction)": [[72, "kqcircuits.junctions.manhattan_single_junction.ManhattanSingleJunction"]], "build() (kqcircuits.junctions.manhattan_single_junction.manhattansinglejunction method)": [[72, "kqcircuits.junctions.manhattan_single_junction.ManhattanSingleJunction.build"]], "kqcircuits.junctions.manhattan_single_junction": [[72, "module-kqcircuits.junctions.manhattan_single_junction"]], "produce_manhattan_junction() (kqcircuits.junctions.manhattan_single_junction.manhattansinglejunction method)": [[72, "kqcircuits.junctions.manhattan_single_junction.ManhattanSingleJunction.produce_manhattan_junction"]], "nosquid (class in kqcircuits.junctions.no_squid)": [[73, "kqcircuits.junctions.no_squid.NoSquid"]], "build() (kqcircuits.junctions.no_squid.nosquid method)": [[73, "kqcircuits.junctions.no_squid.NoSquid.build"]], "kqcircuits.junctions.no_squid": [[73, "module-kqcircuits.junctions.no_squid"]], "sim (class in kqcircuits.junctions.sim)": [[74, "kqcircuits.junctions.sim.Sim"]], "build() (kqcircuits.junctions.sim.sim method)": [[74, "kqcircuits.junctions.sim.Sim.build"]], "kqcircuits.junctions.sim": [[74, "module-kqcircuits.junctions.sim"]], "squid (class in kqcircuits.junctions.squid)": [[75, "kqcircuits.junctions.squid.Squid"]], "kqcircuits.junctions.squid": [[75, "module-kqcircuits.junctions.squid"]], "klayoutview (class in kqcircuits.klayout_view)": [[76, "kqcircuits.klayout_view.KLayoutView"]], "missinguilibraryexception": [[76, "kqcircuits.klayout_view.MissingUILibraryException"]], "active_cell (kqcircuits.klayout_view.klayoutview property)": [[76, "kqcircuits.klayout_view.KLayoutView.active_cell"]], "add_default_layers() (kqcircuits.klayout_view.klayoutview method)": [[76, "kqcircuits.klayout_view.KLayoutView.add_default_layers"]], "cell_view (kqcircuits.klayout_view.klayoutview property)": [[76, "kqcircuits.klayout_view.KLayoutView.cell_view"]], "clear_layers() (kqcircuits.klayout_view.klayoutview method)": [[76, "kqcircuits.klayout_view.KLayoutView.clear_layers"]], "close() (kqcircuits.klayout_view.klayoutview method)": [[76, "kqcircuits.klayout_view.KLayoutView.close"]], "create_top_cell() (kqcircuits.klayout_view.klayoutview method)": [[76, "kqcircuits.klayout_view.KLayoutView.create_top_cell"]], "export_all_layers_bitmap() (kqcircuits.klayout_view.klayoutview method)": [[76, "kqcircuits.klayout_view.KLayoutView.export_all_layers_bitmap"]], "export_layers_bitmaps() (kqcircuits.klayout_view.klayoutview method)": [[76, "kqcircuits.klayout_view.KLayoutView.export_layers_bitmaps"]], "export_pcell_png() (kqcircuits.klayout_view.klayoutview method)": [[76, "kqcircuits.klayout_view.KLayoutView.export_pcell_png"]], "focus() (kqcircuits.klayout_view.klayoutview method)": [[76, "kqcircuits.klayout_view.KLayoutView.focus"]], "get_active_cell() (kqcircuits.klayout_view.klayoutview static method)": [[76, "kqcircuits.klayout_view.KLayoutView.get_active_cell"]], "get_active_cell_view() (kqcircuits.klayout_view.klayoutview static method)": [[76, "kqcircuits.klayout_view.KLayoutView.get_active_cell_view"]], "get_active_layout() (kqcircuits.klayout_view.klayoutview static method)": [[76, "kqcircuits.klayout_view.KLayoutView.get_active_layout"]], "get_pixels() (kqcircuits.klayout_view.klayoutview method)": [[76, "kqcircuits.klayout_view.KLayoutView.get_pixels"]], "insert_cell() (kqcircuits.klayout_view.klayoutview method)": [[76, "kqcircuits.klayout_view.KLayoutView.insert_cell"]], "kqcircuits.klayout_view": [[76, "module-kqcircuits.klayout_view"]], "layout (kqcircuits.klayout_view.klayoutview property)": [[76, "kqcircuits.klayout_view.KLayoutView.layout"]], "layout_view (kqcircuits.klayout_view.klayoutview attribute)": [[76, "kqcircuits.klayout_view.KLayoutView.layout_view"]], "resolve_default_layer_info() (in module kqcircuits.klayout_view)": [[76, "kqcircuits.klayout_view.resolve_default_layer_info"]], "show() (kqcircuits.klayout_view.klayoutview method)": [[76, "kqcircuits.klayout_view.KLayoutView.show"]], "top_cell (kqcircuits.klayout_view.klayoutview property)": [[76, "kqcircuits.klayout_view.KLayoutView.top_cell"]], "layercluster (class in kqcircuits.layer_cluster)": [[77, "kqcircuits.layer_cluster.LayerCluster"]], "all_layers() (kqcircuits.layer_cluster.layercluster method)": [[77, "kqcircuits.layer_cluster.LayerCluster.all_layers"]], "extra_layers (kqcircuits.layer_cluster.layercluster attribute)": [[77, "kqcircuits.layer_cluster.LayerCluster.extra_layers"]], "face_id (kqcircuits.layer_cluster.layercluster attribute)": [[77, "kqcircuits.layer_cluster.LayerCluster.face_id"]], "kqcircuits.layer_cluster": [[77, "module-kqcircuits.layer_cluster"]], "main_layers (kqcircuits.layer_cluster.layercluster attribute)": [[77, "kqcircuits.layer_cluster.LayerCluster.main_layers"]], "kqcircuits.layer_config": [[78, "module-kqcircuits.layer_config"]], "kqcircuits.layer_config.default_layer_config": [[79, "module-kqcircuits.layer_config.default_layer_config"]], "kqcircuits.layer_config.example_layer_config": [[80, "module-kqcircuits.layer_config.example_layer_config"]], "kqcircuits.masks": [[81, "module-kqcircuits.masks"]], "export_bitmaps() (in module kqcircuits.masks.mask_export)": [[82, "kqcircuits.masks.mask_export.export_bitmaps"]], "export_chip() (in module kqcircuits.masks.mask_export)": [[82, "kqcircuits.masks.mask_export.export_chip"]], "export_designs() (in module kqcircuits.masks.mask_export)": [[82, "kqcircuits.masks.mask_export.export_designs"]], "export_docs() (in module kqcircuits.masks.mask_export)": [[82, "kqcircuits.masks.mask_export.export_docs"]], "export_junction_parameters() (in module kqcircuits.masks.mask_export)": [[82, "kqcircuits.masks.mask_export.export_junction_parameters"]], "export_mask() (in module kqcircuits.masks.mask_export)": [[82, "kqcircuits.masks.mask_export.export_mask"]], "export_mask_set() (in module kqcircuits.masks.mask_export)": [[82, "kqcircuits.masks.mask_export.export_mask_set"]], "export_masks_of_face() (in module kqcircuits.masks.mask_export)": [[82, "kqcircuits.masks.mask_export.export_masks_of_face"]], "get_mask_layout_full_name() (in module kqcircuits.masks.mask_export)": [[82, "kqcircuits.masks.mask_export.get_mask_layout_full_name"]], "kqcircuits.masks.mask_export": [[82, "module-kqcircuits.masks.mask_export"]], "masklayout (class in kqcircuits.masks.mask_layout)": [[83, "kqcircuits.masks.mask_layout.MaskLayout"]], "add_chips_map() (kqcircuits.masks.mask_layout.masklayout method)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.add_chips_map"]], "added_chips (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.added_chips"]], "align_to (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.align_to"]], "bbox_face_ids (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.bbox_face_ids"]], "build() (kqcircuits.masks.mask_layout.masklayout method)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.build"]], "chip_box_offset (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.chip_box_offset"]], "chip_copies (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.chip_copies"]], "chip_size (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.chip_size"]], "chip_trans (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.chip_trans"]], "chips_map (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.chips_map"]], "chips_map_legend (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.chips_map_legend"]], "chips_map_offset (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.chips_map_offset"]], "chips_placed_by_position_label (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.chips_placed_by_position_label"]], "covered_region_excluded_layers (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.covered_region_excluded_layers"]], "dice_width (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.dice_width"]], "edge_clearance (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.edge_clearance"]], "extra_chips (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.extra_chips"]], "extra_id (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.extra_id"]], "face() (kqcircuits.masks.mask_layout.masklayout method)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.face"]], "face_id (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.face_id"]], "insert_chip_copy_labels() (kqcircuits.masks.mask_layout.masklayout method)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.insert_chip_copy_labels"]], "insert_chips() (kqcircuits.masks.mask_layout.masklayout method)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.insert_chips"]], "kqcircuits.masks.mask_layout": [[83, "module-kqcircuits.masks.mask_layout"]], "layers_to_mask (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.layers_to_mask"]], "layout (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.layout"]], "mask_export_density_layers (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.mask_export_density_layers"]], "mask_export_layers (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.mask_export_layers"]], "mask_marker_offset (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.mask_marker_offset"]], "mask_markers_dict (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.mask_markers_dict"]], "mask_name_box_margin (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.mask_name_box_margin"]], "mask_name_offset (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.mask_name_offset"]], "mask_name_scale (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.mask_name_scale"]], "mask_text_scale (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.mask_text_scale"]], "mirror_labels (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.mirror_labels"]], "name (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.name"]], "overwrite_chips_by_position_label() (kqcircuits.masks.mask_layout.masklayout method)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.overwrite_chips_by_position_label"]], "position_label_to_two_coordinates() (kqcircuits.masks.mask_layout.masklayout static method)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.position_label_to_two_coordinates"]], "remove_chips (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.remove_chips"]], "submasks (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.submasks"]], "text_margin (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.text_margin"]], "top_cell (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.top_cell"]], "two_coordinates_to_position_label() (kqcircuits.masks.mask_layout.masklayout static method)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.two_coordinates_to_position_label"]], "version (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.version"]], "wafer_bottom_flat_length (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.wafer_bottom_flat_length"]], "wafer_center (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.wafer_center"]], "wafer_rad (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.wafer_rad"]], "wafer_top_flat_length (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.wafer_top_flat_length"]], "with_grid (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.with_grid"]], "maskset (class in kqcircuits.masks.mask_set)": [[84, "kqcircuits.masks.mask_set.MaskSet"]], "add_chip() (kqcircuits.masks.mask_set.maskset method)": [[84, "kqcircuits.masks.mask_set.MaskSet.add_chip"]], "add_mask_layout() (kqcircuits.masks.mask_set.maskset method)": [[84, "kqcircuits.masks.mask_set.MaskSet.add_mask_layout"]], "add_multi_face_mask_layout() (kqcircuits.masks.mask_set.maskset method)": [[84, "kqcircuits.masks.mask_set.MaskSet.add_multi_face_mask_layout"]], "build() (kqcircuits.masks.mask_set.maskset method)": [[84, "kqcircuits.masks.mask_set.MaskSet.build"]], "chips_map_from_box_map() (kqcircuits.masks.mask_set.maskset static method)": [[84, "kqcircuits.masks.mask_set.MaskSet.chips_map_from_box_map"]], "chips_map_legend (kqcircuits.masks.mask_set.maskset attribute)": [[84, "kqcircuits.masks.mask_set.MaskSet.chips_map_legend"]], "export() (kqcircuits.masks.mask_set.maskset method)": [[84, "kqcircuits.masks.mask_set.MaskSet.export"]], "export_drc (kqcircuits.masks.mask_set.maskset attribute)": [[84, "kqcircuits.masks.mask_set.MaskSet.export_drc"]], "export_path (kqcircuits.masks.mask_set.maskset attribute)": [[84, "kqcircuits.masks.mask_set.MaskSet.export_path"]], "kqcircuits.masks.mask_set": [[84, "module-kqcircuits.masks.mask_set"]], "layout (kqcircuits.masks.mask_set.maskset attribute)": [[84, "kqcircuits.masks.mask_set.MaskSet.layout"]], "mask_export_layers (kqcircuits.masks.mask_set.maskset attribute)": [[84, "kqcircuits.masks.mask_set.MaskSet.mask_export_layers"]], "mask_layouts (kqcircuits.masks.mask_set.maskset attribute)": [[84, "kqcircuits.masks.mask_set.MaskSet.mask_layouts"]], "name (kqcircuits.masks.mask_set.maskset attribute)": [[84, "kqcircuits.masks.mask_set.MaskSet.name"]], "used_chips (kqcircuits.masks.mask_set.maskset attribute)": [[84, "kqcircuits.masks.mask_set.MaskSet.used_chips"]], "version (kqcircuits.masks.mask_set.maskset attribute)": [[84, "kqcircuits.masks.mask_set.MaskSet.version"]], "with_grid (kqcircuits.masks.mask_set.maskset attribute)": [[84, "kqcircuits.masks.mask_set.MaskSet.with_grid"]], "multifacemasklayout (class in kqcircuits.masks.multi_face_mask_layout)": [[85, "kqcircuits.masks.multi_face_mask_layout.MultiFaceMaskLayout"]], "add_chips_map() (kqcircuits.masks.multi_face_mask_layout.multifacemasklayout method)": [[85, "kqcircuits.masks.multi_face_mask_layout.MultiFaceMaskLayout.add_chips_map"]], "face_ids (kqcircuits.masks.multi_face_mask_layout.multifacemasklayout attribute)": [[85, "kqcircuits.masks.multi_face_mask_layout.MultiFaceMaskLayout.face_ids"]], "kqcircuits.masks.multi_face_mask_layout": [[85, "module-kqcircuits.masks.multi_face_mask_layout"]], "mask_layouts (kqcircuits.masks.multi_face_mask_layout.multifacemasklayout attribute)": [[85, "kqcircuits.masks.multi_face_mask_layout.MultiFaceMaskLayout.mask_layouts"]], "is_standalone_session() (in module kqcircuits.pya_resolver)": [[86, "kqcircuits.pya_resolver.is_standalone_session"]], "klayout_executable_command() (in module kqcircuits.pya_resolver)": [[86, "kqcircuits.pya_resolver.klayout_executable_command"]], "kqcircuits.pya_resolver": [[86, "module-kqcircuits.pya_resolver"]], "kqcircuits.qubits": [[87, "module-kqcircuits.qubits"]], "circulartransmonsingleisland (class in kqcircuits.qubits.circular_transmon_single_island)": [[88, "kqcircuits.qubits.circular_transmon_single_island.CircularTransmonSingleIsland"]], "build() (kqcircuits.qubits.circular_transmon_single_island.circulartransmonsingleisland method)": [[88, "kqcircuits.qubits.circular_transmon_single_island.CircularTransmonSingleIsland.build"]], "get_sim_ports() (kqcircuits.qubits.circular_transmon_single_island.circulartransmonsingleisland class method)": [[88, "kqcircuits.qubits.circular_transmon_single_island.CircularTransmonSingleIsland.get_sim_ports"]], "kqcircuits.qubits.circular_transmon_single_island": [[88, "module-kqcircuits.qubits.circular_transmon_single_island"]], "concentrictransmon (class in kqcircuits.qubits.concentric_transmon)": [[89, "kqcircuits.qubits.concentric_transmon.ConcentricTransmon"]], "build() (kqcircuits.qubits.concentric_transmon.concentrictransmon method)": [[89, "kqcircuits.qubits.concentric_transmon.ConcentricTransmon.build"]], "get_sim_ports() (kqcircuits.qubits.concentric_transmon.concentrictransmon class method)": [[89, "kqcircuits.qubits.concentric_transmon.ConcentricTransmon.get_sim_ports"]], "kqcircuits.qubits.concentric_transmon": [[89, "module-kqcircuits.qubits.concentric_transmon"]], "doublepads (class in kqcircuits.qubits.double_pads)": [[90, "kqcircuits.qubits.double_pads.DoublePads"]], "build() (kqcircuits.qubits.double_pads.doublepads method)": [[90, "kqcircuits.qubits.double_pads.DoublePads.build"]], "get_sim_ports() (kqcircuits.qubits.double_pads.doublepads class method)": [[90, "kqcircuits.qubits.double_pads.DoublePads.get_sim_ports"]], "kqcircuits.qubits.double_pads": [[90, "module-kqcircuits.qubits.double_pads"]], "doublepadssplines (class in kqcircuits.qubits.double_pads_splines)": [[91, "kqcircuits.qubits.double_pads_splines.DoublePadsSplines"]], "kqcircuits.qubits.double_pads_splines": [[91, "module-kqcircuits.qubits.double_pads_splines"]], "library_description (kqcircuits.qubits.qubit.qubit attribute)": [[92, "kqcircuits.qubits.qubit.Qubit.LIBRARY_DESCRIPTION"]], "library_name (kqcircuits.qubits.qubit.qubit attribute)": [[92, "kqcircuits.qubits.qubit.Qubit.LIBRARY_NAME"]], "library_path (kqcircuits.qubits.qubit.qubit attribute)": [[92, "kqcircuits.qubits.qubit.Qubit.LIBRARY_PATH"]], "qubit (class in kqcircuits.qubits.qubit)": [[92, "kqcircuits.qubits.qubit.Qubit"]], "coerce_parameters_impl() (kqcircuits.qubits.qubit.qubit method)": [[92, "kqcircuits.qubits.qubit.Qubit.coerce_parameters_impl"]], "kqcircuits.qubits.qubit": [[92, "module-kqcircuits.qubits.qubit"]], "produce_fluxline() (kqcircuits.qubits.qubit.qubit method)": [[92, "kqcircuits.qubits.qubit.Qubit.produce_fluxline"]], "produce_squid() (kqcircuits.qubits.qubit.qubit method)": [[92, "kqcircuits.qubits.qubit.Qubit.produce_squid"]], "swissmon (class in kqcircuits.qubits.swissmon)": [[93, "kqcircuits.qubits.swissmon.Swissmon"]], "build() (kqcircuits.qubits.swissmon.swissmon method)": [[93, "kqcircuits.qubits.swissmon.Swissmon.build"]], "get_sim_ports() (kqcircuits.qubits.swissmon.swissmon class method)": [[93, "kqcircuits.qubits.swissmon.Swissmon.get_sim_ports"]], "kqcircuits.qubits.swissmon": [[93, "module-kqcircuits.qubits.swissmon"]], "argument_parser() (in module kqcircuits.run)": [[94, "kqcircuits.run.argument_parser"]], "kqcircuits.run": [[94, "module-kqcircuits.run"]], "run() (in module kqcircuits.run)": [[94, "kqcircuits.run.run"]], "run_kqc() (in module kqcircuits.run)": [[94, "kqcircuits.run.run_kqc"]], "kqcircuits.simulations": [[95, "module-kqcircuits.simulations"]], "airbridgessim (class in kqcircuits.simulations.airbridges_sim)": [[96, "kqcircuits.simulations.airbridges_sim.AirbridgesSim"]], "build() (kqcircuits.simulations.airbridges_sim.airbridgessim method)": [[96, "kqcircuits.simulations.airbridges_sim.AirbridgesSim.build"]], "kqcircuits.simulations.airbridges_sim": [[96, "module-kqcircuits.simulations.airbridges_sim"]], "crosssectionsimulation (class in kqcircuits.simulations.cross_section_simulation)": [[97, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation"]], "library_name (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation attribute)": [[97, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.LIBRARY_NAME"]], "build() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[97, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.build"]], "get_dict_by_layers() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[97, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.get_dict_by_layers"]], "get_layers() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[97, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.get_layers"]], "get_parameters() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[97, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.get_parameters"]], "get_schema() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation class method)": [[97, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.get_schema"]], "get_sim_layer() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[97, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.get_sim_layer"]], "get_simulation_data() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[97, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.get_simulation_data"]], "kqcircuits.simulations.cross_section_simulation": [[97, "module-kqcircuits.simulations.cross_section_simulation"]], "process_layers() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[97, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.process_layers"]], "register_cell_layers_as_sim_layers() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[97, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.register_cell_layers_as_sim_layers"]], "set_permittivity() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[97, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.set_permittivity"]], "emptysimulation (class in kqcircuits.simulations.empty_simulation)": [[98, "kqcircuits.simulations.empty_simulation.EmptySimulation"]], "build() (kqcircuits.simulations.empty_simulation.emptysimulation method)": [[98, "kqcircuits.simulations.empty_simulation.EmptySimulation.build"]], "kqcircuits.simulations.empty_simulation": [[98, "module-kqcircuits.simulations.empty_simulation"]], "correction_cuts() (in module kqcircuits.simulations.epr.example)": [[100, "kqcircuits.simulations.epr.example.correction_cuts"]], "extract_from() (in module kqcircuits.simulations.epr.example)": [[100, "kqcircuits.simulations.epr.example.extract_from"]], "kqcircuits.simulations.epr.example": [[100, "module-kqcircuits.simulations.epr.example"]], "partition_regions() (in module kqcircuits.simulations.epr.example)": [[100, "kqcircuits.simulations.epr.example.partition_regions"]], "correction_cuts() (in module kqcircuits.simulations.epr.swissmon)": [[101, "kqcircuits.simulations.epr.swissmon.correction_cuts"]], "extract_swissmon_from() (in module kqcircuits.simulations.epr.swissmon)": [[101, "kqcircuits.simulations.epr.swissmon.extract_swissmon_from"]], "kqcircuits.simulations.epr.swissmon": [[101, "module-kqcircuits.simulations.epr.swissmon"]], "partition_regions() (in module kqcircuits.simulations.epr.swissmon)": [[101, "kqcircuits.simulations.epr.swissmon.partition_regions"]], "extract_child_simulation() (in module kqcircuits.simulations.epr.utils)": [[102, "kqcircuits.simulations.epr.utils.extract_child_simulation"]], "kqcircuits.simulations.epr.utils": [[102, "module-kqcircuits.simulations.epr.utils"]], "kqcircuits.simulations.export": [[103, "module-kqcircuits.simulations.export"]], "kqcircuits.simulations.export.ansys": [[104, "module-kqcircuits.simulations.export.ansys"]], "export_ansys() (in module kqcircuits.simulations.export.ansys.ansys_export)": [[105, "kqcircuits.simulations.export.ansys.ansys_export.export_ansys"]], "export_ansys_bat() (in module kqcircuits.simulations.export.ansys.ansys_export)": [[105, "kqcircuits.simulations.export.ansys.ansys_export.export_ansys_bat"]], "export_ansys_json() (in module kqcircuits.simulations.export.ansys.ansys_export)": [[105, "kqcircuits.simulations.export.ansys.ansys_export.export_ansys_json"]], "kqcircuits.simulations.export.ansys.ansys_export": [[105, "module-kqcircuits.simulations.export.ansys.ansys_export"]], "ansyscrosssectionsolution (class in kqcircuits.simulations.export.ansys.ansys_solution)": [[106, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCrossSectionSolution"]], "ansyscurrentsolution (class in kqcircuits.simulations.export.ansys.ansys_solution)": [[106, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCurrentSolution"]], "ansyseigenmodesolution (class in kqcircuits.simulations.export.ansys.ansys_solution)": [[106, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution"]], "ansyshfsssolution (class in kqcircuits.simulations.export.ansys.ansys_solution)": [[106, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution"]], "ansysq3dsolution (class in kqcircuits.simulations.export.ansys.ansys_solution)": [[106, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysQ3dSolution"]], "ansyssolution (class in kqcircuits.simulations.export.ansys.ansys_solution)": [[106, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution"]], "ansysvoltagesolution (class in kqcircuits.simulations.export.ansys.ansys_solution)": [[106, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysVoltageSolution"]], "ansys_project_template (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution attribute)": [[106, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.ansys_project_template"]], "ansys_tool (kqcircuits.simulations.export.ansys.ansys_solution.ansyscrosssectionsolution attribute)": [[106, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCrossSectionSolution.ansys_tool"]], "ansys_tool (kqcircuits.simulations.export.ansys.ansys_solution.ansyscurrentsolution attribute)": [[106, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCurrentSolution.ansys_tool"]], "ansys_tool (kqcircuits.simulations.export.ansys.ansys_solution.ansyseigenmodesolution attribute)": [[106, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution.ansys_tool"]], "ansys_tool (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[106, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.ansys_tool"]], "ansys_tool (kqcircuits.simulations.export.ansys.ansys_solution.ansysq3dsolution attribute)": [[106, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysQ3dSolution.ansys_tool"]], "ansys_tool (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution attribute)": [[106, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.ansys_tool"]], "ansys_tool (kqcircuits.simulations.export.ansys.ansys_solution.ansysvoltagesolution attribute)": [[106, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysVoltageSolution.ansys_tool"]], "capacitance_export (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[106, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.capacitance_export"]], "frequency (kqcircuits.simulations.export.ansys.ansys_solution.ansyscrosssectionsolution attribute)": [[106, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCrossSectionSolution.frequency"]], "frequency (kqcircuits.simulations.export.ansys.ansys_solution.ansyscurrentsolution attribute)": [[106, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCurrentSolution.frequency"]], "frequency (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[106, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.frequency"]], "frequency (kqcircuits.simulations.export.ansys.ansys_solution.ansysq3dsolution attribute)": [[106, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysQ3dSolution.frequency"]], "frequency (kqcircuits.simulations.export.ansys.ansys_solution.ansysvoltagesolution attribute)": [[106, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysVoltageSolution.frequency"]], "frequency_units (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution attribute)": [[106, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.frequency_units"]], "get_ansys_solution() (in module kqcircuits.simulations.export.ansys.ansys_solution)": [[106, "kqcircuits.simulations.export.ansys.ansys_solution.get_ansys_solution"]], "get_solution_data() (kqcircuits.simulations.export.ansys.ansys_solution.ansyscrosssectionsolution method)": [[106, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCrossSectionSolution.get_solution_data"]], "get_solution_data() (kqcircuits.simulations.export.ansys.ansys_solution.ansyscurrentsolution method)": [[106, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCurrentSolution.get_solution_data"]], "get_solution_data() (kqcircuits.simulations.export.ansys.ansys_solution.ansyseigenmodesolution method)": [[106, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution.get_solution_data"]], "get_solution_data() (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution method)": [[106, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.get_solution_data"]], "get_solution_data() (kqcircuits.simulations.export.ansys.ansys_solution.ansysq3dsolution method)": [[106, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysQ3dSolution.get_solution_data"]], "get_solution_data() (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution method)": [[106, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.get_solution_data"]], "get_solution_data() (kqcircuits.simulations.export.ansys.ansys_solution.ansysvoltagesolution method)": [[106, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysVoltageSolution.get_solution_data"]], "integrate_energies (kqcircuits.simulations.export.ansys.ansys_solution.ansyscrosssectionsolution attribute)": [[106, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCrossSectionSolution.integrate_energies"]], "integrate_energies (kqcircuits.simulations.export.ansys.ansys_solution.ansyscurrentsolution attribute)": [[106, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCurrentSolution.integrate_energies"]], "integrate_energies (kqcircuits.simulations.export.ansys.ansys_solution.ansyseigenmodesolution attribute)": [[106, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution.integrate_energies"]], "integrate_energies (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[106, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.integrate_energies"]], "integrate_energies (kqcircuits.simulations.export.ansys.ansys_solution.ansysvoltagesolution attribute)": [[106, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysVoltageSolution.integrate_energies"]], "integrate_magnetic_flux (kqcircuits.simulations.export.ansys.ansys_solution.ansyscurrentsolution attribute)": [[106, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCurrentSolution.integrate_magnetic_flux"]], "integrate_magnetic_flux (kqcircuits.simulations.export.ansys.ansys_solution.ansyseigenmodesolution attribute)": [[106, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution.integrate_magnetic_flux"]], "integrate_magnetic_flux (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[106, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.integrate_magnetic_flux"]], "integrate_magnetic_flux (kqcircuits.simulations.export.ansys.ansys_solution.ansysvoltagesolution attribute)": [[106, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysVoltageSolution.integrate_magnetic_flux"]], "kqcircuits.simulations.export.ansys.ansys_solution": [[106, "module-kqcircuits.simulations.export.ansys.ansys_solution"]], "max_delta_e (kqcircuits.simulations.export.ansys.ansys_solution.ansyscurrentsolution attribute)": [[106, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCurrentSolution.max_delta_e"]], "max_delta_e (kqcircuits.simulations.export.ansys.ansys_solution.ansysvoltagesolution attribute)": [[106, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysVoltageSolution.max_delta_e"]], "max_delta_f (kqcircuits.simulations.export.ansys.ansys_solution.ansyseigenmodesolution attribute)": [[106, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution.max_delta_f"]], "max_delta_s (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[106, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.max_delta_s"]], "maximum_passes (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution attribute)": [[106, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.maximum_passes"]], "mesh_size (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution attribute)": [[106, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.mesh_size"]], "min_frequency (kqcircuits.simulations.export.ansys.ansys_solution.ansyseigenmodesolution attribute)": [[106, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution.min_frequency"]], "minimum_converged_passes (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution attribute)": [[106, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.minimum_converged_passes"]], "minimum_passes (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution attribute)": [[106, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.minimum_passes"]], "n_modes (kqcircuits.simulations.export.ansys.ansys_solution.ansyseigenmodesolution attribute)": [[106, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution.n_modes"]], "percent_error (kqcircuits.simulations.export.ansys.ansys_solution.ansyscrosssectionsolution attribute)": [[106, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCrossSectionSolution.percent_error"]], "percent_error (kqcircuits.simulations.export.ansys.ansys_solution.ansysq3dsolution attribute)": [[106, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysQ3dSolution.percent_error"]], "percent_refinement (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution attribute)": [[106, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.percent_refinement"]], "simulation_flags (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution attribute)": [[106, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.simulation_flags"]], "sweep_count (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[106, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.sweep_count"]], "sweep_enabled (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[106, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.sweep_enabled"]], "sweep_end (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[106, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.sweep_end"]], "sweep_start (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[106, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.sweep_start"]], "sweep_type (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[106, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.sweep_type"]], "kqcircuits.simulations.export.elmer": [[107, "module-kqcircuits.simulations.export.elmer"]], "export_elmer() (in module kqcircuits.simulations.export.elmer.elmer_export)": [[108, "kqcircuits.simulations.export.elmer.elmer_export.export_elmer"]], "export_elmer_json() (in module kqcircuits.simulations.export.elmer.elmer_export)": [[108, "kqcircuits.simulations.export.elmer.elmer_export.export_elmer_json"]], "export_elmer_script() (in module kqcircuits.simulations.export.elmer.elmer_export)": [[108, "kqcircuits.simulations.export.elmer.elmer_export.export_elmer_script"]], "kqcircuits.simulations.export.elmer.elmer_export": [[108, "module-kqcircuits.simulations.export.elmer.elmer_export"]], "elmercapacitancesolution (class in kqcircuits.simulations.export.elmer.elmer_solution)": [[109, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCapacitanceSolution"]], "elmercrosssectionsolution (class in kqcircuits.simulations.export.elmer.elmer_solution)": [[109, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution"]], "elmerepr3dsolution (class in kqcircuits.simulations.export.elmer.elmer_solution)": [[109, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerEPR3DSolution"]], "elmersolution (class in kqcircuits.simulations.export.elmer.elmer_solution)": [[109, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution"]], "elmervectorhelmholtzsolution (class in kqcircuits.simulations.export.elmer.elmer_solution)": [[109, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution"]], "boundary_conditions (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[109, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.boundary_conditions"]], "conductivity (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[109, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.conductivity"]], "convergence_tolerance (kqcircuits.simulations.export.elmer.elmer_solution.elmercapacitancesolution attribute)": [[109, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCapacitanceSolution.convergence_tolerance"]], "convergence_tolerance (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[109, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.convergence_tolerance"]], "convergence_tolerance (kqcircuits.simulations.export.elmer.elmer_solution.elmerepr3dsolution attribute)": [[109, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerEPR3DSolution.convergence_tolerance"]], "convergence_tolerance (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[109, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.convergence_tolerance"]], "frequency (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[109, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.frequency"]], "frequency_batch (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[109, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.frequency_batch"]], "get_elmer_solution() (in module kqcircuits.simulations.export.elmer.elmer_solution)": [[109, "kqcircuits.simulations.export.elmer.elmer_solution.get_elmer_solution"]], "get_solution_data() (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution method)": [[109, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.get_solution_data"]], "integrate_energies (kqcircuits.simulations.export.elmer.elmer_solution.elmercapacitancesolution attribute)": [[109, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCapacitanceSolution.integrate_energies"]], "integrate_energies (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[109, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.integrate_energies"]], "is_axisymmetric (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[109, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.is_axisymmetric"]], "kqcircuits.simulations.export.elmer.elmer_solution": [[109, "module-kqcircuits.simulations.export.elmer.elmer_solution"]], "linear_system_method (kqcircuits.simulations.export.elmer.elmer_solution.elmercapacitancesolution attribute)": [[109, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCapacitanceSolution.linear_system_method"]], "linear_system_method (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[109, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.linear_system_method"]], "linear_system_method (kqcircuits.simulations.export.elmer.elmer_solution.elmerepr3dsolution attribute)": [[109, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerEPR3DSolution.linear_system_method"]], "linear_system_preconditioning (kqcircuits.simulations.export.elmer.elmer_solution.elmercapacitancesolution attribute)": [[109, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCapacitanceSolution.linear_system_preconditioning"]], "linear_system_preconditioning (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[109, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.linear_system_preconditioning"]], "linear_system_preconditioning (kqcircuits.simulations.export.elmer.elmer_solution.elmerepr3dsolution attribute)": [[109, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerEPR3DSolution.linear_system_preconditioning"]], "london_penetration_depth (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[109, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.london_penetration_depth"]], "max_delta_s (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[109, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.max_delta_s"]], "max_error_scale (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[109, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.max_error_scale"]], "max_iterations (kqcircuits.simulations.export.elmer.elmer_solution.elmercapacitancesolution attribute)": [[109, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCapacitanceSolution.max_iterations"]], "max_iterations (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[109, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.max_iterations"]], "max_iterations (kqcircuits.simulations.export.elmer.elmer_solution.elmerepr3dsolution attribute)": [[109, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerEPR3DSolution.max_iterations"]], "max_iterations (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[109, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.max_iterations"]], "max_outlier_fraction (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[109, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.max_outlier_fraction"]], "maximum_passes (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[109, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.maximum_passes"]], "mesh_levels (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[109, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.mesh_levels"]], "mesh_size (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[109, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.mesh_size"]], "minimum_passes (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[109, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.minimum_passes"]], "nested_iteration (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[109, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.nested_iteration"]], "p_element_order (kqcircuits.simulations.export.elmer.elmer_solution.elmercapacitancesolution attribute)": [[109, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCapacitanceSolution.p_element_order"]], "p_element_order (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[109, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.p_element_order"]], "p_element_order (kqcircuits.simulations.export.elmer.elmer_solution.elmerepr3dsolution attribute)": [[109, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerEPR3DSolution.p_element_order"]], "percent_error (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[109, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.percent_error"]], "quadratic_approximation (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[109, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.quadratic_approximation"]], "run_inductance_sim (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[109, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.run_inductance_sim"]], "second_kind_basis (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[109, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.second_kind_basis"]], "sweep_type (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[109, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.sweep_type"]], "tool (kqcircuits.simulations.export.elmer.elmer_solution.elmercapacitancesolution attribute)": [[109, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCapacitanceSolution.tool"]], "tool (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[109, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.tool"]], "tool (kqcircuits.simulations.export.elmer.elmer_solution.elmerepr3dsolution attribute)": [[109, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerEPR3DSolution.tool"]], "tool (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[109, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.tool"]], "tool (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[109, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.tool"]], "use_av (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[109, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.use_av"]], "vtu_output (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[109, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.vtu_output"]], "export_and_run() (in module kqcircuits.simulations.export.export_and_run)": [[110, "kqcircuits.simulations.export.export_and_run.export_and_run"]], "kqcircuits.simulations.export.export_and_run": [[110, "module-kqcircuits.simulations.export.export_and_run"]], "run_export_script() (in module kqcircuits.simulations.export.export_and_run)": [[110, "kqcircuits.simulations.export.export_and_run.run_export_script"]], "run_simulations() (in module kqcircuits.simulations.export.export_and_run)": [[110, "kqcircuits.simulations.export.export_and_run.run_simulations"]], "export_singularity() (in module kqcircuits.simulations.export.export_singularity)": [[111, "kqcircuits.simulations.export.export_singularity.export_singularity"]], "kqcircuits.simulations.export.export_singularity": [[111, "module-kqcircuits.simulations.export.export_singularity"]], "kqcircuits.simulations.export.remote_export_and_run": [[112, "module-kqcircuits.simulations.export.remote_export_and_run"]], "remote_export_and_run() (in module kqcircuits.simulations.export.remote_export_and_run)": [[112, "kqcircuits.simulations.export.remote_export_and_run.remote_export_and_run"]], "remote_run_only() (in module kqcircuits.simulations.export.remote_export_and_run)": [[112, "kqcircuits.simulations.export.remote_export_and_run.remote_run_only"]], "copy_content_into_directory() (in module kqcircuits.simulations.export.simulation_export)": [[113, "kqcircuits.simulations.export.simulation_export.copy_content_into_directory"]], "cross_combine() (in module kqcircuits.simulations.export.simulation_export)": [[113, "kqcircuits.simulations.export.simulation_export.cross_combine"]], "cross_sweep_simulation() (in module kqcircuits.simulations.export.simulation_export)": [[113, "kqcircuits.simulations.export.simulation_export.cross_sweep_simulation"]], "cross_sweep_solution() (in module kqcircuits.simulations.export.simulation_export)": [[113, "kqcircuits.simulations.export.simulation_export.cross_sweep_solution"]], "export_simulation_json() (in module kqcircuits.simulations.export.simulation_export)": [[113, "kqcircuits.simulations.export.simulation_export.export_simulation_json"]], "export_simulation_oas() (in module kqcircuits.simulations.export.simulation_export)": [[113, "kqcircuits.simulations.export.simulation_export.export_simulation_oas"]], "get_combined_parameters() (in module kqcircuits.simulations.export.simulation_export)": [[113, "kqcircuits.simulations.export.simulation_export.get_combined_parameters"]], "get_post_process_command_lines() (in module kqcircuits.simulations.export.simulation_export)": [[113, "kqcircuits.simulations.export.simulation_export.get_post_process_command_lines"]], "kqcircuits.simulations.export.simulation_export": [[113, "module-kqcircuits.simulations.export.simulation_export"]], "sweep_simulation() (in module kqcircuits.simulations.export.simulation_export)": [[113, "kqcircuits.simulations.export.simulation_export.sweep_simulation"]], "sweep_solution() (in module kqcircuits.simulations.export.simulation_export)": [[113, "kqcircuits.simulations.export.simulation_export.sweep_solution"]], "validatesimerror": [[114, "kqcircuits.simulations.export.simulation_validate.ValidateSimError"]], "flux_integration_layer_exists_if_needed() (in module kqcircuits.simulations.export.simulation_validate)": [[114, "kqcircuits.simulations.export.simulation_validate.flux_integration_layer_exists_if_needed"]], "get_port_names() (in module kqcircuits.simulations.export.simulation_validate)": [[114, "kqcircuits.simulations.export.simulation_validate.get_port_names"]], "has_edgeport_when_forbidden() (in module kqcircuits.simulations.export.simulation_validate)": [[114, "kqcircuits.simulations.export.simulation_validate.has_edgeport_when_forbidden"]], "has_no_ports_when_required() (in module kqcircuits.simulations.export.simulation_validate)": [[114, "kqcircuits.simulations.export.simulation_validate.has_no_ports_when_required"]], "kqcircuits.simulations.export.simulation_validate": [[114, "module-kqcircuits.simulations.export.simulation_validate"]], "simulation_and_solution_types_match() (in module kqcircuits.simulations.export.simulation_validate)": [[114, "kqcircuits.simulations.export.simulation_validate.simulation_and_solution_types_match"]], "validate_simulation() (in module kqcircuits.simulations.export.simulation_validate)": [[114, "kqcircuits.simulations.export.simulation_validate.validate_simulation"]], "solution (class in kqcircuits.simulations.export.solution)": [[115, "kqcircuits.simulations.export.solution.Solution"]], "get_parameters() (kqcircuits.simulations.export.solution.solution method)": [[115, "kqcircuits.simulations.export.solution.Solution.get_parameters"]], "kqcircuits.simulations.export.solution": [[115, "module-kqcircuits.simulations.export.solution"]], "name (kqcircuits.simulations.export.solution.solution attribute)": [[115, "kqcircuits.simulations.export.solution.Solution.name"]], "kqcircuits.simulations.export.sonnet": [[116, "module-kqcircuits.simulations.export.sonnet"]], "apply_template() (in module kqcircuits.simulations.export.sonnet.parser)": [[117, "kqcircuits.simulations.export.sonnet.parser.apply_template"]], "box() (in module kqcircuits.simulations.export.sonnet.parser)": [[117, "kqcircuits.simulations.export.sonnet.parser.box"]], "control() (in module kqcircuits.simulations.export.sonnet.parser)": [[117, "kqcircuits.simulations.export.sonnet.parser.control"]], "kqcircuits.simulations.export.sonnet.parser": [[117, "module-kqcircuits.simulations.export.sonnet.parser"]], "polygon_head() (in module kqcircuits.simulations.export.sonnet.parser)": [[117, "kqcircuits.simulations.export.sonnet.parser.polygon_head"]], "polygons() (in module kqcircuits.simulations.export.sonnet.parser)": [[117, "kqcircuits.simulations.export.sonnet.parser.polygons"]], "port() (in module kqcircuits.simulations.export.sonnet.parser)": [[117, "kqcircuits.simulations.export.sonnet.parser.port"]], "refplane() (in module kqcircuits.simulations.export.sonnet.parser)": [[117, "kqcircuits.simulations.export.sonnet.parser.refplane"]], "refplanes() (in module kqcircuits.simulations.export.sonnet.parser)": [[117, "kqcircuits.simulations.export.sonnet.parser.refplanes"]], "symmetry() (in module kqcircuits.simulations.export.sonnet.parser)": [[117, "kqcircuits.simulations.export.sonnet.parser.symmetry"]], "via() (in module kqcircuits.simulations.export.sonnet.parser)": [[117, "kqcircuits.simulations.export.sonnet.parser.via"]], "export_sonnet() (in module kqcircuits.simulations.export.sonnet.sonnet_export)": [[118, "kqcircuits.simulations.export.sonnet.sonnet_export.export_sonnet"]], "export_sonnet_son() (in module kqcircuits.simulations.export.sonnet.sonnet_export)": [[118, "kqcircuits.simulations.export.sonnet.sonnet_export.export_sonnet_son"]], "kqcircuits.simulations.export.sonnet.sonnet_export": [[118, "module-kqcircuits.simulations.export.sonnet.sonnet_export"]], "poly_and_edge_indices() (in module kqcircuits.simulations.export.sonnet.sonnet_export)": [[118, "kqcircuits.simulations.export.sonnet.sonnet_export.poly_and_edge_indices"]], "export_layers() (in module kqcircuits.simulations.export.util)": [[119, "kqcircuits.simulations.export.util.export_layers"]], "find_edge_from_point_in_cell() (in module kqcircuits.simulations.export.util)": [[119, "kqcircuits.simulations.export.util.find_edge_from_point_in_cell"]], "find_edge_from_point_in_polygons() (in module kqcircuits.simulations.export.util)": [[119, "kqcircuits.simulations.export.util.find_edge_from_point_in_polygons"]], "get_enclosing_polygon() (in module kqcircuits.simulations.export.util)": [[119, "kqcircuits.simulations.export.util.get_enclosing_polygon"]], "kqcircuits.simulations.export.util": [[119, "module-kqcircuits.simulations.export.util"]], "kqcircuits.simulations.export.xsection": [[120, "module-kqcircuits.simulations.export.xsection"]], "get_epr_correction_elmer_solution() (in module kqcircuits.simulations.export.xsection.epr_correction_export)": [[121, "kqcircuits.simulations.export.xsection.epr_correction_export.get_epr_correction_elmer_solution"]], "get_epr_correction_simulations() (in module kqcircuits.simulations.export.xsection.epr_correction_export)": [[121, "kqcircuits.simulations.export.xsection.epr_correction_export.get_epr_correction_simulations"]], "kqcircuits.simulations.export.xsection.epr_correction_export": [[121, "module-kqcircuits.simulations.export.xsection.epr_correction_export"]], "create_xsections_from_simulations() (in module kqcircuits.simulations.export.xsection.xsection_export)": [[122, "kqcircuits.simulations.export.xsection.xsection_export.create_xsections_from_simulations"]], "find_layer_by_name() (in module kqcircuits.simulations.export.xsection.xsection_export)": [[122, "kqcircuits.simulations.export.xsection.xsection_export.find_layer_by_name"]], "free_layer_slots() (in module kqcircuits.simulations.export.xsection.xsection_export)": [[122, "kqcircuits.simulations.export.xsection.xsection_export.free_layer_slots"]], "kqcircuits.simulations.export.xsection.xsection_export": [[122, "module-kqcircuits.simulations.export.xsection.xsection_export"]], "separate_signal_layer_shapes() (in module kqcircuits.simulations.export.xsection.xsection_export)": [[122, "kqcircuits.simulations.export.xsection.xsection_export.separate_signal_layer_shapes"]], "visualise_xsection_cut_on_original_layout() (in module kqcircuits.simulations.export.xsection.xsection_export)": [[122, "kqcircuits.simulations.export.xsection.xsection_export.visualise_xsection_cut_on_original_layout"]], "xsection_call() (in module kqcircuits.simulations.export.xsection.xsection_export)": [[122, "kqcircuits.simulations.export.xsection.xsection_export.xsection_call"]], "partitionregion (class in kqcircuits.simulations.partition_region)": [[123, "kqcircuits.simulations.partition_region.PartitionRegion"]], "get_list_of_two() (in module kqcircuits.simulations.partition_region)": [[123, "kqcircuits.simulations.partition_region.get_list_of_two"]], "kqcircuits.simulations.partition_region": [[123, "module-kqcircuits.simulations.partition_region"]], "limit_box() (kqcircuits.simulations.partition_region.partitionregion method)": [[123, "kqcircuits.simulations.partition_region.PartitionRegion.limit_box"]], "limit_face() (kqcircuits.simulations.partition_region.partitionregion method)": [[123, "kqcircuits.simulations.partition_region.PartitionRegion.limit_face"]], "edgeport (class in kqcircuits.simulations.port)": [[124, "kqcircuits.simulations.port.EdgePort"]], "internalport (class in kqcircuits.simulations.port)": [[124, "kqcircuits.simulations.port.InternalPort"]], "port (class in kqcircuits.simulations.port)": [[124, "kqcircuits.simulations.port.Port"]], "as_dict() (kqcircuits.simulations.port.port method)": [[124, "kqcircuits.simulations.port.Port.as_dict"]], "get_etch_polygon() (kqcircuits.simulations.port.internalport method)": [[124, "kqcircuits.simulations.port.InternalPort.get_etch_polygon"]], "kqcircuits.simulations.port": [[124, "module-kqcircuits.simulations.port"]], "postprocess (class in kqcircuits.simulations.post_process)": [[125, "kqcircuits.simulations.post_process.PostProcess"]], "get_command_line() (kqcircuits.simulations.post_process.postprocess method)": [[125, "kqcircuits.simulations.post_process.PostProcess.get_command_line"]], "kqcircuits.simulations.post_process": [[125, "module-kqcircuits.simulations.post_process"]], "library_name (kqcircuits.simulations.simulation.simulation attribute)": [[126, "kqcircuits.simulations.simulation.Simulation.LIBRARY_NAME"]], "simulation (class in kqcircuits.simulations.simulation)": [[126, "kqcircuits.simulations.simulation.Simulation"]], "add_element() (kqcircuits.simulations.simulation.simulation method)": [[126, "kqcircuits.simulations.simulation.Simulation.add_element"]], "build() (kqcircuits.simulations.simulation.simulation method)": [[126, "kqcircuits.simulations.simulation.Simulation.build"]], "create_simulation_layers() (kqcircuits.simulations.simulation.simulation method)": [[126, "kqcircuits.simulations.simulation.Simulation.create_simulation_layers"]], "delete_instances() (kqcircuits.simulations.simulation.simulation static method)": [[126, "kqcircuits.simulations.simulation.Simulation.delete_instances"]], "etched_line() (kqcircuits.simulations.simulation.simulation method)": [[126, "kqcircuits.simulations.simulation.Simulation.etched_line"]], "face() (kqcircuits.simulations.simulation.simulation method)": [[126, "kqcircuits.simulations.simulation.Simulation.face"]], "face_stack_list_of_lists() (kqcircuits.simulations.simulation.simulation method)": [[126, "kqcircuits.simulations.simulation.Simulation.face_stack_list_of_lists"]], "face_z_levels() (kqcircuits.simulations.simulation.simulation method)": [[126, "kqcircuits.simulations.simulation.Simulation.face_z_levels"]], "from_cell() (kqcircuits.simulations.simulation.simulation class method)": [[126, "kqcircuits.simulations.simulation.Simulation.from_cell"]], "get_layer() (kqcircuits.simulations.simulation.simulation method)": [[126, "kqcircuits.simulations.simulation.Simulation.get_layer"]], "get_layers() (kqcircuits.simulations.simulation.simulation method)": [[126, "kqcircuits.simulations.simulation.Simulation.get_layers"]], "get_parameters() (kqcircuits.simulations.simulation.simulation method)": [[126, "kqcircuits.simulations.simulation.Simulation.get_parameters"]], "get_partition_regions() (kqcircuits.simulations.simulation.simulation method)": [[126, "kqcircuits.simulations.simulation.Simulation.get_partition_regions"]], "get_port_data() (kqcircuits.simulations.simulation.simulation method)": [[126, "kqcircuits.simulations.simulation.Simulation.get_port_data"]], "get_refpoints() (kqcircuits.simulations.simulation.simulation method)": [[126, "kqcircuits.simulations.simulation.Simulation.get_refpoints"]], "get_schema() (kqcircuits.simulations.simulation.simulation class method)": [[126, "kqcircuits.simulations.simulation.Simulation.get_schema"]], "get_simulation_data() (kqcircuits.simulations.simulation.simulation method)": [[126, "kqcircuits.simulations.simulation.Simulation.get_simulation_data"]], "get_simulation_layer_by_name() (in module kqcircuits.simulations.simulation)": [[126, "kqcircuits.simulations.simulation.get_simulation_layer_by_name"]], "ground_grid_region() (kqcircuits.simulations.simulation.simulation method)": [[126, "kqcircuits.simulations.simulation.Simulation.ground_grid_region"]], "insert_cell() (kqcircuits.simulations.simulation.simulation method)": [[126, "kqcircuits.simulations.simulation.Simulation.insert_cell"]], "insert_layer() (kqcircuits.simulations.simulation.simulation method)": [[126, "kqcircuits.simulations.simulation.Simulation.insert_layer"]], "insert_layers_between_faces() (kqcircuits.simulations.simulation.simulation method)": [[126, "kqcircuits.simulations.simulation.Simulation.insert_layers_between_faces"]], "insert_stacked_up_layers() (kqcircuits.simulations.simulation.simulation method)": [[126, "kqcircuits.simulations.simulation.Simulation.insert_stacked_up_layers"]], "ith_value() (kqcircuits.simulations.simulation.simulation static method)": [[126, "kqcircuits.simulations.simulation.Simulation.ith_value"]], "kqcircuits.simulations.simulation": [[126, "module-kqcircuits.simulations.simulation"]], "pcell_params_by_name() (kqcircuits.simulations.simulation.simulation method)": [[126, "kqcircuits.simulations.simulation.Simulation.pcell_params_by_name"]], "ports (kqcircuits.simulations.simulation.simulation attribute)": [[126, "kqcircuits.simulations.simulation.Simulation.ports"]], "produce_layers() (kqcircuits.simulations.simulation.simulation method)": [[126, "kqcircuits.simulations.simulation.Simulation.produce_layers"]], "produce_waveguide_to_port() (kqcircuits.simulations.simulation.simulation method)": [[126, "kqcircuits.simulations.simulation.Simulation.produce_waveguide_to_port"]], "region_from_layer() (kqcircuits.simulations.simulation.simulation method)": [[126, "kqcircuits.simulations.simulation.Simulation.region_from_layer"]], "simplified_region() (kqcircuits.simulations.simulation.simulation method)": [[126, "kqcircuits.simulations.simulation.Simulation.simplified_region"]], "to_1d_list() (in module kqcircuits.simulations.simulation)": [[126, "kqcircuits.simulations.simulation.to_1d_list"]], "visualise_region() (kqcircuits.simulations.simulation.simulation method)": [[126, "kqcircuits.simulations.simulation.Simulation.visualise_region"]], "get_single_element_sim_class() (in module kqcircuits.simulations.single_element_simulation)": [[127, "kqcircuits.simulations.single_element_simulation.get_single_element_sim_class"]], "kqcircuits.simulations.single_element_simulation": [[127, "module-kqcircuits.simulations.single_element_simulation"]], "singlexmonsfullchipsim (class in kqcircuits.simulations.single_xmons_full_chip_sim)": [[128, "kqcircuits.simulations.single_xmons_full_chip_sim.SingleXmonsFullChipSim"]], "build() (kqcircuits.simulations.single_xmons_full_chip_sim.singlexmonsfullchipsim method)": [[128, "kqcircuits.simulations.single_xmons_full_chip_sim.SingleXmonsFullChipSim.build"]], "kqcircuits.simulations.single_xmons_full_chip_sim": [[128, "module-kqcircuits.simulations.single_xmons_full_chip_sim"]], "waveguidessim (class in kqcircuits.simulations.waveguides_sim)": [[129, "kqcircuits.simulations.waveguides_sim.WaveGuidesSim"]], "build() (kqcircuits.simulations.waveguides_sim.waveguidessim method)": [[129, "kqcircuits.simulations.waveguides_sim.WaveGuidesSim.build"]], "kqcircuits.simulations.waveguides_sim": [[129, "module-kqcircuits.simulations.waveguides_sim"]], "produce_ground_bumps() (kqcircuits.simulations.waveguides_sim.waveguidessim method)": [[129, "kqcircuits.simulations.waveguides_sim.WaveGuidesSim.produce_ground_bumps"]], "produce_guides() (kqcircuits.simulations.waveguides_sim.waveguidessim method)": [[129, "kqcircuits.simulations.waveguides_sim.WaveGuidesSim.produce_guides"]], "xmonsdirectcouplingfullchipsim (class in kqcircuits.simulations.xmons_direct_coupling_full_chip_sim)": [[130, "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim"]], "build() (kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.xmonsdirectcouplingfullchipsim method)": [[130, "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim.build"]], "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim": [[130, "module-kqcircuits.simulations.xmons_direct_coupling_full_chip_sim"]], "produce_launcher() (kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.xmonsdirectcouplingfullchipsim method)": [[130, "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim.produce_launcher"]], "produce_launchers_sma8() (kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.xmonsdirectcouplingfullchipsim method)": [[130, "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim.produce_launchers_SMA8"]], "produce_qubit() (kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.xmonsdirectcouplingfullchipsim method)": [[130, "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim.produce_qubit"]], "produce_readout_resonator() (kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.xmonsdirectcouplingfullchipsim method)": [[130, "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim.produce_readout_resonator"]], "produce_waveguide() (kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.xmonsdirectcouplingfullchipsim method)": [[130, "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim.produce_waveguide"]], "xmonsdirectcouplingsim (class in kqcircuits.simulations.xmons_direct_coupling_sim)": [[131, "kqcircuits.simulations.xmons_direct_coupling_sim.XMonsDirectCouplingSim"]], "build() (kqcircuits.simulations.xmons_direct_coupling_sim.xmonsdirectcouplingsim method)": [[131, "kqcircuits.simulations.xmons_direct_coupling_sim.XMonsDirectCouplingSim.build"]], "kqcircuits.simulations.xmons_direct_coupling_sim": [[131, "module-kqcircuits.simulations.xmons_direct_coupling_sim"]], "produce_qubits() (kqcircuits.simulations.xmons_direct_coupling_sim.xmonsdirectcouplingsim method)": [[131, "kqcircuits.simulations.xmons_direct_coupling_sim.XMonsDirectCouplingSim.produce_qubits"]], "kqcircuits.test_structures": [[132, "module-kqcircuits.test_structures"]], "airbridgedc (class in kqcircuits.test_structures.airbridge_dc)": [[133, "kqcircuits.test_structures.airbridge_dc.AirbridgeDC"]], "build() (kqcircuits.test_structures.airbridge_dc.airbridgedc method)": [[133, "kqcircuits.test_structures.airbridge_dc.AirbridgeDC.build"]], "kqcircuits.test_structures.airbridge_dc": [[133, "module-kqcircuits.test_structures.airbridge_dc"]], "crosstest (class in kqcircuits.test_structures.cross_test)": [[134, "kqcircuits.test_structures.cross_test.CrossTest"]], "build() (kqcircuits.test_structures.cross_test.crosstest method)": [[134, "kqcircuits.test_structures.cross_test.CrossTest.build"]], "kqcircuits.test_structures.cross_test": [[134, "module-kqcircuits.test_structures.cross_test"]], "kqcircuits.test_structures.junction_test_pads": [[135, "module-kqcircuits.test_structures.junction_test_pads"]], "junctiontestpads (class in kqcircuits.test_structures.junction_test_pads.junction_test_pads)": [[136, "kqcircuits.test_structures.junction_test_pads.junction_test_pads.JunctionTestPads"]], "coerce_parameters_impl() (kqcircuits.test_structures.junction_test_pads.junction_test_pads.junctiontestpads method)": [[136, "kqcircuits.test_structures.junction_test_pads.junction_test_pads.JunctionTestPads.coerce_parameters_impl"]], "create() (kqcircuits.test_structures.junction_test_pads.junction_test_pads.junctiontestpads class method)": [[136, "kqcircuits.test_structures.junction_test_pads.junction_test_pads.JunctionTestPads.create"]], "default_type (kqcircuits.test_structures.junction_test_pads.junction_test_pads.junctiontestpads attribute)": [[136, "kqcircuits.test_structures.junction_test_pads.junction_test_pads.JunctionTestPads.default_type"]], "kqcircuits.test_structures.junction_test_pads.junction_test_pads": [[136, "module-kqcircuits.test_structures.junction_test_pads.junction_test_pads"]], "produce_squid() (kqcircuits.test_structures.junction_test_pads.junction_test_pads.junctiontestpads method)": [[136, "kqcircuits.test_structures.junction_test_pads.junction_test_pads.JunctionTestPads.produce_squid"]], "junctiontestpadssimple (class in kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple)": [[137, "kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple.JunctionTestPadsSimple"]], "build() (kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple.junctiontestpadssimple method)": [[137, "kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple.JunctionTestPadsSimple.build"]], "kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple": [[137, "module-kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple"]], "stripestest (class in kqcircuits.test_structures.stripes_test)": [[138, "kqcircuits.test_structures.stripes_test.StripesTest"]], "build() (kqcircuits.test_structures.stripes_test.stripestest method)": [[138, "kqcircuits.test_structures.stripes_test.StripesTest.build"]], "kqcircuits.test_structures.stripes_test": [[138, "module-kqcircuits.test_structures.stripes_test"]], "stripestestincreasingwidth (class in kqcircuits.test_structures.stripes_test_increasing_width)": [[139, "kqcircuits.test_structures.stripes_test_increasing_width.StripesTestIncreasingWidth"]], "build() (kqcircuits.test_structures.stripes_test_increasing_width.stripestestincreasingwidth method)": [[139, "kqcircuits.test_structures.stripes_test_increasing_width.StripesTestIncreasingWidth.build"]], "kqcircuits.test_structures.stripes_test_increasing_width": [[139, "module-kqcircuits.test_structures.stripes_test_increasing_width"]], "library_description (kqcircuits.test_structures.test_structure.teststructure attribute)": [[140, "kqcircuits.test_structures.test_structure.TestStructure.LIBRARY_DESCRIPTION"]], "library_name (kqcircuits.test_structures.test_structure.teststructure attribute)": [[140, "kqcircuits.test_structures.test_structure.TestStructure.LIBRARY_NAME"]], "library_path (kqcircuits.test_structures.test_structure.teststructure attribute)": [[140, "kqcircuits.test_structures.test_structure.TestStructure.LIBRARY_PATH"]], "teststructure (class in kqcircuits.test_structures.test_structure)": [[140, "kqcircuits.test_structures.test_structure.TestStructure"]], "kqcircuits.test_structures.test_structure": [[140, "module-kqcircuits.test_structures.test_structure"]], "produce_etched_region() (kqcircuits.test_structures.test_structure.teststructure method)": [[140, "kqcircuits.test_structures.test_structure.TestStructure.produce_etched_region"]], "produce_four_point_pads() (kqcircuits.test_structures.test_structure.teststructure method)": [[140, "kqcircuits.test_structures.test_structure.TestStructure.produce_four_point_pads"]], "produce_pad() (kqcircuits.test_structures.test_structure.teststructure method)": [[140, "kqcircuits.test_structures.test_structure.TestStructure.produce_pad"]], "tsvtestpattern (class in kqcircuits.test_structures.tsv_test_pattern)": [[141, "kqcircuits.test_structures.tsv_test_pattern.TsvTestPattern"]], "build() (kqcircuits.test_structures.tsv_test_pattern.tsvtestpattern method)": [[141, "kqcircuits.test_structures.tsv_test_pattern.TsvTestPattern.build"]], "kqcircuits.test_structures.tsv_test_pattern": [[141, "module-kqcircuits.test_structures.tsv_test_pattern"]], "kqcircuits.util": [[142, "module-kqcircuits.util"]], "areareceiver (class in kqcircuits.util.area)": [[143, "kqcircuits.util.area.AreaReceiver"]], "get_area_and_density() (in module kqcircuits.util.area)": [[143, "kqcircuits.util.area.get_area_and_density"]], "kqcircuits.util.area": [[143, "module-kqcircuits.util.area"]], "put() (kqcircuits.util.area.areareceiver method)": [[143, "kqcircuits.util.area.AreaReceiver.put"]], "count_instances_in_cell() (in module kqcircuits.util.count_instances)": [[144, "kqcircuits.util.count_instances.count_instances_in_cell"]], "kqcircuits.util.count_instances": [[144, "module-kqcircuits.util.count_instances"]], "cap_params() (in module kqcircuits.util.coupler_lib)": [[145, "kqcircuits.util.coupler_lib.cap_params"]], "kqcircuits.util.coupler_lib": [[145, "module-kqcircuits.util.coupler_lib"]], "deep_delete_all() (in module kqcircuits.util.deep_delete)": [[146, "kqcircuits.util.deep_delete.deep_delete_all"]], "deep_delete_pcells() (in module kqcircuits.util.deep_delete)": [[146, "kqcircuits.util.deep_delete.deep_delete_pcells"]], "kqcircuits.util.deep_delete": [[146, "module-kqcircuits.util.deep_delete"]], "find_ansys_executable() (in module kqcircuits.util.defaults_helper)": [[147, "kqcircuits.util.defaults_helper.find_ansys_executable"]], "kqcircuits.util.defaults_helper": [[147, "module-kqcircuits.util.defaults_helper"]], "install_kqc_gui_dependencies() (in module kqcircuits.util.dependencies)": [[148, "kqcircuits.util.dependencies.install_kqc_gui_dependencies"]], "kqcircuits.util.dependencies": [[148, "module-kqcircuits.util.dependencies"]], "editnodeplugin (class in kqcircuits.util.edit_node_plugin)": [[149, "kqcircuits.util.edit_node_plugin.EditNodePlugin"]], "editnodepluginfactory (class in kqcircuits.util.edit_node_plugin)": [[149, "kqcircuits.util.edit_node_plugin.EditNodePluginFactory"]], "activated() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[149, "kqcircuits.util.edit_node_plugin.EditNodePlugin.activated"]], "create_dialog() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[149, "kqcircuits.util.edit_node_plugin.EditNodePlugin.create_dialog"]], "create_plugin() (kqcircuits.util.edit_node_plugin.editnodepluginfactory method)": [[149, "kqcircuits.util.edit_node_plugin.EditNodePluginFactory.create_plugin"]], "deactivated() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[149, "kqcircuits.util.edit_node_plugin.EditNodePlugin.deactivated"]], "deselect() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[149, "kqcircuits.util.edit_node_plugin.EditNodePlugin.deselect"]], "has_tracking_position() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[149, "kqcircuits.util.edit_node_plugin.EditNodePlugin.has_tracking_position"]], "kqcircuits.util.edit_node_plugin": [[149, "module-kqcircuits.util.edit_node_plugin"]], "mouse_click_event() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[149, "kqcircuits.util.edit_node_plugin.EditNodePlugin.mouse_click_event"]], "mouse_moved_event() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[149, "kqcircuits.util.edit_node_plugin.EditNodePlugin.mouse_moved_event"]], "select() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[149, "kqcircuits.util.edit_node_plugin.EditNodePlugin.select"]], "tracking_position() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[149, "kqcircuits.util.edit_node_plugin.EditNodePlugin.tracking_position"]], "update() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[149, "kqcircuits.util.edit_node_plugin.EditNodePlugin.update"]], "update_form_from_node() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[149, "kqcircuits.util.edit_node_plugin.EditNodePlugin.update_form_from_node"]], "update_node_from_form() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[149, "kqcircuits.util.edit_node_plugin.EditNodePlugin.update_node_from_form"]], "create_or_empty_tmp_directory() (in module kqcircuits.util.export_helper)": [[150, "kqcircuits.util.export_helper.create_or_empty_tmp_directory"]], "export_drc_report() (in module kqcircuits.util.export_helper)": [[150, "kqcircuits.util.export_helper.export_drc_report"]], "generate_probepoints_from_file() (in module kqcircuits.util.export_helper)": [[150, "kqcircuits.util.export_helper.generate_probepoints_from_file"]], "generate_probepoints_json() (in module kqcircuits.util.export_helper)": [[150, "kqcircuits.util.export_helper.generate_probepoints_json"]], "get_active_or_new_layout() (in module kqcircuits.util.export_helper)": [[150, "kqcircuits.util.export_helper.get_active_or_new_layout"]], "get_klayout_version() (in module kqcircuits.util.export_helper)": [[150, "kqcircuits.util.export_helper.get_klayout_version"]], "get_simulation_directory() (in module kqcircuits.util.export_helper)": [[150, "kqcircuits.util.export_helper.get_simulation_directory"]], "kqcircuits.util.export_helper": [[150, "module-kqcircuits.util.export_helper"]], "open_with_klayout_or_default_application() (in module kqcircuits.util.export_helper)": [[150, "kqcircuits.util.export_helper.open_with_klayout_or_default_application"]], "write_commit_reference_file() (in module kqcircuits.util.export_helper)": [[150, "kqcircuits.util.export_helper.write_commit_reference_file"]], "write_export_machine_versions_file() (in module kqcircuits.util.export_helper)": [[150, "kqcircuits.util.export_helper.write_export_machine_versions_file"]], "arc_points() (in module kqcircuits.util.geometry_helper)": [[151, "kqcircuits.util.geometry_helper.arc_points"]], "bezier_points() (in module kqcircuits.util.geometry_helper)": [[151, "kqcircuits.util.geometry_helper.bezier_points"]], "bspline_points() (in module kqcircuits.util.geometry_helper)": [[151, "kqcircuits.util.geometry_helper.bspline_points"]], "circle_polygon() (in module kqcircuits.util.geometry_helper)": [[151, "kqcircuits.util.geometry_helper.circle_polygon"]], "get_angle() (in module kqcircuits.util.geometry_helper)": [[151, "kqcircuits.util.geometry_helper.get_angle"]], "get_cell_path_length() (in module kqcircuits.util.geometry_helper)": [[151, "kqcircuits.util.geometry_helper.get_cell_path_length"]], "get_direction() (in module kqcircuits.util.geometry_helper)": [[151, "kqcircuits.util.geometry_helper.get_direction"]], "get_object_path_length() (in module kqcircuits.util.geometry_helper)": [[151, "kqcircuits.util.geometry_helper.get_object_path_length"]], "is_clockwise() (in module kqcircuits.util.geometry_helper)": [[151, "kqcircuits.util.geometry_helper.is_clockwise"]], "kqcircuits.util.geometry_helper": [[151, "module-kqcircuits.util.geometry_helper"]], "merge_points_and_match_on_edges() (in module kqcircuits.util.geometry_helper)": [[151, "kqcircuits.util.geometry_helper.merge_points_and_match_on_edges"]], "point_shift_along_vector() (in module kqcircuits.util.geometry_helper)": [[151, "kqcircuits.util.geometry_helper.point_shift_along_vector"]], "region_with_merged_points() (in module kqcircuits.util.geometry_helper)": [[151, "kqcircuits.util.geometry_helper.region_with_merged_points"]], "region_with_merged_polygons() (in module kqcircuits.util.geometry_helper)": [[151, "kqcircuits.util.geometry_helper.region_with_merged_polygons"]], "simple_region() (in module kqcircuits.util.geometry_helper)": [[151, "kqcircuits.util.geometry_helper.simple_region"]], "vector_length_and_direction() (in module kqcircuits.util.geometry_helper)": [[151, "kqcircuits.util.geometry_helper.vector_length_and_direction"]], "geometryjsondecoder (class in kqcircuits.util.geometry_json_encoder)": [[152, "kqcircuits.util.geometry_json_encoder.GeometryJsonDecoder"]], "geometryjsonencoder (class in kqcircuits.util.geometry_json_encoder)": [[152, "kqcircuits.util.geometry_json_encoder.GeometryJsonEncoder"]], "decode_dict_as_python_obj() (in module kqcircuits.util.geometry_json_encoder)": [[152, "kqcircuits.util.geometry_json_encoder.decode_dict_as_python_obj"]], "default() (kqcircuits.util.geometry_json_encoder.geometryjsonencoder method)": [[152, "kqcircuits.util.geometry_json_encoder.GeometryJsonEncoder.default"]], "encode_python_obj_as_dict() (in module kqcircuits.util.geometry_json_encoder)": [[152, "kqcircuits.util.geometry_json_encoder.encode_python_obj_as_dict"]], "kqcircuits.util.geometry_json_encoder": [[152, "module-kqcircuits.util.geometry_json_encoder"]], "kqcircuits.util.groundgrid": [[153, "module-kqcircuits.util.groundgrid"]], "make_grid() (in module kqcircuits.util.groundgrid)": [[153, "kqcircuits.util.groundgrid.make_grid"]], "get_all_node_elements() (in module kqcircuits.util.gui_helper)": [[154, "kqcircuits.util.gui_helper.get_all_node_elements"]], "get_nodes_near_position() (in module kqcircuits.util.gui_helper)": [[154, "kqcircuits.util.gui_helper.get_nodes_near_position"]], "get_valid_node_elements() (in module kqcircuits.util.gui_helper)": [[154, "kqcircuits.util.gui_helper.get_valid_node_elements"]], "kqcircuits.util.gui_helper": [[154, "module-kqcircuits.util.gui_helper"]], "node_from_text() (in module kqcircuits.util.gui_helper)": [[154, "kqcircuits.util.gui_helper.node_from_text"]], "node_to_text() (in module kqcircuits.util.gui_helper)": [[154, "kqcircuits.util.gui_helper.node_to_text"]], "replace_node() (in module kqcircuits.util.gui_helper)": [[154, "kqcircuits.util.gui_helper.replace_node"]], "kqcircuits.util.import_helper": [[155, "module-kqcircuits.util.import_helper"]], "module_from_file() (in module kqcircuits.util.import_helper)": [[155, "kqcircuits.util.import_helper.module_from_file"]], "bottomleft (kqcircuits.util.label.labelorigin attribute)": [[156, "kqcircuits.util.label.LabelOrigin.BOTTOMLEFT"]], "bottomright (kqcircuits.util.label.labelorigin attribute)": [[156, "kqcircuits.util.label.LabelOrigin.BOTTOMRIGHT"]], "labelorigin (class in kqcircuits.util.label)": [[156, "kqcircuits.util.label.LabelOrigin"]], "topleft (kqcircuits.util.label.labelorigin attribute)": [[156, "kqcircuits.util.label.LabelOrigin.TOPLEFT"]], "topright (kqcircuits.util.label.labelorigin attribute)": [[156, "kqcircuits.util.label.LabelOrigin.TOPRIGHT"]], "kqcircuits.util.label": [[156, "module-kqcircuits.util.label"]], "produce_label() (in module kqcircuits.util.label)": [[156, "kqcircuits.util.label.produce_label"]], "get_text_polygon() (in module kqcircuits.util.label_polygons)": [[157, "kqcircuits.util.label_polygons.get_text_polygon"]], "kqcircuits.util.label_polygons": [[157, "module-kqcircuits.util.label_polygons"]], "load_font_polygons() (in module kqcircuits.util.label_polygons)": [[157, "kqcircuits.util.label_polygons.load_font_polygons"]], "convert_cells_to_code() (in module kqcircuits.util.layout_to_code)": [[158, "kqcircuits.util.layout_to_code.convert_cells_to_code"]], "extract_pcell_data_from_views() (in module kqcircuits.util.layout_to_code)": [[158, "kqcircuits.util.layout_to_code.extract_pcell_data_from_views"]], "get_node_params() (in module kqcircuits.util.layout_to_code)": [[158, "kqcircuits.util.layout_to_code.get_node_params"]], "kqcircuits.util.layout_to_code": [[158, "module-kqcircuits.util.layout_to_code"]], "restore_pcells_to_views() (in module kqcircuits.util.layout_to_code)": [[158, "kqcircuits.util.layout_to_code.restore_pcells_to_views"]], "delete_all_libraries() (in module kqcircuits.util.library_helper)": [[159, "kqcircuits.util.library_helper.delete_all_libraries"]], "delete_library() (in module kqcircuits.util.library_helper)": [[159, "kqcircuits.util.library_helper.delete_library"]], "element_by_class_name() (in module kqcircuits.util.library_helper)": [[159, "kqcircuits.util.library_helper.element_by_class_name"]], "get_library_paths() (in module kqcircuits.util.library_helper)": [[159, "kqcircuits.util.library_helper.get_library_paths"]], "kqcircuits.util.library_helper": [[159, "module-kqcircuits.util.library_helper"]], "load_libraries() (in module kqcircuits.util.library_helper)": [[159, "kqcircuits.util.library_helper.load_libraries"]], "to_library_name() (in module kqcircuits.util.library_helper)": [[159, "kqcircuits.util.library_helper.to_library_name"]], "to_module_name() (in module kqcircuits.util.library_helper)": [[159, "kqcircuits.util.library_helper.to_module_name"]], "kqcircuits.util.log_router": [[160, "module-kqcircuits.util.log_router"]], "route_log() (in module kqcircuits.util.log_router)": [[160, "kqcircuits.util.log_router.route_log"]], "convert_child_instances_to_static() (in module kqcircuits.util.merge)": [[161, "kqcircuits.util.merge.convert_child_instances_to_static"]], "kqcircuits.util.merge": [[161, "module-kqcircuits.util.merge"]], "merge_layers() (in module kqcircuits.util.merge)": [[161, "kqcircuits.util.merge.merge_layers"]], "merge_layout_layers_on_face() (in module kqcircuits.util.merge)": [[161, "kqcircuits.util.merge.merge_layout_layers_on_face"]], "export_cell_netlist() (in module kqcircuits.util.netlist_extraction)": [[162, "kqcircuits.util.netlist_extraction.export_cell_netlist"]], "extract_circuits() (in module kqcircuits.util.netlist_extraction)": [[162, "kqcircuits.util.netlist_extraction.extract_circuits"]], "extract_nets() (in module kqcircuits.util.netlist_extraction)": [[162, "kqcircuits.util.netlist_extraction.extract_nets"]], "kqcircuits.util.netlist_extraction": [[162, "module-kqcircuits.util.netlist_extraction"]], "draw_graph() (in module kqcircuits.util.netlist_graph)": [[163, "kqcircuits.util.netlist_graph.draw_graph"]], "kqcircuits.util.netlist_graph": [[163, "module-kqcircuits.util.netlist_graph"]], "network_as_graph() (in module kqcircuits.util.netlist_graph)": [[163, "kqcircuits.util.netlist_graph.network_as_graph"]], "param (class in kqcircuits.util.parameters)": [[164, "kqcircuits.util.parameters.Param"]], "typeboolean (kqcircuits.util.parameters.pdt attribute)": [[164, "kqcircuits.util.parameters.pdt.TypeBoolean"]], "typedouble (kqcircuits.util.parameters.pdt attribute)": [[164, "kqcircuits.util.parameters.pdt.TypeDouble"]], "typeint (kqcircuits.util.parameters.pdt attribute)": [[164, "kqcircuits.util.parameters.pdt.TypeInt"]], "typelayer (kqcircuits.util.parameters.pdt attribute)": [[164, "kqcircuits.util.parameters.pdt.TypeLayer"]], "typelist (kqcircuits.util.parameters.pdt attribute)": [[164, "kqcircuits.util.parameters.pdt.TypeList"]], "typenone (kqcircuits.util.parameters.pdt attribute)": [[164, "kqcircuits.util.parameters.pdt.TypeNone"]], "typeshape (kqcircuits.util.parameters.pdt attribute)": [[164, "kqcircuits.util.parameters.pdt.TypeShape"]], "typestring (kqcircuits.util.parameters.pdt attribute)": [[164, "kqcircuits.util.parameters.pdt.TypeString"]], "add_parameter() (in module kqcircuits.util.parameters)": [[164, "kqcircuits.util.parameters.add_parameter"]], "add_parameters_from() (in module kqcircuits.util.parameters)": [[164, "kqcircuits.util.parameters.add_parameters_from"]], "get_all() (kqcircuits.util.parameters.param class method)": [[164, "kqcircuits.util.parameters.Param.get_all"]], "kqcircuits.util.parameters": [[164, "module-kqcircuits.util.parameters"]], "pdt (class in kqcircuits.util.parameters)": [[164, "kqcircuits.util.parameters.pdt"]], "kqcircuits.util.plugin_startup": [[165, "module-kqcircuits.util.plugin_startup"]], "register_plugins() (in module kqcircuits.util.plugin_startup)": [[165, "kqcircuits.util.plugin_startup.register_plugins"]], "junctionsimport (class in kqcircuits.util.refpoints)": [[166, "kqcircuits.util.refpoints.JunctionSimPort"]], "refpointtoedgeport (class in kqcircuits.util.refpoints)": [[166, "kqcircuits.util.refpoints.RefpointToEdgePort"]], "refpointtointernalport (class in kqcircuits.util.refpoints)": [[166, "kqcircuits.util.refpoints.RefpointToInternalPort"]], "refpointtosimport (class in kqcircuits.util.refpoints)": [[166, "kqcircuits.util.refpoints.RefpointToSimPort"]], "refpoints (class in kqcircuits.util.refpoints)": [[166, "kqcircuits.util.refpoints.Refpoints"]], "waveguidetosimport (class in kqcircuits.util.refpoints)": [[166, "kqcircuits.util.refpoints.WaveguideToSimPort"]], "a (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[166, "kqcircuits.util.refpoints.WaveguideToSimPort.a"]], "airbridge (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[166, "kqcircuits.util.refpoints.WaveguideToSimPort.airbridge"]], "b (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[166, "kqcircuits.util.refpoints.WaveguideToSimPort.b"]], "cell (kqcircuits.util.refpoints.refpoints attribute)": [[166, "kqcircuits.util.refpoints.Refpoints.cell"]], "dict() (kqcircuits.util.refpoints.refpoints method)": [[166, "kqcircuits.util.refpoints.Refpoints.dict"]], "face (kqcircuits.util.refpoints.junctionsimport attribute)": [[166, "kqcircuits.util.refpoints.JunctionSimPort.face"]], "face (kqcircuits.util.refpoints.refpointtosimport attribute)": [[166, "kqcircuits.util.refpoints.RefpointToSimPort.face"]], "face (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[166, "kqcircuits.util.refpoints.WaveguideToSimPort.face"]], "floating (kqcircuits.util.refpoints.junctionsimport attribute)": [[166, "kqcircuits.util.refpoints.JunctionSimPort.floating"]], "items() (kqcircuits.util.refpoints.refpoints method)": [[166, "kqcircuits.util.refpoints.Refpoints.items"]], "keys() (kqcircuits.util.refpoints.refpoints method)": [[166, "kqcircuits.util.refpoints.Refpoints.keys"]], "kqcircuits.util.refpoints": [[166, "module-kqcircuits.util.refpoints"]], "layer (kqcircuits.util.refpoints.refpoints attribute)": [[166, "kqcircuits.util.refpoints.Refpoints.layer"]], "other_refpoint (kqcircuits.util.refpoints.junctionsimport attribute)": [[166, "kqcircuits.util.refpoints.JunctionSimPort.other_refpoint"]], "over_etching (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[166, "kqcircuits.util.refpoints.WaveguideToSimPort.over_etching"]], "rec_levels (kqcircuits.util.refpoints.refpoints attribute)": [[166, "kqcircuits.util.refpoints.Refpoints.rec_levels"]], "refpoint (kqcircuits.util.refpoints.junctionsimport attribute)": [[166, "kqcircuits.util.refpoints.JunctionSimPort.refpoint"]], "refpoint (kqcircuits.util.refpoints.refpointtosimport attribute)": [[166, "kqcircuits.util.refpoints.RefpointToSimPort.refpoint"]], "refpoint (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[166, "kqcircuits.util.refpoints.WaveguideToSimPort.refpoint"]], "side (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[166, "kqcircuits.util.refpoints.WaveguideToSimPort.side"]], "term1 (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[166, "kqcircuits.util.refpoints.WaveguideToSimPort.term1"]], "towards (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[166, "kqcircuits.util.refpoints.WaveguideToSimPort.towards"]], "trans (kqcircuits.util.refpoints.refpoints attribute)": [[166, "kqcircuits.util.refpoints.Refpoints.trans"]], "turn_radius (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[166, "kqcircuits.util.refpoints.WaveguideToSimPort.turn_radius"]], "use_internal_ports (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[166, "kqcircuits.util.refpoints.WaveguideToSimPort.use_internal_ports"]], "values() (kqcircuits.util.refpoints.refpoints method)": [[166, "kqcircuits.util.refpoints.Refpoints.values"]], "waveguide_length (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[166, "kqcircuits.util.refpoints.WaveguideToSimPort.waveguide_length"]], "junctionentry (class in kqcircuits.util.replace_junctions)": [[167, "kqcircuits.util.replace_junctions.JunctionEntry"]], "check_static_cell_has_junctions() (in module kqcircuits.util.replace_junctions)": [[167, "kqcircuits.util.replace_junctions.check_static_cell_has_junctions"]], "convert_cells_to_static() (in module kqcircuits.util.replace_junctions)": [[167, "kqcircuits.util.replace_junctions.convert_cells_to_static"]], "copy_one_layer_of_cell() (in module kqcircuits.util.replace_junctions)": [[167, "kqcircuits.util.replace_junctions.copy_one_layer_of_cell"]], "extract_junctions() (in module kqcircuits.util.replace_junctions)": [[167, "kqcircuits.util.replace_junctions.extract_junctions"]], "get_tuned_junction_json() (in module kqcircuits.util.replace_junctions)": [[167, "kqcircuits.util.replace_junctions.get_tuned_junction_json"]], "kqcircuits.util.replace_junctions": [[167, "module-kqcircuits.util.replace_junctions"]], "place_junctions() (in module kqcircuits.util.replace_junctions)": [[167, "kqcircuits.util.replace_junctions.place_junctions"]], "replace_squid() (in module kqcircuits.util.replace_junctions)": [[167, "kqcircuits.util.replace_junctions.replace_squid"]], "replace_squids() (in module kqcircuits.util.replace_junctions)": [[167, "kqcircuits.util.replace_junctions.replace_squids"]], "kqcircuits.util.symmetric_polygons": [[168, "module-kqcircuits.util.symmetric_polygons"]], "polygon_with_hsym() (in module kqcircuits.util.symmetric_polygons)": [[168, "kqcircuits.util.symmetric_polygons.polygon_with_hsym"]], "polygon_with_sym() (in module kqcircuits.util.symmetric_polygons)": [[168, "kqcircuits.util.symmetric_polygons.polygon_with_sym"]], "polygon_with_vsym() (in module kqcircuits.util.symmetric_polygons)": [[168, "kqcircuits.util.symmetric_polygons.polygon_with_vsym"]]}})