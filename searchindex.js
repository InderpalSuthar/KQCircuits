Search.setIndex({"docnames": ["about", "api/kqcircuits", "api/kqcircuits.chips", "api/kqcircuits.chips.airbridge_crossings", "api/kqcircuits.chips.airbridge_dc_test", "api/kqcircuits.chips.chip", "api/kqcircuits.chips.crossing_twoface", "api/kqcircuits.chips.daisy_woven", "api/kqcircuits.chips.dc_test", "api/kqcircuits.chips.demo", "api/kqcircuits.chips.demo_twoface", "api/kqcircuits.chips.empty", "api/kqcircuits.chips.junction_test", "api/kqcircuits.chips.junction_test2", "api/kqcircuits.chips.launchers", "api/kqcircuits.chips.lithography_test", "api/kqcircuits.chips.lithography_test_twoface", "api/kqcircuits.chips.munch_qubits", "api/kqcircuits.chips.quality_factor", "api/kqcircuits.chips.quality_factor_twoface", "api/kqcircuits.chips.sample_holder_test", "api/kqcircuits.chips.shaping", "api/kqcircuits.chips.simple", "api/kqcircuits.chips.single_xmons", "api/kqcircuits.chips.stripes", "api/kqcircuits.chips.tsv_test", "api/kqcircuits.chips.xmons_direct_coupling", "api/kqcircuits.defaults", "api/kqcircuits.elements", "api/kqcircuits.elements.airbridge_connection", "api/kqcircuits.elements.airbridges", "api/kqcircuits.elements.airbridges.airbridge", "api/kqcircuits.elements.airbridges.airbridge_multi_face", "api/kqcircuits.elements.airbridges.airbridge_rectangular", "api/kqcircuits.elements.capacitive_x_coupler", "api/kqcircuits.elements.chip_frame", "api/kqcircuits.elements.circular_capacitor", "api/kqcircuits.elements.element", "api/kqcircuits.elements.finger_capacitor_square", "api/kqcircuits.elements.finger_capacitor_taper", "api/kqcircuits.elements.flip_chip_connectors", "api/kqcircuits.elements.flip_chip_connectors.flip_chip_connector", "api/kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc", "api/kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf", "api/kqcircuits.elements.fluxlines", "api/kqcircuits.elements.fluxlines.fluxline", "api/kqcircuits.elements.fluxlines.fluxline_standard", "api/kqcircuits.elements.fluxlines.fluxline_straight", "api/kqcircuits.elements.hanger_resonator", "api/kqcircuits.elements.launcher", "api/kqcircuits.elements.launcher_dc", "api/kqcircuits.elements.markers", "api/kqcircuits.elements.markers.marker", "api/kqcircuits.elements.markers.marker_standard", "api/kqcircuits.elements.markers.mask_marker_fc", "api/kqcircuits.elements.meander", "api/kqcircuits.elements.quarter_wave_cpw_resonator", "api/kqcircuits.elements.smooth_capacitor", "api/kqcircuits.elements.spiral_resonator_polygon", "api/kqcircuits.elements.tsvs", "api/kqcircuits.elements.tsvs.tsv", "api/kqcircuits.elements.tsvs.tsv_ellipse", "api/kqcircuits.elements.tsvs.tsv_standard", "api/kqcircuits.elements.waveguide_composite", "api/kqcircuits.elements.waveguide_coplanar", "api/kqcircuits.elements.waveguide_coplanar_curved", "api/kqcircuits.elements.waveguide_coplanar_splitter", "api/kqcircuits.elements.waveguide_coplanar_straight", "api/kqcircuits.elements.waveguide_coplanar_taper", "api/kqcircuits.junctions", "api/kqcircuits.junctions.junction", "api/kqcircuits.junctions.manhattan", "api/kqcircuits.junctions.manhattan_single_junction", "api/kqcircuits.junctions.no_squid", "api/kqcircuits.junctions.sim", "api/kqcircuits.junctions.squid", "api/kqcircuits.klayout_view", "api/kqcircuits.layer_cluster", "api/kqcircuits.layer_config", "api/kqcircuits.layer_config.default_layer_config", "api/kqcircuits.layer_config.example_layer_config", "api/kqcircuits.masks", "api/kqcircuits.masks.mask_export", "api/kqcircuits.masks.mask_layout", "api/kqcircuits.masks.mask_set", "api/kqcircuits.masks.multi_face_mask_layout", "api/kqcircuits.pya_resolver", "api/kqcircuits.qubits", "api/kqcircuits.qubits.circular_transmon_single_island", "api/kqcircuits.qubits.concentric_transmon", "api/kqcircuits.qubits.double_pads", "api/kqcircuits.qubits.double_pads_splines", "api/kqcircuits.qubits.qubit", "api/kqcircuits.qubits.swissmon", "api/kqcircuits.run", "api/kqcircuits.simulations", "api/kqcircuits.simulations.airbridges_sim", "api/kqcircuits.simulations.cross_section_simulation", "api/kqcircuits.simulations.empty_simulation", "api/kqcircuits.simulations.epr", "api/kqcircuits.simulations.epr.circular_capacitor", "api/kqcircuits.simulations.epr.example", "api/kqcircuits.simulations.epr.gui_config", "api/kqcircuits.simulations.epr.smooth_capacitor", "api/kqcircuits.simulations.epr.swissmon", "api/kqcircuits.simulations.epr.utils", "api/kqcircuits.simulations.export", "api/kqcircuits.simulations.export.ansys", "api/kqcircuits.simulations.export.ansys.ansys_export", "api/kqcircuits.simulations.export.ansys.ansys_solution", "api/kqcircuits.simulations.export.elmer", "api/kqcircuits.simulations.export.elmer.elmer_export", "api/kqcircuits.simulations.export.elmer.elmer_solution", "api/kqcircuits.simulations.export.export_and_run", "api/kqcircuits.simulations.export.export_singularity", "api/kqcircuits.simulations.export.remote_export_and_run", "api/kqcircuits.simulations.export.simulation_export", "api/kqcircuits.simulations.export.simulation_validate", "api/kqcircuits.simulations.export.solution", "api/kqcircuits.simulations.export.sonnet", "api/kqcircuits.simulations.export.sonnet.parser", "api/kqcircuits.simulations.export.sonnet.sonnet_export", "api/kqcircuits.simulations.export.util", "api/kqcircuits.simulations.export.xsection", "api/kqcircuits.simulations.export.xsection.epr_correction_export", "api/kqcircuits.simulations.export.xsection.xsection_export", "api/kqcircuits.simulations.partition_region", "api/kqcircuits.simulations.port", "api/kqcircuits.simulations.post_process", "api/kqcircuits.simulations.simulation", "api/kqcircuits.simulations.single_element_simulation", "api/kqcircuits.simulations.single_xmons_full_chip_sim", "api/kqcircuits.simulations.waveguides_sim", "api/kqcircuits.simulations.xmons_direct_coupling_full_chip_sim", "api/kqcircuits.simulations.xmons_direct_coupling_sim", "api/kqcircuits.test_structures", "api/kqcircuits.test_structures.airbridge_dc", "api/kqcircuits.test_structures.cross_test", "api/kqcircuits.test_structures.junction_test_pads", "api/kqcircuits.test_structures.junction_test_pads.junction_test_pads", "api/kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple", "api/kqcircuits.test_structures.stripes_test", "api/kqcircuits.test_structures.stripes_test_increasing_width", "api/kqcircuits.test_structures.test_structure", "api/kqcircuits.test_structures.tsv_test_pattern", "api/kqcircuits.util", "api/kqcircuits.util.area", "api/kqcircuits.util.count_instances", "api/kqcircuits.util.coupler_lib", "api/kqcircuits.util.deep_delete", "api/kqcircuits.util.defaults_helper", "api/kqcircuits.util.dependencies", "api/kqcircuits.util.edit_node_plugin", "api/kqcircuits.util.export_helper", "api/kqcircuits.util.geometry_helper", "api/kqcircuits.util.geometry_json_encoder", "api/kqcircuits.util.groundgrid", "api/kqcircuits.util.gui_helper", "api/kqcircuits.util.import_helper", "api/kqcircuits.util.label", "api/kqcircuits.util.label_polygons", "api/kqcircuits.util.layout_to_code", "api/kqcircuits.util.library_helper", "api/kqcircuits.util.log_router", "api/kqcircuits.util.merge", "api/kqcircuits.util.netlist_extraction", "api/kqcircuits.util.netlist_graph", "api/kqcircuits.util.parameters", "api/kqcircuits.util.plugin_startup", "api/kqcircuits.util.refpoints", "api/kqcircuits.util.replace_junctions", "api/kqcircuits.util.symmetric_polygons", "citing", "contributing", "developer/architecture", "developer/coding_style", "developer/containers", "developer/documentation", "developer/index", "developer/setup", "developer/standalone", "developer/testing", "getting_started/first_look", "getting_started/gui_features/gui_elements", "getting_started/gui_features/gui_elements_to_code", "getting_started/gui_features/gui_menu_commands", "getting_started/gui_features/gui_tutorial", "getting_started/gui_features/gui_waveguides", "getting_started/gui_features/index", "getting_started/index", "getting_started/python_workflow/faces", "getting_started/python_workflow/index", "getting_started/python_workflow/layers", "getting_started/python_workflow/python_example", "getting_started/python_workflow/python_start", "getting_started/python_workflow/python_structure", "getting_started/python_workflow/refpoints", "getting_started/salt", "index", "installation/index", "installation/klayout", "installation/known_issues", "support", "trademarks", "user_guide/configuration", "user_guide/file_system_and_utilities", "user_guide/index", "user_guide/macro_workflow", "user_guide/mask_export", "user_guide/simulation/elmer_remote_workflow", "user_guide/simulation/export_and_run", "user_guide/simulation/gmsh_elmer_export", "user_guide/simulation/simulation_features", "user_guide/simulation/simulation_objects", "user_guide/simulation/simulation_scripts", "user_guide/simulations", "user_guide/terminology", "user_guide/usage", "user_guide/xsection"], "filenames": ["about.rst", "api/kqcircuits.rst", "api/kqcircuits.chips.rst", "api/kqcircuits.chips.airbridge_crossings.rst", "api/kqcircuits.chips.airbridge_dc_test.rst", "api/kqcircuits.chips.chip.rst", "api/kqcircuits.chips.crossing_twoface.rst", "api/kqcircuits.chips.daisy_woven.rst", "api/kqcircuits.chips.dc_test.rst", "api/kqcircuits.chips.demo.rst", "api/kqcircuits.chips.demo_twoface.rst", "api/kqcircuits.chips.empty.rst", "api/kqcircuits.chips.junction_test.rst", "api/kqcircuits.chips.junction_test2.rst", "api/kqcircuits.chips.launchers.rst", "api/kqcircuits.chips.lithography_test.rst", "api/kqcircuits.chips.lithography_test_twoface.rst", "api/kqcircuits.chips.munch_qubits.rst", "api/kqcircuits.chips.quality_factor.rst", "api/kqcircuits.chips.quality_factor_twoface.rst", "api/kqcircuits.chips.sample_holder_test.rst", "api/kqcircuits.chips.shaping.rst", "api/kqcircuits.chips.simple.rst", "api/kqcircuits.chips.single_xmons.rst", "api/kqcircuits.chips.stripes.rst", "api/kqcircuits.chips.tsv_test.rst", "api/kqcircuits.chips.xmons_direct_coupling.rst", "api/kqcircuits.defaults.rst", "api/kqcircuits.elements.rst", "api/kqcircuits.elements.airbridge_connection.rst", "api/kqcircuits.elements.airbridges.rst", "api/kqcircuits.elements.airbridges.airbridge.rst", "api/kqcircuits.elements.airbridges.airbridge_multi_face.rst", "api/kqcircuits.elements.airbridges.airbridge_rectangular.rst", "api/kqcircuits.elements.capacitive_x_coupler.rst", "api/kqcircuits.elements.chip_frame.rst", "api/kqcircuits.elements.circular_capacitor.rst", "api/kqcircuits.elements.element.rst", "api/kqcircuits.elements.finger_capacitor_square.rst", "api/kqcircuits.elements.finger_capacitor_taper.rst", "api/kqcircuits.elements.flip_chip_connectors.rst", "api/kqcircuits.elements.flip_chip_connectors.flip_chip_connector.rst", "api/kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc.rst", "api/kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf.rst", "api/kqcircuits.elements.fluxlines.rst", "api/kqcircuits.elements.fluxlines.fluxline.rst", "api/kqcircuits.elements.fluxlines.fluxline_standard.rst", "api/kqcircuits.elements.fluxlines.fluxline_straight.rst", "api/kqcircuits.elements.hanger_resonator.rst", "api/kqcircuits.elements.launcher.rst", "api/kqcircuits.elements.launcher_dc.rst", "api/kqcircuits.elements.markers.rst", "api/kqcircuits.elements.markers.marker.rst", "api/kqcircuits.elements.markers.marker_standard.rst", "api/kqcircuits.elements.markers.mask_marker_fc.rst", "api/kqcircuits.elements.meander.rst", "api/kqcircuits.elements.quarter_wave_cpw_resonator.rst", "api/kqcircuits.elements.smooth_capacitor.rst", "api/kqcircuits.elements.spiral_resonator_polygon.rst", "api/kqcircuits.elements.tsvs.rst", "api/kqcircuits.elements.tsvs.tsv.rst", "api/kqcircuits.elements.tsvs.tsv_ellipse.rst", "api/kqcircuits.elements.tsvs.tsv_standard.rst", "api/kqcircuits.elements.waveguide_composite.rst", "api/kqcircuits.elements.waveguide_coplanar.rst", "api/kqcircuits.elements.waveguide_coplanar_curved.rst", "api/kqcircuits.elements.waveguide_coplanar_splitter.rst", "api/kqcircuits.elements.waveguide_coplanar_straight.rst", "api/kqcircuits.elements.waveguide_coplanar_taper.rst", "api/kqcircuits.junctions.rst", "api/kqcircuits.junctions.junction.rst", "api/kqcircuits.junctions.manhattan.rst", "api/kqcircuits.junctions.manhattan_single_junction.rst", "api/kqcircuits.junctions.no_squid.rst", "api/kqcircuits.junctions.sim.rst", "api/kqcircuits.junctions.squid.rst", "api/kqcircuits.klayout_view.rst", "api/kqcircuits.layer_cluster.rst", "api/kqcircuits.layer_config.rst", "api/kqcircuits.layer_config.default_layer_config.rst", "api/kqcircuits.layer_config.example_layer_config.rst", "api/kqcircuits.masks.rst", "api/kqcircuits.masks.mask_export.rst", "api/kqcircuits.masks.mask_layout.rst", "api/kqcircuits.masks.mask_set.rst", "api/kqcircuits.masks.multi_face_mask_layout.rst", "api/kqcircuits.pya_resolver.rst", "api/kqcircuits.qubits.rst", "api/kqcircuits.qubits.circular_transmon_single_island.rst", "api/kqcircuits.qubits.concentric_transmon.rst", "api/kqcircuits.qubits.double_pads.rst", "api/kqcircuits.qubits.double_pads_splines.rst", "api/kqcircuits.qubits.qubit.rst", "api/kqcircuits.qubits.swissmon.rst", "api/kqcircuits.run.rst", "api/kqcircuits.simulations.rst", "api/kqcircuits.simulations.airbridges_sim.rst", "api/kqcircuits.simulations.cross_section_simulation.rst", "api/kqcircuits.simulations.empty_simulation.rst", "api/kqcircuits.simulations.epr.rst", "api/kqcircuits.simulations.epr.circular_capacitor.rst", "api/kqcircuits.simulations.epr.example.rst", "api/kqcircuits.simulations.epr.gui_config.rst", "api/kqcircuits.simulations.epr.smooth_capacitor.rst", "api/kqcircuits.simulations.epr.swissmon.rst", "api/kqcircuits.simulations.epr.utils.rst", "api/kqcircuits.simulations.export.rst", "api/kqcircuits.simulations.export.ansys.rst", "api/kqcircuits.simulations.export.ansys.ansys_export.rst", "api/kqcircuits.simulations.export.ansys.ansys_solution.rst", "api/kqcircuits.simulations.export.elmer.rst", "api/kqcircuits.simulations.export.elmer.elmer_export.rst", "api/kqcircuits.simulations.export.elmer.elmer_solution.rst", "api/kqcircuits.simulations.export.export_and_run.rst", "api/kqcircuits.simulations.export.export_singularity.rst", "api/kqcircuits.simulations.export.remote_export_and_run.rst", "api/kqcircuits.simulations.export.simulation_export.rst", "api/kqcircuits.simulations.export.simulation_validate.rst", "api/kqcircuits.simulations.export.solution.rst", "api/kqcircuits.simulations.export.sonnet.rst", "api/kqcircuits.simulations.export.sonnet.parser.rst", "api/kqcircuits.simulations.export.sonnet.sonnet_export.rst", "api/kqcircuits.simulations.export.util.rst", "api/kqcircuits.simulations.export.xsection.rst", "api/kqcircuits.simulations.export.xsection.epr_correction_export.rst", "api/kqcircuits.simulations.export.xsection.xsection_export.rst", "api/kqcircuits.simulations.partition_region.rst", "api/kqcircuits.simulations.port.rst", "api/kqcircuits.simulations.post_process.rst", "api/kqcircuits.simulations.simulation.rst", "api/kqcircuits.simulations.single_element_simulation.rst", "api/kqcircuits.simulations.single_xmons_full_chip_sim.rst", "api/kqcircuits.simulations.waveguides_sim.rst", "api/kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.rst", "api/kqcircuits.simulations.xmons_direct_coupling_sim.rst", "api/kqcircuits.test_structures.rst", "api/kqcircuits.test_structures.airbridge_dc.rst", "api/kqcircuits.test_structures.cross_test.rst", "api/kqcircuits.test_structures.junction_test_pads.rst", "api/kqcircuits.test_structures.junction_test_pads.junction_test_pads.rst", "api/kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple.rst", "api/kqcircuits.test_structures.stripes_test.rst", "api/kqcircuits.test_structures.stripes_test_increasing_width.rst", "api/kqcircuits.test_structures.test_structure.rst", "api/kqcircuits.test_structures.tsv_test_pattern.rst", "api/kqcircuits.util.rst", "api/kqcircuits.util.area.rst", "api/kqcircuits.util.count_instances.rst", "api/kqcircuits.util.coupler_lib.rst", "api/kqcircuits.util.deep_delete.rst", "api/kqcircuits.util.defaults_helper.rst", "api/kqcircuits.util.dependencies.rst", "api/kqcircuits.util.edit_node_plugin.rst", "api/kqcircuits.util.export_helper.rst", "api/kqcircuits.util.geometry_helper.rst", "api/kqcircuits.util.geometry_json_encoder.rst", "api/kqcircuits.util.groundgrid.rst", "api/kqcircuits.util.gui_helper.rst", "api/kqcircuits.util.import_helper.rst", "api/kqcircuits.util.label.rst", "api/kqcircuits.util.label_polygons.rst", "api/kqcircuits.util.layout_to_code.rst", "api/kqcircuits.util.library_helper.rst", "api/kqcircuits.util.log_router.rst", "api/kqcircuits.util.merge.rst", "api/kqcircuits.util.netlist_extraction.rst", "api/kqcircuits.util.netlist_graph.rst", "api/kqcircuits.util.parameters.rst", "api/kqcircuits.util.plugin_startup.rst", "api/kqcircuits.util.refpoints.rst", "api/kqcircuits.util.replace_junctions.rst", "api/kqcircuits.util.symmetric_polygons.rst", "citing.rst", "contributing.rst", "developer/architecture.rst", "developer/coding_style.rst", "developer/containers.rst", "developer/documentation.rst", "developer/index.rst", "developer/setup.rst", "developer/standalone.rst", "developer/testing.rst", "getting_started/first_look.rst", "getting_started/gui_features/gui_elements.rst", "getting_started/gui_features/gui_elements_to_code.rst", "getting_started/gui_features/gui_menu_commands.rst", "getting_started/gui_features/gui_tutorial.rst", "getting_started/gui_features/gui_waveguides.rst", "getting_started/gui_features/index.rst", "getting_started/index.rst", "getting_started/python_workflow/faces.rst", "getting_started/python_workflow/index.rst", "getting_started/python_workflow/layers.rst", "getting_started/python_workflow/python_example.rst", "getting_started/python_workflow/python_start.rst", "getting_started/python_workflow/python_structure.rst", "getting_started/python_workflow/refpoints.rst", "getting_started/salt.rst", "index.rst", "installation/index.rst", "installation/klayout.rst", "installation/known_issues.rst", "support.rst", "trademarks.rst", "user_guide/configuration.rst", "user_guide/file_system_and_utilities.rst", "user_guide/index.rst", "user_guide/macro_workflow.rst", "user_guide/mask_export.rst", "user_guide/simulation/elmer_remote_workflow.rst", "user_guide/simulation/export_and_run.rst", "user_guide/simulation/gmsh_elmer_export.rst", "user_guide/simulation/simulation_features.rst", "user_guide/simulation/simulation_objects.rst", "user_guide/simulation/simulation_scripts.rst", "user_guide/simulations.rst", "user_guide/terminology.rst", "user_guide/usage.rst", "user_guide/xsection.rst"], "titles": ["About", "API documentation", "kqcircuits.chips", "kqcircuits.chips.airbridge_crossings", "kqcircuits.chips.airbridge_dc_test", "kqcircuits.chips.chip", "kqcircuits.chips.crossing_twoface", "kqcircuits.chips.daisy_woven", "kqcircuits.chips.dc_test", "kqcircuits.chips.demo", "kqcircuits.chips.demo_twoface", "kqcircuits.chips.empty", "kqcircuits.chips.junction_test", "kqcircuits.chips.junction_test2", "kqcircuits.chips.launchers", "kqcircuits.chips.lithography_test", "kqcircuits.chips.lithography_test_twoface", "kqcircuits.chips.munch_qubits", "kqcircuits.chips.quality_factor", "kqcircuits.chips.quality_factor_twoface", "kqcircuits.chips.sample_holder_test", "kqcircuits.chips.shaping", "kqcircuits.chips.simple", "kqcircuits.chips.single_xmons", "kqcircuits.chips.stripes", "kqcircuits.chips.tsv_test", "kqcircuits.chips.xmons_direct_coupling", "kqcircuits.defaults", "kqcircuits.elements", "kqcircuits.elements.airbridge_connection", "kqcircuits.elements.airbridges", "kqcircuits.elements.airbridges.airbridge", "kqcircuits.elements.airbridges.airbridge_multi_face", "kqcircuits.elements.airbridges.airbridge_rectangular", "kqcircuits.elements.capacitive_x_coupler", "kqcircuits.elements.chip_frame", "kqcircuits.elements.circular_capacitor", "kqcircuits.elements.element", "kqcircuits.elements.finger_capacitor_square", "kqcircuits.elements.finger_capacitor_taper", "kqcircuits.elements.flip_chip_connectors", "kqcircuits.elements.flip_chip_connectors.flip_chip_connector", "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc", "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf", "kqcircuits.elements.fluxlines", "kqcircuits.elements.fluxlines.fluxline", "kqcircuits.elements.fluxlines.fluxline_standard", "kqcircuits.elements.fluxlines.fluxline_straight", "kqcircuits.elements.hanger_resonator", "kqcircuits.elements.launcher", "kqcircuits.elements.launcher_dc", "kqcircuits.elements.markers", "kqcircuits.elements.markers.marker", "kqcircuits.elements.markers.marker_standard", "kqcircuits.elements.markers.mask_marker_fc", "kqcircuits.elements.meander", "kqcircuits.elements.quarter_wave_cpw_resonator", "kqcircuits.elements.smooth_capacitor", "kqcircuits.elements.spiral_resonator_polygon", "kqcircuits.elements.tsvs", "kqcircuits.elements.tsvs.tsv", "kqcircuits.elements.tsvs.tsv_ellipse", "kqcircuits.elements.tsvs.tsv_standard", "kqcircuits.elements.waveguide_composite", "kqcircuits.elements.waveguide_coplanar", "kqcircuits.elements.waveguide_coplanar_curved", "kqcircuits.elements.waveguide_coplanar_splitter", "kqcircuits.elements.waveguide_coplanar_straight", "kqcircuits.elements.waveguide_coplanar_taper", "kqcircuits.junctions", "kqcircuits.junctions.junction", "kqcircuits.junctions.manhattan", "kqcircuits.junctions.manhattan_single_junction", "kqcircuits.junctions.no_squid", "kqcircuits.junctions.sim", "kqcircuits.junctions.squid", "kqcircuits.klayout_view", "kqcircuits.layer_cluster", "kqcircuits.layer_config", "kqcircuits.layer_config.default_layer_config", "kqcircuits.layer_config.example_layer_config", "kqcircuits.masks", "kqcircuits.masks.mask_export", "kqcircuits.masks.mask_layout", "kqcircuits.masks.mask_set", "kqcircuits.masks.multi_face_mask_layout", "kqcircuits.pya_resolver", "kqcircuits.qubits", "kqcircuits.qubits.circular_transmon_single_island", "kqcircuits.qubits.concentric_transmon", "kqcircuits.qubits.double_pads", "kqcircuits.qubits.double_pads_splines", "kqcircuits.qubits.qubit", "kqcircuits.qubits.swissmon", "kqcircuits.run", "kqcircuits.simulations", "kqcircuits.simulations.airbridges_sim", "kqcircuits.simulations.cross_section_simulation", "kqcircuits.simulations.empty_simulation", "kqcircuits.simulations.epr", "kqcircuits.simulations.epr.circular_capacitor", "kqcircuits.simulations.epr.example", "kqcircuits.simulations.epr.gui_config", "kqcircuits.simulations.epr.smooth_capacitor", "kqcircuits.simulations.epr.swissmon", "kqcircuits.simulations.epr.utils", "kqcircuits.simulations.export", "kqcircuits.simulations.export.ansys", "kqcircuits.simulations.export.ansys.ansys_export", "kqcircuits.simulations.export.ansys.ansys_solution", "kqcircuits.simulations.export.elmer", "kqcircuits.simulations.export.elmer.elmer_export", "kqcircuits.simulations.export.elmer.elmer_solution", "kqcircuits.simulations.export.export_and_run", "kqcircuits.simulations.export.export_singularity", "kqcircuits.simulations.export.remote_export_and_run", "kqcircuits.simulations.export.simulation_export", "kqcircuits.simulations.export.simulation_validate", "kqcircuits.simulations.export.solution", "kqcircuits.simulations.export.sonnet", "kqcircuits.simulations.export.sonnet.parser", "kqcircuits.simulations.export.sonnet.sonnet_export", "kqcircuits.simulations.export.util", "kqcircuits.simulations.export.xsection", "kqcircuits.simulations.export.xsection.epr_correction_export", "kqcircuits.simulations.export.xsection.xsection_export", "kqcircuits.simulations.partition_region", "kqcircuits.simulations.port", "kqcircuits.simulations.post_process", "kqcircuits.simulations.simulation", "kqcircuits.simulations.single_element_simulation", "kqcircuits.simulations.single_xmons_full_chip_sim", "kqcircuits.simulations.waveguides_sim", "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim", "kqcircuits.simulations.xmons_direct_coupling_sim", "kqcircuits.test_structures", "kqcircuits.test_structures.airbridge_dc", "kqcircuits.test_structures.cross_test", "kqcircuits.test_structures.junction_test_pads", "kqcircuits.test_structures.junction_test_pads.junction_test_pads", "kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple", "kqcircuits.test_structures.stripes_test", "kqcircuits.test_structures.stripes_test_increasing_width", "kqcircuits.test_structures.test_structure", "kqcircuits.test_structures.tsv_test_pattern", "kqcircuits.util", "kqcircuits.util.area", "kqcircuits.util.count_instances", "kqcircuits.util.coupler_lib", "kqcircuits.util.deep_delete", "kqcircuits.util.defaults_helper", "kqcircuits.util.dependencies", "kqcircuits.util.edit_node_plugin", "kqcircuits.util.export_helper", "kqcircuits.util.geometry_helper", "kqcircuits.util.geometry_json_encoder", "kqcircuits.util.groundgrid", "kqcircuits.util.gui_helper", "kqcircuits.util.import_helper", "kqcircuits.util.label", "kqcircuits.util.label_polygons", "kqcircuits.util.layout_to_code", "kqcircuits.util.library_helper", "kqcircuits.util.log_router", "kqcircuits.util.merge", "kqcircuits.util.netlist_extraction", "kqcircuits.util.netlist_graph", "kqcircuits.util.parameters", "kqcircuits.util.plugin_startup", "kqcircuits.util.refpoints", "kqcircuits.util.replace_junctions", "kqcircuits.util.symmetric_polygons", "Citing", "Contributing", "Architecture", "Coding Style", "Containers", "Documentation", "Developer Guide", "Developer GUI Setup", "Developer Standalone module Setup", "Testing", "First look around", "Placing Elements", "Converting elements placed in GUI into code", "Useful commands", "Manual workflow tutorial", "Using waveguides", "GUI Features", "Getting started", "Faces", "Python workflow", "KQCircuits Layers", "Detailed examples", "Getting started", "Structure of Element code", "Refpoints", "KQCircuits Salt package", "KQCircuits documentation", "Installation", "Installing KLayout", "Known installation issues", "Support", "Trademarks", "Custom configuration", "General Structure and Miscellaneous Utilities", "User Guide", "Macro and script development", "Mask export", "Elmer remote simulations workflow", "Run and export in one line", "Gmsh/Elmer export", "Simulation features", "Simulation objects", "Export functions", "External simulation tools", "Terminology", "Usage", "Creating cross section images"], "terms": {"kqcircuit": [0, 1, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218], "develop": [0, 173, 181, 191, 195, 197, 198, 199, 200, 206, 210, 214], "wa": [0, 37, 83, 97, 129, 161, 169, 197, 198, 201, 207, 208, 211, 213, 217], "start": [0, 5, 13, 19, 35, 55, 58, 63, 64, 65, 66, 79, 88, 89, 115, 122, 129, 139, 154, 161, 167, 170, 177, 186, 191, 195, 197, 198, 202, 204, 205, 207, 209, 211, 213], "johann": [0, 172], "heinsoo": [0, 172], "aalto": [0, 69, 212], "univers": [0, 212], "The": [0, 3, 5, 6, 12, 13, 14, 18, 19, 20, 21, 22, 23, 24, 26, 29, 32, 33, 35, 36, 37, 38, 39, 41, 43, 49, 50, 52, 53, 54, 55, 57, 58, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 76, 79, 81, 82, 83, 84, 85, 87, 88, 89, 92, 93, 95, 96, 97, 98, 105, 108, 109, 111, 121, 122, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 136, 147, 153, 154, 155, 157, 158, 161, 164, 165, 166, 167, 170, 173, 174, 176, 177, 179, 180, 181, 182, 183, 184, 186, 187, 188, 190, 191, 193, 194, 195, 196, 197, 199, 201, 204, 205, 207, 208, 209, 211, 212, 214, 215, 216, 217, 218], "final": [0, 63, 79, 84, 129, 192, 214], "kqc": [0, 94, 97, 113, 115, 166, 168, 169, 173, 174, 176, 179, 180, 182, 183, 184, 190, 194, 197, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 217], "version": [0, 1, 81, 82, 83, 84, 85, 155, 172, 176, 178, 179, 180, 186, 197, 199, 200, 205, 208, 209, 211, 214, 218], "correspond": [0, 17, 19, 26, 37, 63, 79, 83, 85, 88, 89, 112, 126, 129, 134, 154, 158, 159, 161, 165, 174, 176, 180, 181, 182, 183, 186, 193, 194, 195, 196, 205, 207, 212, 213, 215, 216], "v0": [0, 201], "0": [0, 5, 6, 7, 10, 13, 16, 17, 18, 19, 23, 25, 28, 29, 31, 32, 35, 36, 37, 38, 47, 55, 56, 57, 58, 63, 64, 65, 66, 70, 71, 72, 76, 79, 88, 90, 91, 92, 93, 97, 109, 112, 120, 121, 122, 124, 125, 127, 129, 133, 139, 143, 144, 146, 154, 155, 160, 161, 164, 167, 168, 169, 170, 176, 180, 186, 190, 192, 196, 197, 200, 201, 204, 208, 212, 213], "tag": [0, 165, 173, 176, 180, 216], "iqm": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218], "github": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218], "repositori": [0, 153, 176, 178, 180, 197, 199, 205, 212], "sinc": [0, 157, 180, 184, 196, 213], "ha": [0, 5, 20, 23, 36, 37, 38, 57, 63, 71, 83, 84, 88, 89, 93, 97, 109, 117, 129, 153, 157, 161, 166, 167, 170, 176, 179, 180, 182, 184, 185, 192, 195, 196, 197, 201, 205, 207, 208, 209, 211, 213], "been": [0, 63, 84, 129, 162, 176, 197, 208], "see": [0, 2, 19, 37, 63, 79, 84, 96, 98, 105, 109, 112, 121, 125, 129, 130, 131, 132, 133, 134, 135, 170, 173, 174, 176, 179, 180, 184, 185, 186, 187, 190, 191, 193, 194, 196, 197, 199, 201, 203, 204, 205, 207, 208, 209, 211, 212, 213, 214, 217], "cite": [0, 198], "section": [0, 13, 25, 29, 32, 37, 38, 58, 63, 90, 97, 109, 112, 125, 127, 129, 130, 139, 144, 165, 169, 174, 179, 180, 184, 185, 186, 187, 188, 189, 191, 193, 195, 196, 197, 198, 204, 206, 208, 210, 213, 215], "other": [0, 2, 5, 13, 28, 34, 37, 38, 63, 64, 65, 71, 72, 76, 77, 79, 90, 92, 97, 112, 115, 121, 129, 139, 148, 154, 163, 169, 170, 171, 172, 173, 174, 176, 180, 181, 182, 184, 187, 188, 190, 192, 193, 195, 196, 198, 201, 204, 205, 207, 208, 211, 212, 213, 214, 216, 217, 218], "author": [0, 172], "http": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218], "com": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218], "finland": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218], "chip": [1, 28, 29, 32, 35, 37, 38, 40, 41, 42, 43, 49, 54, 58, 63, 79, 81, 82, 83, 84, 85, 90, 129, 132, 133, 139, 144, 153, 161, 165, 166, 170, 174, 176, 182, 184, 185, 187, 189, 190, 191, 192, 195, 196, 197, 198, 204, 206, 207, 213, 216, 217], "airbridge_cross": [1, 2], "airbridgecross": [1, 2, 3], "build": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 81, 83, 84, 87, 88, 89, 90, 93, 95, 96, 97, 98, 105, 129, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 144, 161, 162, 174, 176, 177, 179, 182, 191, 193, 194, 196, 197, 200, 201, 208, 209, 211, 212, 213, 214, 215], "airbridge_dc_test": [1, 2], "airbridgedctest": [1, 2, 4], "library_nam": [1, 2, 5, 28, 37, 63, 69, 70, 87, 92, 95, 97, 129, 135, 143, 162, 174], "library_descript": [1, 2, 5, 28, 37, 69, 70, 87, 92, 135, 143, 174], "library_path": [1, 2, 5, 28, 37, 69, 70, 87, 92, 135, 143, 162], "display_text_impl": [1, 2, 5, 28, 37], "can_create_from_shape_impl": [1, 2, 5, 28, 38, 39, 55, 57, 64], "parameters_from_shape_impl": [1, 2, 5, 28, 55, 64], "transformation_from_shape_impl": [1, 2, 5, 28, 30, 31, 64], "get_launcher_assign": [1, 2, 5], "produce_junction_test": [1, 2, 5, 9], "produce_opt_lit_test": [1, 2, 5], "produce_ground_grid": [1, 2, 5], "produce_ground_on_face_grid": [1, 2, 5], "produce_fram": [1, 2, 5], "merge_layout_layers_on_fac": [1, 2, 5, 145, 164], "merge_layout_lay": [1, 2, 5], "produce_structur": [1, 2, 5], "get_box": [1, 2, 5], "get_filter_region": [1, 2, 5], "insert_filtered_el": [1, 2, 5], "get_ground_bump_loc": [1, 2, 5], "post_build": [1, 2, 5, 28, 37], "produce_launch": [1, 2, 5, 95, 133, 193, 196, 204], "produce_n_launch": [1, 2, 5], "make_grid_loc": [1, 2, 5], "get_ground_tsv_loc": [1, 2, 5], "crossing_twofac": [1, 2], "crossingtwofac": [1, 2, 6], "daisy_woven": [1, 2], "daisywoven": [1, 2, 7], "dc_test": [1, 2], "dctest": [1, 2, 8], "demo": [1, 2, 205, 207, 208], "produce_qubit": [1, 2, 9, 10, 17, 26, 95, 133, 134], "produce_coupl": [1, 2, 9, 10, 17], "produce_control_lin": [1, 2, 9, 10], "produce_drivelin": [1, 2, 9, 10, 17], "produce_fluxlin": [1, 2, 9, 10, 87, 92], "produce_readout_structur": [1, 2, 9, 10], "produce_probelin": [1, 2, 9, 10, 17], "demo_twofac": [1, 2, 208], "demotwofac": [1, 2, 10, 190, 208], "empti": [1, 2, 5, 13, 25, 29, 32, 34, 36, 37, 38, 43, 48, 56, 57, 58, 63, 66, 84, 85, 88, 89, 90, 93, 97, 129, 139, 144, 157, 166, 167, 181, 185, 212, 213, 214], "make_empty_area": [1, 2, 11], "junction_test": [1, 2], "junctiontest": [1, 2, 12], "junction_test2": [1, 2], "junctiontest2": [1, 2, 13], "coerce_parameters_impl": [1, 2, 13, 28, 37, 44, 45, 63, 65, 69, 70, 87, 92, 135, 138, 139], "launcher": [1, 2, 5, 7, 8, 18, 20, 23, 28, 50, 93, 131, 133, 165, 186, 190, 193, 196, 204], "lithography_test": [1, 2], "lithographytest": [1, 2, 15], "create_pattern": [1, 2, 15, 16], "lithography_test_twofac": [1, 2], "lithographytesttwofac": [1, 2, 16], "munch_qubit": [1, 2], "munchqubit": [1, 2, 17], "produce_readout_reson": [1, 2, 17, 26, 95, 133], "quality_factor": [1, 2, 162, 208], "qualityfactor": [1, 2, 18, 84, 162, 208], "quality_factor_twofac": [1, 2], "qualityfactortwofac": [1, 2, 19], "produce_reson": [1, 2, 19], "sample_holder_test": [1, 2], "sampleholdertest": [1, 2, 20], "shape": [1, 2, 5, 13, 18, 25, 28, 29, 31, 32, 33, 35, 37, 38, 43, 55, 58, 63, 64, 77, 82, 84, 88, 89, 90, 92, 97, 125, 129, 139, 143, 144, 159, 164, 170, 182, 183, 187, 192, 193, 207, 213, 214, 216, 218], "simpl": [1, 2, 13, 84, 86, 121, 129, 139, 140, 176, 190, 208, 211], "single_xmon": [1, 2], "singlexmon": [1, 2, 23], "qubits_refpoint": [1, 2, 23], "stripe": [1, 2, 5, 15, 16, 141, 142], "tsv_test": [1, 2], "tsvtest": [1, 2, 25], "create_xsect": [1, 2, 25], "xmons_direct_coupl": [1, 2], "xmonsdirectcoupl": [1, 2, 26], "element": [1, 2, 3, 5, 13, 22, 23, 25, 27, 70, 72, 76, 83, 84, 88, 89, 90, 92, 93, 100, 101, 103, 104, 105, 109, 112, 127, 129, 130, 135, 139, 143, 144, 145, 148, 154, 155, 157, 161, 162, 164, 165, 166, 167, 169, 170, 176, 178, 180, 185, 187, 188, 189, 191, 192, 196, 197, 198, 204, 206, 207, 208, 212, 214, 215, 217], "airbridg": [1, 3, 4, 18, 19, 28, 29, 37, 52, 54, 55, 56, 58, 63, 66, 129, 136, 145, 162, 169, 187, 213], "default_typ": [1, 28, 30, 31, 32, 33, 40, 41, 44, 45, 51, 52, 59, 60, 69, 70, 135, 138, 139], "creat": [1, 2, 5, 28, 30, 31, 32, 37, 40, 41, 44, 45, 51, 52, 59, 60, 63, 64, 65, 69, 70, 75, 76, 79, 83, 84, 85, 86, 92, 96, 97, 98, 105, 108, 111, 116, 125, 129, 130, 131, 132, 133, 134, 135, 138, 139, 146, 152, 153, 157, 161, 162, 164, 168, 169, 174, 177, 179, 180, 181, 182, 185, 186, 187, 189, 191, 193, 194, 195, 196, 197, 198, 202, 205, 206, 208, 211, 212, 213, 214, 216], "airbridge_multi_fac": [1, 28, 30], "airbridgemultifac": [1, 28, 30, 32], "airbridge_rectangular": [1, 28, 30], "airbridgerectangular": [1, 28, 30, 33], "flip_chip_connector": [1, 28], "flipchipconnector": [1, 28, 40, 41, 42, 63], "flip_chip_connector_dc": [1, 28, 40], "flipchipconnectordc": [1, 28, 40, 42], "flip_chip_connector_rf": [1, 28, 40], "flipchipconnectorrf": [1, 28, 40, 43, 190], "get_sim_port": [1, 28, 34, 36, 37, 38, 40, 43, 48, 56, 57, 87, 88, 89, 90, 93, 213], "fluxlin": [1, 9, 23, 26, 28, 37, 87, 92, 93, 134], "fluxline_standard": [1, 28, 44], "fluxlinestandard": [1, 28, 44, 46], "fluxline_straight": [1, 28, 44], "fluxlinestraight": [1, 28, 44, 47], "marker": [1, 5, 13, 28, 35, 55, 83, 137, 153, 170], "produce_geometri": [1, 28, 51, 52], "get_marker_loc": [1, 28, 51, 52, 54], "get_marker_region": [1, 28, 51, 52, 54], "marker_standard": [1, 28, 51], "markerstandard": [1, 28, 51, 53], "mask_marker_fc": [1, 28, 51], "maskmarkerfc": [1, 28, 51, 54], "create_cross": [1, 28, 51, 54], "tsv": [1, 5, 25, 28, 37, 129, 144, 190, 195], "tsv_ellips": [1, 28, 59], "tsvellips": [1, 28, 59, 61], "produce_impl": [1, 28, 37, 59, 61, 174], "create_tsv_connector": [1, 28, 59, 61], "tsv_standard": [1, 28, 59], "tsvstandard": [1, 28, 59, 62], "airbridge_connect": [1, 28], "airbridgeconnect": [1, 28, 29, 63], "capacitive_x_coupl": [1, 28], "capacitivexcoupl": [1, 28, 34], "chip_fram": [1, 28], "chipfram": [1, 5, 6, 7, 10, 16, 19, 28, 35], "circular_capacitor": [1, 28, 95, 99], "circularcapacitor": [1, 28, 36], "get_refpoint": [1, 28, 37, 95, 129], "insert_cell_into": [1, 28, 37], "resolve_fac": [1, 28, 37], "parameter_order_kei": [1, 28, 37], "create_cell_from_shap": [1, 28, 37], "create_subtyp": [1, 28, 37], "create_with_refpoint": [1, 28, 37], "add_el": [1, 28, 37, 70, 75, 95, 129, 148, 174, 193], "insert_cel": [1, 26, 28, 37, 76, 95, 129, 134, 148, 161, 174, 190, 193, 196, 207, 213], "face": [1, 5, 6, 7, 10, 13, 16, 19, 25, 28, 29, 31, 32, 35, 37, 38, 41, 43, 56, 58, 61, 62, 63, 64, 65, 66, 76, 79, 81, 82, 83, 84, 85, 90, 95, 97, 125, 126, 127, 129, 132, 139, 144, 145, 153, 164, 165, 169, 170, 182, 185, 187, 191, 192, 195, 196, 206, 215], "pcell_params_by_nam": [1, 28, 37, 95, 129], "add_port": [1, 28, 37, 196], "copy_port": [1, 28, 37], "get_schema": [1, 28, 37, 95, 97, 129], "etch_opposite_face_impl": [1, 28, 37], "get_lay": [1, 28, 37, 92, 95, 97, 129, 190, 193], "raise_error_on_cel": [1, 28, 37], "add_protect": [1, 28, 37], "sync_paramet": [1, 28, 37], "left_and_right_waveguid": [1, 28, 37], "face_changer_waveguid": [1, 28, 37], "finger_capacitor_squar": [1, 28, 196], "fingercapacitorsquar": [1, 28, 38, 148, 196], "get_ground_region": [1, 28, 38], "finger_area_width": [1, 28, 38], "finger_area_length": [1, 28, 38], "cut_region": [1, 28, 38], "add_waveguid": [1, 28, 38], "finger_capacitor_tap": [1, 28], "fingercapacitortap": [1, 28, 39], "hanger_reson": [1, 28], "hangerreson": [1, 28, 48], "launcher_dc": [1, 28], "launcherdc": [1, 28, 50], "meander": [1, 3, 6, 18, 28, 56, 63, 121, 157, 187], "quarter_wave_cpw_reson": [1, 28], "quarterwavecpwreson": [1, 28, 56], "smooth_capacitor": [1, 28, 95, 99, 130], "smoothcapacitor": [1, 19, 28, 57, 148], "segment_point": [1, 28, 57], "t_poli": [1, 28, 57], "finger_polygon": [1, 28, 57], "super_smoothen_region": [1, 28, 57], "get_finger_region": [1, 28, 57], "middle_gap_fil": [1, 28, 57], "insert_wg_joint": [1, 28, 57], "spiral_resonator_polygon": [1, 28], "spiralresonatorpolygon": [1, 28, 58, 187], "rectangular_paramet": [1, 28, 58], "waveguide_composit": [1, 28], "node": [1, 28, 63, 152, 157, 161, 166, 184, 186, 196, 211], "posit": [1, 17, 23, 25, 28, 31, 37, 55, 63, 64, 65, 83, 88, 89, 92, 93, 120, 153, 157, 159, 161, 166, 169, 184, 187, 193, 195, 196, 208], "align": [1, 28, 37, 54, 63, 76, 83, 92, 129, 137, 153, 157, 170, 184, 196, 208], "inst_nam": [1, 9, 10, 28, 37, 63, 76, 129, 157, 170, 196], "angl": [1, 17, 28, 36, 63, 64, 65, 66, 88, 89, 154, 157], "length_befor": [1, 28, 63, 157], "length_incr": [1, 28, 63, 157], "meander_direct": [1, 28, 55, 63], "deseri": [1, 28, 63, 155], "nodes_from_str": [1, 28, 63], "waveguidecomposit": [1, 28, 63, 157, 161, 196], "get_segment_cel": [1, 28, 63], "get_segment_length": [1, 28, 63], "produce_fixed_length_waveguid": [1, 28, 63], "snap_point": [1, 28, 63], "check_node_typ": [1, 28, 63], "produce_fixed_length_bend": [1, 28, 63], "waveguide_coplanar": [1, 28, 196], "waveguidecoplanar": [1, 28, 63, 64, 161, 184, 196], "produce_waveguid": [1, 28, 64, 95, 133], "get_corner_data": [1, 28, 64], "produce_end_termin": [1, 28, 64], "is_continu": [1, 28, 64], "waveguide_coplanar_curv": [1, 28], "arc": [1, 17, 28, 65, 88, 89, 154], "waveguidecoplanarcurv": [1, 28, 65], "build_geometri": [1, 28, 65, 67], "create_curve_arc": [1, 28, 65], "produce_curve_termin": [1, 28, 65], "waveguide_coplanar_splitt": [1, 28], "waveguidecoplanarsplitt": [1, 28, 66, 187], "t_cross_paramet": [1, 28, 66], "waveguide_coplanar_straight": [1, 28], "waveguidecoplanarstraight": [1, 28, 67], "waveguide_coplanar_tap": [1, 28], "waveguidecoplanartap": [1, 28, 63, 68], "junction": [1, 5, 9, 10, 13, 23, 26, 82, 88, 89, 90, 91, 92, 127, 129, 134, 138, 139, 140, 169, 170, 174, 182, 192, 198, 212, 213], "manhattan": [1, 5, 10, 13, 23, 26, 69, 70, 72, 90, 92, 134, 139], "produce_manhattan_squid": [1, 69, 71], "produce_tp_smal": [1, 69, 71], "produce_tp_larg": [1, 69, 71], "produce_contact_pad": [1, 69, 71], "manhattan_single_junct": [1, 69], "manhattansinglejunct": [1, 69, 72], "produce_manhattan_junct": [1, 69, 72], "no_squid": [1, 69], "nosquid": [1, 69, 73], "sim": [1, 10, 13, 23, 26, 69, 70, 90, 92, 124, 130, 134, 139, 180, 199, 209, 210, 211, 213, 214], "squid": [1, 10, 13, 23, 26, 69, 70, 71, 73, 74, 87, 90, 91, 92, 93, 127, 134, 139, 170], "layer_config": [1, 198, 204], "default_layer_config": [1, 78, 190, 204], "example_layer_config": [1, 78, 204], "mask": [1, 5, 35, 52, 54, 145, 176, 180, 186, 189, 192, 198, 199, 205, 206, 216], "mask_export": [1, 81], "export_mask_set": [1, 81, 82], "export_design": [1, 81, 82], "export_chip": [1, 81, 82], "export_masks_of_fac": [1, 81, 82], "export_mask": [1, 81, 82], "export_doc": [1, 81, 82], "export_bitmap": [1, 81, 82], "get_mask_layout_full_nam": [1, 81, 82], "export_junction_paramet": [1, 81, 82], "mask_layout": [1, 81, 82, 84, 85, 208], "masklayout": [1, 81, 82, 83, 84, 85], "layout": [1, 25, 26, 28, 31, 37, 41, 45, 52, 60, 63, 70, 76, 81, 82, 83, 84, 85, 95, 96, 97, 98, 116, 122, 125, 126, 129, 131, 132, 133, 134, 139, 144, 153, 154, 162, 164, 165, 166, 168, 170, 174, 180, 183, 185, 186, 196, 198, 199, 204, 207, 208, 212, 213, 214, 215, 217, 218], "name": [1, 5, 7, 9, 10, 13, 17, 19, 22, 23, 25, 26, 29, 32, 35, 37, 38, 58, 61, 63, 66, 70, 75, 76, 77, 79, 81, 82, 83, 84, 85, 90, 92, 95, 97, 105, 106, 108, 109, 111, 112, 115, 116, 117, 118, 124, 126, 127, 128, 129, 130, 133, 139, 143, 144, 146, 153, 157, 161, 162, 163, 164, 165, 166, 167, 169, 170, 174, 176, 177, 179, 186, 192, 193, 194, 196, 197, 201, 204, 205, 207, 208, 209, 213, 214, 215], "with_grid": [1, 5, 81, 83, 84, 85, 129, 208], "face_id": [1, 5, 13, 15, 16, 19, 25, 28, 29, 32, 37, 38, 58, 63, 76, 77, 81, 83, 84, 85, 90, 129, 139, 144, 190, 204], "layers_to_mask": [1, 81, 83, 208], "covered_region_excluded_lay": [1, 81, 83], "chips_map": [1, 81, 83, 84, 85], "align_to": [1, 37, 76, 81, 83, 129, 196, 208], "chips_map_legend": [1, 81, 83, 84], "wafer_rad": [1, 81, 83], "wafer_cent": [1, 81, 83], "chips_map_offset": [1, 81, 83], "wafer_top_flat_length": [1, 81, 83], "wafer_bottom_flat_length": [1, 81, 83], "dice_width": [1, 35, 81, 83], "text_margin": [1, 35, 81, 83], "chip_siz": [1, 81, 83, 208], "edge_clear": [1, 81, 83, 208], "remove_chip": [1, 81, 83], "chip_box_offset": [1, 81, 83], "chip_tran": [1, 81, 83], "mask_name_offset": [1, 81, 83], "mask_name_scal": [1, 81, 83], "mask_name_box_margin": [1, 81, 83], "mask_text_scal": [1, 81, 83], "mask_markers_dict": [1, 81, 83], "mask_marker_offset": [1, 81, 83], "mask_export_lay": [1, 79, 81, 83, 84], "mask_export_density_lay": [1, 81, 83], "submask": [1, 81, 83], "extra_id": [1, 81, 83], "extra_chip": [1, 81, 83], "top_cel": [1, 76, 81, 83, 157, 161, 170, 207, 216], "added_chip": [1, 81, 83], "chips_placed_by_position_label": [1, 81, 83], "chip_copi": [1, 81, 83], "mirror_label": [1, 81, 83], "bbox_face_id": [1, 81, 83, 84, 85], "add_chips_map": [1, 81, 83, 85, 208], "insert_chip": [1, 81, 83], "generate_position_label": [1, 81, 83], "generate_and_insert_chip_copy_label": [1, 81, 83], "insert_chip_copy_label": [1, 81, 83], "two_coordinates_to_position_label": [1, 81, 83], "position_label_to_two_coordin": [1, 81, 83], "mask_set": [1, 81, 82, 208], "maskset": [1, 81, 82, 84, 85, 208], "export_drc": [1, 81, 82, 84], "used_chip": [1, 81, 84], "export_path": [1, 81, 84, 113, 166, 208], "add_mask_layout": [1, 81, 84, 208], "add_multi_face_mask_layout": [1, 81, 84, 85], "add_chip": [1, 81, 84, 208], "export": [1, 76, 77, 79, 81, 82, 83, 84, 95, 96, 98, 105, 129, 131, 132, 133, 134, 153, 161, 165, 166, 170, 180, 186, 189, 197, 198, 199, 206, 207, 209, 212, 213, 215, 216, 218], "chips_map_from_box_map": [1, 81, 84], "multi_face_mask_layout": [1, 81], "multifacemasklayout": [1, 81, 84, 85], "qubit": [1, 9, 10, 17, 23, 26, 69, 105, 133, 134, 174, 182, 186, 192, 195, 197, 198, 212, 213, 214], "circular_transmon_single_island": [1, 87], "circulartransmonsingleisland": [1, 87, 88], "concentric_transmon": [1, 87], "concentrictransmon": [1, 87, 89], "double_pad": [1, 87], "doublepad": [1, 87, 90, 91], "double_pads_splin": [1, 87], "doublepadssplin": [1, 87, 91], "produce_squid": [1, 87, 92, 135, 138, 139], "swissmon": [1, 87, 95, 99, 186, 213, 214], "simul": [1, 13, 25, 26, 29, 32, 34, 36, 37, 38, 43, 48, 56, 57, 58, 63, 74, 79, 88, 89, 90, 92, 93, 139, 144, 145, 169, 176, 180, 189, 191, 192, 197, 198, 199, 205, 206, 210, 211, 214, 218], "epr": [1, 13, 25, 29, 32, 36, 37, 38, 56, 57, 58, 63, 90, 93, 95, 112, 124, 127, 129, 130, 139, 144, 212], "partition_region": [1, 95, 99, 100, 101, 103, 104, 105, 124, 129], "correction_cut": [1, 95, 99, 100, 101, 103, 104, 105, 124], "extract_circular_capacitor_from": [1, 95, 99, 100], "exampl": [1, 5, 28, 37, 63, 76, 77, 79, 83, 84, 95, 99, 105, 112, 129, 130, 155, 162, 166, 170, 174, 176, 179, 180, 181, 182, 186, 187, 188, 190, 191, 192, 194, 195, 196, 200, 204, 206, 208, 209, 211, 212, 213, 214, 218], "extract_from": [1, 95, 99, 101], "gui_config": [1, 95, 99, 101], "extract_swissmon_from": [1, 95, 99, 104], "util": [1, 58, 66, 95, 99, 106, 180, 181, 193, 194, 196, 198, 206, 213, 214], "in_gui": [1, 95, 99, 105], "extract_child_simul": [1, 95, 99, 105], "ansi": [1, 95, 106, 118, 129, 150, 211, 212, 213, 215], "ansys_export": [1, 95, 106, 107, 212, 214], "export_ansys_json": [1, 95, 106, 107, 108], "export_ansys_bat": [1, 95, 106, 107, 108], "export_ansi": [1, 95, 106, 107, 108, 212, 214, 215], "ansys_solut": [1, 95, 106, 107], "ansyssolut": [1, 95, 106, 107, 108, 109], "ansys_tool": [1, 95, 106, 107, 109, 212], "percent_refin": [1, 95, 106, 107, 109, 212], "maximum_pass": [1, 95, 106, 107, 109, 110, 112, 212], "minimum_pass": [1, 95, 106, 107, 109, 110, 112, 212], "minimum_converged_pass": [1, 95, 106, 107, 109, 212], "frequency_unit": [1, 95, 106, 107, 109, 212], "mesh_siz": [1, 95, 106, 107, 109, 110, 112], "simulation_flag": [1, 95, 106, 107, 109, 212], "ansys_project_templ": [1, 95, 106, 107, 109], "get_solution_data": [1, 95, 106, 107, 109, 110, 112], "ansyshfsssolut": [1, 95, 106, 107, 109], "frequenc": [1, 95, 106, 107, 109, 110, 112, 211, 212], "max_delta_": [1, 95, 106, 107, 109, 110, 112, 212], "sweep_en": [1, 95, 106, 107, 109, 212], "sweep_start": [1, 95, 106, 107, 109, 212], "sweep_end": [1, 95, 106, 107, 109, 212], "sweep_count": [1, 95, 106, 107, 109, 212], "sweep_typ": [1, 95, 106, 107, 109, 110, 112, 212], "capacitance_export": [1, 95, 106, 107, 109, 212], "integrate_energi": [1, 95, 106, 107, 109, 110, 112, 212], "integrate_magnetic_flux": [1, 95, 106, 107, 109], "ansysq3dsolut": [1, 95, 106, 107, 109], "percent_error": [1, 95, 106, 107, 109, 110, 112, 212], "ansyseigenmodesolut": [1, 95, 106, 107, 109], "min_frequ": [1, 95, 106, 107, 109, 212], "max_delta_f": [1, 95, 106, 107, 109, 212], "n_mode": [1, 95, 106, 107, 109, 212], "ansyscurrentsolut": [1, 95, 106, 107, 109], "ansysvoltagesolut": [1, 95, 106, 107, 109], "ansyscrosssectionsolut": [1, 95, 106, 107, 109], "get_ansys_solut": [1, 95, 106, 107, 109], "elmer": [1, 95, 106, 118, 176, 206, 210, 212, 213, 215], "elmer_export": [1, 95, 106, 110, 212, 214], "export_elmer_json": [1, 95, 106, 110, 111], "export_elmer_script": [1, 95, 106, 110, 111], "export_elm": [1, 95, 106, 110, 111, 211, 212, 214, 215], "elmer_solut": [1, 95, 106, 110], "elmersolut": [1, 95, 106, 110, 111, 112], "tool": [1, 55, 64, 95, 97, 106, 110, 112, 165, 180, 181, 182, 183, 185, 186, 187, 197, 198, 206, 212, 213, 214, 217], "max_error_scal": [1, 95, 106, 110, 112], "max_outlier_fract": [1, 95, 106, 110, 112], "is_axisymmetr": [1, 95, 106, 110, 112], "mesh_level": [1, 95, 106, 110, 112], "vtu_output": [1, 95, 106, 110, 112], "elmervectorhelmholtzsolut": [1, 95, 106, 110, 112], "frequency_batch": [1, 95, 106, 110, 112], "london_penetration_depth": [1, 95, 97, 106, 110, 112, 125], "quadratic_approxim": [1, 95, 106, 110, 112], "second_kind_basi": [1, 95, 106, 110, 112], "use_av": [1, 95, 106, 110, 112], "conduct": [1, 95, 106, 110, 112], "nested_iter": [1, 95, 106, 110, 112], "convergence_toler": [1, 95, 106, 110, 112], "max_iter": [1, 95, 106, 110, 112], "elmercapacitancesolut": [1, 95, 106, 110, 112], "p_element_ord": [1, 95, 106, 110, 112], "linear_system_method": [1, 95, 106, 110, 112], "linear_system_precondit": [1, 95, 106, 110, 112], "elmercrosssectionsolut": [1, 95, 106, 110, 112, 124], "boundary_condit": [1, 95, 106, 110, 112], "run_inductance_sim": [1, 95, 106, 110, 112], "elmerepr3dsolut": [1, 95, 106, 110, 112, 129], "sequential_signal_excit": [1, 95, 106, 110, 112], "get_elmer_solut": [1, 95, 106, 110, 112], "sonnet": [1, 95, 106, 215], "parser": [1, 95, 106, 119, 155], "apply_templ": [1, 95, 106, 119, 120], "polygon_head": [1, 95, 106, 119, 120], "symmetri": [1, 95, 106, 119, 120, 171], "box": [1, 5, 18, 19, 35, 52, 55, 76, 83, 84, 92, 95, 97, 105, 106, 112, 119, 120, 125, 126, 129, 130, 137, 139, 156, 159, 165, 169, 183, 185, 186, 187, 193, 194, 197, 208, 215, 216], "refplan": [1, 95, 106, 119, 120], "port": [1, 5, 13, 17, 31, 34, 36, 37, 38, 39, 43, 48, 49, 56, 57, 63, 66, 88, 89, 90, 92, 93, 95, 96, 98, 106, 112, 117, 119, 120, 121, 129, 130, 131, 132, 133, 134, 139, 165, 169, 184, 204, 212, 214, 215], "control": [1, 17, 91, 95, 106, 119, 120, 121, 148, 154, 155, 167, 177, 178, 179, 180, 199, 200, 204, 209, 211], "polygon": [1, 58, 64, 65, 95, 106, 119, 120, 121, 122, 125, 127, 129, 154, 171, 187, 193, 213, 216], "via": [1, 5, 25, 95, 106, 119, 120, 144, 195, 209, 211, 213], "sonnet_export": [1, 95, 106, 119, 214], "poly_and_edge_indic": [1, 95, 106, 119, 121], "export_sonnet_son": [1, 95, 106, 119, 121, 214], "export_sonnet": [1, 95, 106, 119, 121, 214, 215], "xsection": [1, 95, 97, 106, 205, 206, 212], "epr_correction_export": [1, 95, 106, 123], "get_epr_correction_elmer_solut": [1, 95, 106, 123, 124], "get_epr_correction_simul": [1, 95, 101, 106, 123, 124], "xsection_export": [1, 95, 106, 123, 218], "xsection_cal": [1, 95, 106, 123, 125, 218], "create_xsections_from_simul": [1, 95, 106, 123, 125, 218], "separate_signal_layer_shap": [1, 95, 106, 123, 125], "find_layer_by_nam": [1, 95, 106, 123, 125], "free_layer_slot": [1, 95, 106, 123, 125], "visualise_xsection_cut_on_original_layout": [1, 95, 106, 123, 125], "export_and_run": [1, 95, 106, 210], "run_export_script": [1, 95, 106, 113], "run_simul": [1, 95, 106, 113], "export_singular": [1, 95, 106], "remote_export_and_run": [1, 95, 106], "remote_run_onli": [1, 95, 106, 115], "simulation_export": [1, 95, 106, 213, 214], "get_combined_paramet": [1, 95, 106, 116], "copy_content_into_directori": [1, 95, 106, 116], "get_post_process_command_lin": [1, 95, 106, 116], "export_simulation_json": [1, 95, 106, 116], "export_simulation_oa": [1, 95, 106, 116, 214], "sweep_simul": [1, 95, 106, 116, 213], "cross_sweep_simul": [1, 95, 106, 116, 213], "sweep_solut": [1, 95, 106, 116], "cross_sweep_solut": [1, 95, 106, 116], "cross_combin": [1, 95, 106, 116], "simulation_valid": [1, 95, 106], "validate_simul": [1, 95, 106, 117], "simulation_and_solution_types_match": [1, 95, 106, 117], "has_no_ports_when_requir": [1, 95, 106, 117], "has_edgeport_when_forbidden": [1, 95, 106, 117], "flux_integration_layer_exists_if_need": [1, 95, 106, 117], "get_port_nam": [1, 95, 106, 117], "validatesimerror": [1, 95, 106, 117], "solut": [1, 95, 106, 108, 109, 111, 112, 116, 117, 124, 179, 197, 212], "get_paramet": [1, 95, 97, 106, 118, 129], "export_lay": [1, 95, 106, 122], "find_edge_from_point_in_cel": [1, 95, 106, 122], "find_edge_from_point_in_polygon": [1, 95, 106, 122], "get_enclosing_polygon": [1, 95, 106, 122], "airbridges_sim": [1, 95], "airbridgessim": [1, 95, 96], "cross_section_simul": [1, 95, 125], "crosssectionsimul": [1, 95, 97, 108, 111, 125, 212, 213, 215], "process_lay": [1, 95, 97], "register_cell_layers_as_sim_lay": [1, 95, 97], "get_sim_lay": [1, 95, 97], "set_permitt": [1, 95, 97], "get_dict_by_lay": [1, 95, 97], "get_simulation_data": [1, 95, 97, 129], "empty_simul": [1, 95], "emptysimul": [1, 95, 98], "get_list_of_two": [1, 95, 126], "partitionregion": [1, 95, 100, 101, 103, 104, 112, 126, 129, 130], "limit_box": [1, 95, 126], "limit_fac": [1, 95, 126], "as_dict": [1, 95, 127], "internalport": [1, 95, 127, 129, 169, 213], "get_etch_polygon": [1, 95, 127], "edgeport": [1, 95, 117, 127, 169, 212, 213], "post_process": [1, 95, 108, 111, 116, 124, 214], "postprocess": [1, 95, 108, 111, 116, 124, 128], "get_command_lin": [1, 95, 128], "get_simulation_layer_by_nam": [1, 95, 129], "to_1d_list": [1, 95, 129], "from_cel": [1, 95, 96, 98, 129, 131, 132, 133, 134, 213, 214], "face_stack_list_of_list": [1, 95, 129], "ith_valu": [1, 95, 129], "face_z_level": [1, 95, 129], "region_from_lay": [1, 95, 129], "simplified_region": [1, 95, 129], "insert_lay": [1, 95, 129], "insert_stacked_up_lay": [1, 95, 129], "insert_layers_between_fac": [1, 95, 129], "create_simulation_lay": [1, 95, 96, 98, 129, 131, 132, 133, 134], "produce_lay": [1, 95, 129], "ground_grid_region": [1, 95, 129], "produce_waveguide_to_port": [1, 95, 129, 213], "etched_lin": [1, 95, 129], "get_port_data": [1, 95, 129], "get_partition_region": [1, 95, 101, 126, 129], "delete_inst": [1, 95, 129], "visualise_region": [1, 95, 129], "single_element_simul": [1, 95, 213, 214], "get_single_element_sim_class": [1, 95, 101, 130, 169, 213, 214], "single_xmons_full_chip_sim": [1, 95], "singlexmonsfullchipsim": [1, 95, 131], "waveguides_sim": [1, 95], "waveguidessim": [1, 95, 132], "produce_guid": [1, 95, 132], "produce_ground_bump": [1, 95, 132], "xmons_direct_coupling_full_chip_sim": [1, 95], "xmonsdirectcouplingfullchipsim": [1, 95, 133], "produce_launchers_sma8": [1, 95, 133], "xmons_direct_coupling_sim": [1, 95], "xmonsdirectcouplingsim": [1, 95, 134], "test_structur": [1, 198], "junction_test_pad": [1, 135], "junctiontestpad": [1, 13, 92, 135, 138, 139, 140], "junction_test_pads_simpl": [1, 135, 138], "junctiontestpadssimpl": [1, 135, 138, 140], "airbridge_dc": [1, 135], "airbridgedc": [1, 135, 136], "cross_test": [1, 135], "crosstest": [1, 135, 137], "stripes_test": [1, 135], "stripestest": [1, 15, 16, 135, 141], "stripes_test_increasing_width": [1, 135], "stripestestincreasingwidth": [1, 135, 142], "teststructur": [1, 135, 136, 137, 139, 141, 142, 143, 144, 174], "produce_pad": [1, 135, 143], "produce_four_point_pad": [1, 135, 143], "produce_etched_region": [1, 135, 143], "tsv_test_pattern": [1, 135], "tsvtestpattern": [1, 135, 144], "area": [1, 13, 43, 52, 55, 58, 63, 71, 75, 76, 83, 90, 92, 121, 126, 127, 139, 140, 143, 145, 156, 182, 185, 186, 192, 213], "areareceiv": [1, 145, 146], "put": [1, 63, 145, 146, 176, 185, 195], "get_area_and_dens": [1, 145, 146], "count_inst": [1, 145], "count_instances_in_cel": [1, 145, 147], "coupler_lib": [1, 145], "cap_param": [1, 19, 145, 148], "deep_delet": [1, 145], "deep_delete_pcel": [1, 145, 149], "deep_delete_al": [1, 145, 149], "defaults_help": [1, 145], "find_ansys_execut": [1, 145, 150], "depend": [1, 19, 127, 140, 145, 162, 169, 174, 176, 178, 201, 205, 210, 211, 213], "install_kqc_gui_depend": [1, 145, 151], "edit_node_plugin": [1, 145], "editnodeplugin": [1, 145, 152], "create_dialog": [1, 145, 152], "update_node_from_form": [1, 145, 152], "update_form_from_nod": [1, 145, 152], "deselect": [1, 145, 152], "select": [1, 13, 71, 121, 145, 152, 161, 182, 183, 185, 186, 187, 193, 196, 197, 207, 208, 213, 218], "activ": [1, 76, 127, 145, 152, 153, 180, 200, 211, 212], "deactiv": [1, 145, 152], "mouse_click_ev": [1, 145, 152], "mouse_moved_ev": [1, 145, 152], "has_tracking_posit": [1, 145, 152], "tracking_posit": [1, 145, 152], "updat": [1, 37, 83, 129, 145, 152, 174, 178, 187, 200, 205, 207, 212, 218], "editnodepluginfactori": [1, 145, 152], "create_plugin": [1, 145, 152], "export_help": [1, 145, 213, 214], "generate_probepoints_json": [1, 145, 153], "generate_probepoints_from_fil": [1, 145, 153], "create_or_empty_tmp_directori": [1, 113, 145, 153, 214], "get_simulation_directori": [1, 145, 153], "get_active_or_new_layout": [1, 145, 153, 213, 214], "write_commit_reference_fil": [1, 145, 153], "write_export_machine_versions_fil": [1, 145, 153], "open_with_klayout_or_default_appl": [1, 145, 153, 214], "get_klayout_vers": [1, 145, 153], "export_drc_report": [1, 145, 153], "geometry_help": [1, 145], "vector_length_and_direct": [1, 145, 154], "point_shift_along_vector": [1, 145, 154], "get_direct": [1, 145, 154], "get_angl": [1, 145, 154], "get_cell_path_length": [1, 145, 154], "get_object_path_length": [1, 145, 154], "simple_region": [1, 145, 154], "region_with_merged_point": [1, 129, 145, 154], "region_with_merged_polygon": [1, 129, 145, 154], "merge_points_and_match_on_edg": [1, 145, 154], "is_clockwis": [1, 145, 154], "circle_polygon": [1, 145, 154], "arc_point": [1, 145, 154], "bspline_point": [1, 145, 154], "bezier_point": [1, 145, 154], "round_dpath_width": [1, 145, 154], "geometry_json_encod": [1, 145], "geometryjsonencod": [1, 145, 155], "default": [1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 78, 79, 83, 84, 85, 88, 89, 90, 91, 92, 93, 96, 97, 108, 111, 112, 121, 124, 125, 129, 131, 132, 133, 134, 136, 137, 139, 140, 141, 142, 144, 145, 148, 150, 153, 154, 155, 157, 159, 163, 164, 165, 166, 167, 169, 174, 176, 179, 182, 185, 190, 192, 193, 195, 196, 198, 200, 201, 204, 208, 209, 212, 213, 214, 217, 218], "geometryjsondecod": [1, 145, 155], "encode_python_obj_as_dict": [1, 145, 155], "decode_dict_as_python_obj": [1, 145, 155], "groundgrid": [1, 145], "make_grid": [1, 145, 156], "gui_help": [1, 145], "get_nodes_near_posit": [1, 145, 157], "node_to_text": [1, 145, 157], "node_from_text": [1, 145, 157], "replace_nod": [1, 145, 157], "get_all_node_el": [1, 145, 157], "get_valid_node_el": [1, 145, 157], "import_help": [1, 145], "module_from_fil": [1, 145, 158], "label": [1, 5, 35, 37, 66, 76, 83, 129, 145, 160, 166, 173, 196, 208], "labelorigin": [1, 145, 159], "bottomleft": [1, 145, 159], "bottomright": [1, 145, 159], "topleft": [1, 145, 159], "topright": [1, 145, 159], "produce_label": [1, 145, 159], "label_polygon": [1, 145], "get_text_polygon": [1, 145, 160], "load_font_polygon": [1, 145, 160], "layout_to_cod": [1, 145], "convert_cells_to_cod": [1, 145, 161], "get_node_param": [1, 145, 161], "extract_pcell_data_from_view": [1, 145, 161], "restore_pcells_to_view": [1, 145, 161], "library_help": [1, 145, 174, 181, 205], "load_librari": [1, 145, 162], "get_library_path": [1, 145, 162], "delete_all_librari": [1, 145, 162], "delete_librari": [1, 145, 162], "element_by_class_nam": [1, 145, 162], "to_module_nam": [1, 145, 162], "to_library_nam": [1, 145, 162], "log_rout": [1, 145], "route_log": [1, 145, 163], "merg": [1, 5, 63, 129, 145, 154, 173, 174, 192], "merge_lay": [1, 145, 164], "convert_child_instances_to_stat": [1, 145, 164], "netlist_extract": [1, 145, 196], "export_cell_netlist": [1, 84, 145, 165], "extract_net": [1, 145, 165], "extract_circuit": [1, 145, 165], "netlist_graph": [1, 145], "network_as_graph": [1, 145, 166], "draw_graph": [1, 145, 166], "paramet": [1, 3, 4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 96, 97, 98, 101, 105, 108, 109, 111, 112, 113, 115, 116, 117, 118, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 169, 170, 171, 177, 178, 182, 187, 190, 192, 193, 196, 198, 204, 207, 208, 211, 213, 214, 215, 217, 218], "add_parameters_from": [1, 145, 167, 174, 213], "add_paramet": [1, 145, 167, 174, 213], "pdt": [1, 145, 167, 193, 195], "typedoubl": [1, 145, 167, 193, 195], "typeint": [1, 145, 167], "typelist": [1, 145, 167], "typestr": [1, 145, 167], "typeshap": [1, 145, 167], "typeboolean": [1, 145, 167], "typelay": [1, 145, 167], "typenon": [1, 145, 167], "param": [1, 37, 63, 117, 129, 145, 167, 170, 174, 193, 195], "get_al": [1, 145, 167], "plugin_startup": [1, 145], "register_plugin": [1, 145, 168], "refpoint": [1, 19, 23, 28, 33, 34, 36, 37, 38, 43, 48, 56, 57, 61, 63, 76, 79, 88, 89, 90, 91, 92, 93, 101, 105, 129, 130, 139, 143, 145, 153, 157, 161, 184, 191, 192, 195, 213], "layer": [1, 5, 13, 25, 27, 28, 29, 32, 33, 35, 36, 37, 38, 52, 54, 57, 58, 61, 63, 64, 65, 68, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 90, 92, 93, 97, 101, 109, 112, 117, 122, 124, 125, 126, 127, 129, 137, 139, 141, 142, 143, 144, 145, 146, 154, 159, 164, 165, 169, 170, 182, 185, 186, 190, 191, 193, 194, 196, 198, 205, 207, 212, 213, 218], "cell": [1, 5, 15, 16, 31, 34, 36, 37, 38, 41, 43, 45, 48, 52, 55, 56, 57, 60, 63, 64, 70, 75, 76, 82, 83, 84, 88, 89, 90, 92, 93, 95, 96, 97, 98, 122, 125, 129, 130, 131, 132, 133, 134, 139, 145, 146, 147, 148, 149, 153, 154, 157, 159, 161, 162, 164, 165, 169, 170, 174, 180, 182, 183, 185, 187, 188, 190, 193, 196, 207, 208, 213, 214, 216], "tran": [1, 5, 9, 10, 37, 65, 67, 76, 83, 129, 143, 145, 169, 170, 213], "rec_level": [1, 37, 76, 129, 145, 169, 196], "dict": [1, 5, 63, 83, 92, 97, 100, 101, 103, 104, 109, 111, 112, 124, 130, 139, 145, 153, 155, 160, 162, 169, 170, 213], "item": [1, 124, 129, 145, 155, 166, 169, 194], "kei": [1, 5, 23, 37, 79, 83, 84, 85, 109, 112, 116, 124, 129, 133, 145, 148, 153, 155, 161, 162, 164, 165, 169, 170, 176, 187, 209, 211], "valu": [1, 5, 13, 23, 27, 29, 34, 36, 37, 38, 43, 48, 56, 57, 58, 63, 68, 76, 79, 82, 83, 84, 88, 89, 90, 93, 97, 109, 112, 121, 124, 125, 127, 129, 133, 139, 145, 153, 154, 155, 157, 159, 161, 162, 164, 165, 167, 169, 170, 174, 176, 186, 187, 193, 195, 198, 204, 205, 207, 212, 213, 218], "refpointtosimport": [1, 34, 36, 37, 38, 43, 48, 56, 57, 88, 89, 90, 93, 145, 169, 213], "refpointtointernalport": [1, 145, 169], "refpointtoedgeport": [1, 145, 169], "waveguidetosimport": [1, 145, 169, 213], "toward": [1, 63, 129, 145, 169, 213], "side": [1, 3, 5, 6, 18, 19, 29, 34, 36, 37, 38, 43, 48, 56, 57, 61, 62, 66, 83, 88, 89, 90, 93, 125, 127, 129, 130, 143, 145, 161, 169, 171, 174, 190, 208, 212, 213], "use_internal_port": [1, 56, 129, 145, 169, 213], "waveguide_length": [1, 129, 134, 145, 154, 169, 213], "term1": [1, 58, 63, 64, 129, 133, 145, 169], "turn_radiu": [1, 129, 133, 145, 169], "b": [1, 13, 19, 25, 29, 31, 32, 36, 37, 38, 39, 43, 49, 57, 58, 63, 66, 68, 79, 90, 91, 129, 133, 139, 144, 145, 154, 169], "over_etch": [1, 129, 145, 169], "deembed_cross_sect": [1, 127, 129, 130, 145, 169], "junctionsimport": [1, 145, 169, 213], "other_refpoint": [1, 145, 169], "float": [1, 5, 17, 63, 83, 109, 112, 120, 122, 124, 125, 127, 129, 145, 146, 154, 155, 157, 169, 212, 213], "replace_junct": [1, 145], "junctionentri": [1, 145, 170], "extract_junct": [1, 145, 170], "check_static_cell_has_junct": [1, 145, 170], "place_junct": [1, 145, 170], "get_tuned_junction_json": [1, 145, 170], "copy_one_layer_of_cel": [1, 145, 170], "replace_squid": [1, 145, 170], "convert_cells_to_stat": [1, 145, 170], "symmetric_polygon": [1, 145, 193], "polygon_with_hsym": [1, 145, 171], "polygon_with_vsym": [1, 145, 171, 193], "polygon_with_sym": [1, 145, 171], "klayout_view": [1, 180, 198, 207], "klayoutview": [1, 76, 180], "layout_view": [1, 76, 207], "focu": [1, 76, 207], "show": [1, 13, 25, 29, 32, 37, 38, 58, 63, 76, 90, 129, 139, 141, 142, 144, 166, 180, 182, 185, 186, 187, 191, 192, 193, 194, 196, 207, 208, 213, 214], "close": [1, 52, 64, 76, 108, 154, 161, 197, 208], "cell_view": [1, 76, 207], "active_cel": [1, 76, 207], "clear_lay": [1, 76], "add_default_lay": [1, 76], "create_top_cel": [1, 76], "export_layers_bitmap": [1, 76], "export_all_layers_bitmap": [1, 76], "export_pcell_png": [1, 76, 207], "get_pixel": [1, 76], "get_active_cell_view": [1, 76], "get_active_layout": [1, 76], "get_active_cel": [1, 76], "missinguilibraryexcept": [1, 76], "resolve_default_layer_info": [1, 76], "layer_clust": [1, 198], "layerclust": [1, 77], "main_lay": [1, 77], "extra_lay": [1, 77], "all_lay": [1, 77], "pya_resolv": [1, 174, 193, 198, 213], "is_standalone_sess": [1, 86], "klayout_executable_command": [1, 86], "run": [1, 63, 76, 79, 86, 108, 111, 112, 113, 115, 125, 128, 151, 153, 176, 177, 179, 180, 181, 197, 198, 201, 205, 206, 208, 209, 211, 212, 214, 215, 216, 217, 218], "argument_pars": [1, 94], "run_kqc": [1, 94], "pcell": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 84, 87, 88, 89, 90, 91, 92, 93, 96, 97, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 157, 159, 160, 161, 162, 164, 165, 166, 167, 170, 177, 178, 182, 183, 184, 186, 187, 195, 205, 207, 213, 216], "declar": [2, 3, 5, 6, 7, 12, 13, 14, 18, 19, 20, 21, 22, 23, 24, 26, 28, 29, 32, 33, 35, 36, 37, 38, 39, 42, 43, 49, 50, 53, 54, 55, 57, 58, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 87, 88, 89, 93, 135, 136, 137, 141, 142, 143, 144], "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 101, 109, 112, 117, 118, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 152, 155, 157, 159, 161, 162, 167, 169, 170, 174, 175, 177, 191, 193, 194, 196, 205, 207, 212, 214, 215], "consist": [2, 15, 16, 25, 35, 63, 64, 65, 79, 81, 84, 88, 89, 90, 91, 101, 140, 153, 155, 175, 182, 198, 211, 215], "thei": [2, 3, 6, 28, 63, 69, 79, 83, 85, 88, 89, 97, 101, 122, 154, 164, 166, 170, 174, 176, 182, 190, 196, 207, 212], "ar": [2, 3, 5, 6, 13, 20, 23, 25, 28, 29, 30, 32, 33, 37, 38, 49, 58, 63, 64, 65, 66, 69, 76, 79, 81, 83, 84, 85, 90, 92, 97, 101, 105, 106, 109, 112, 113, 115, 117, 121, 124, 125, 126, 129, 133, 135, 139, 143, 144, 145, 147, 153, 154, 155, 157, 161, 162, 163, 164, 165, 166, 167, 168, 170, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 185, 186, 187, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 201, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218], "themselv": 2, "A": [2, 5, 9, 23, 26, 37, 52, 58, 63, 64, 65, 66, 76, 83, 84, 85, 88, 89, 90, 91, 105, 109, 112, 116, 117, 118, 121, 125, 129, 133, 134, 153, 154, 162, 166, 167, 169, 176, 180, 185, 186, 187, 190, 195, 204, 207, 208, 212, 213, 216], "frame": [2, 5, 35, 49, 83, 185], "i": [2, 3, 5, 6, 7, 10, 16, 19, 23, 28, 29, 31, 32, 33, 34, 36, 37, 38, 39, 41, 43, 48, 49, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 68, 70, 75, 76, 79, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 96, 97, 98, 101, 105, 108, 109, 111, 112, 113, 116, 117, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 140, 141, 142, 143, 148, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 164, 165, 166, 167, 169, 170, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218], "alwai": [2, 112, 165, 180, 190, 195, 197, 212], "method": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 32, 33, 34, 36, 37, 38, 39, 42, 43, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 76, 88, 89, 90, 93, 96, 97, 98, 105, 112, 129, 131, 132, 133, 134, 136, 137, 140, 141, 142, 144, 155, 161, 174, 175, 180, 181, 193, 194, 195, 207, 212, 213, 214, 218], "place": [2, 5, 13, 18, 25, 28, 29, 32, 34, 36, 37, 38, 43, 48, 52, 55, 56, 57, 58, 63, 64, 65, 76, 79, 83, 88, 89, 90, 93, 129, 130, 139, 144, 154, 155, 161, 163, 169, 170, 174, 177, 181, 182, 186, 188, 192, 193, 194, 195, 196, 197, 207, 208, 213, 214], "some": [2, 5, 13, 25, 28, 29, 32, 37, 38, 58, 63, 77, 84, 85, 90, 105, 108, 111, 117, 121, 129, 139, 144, 153, 154, 167, 170, 174, 177, 179, 180, 181, 183, 186, 187, 188, 192, 193, 195, 196, 197, 201, 204, 207, 208, 209, 212, 213, 216], "test": [2, 3, 4, 5, 9, 11, 13, 15, 16, 23, 25, 34, 69, 131, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 155, 170, 176, 178, 179, 180, 182, 198, 200, 205, 208, 211, 214], "structur": [2, 5, 28, 69, 127, 135, 136, 139, 140, 143, 144, 166, 170, 180, 181, 182, 191, 194, 198, 206, 208, 212, 216], "after": [2, 13, 28, 63, 64, 71, 72, 79, 83, 90, 108, 111, 116, 125, 129, 130, 139, 167, 176, 179, 182, 193, 194, 196, 197, 204, 205, 207, 208, 211, 214], "ad": [2, 19, 37, 63, 76, 83, 116, 127, 128, 129, 133, 153, 154, 159, 161, 165, 166, 167, 174, 176, 193, 196, 213], "ground": [2, 5, 11, 17, 18, 35, 36, 37, 38, 39, 43, 48, 52, 55, 56, 57, 63, 64, 65, 67, 83, 84, 85, 88, 89, 90, 97, 112, 121, 127, 129, 132, 148, 156, 159, 185, 192, 212, 213], "grid": [2, 5, 18, 35, 37, 55, 56, 63, 64, 65, 67, 83, 84, 85, 129, 143, 156, 159, 161, 185, 192], "which": [2, 5, 6, 7, 10, 16, 19, 23, 28, 34, 36, 37, 38, 43, 48, 56, 57, 63, 64, 65, 76, 77, 79, 81, 83, 84, 85, 87, 88, 89, 90, 93, 95, 96, 97, 98, 105, 112, 115, 116, 121, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 140, 141, 142, 143, 144, 145, 147, 148, 153, 154, 155, 156, 157, 159, 162, 164, 169, 170, 174, 176, 177, 179, 180, 181, 182, 183, 186, 187, 190, 193, 196, 201, 204, 205, 207, 208, 209, 211, 212, 213, 214, 215, 217, 218], "avoid": [2, 5, 13, 19, 25, 29, 32, 35, 37, 38, 58, 63, 64, 65, 90, 129, 139, 143, 144, 156, 159, 163, 164, 183, 185, 192, 198, 208, 212], "can": [2, 5, 19, 23, 28, 36, 37, 52, 55, 58, 63, 64, 69, 70, 75, 76, 79, 81, 82, 84, 85, 87, 88, 89, 96, 97, 98, 101, 105, 112, 116, 117, 121, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 140, 153, 154, 155, 157, 161, 166, 169, 170, 172, 174, 176, 179, 180, 181, 182, 183, 184, 186, 187, 190, 191, 193, 194, 195, 196, 197, 200, 201, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218], "produc": [2, 5, 9, 13, 19, 23, 31, 35, 45, 52, 58, 63, 64, 65, 66, 70, 75, 83, 92, 109, 112, 124, 125, 127, 129, 131, 133, 139, 140, 143, 148, 157, 159, 181, 193, 208, 211, 213, 214, 216, 218], "document": [2, 81, 82, 84, 95, 135, 174, 175, 178, 180, 181, 187, 188, 189, 191, 194, 200, 205, 207, 208, 216], "gener": [2, 5, 13, 30, 37, 55, 61, 64, 69, 70, 75, 76, 81, 83, 84, 85, 87, 90, 92, 97, 113, 125, 129, 135, 139, 154, 156, 157, 160, 161, 165, 167, 170, 176, 177, 180, 182, 183, 184, 191, 192, 194, 195, 198, 206, 207, 208, 211, 212, 214, 215, 218], "descript": [2, 135, 167, 174, 193, 195, 216], "sourc": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 103, 104, 105, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 178, 180, 181, 199, 203, 205, 212, 213], "base": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 83, 84, 85, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 109, 112, 113, 117, 118, 126, 127, 128, 129, 131, 132, 133, 134, 136, 137, 139, 140, 141, 142, 143, 144, 146, 152, 154, 155, 159, 167, 169, 170, 174, 190, 191, 192, 193, 195, 205, 208, 211, 212, 213], "an": [3, 5, 26, 28, 29, 31, 32, 36, 37, 42, 43, 63, 64, 65, 76, 79, 83, 84, 85, 92, 105, 109, 111, 112, 116, 117, 125, 129, 130, 136, 140, 148, 153, 154, 155, 157, 161, 165, 166, 167, 169, 170, 171, 174, 179, 180, 182, 183, 184, 187, 190, 194, 196, 197, 200, 201, 204, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218], "On": [3, 6, 179, 201, 209, 210], "left": [3, 5, 6, 13, 19, 23, 35, 37, 43, 48, 58, 65, 82, 83, 91, 97, 122, 125, 127, 129, 169, 186, 193, 197, 208, 213], "straight": [3, 6, 26, 45, 47, 58, 63, 64, 67, 92, 129, 134, 205], "vertic": [3, 6, 13, 24, 25, 32, 33, 47, 58, 83, 126, 129, 139, 144, 170, 171, 218], "waveguid": [3, 6, 17, 19, 20, 29, 37, 43, 48, 49, 55, 58, 63, 64, 65, 66, 67, 68, 88, 89, 90, 93, 97, 127, 129, 132, 134, 154, 157, 161, 165, 166, 169, 182, 184, 185, 188, 196, 212, 213], "cross": [3, 6, 13, 23, 25, 29, 32, 37, 38, 58, 63, 66, 90, 97, 109, 112, 116, 125, 127, 129, 130, 137, 139, 144, 169, 185, 187, 193, 198, 206, 213, 215], "multipl": [3, 6, 63, 79, 84, 85, 88, 89, 101, 105, 125, 153, 164, 166, 170, 174, 179, 182, 190, 197, 198, 207, 208, 211, 213, 216], "time": [3, 6, 37, 108, 111, 112, 116, 121, 125, 154, 169, 177, 186, 194, 198, 200, 207, 208, 209, 211, 213], "There": [3, 6, 23, 91, 140, 141, 142, 174, 177, 180, 182, 183, 195, 196, 199, 200, 208, 209, 211, 212, 213], "right": [3, 6, 19, 23, 29, 37, 58, 68, 82, 83, 125, 127, 129, 169, 182, 186, 192, 194, 196, 207, 208, 213], "likewis": [3, 6], "do": [3, 6, 37, 63, 79, 112, 129, 161, 175, 176, 179, 180, 181, 186, 196, 204, 207, 208, 210, 211, 212, 213, 214], "ani": [3, 6, 19, 63, 64, 70, 75, 76, 84, 85, 96, 97, 98, 100, 101, 104, 105, 112, 124, 129, 130, 131, 132, 133, 134, 140, 157, 162, 168, 173, 174, 179, 180, 187, 190, 192, 193, 194, 195, 197, 202, 208, 211, 212, 213, 214, 215], "point": [3, 4, 5, 6, 13, 25, 29, 32, 33, 36, 37, 38, 39, 55, 58, 63, 64, 65, 76, 83, 88, 89, 90, 91, 94, 122, 125, 129, 133, 134, 136, 139, 144, 153, 154, 161, 164, 166, 169, 171, 177, 181, 184, 186, 196, 204, 207, 211, 213, 216], "In": [3, 43, 63, 76, 79, 84, 96, 98, 116, 125, 129, 131, 132, 133, 134, 154, 174, 176, 179, 182, 183, 184, 186, 187, 188, 190, 191, 192, 193, 194, 196, 197, 205, 207, 208, 212, 213, 214], "center": [3, 5, 13, 17, 18, 19, 23, 25, 29, 32, 33, 36, 37, 38, 41, 43, 48, 58, 61, 62, 63, 64, 65, 66, 73, 74, 83, 88, 89, 90, 91, 92, 93, 127, 129, 139, 143, 144, 154, 165, 169, 186, 208, 213], "arrai": [3, 5, 25, 83, 84, 140, 155, 216], "mechan": 3, "differ": [3, 5, 6, 13, 15, 16, 28, 36, 37, 43, 52, 58, 83, 84, 85, 97, 109, 125, 129, 139, 153, 165, 170, 174, 179, 181, 182, 187, 190, 193, 195, 198, 199, 204, 205, 208, 211, 212, 213, 214], "length": [3, 5, 6, 9, 10, 12, 13, 15, 16, 17, 18, 19, 23, 24, 26, 29, 31, 32, 34, 35, 36, 38, 39, 48, 49, 55, 56, 57, 58, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 83, 90, 92, 93, 97, 109, 112, 120, 125, 127, 129, 132, 133, 134, 137, 139, 141, 142, 148, 154, 156, 157, 161, 164, 169, 186, 187, 193, 195, 212, 213], "width": [3, 4, 5, 13, 17, 18, 19, 20, 25, 26, 29, 31, 32, 34, 35, 36, 37, 38, 39, 43, 45, 47, 48, 49, 50, 56, 57, 58, 61, 63, 64, 66, 70, 71, 72, 74, 76, 83, 88, 89, 90, 92, 93, 125, 127, 129, 133, 134, 136, 137, 139, 141, 142, 143, 144, 154, 169, 193, 213], "child": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 29, 32, 33, 34, 36, 37, 38, 39, 42, 43, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 62, 64, 65, 66, 67, 68, 71, 72, 73, 74, 84, 88, 89, 90, 93, 105, 136, 137, 140, 141, 142, 144, 147, 157, 161, 164, 169, 190, 195, 213], "re": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 29, 32, 33, 34, 36, 37, 38, 39, 42, 43, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 62, 64, 65, 66, 67, 68, 71, 72, 73, 74, 88, 89, 90, 93, 120, 127, 136, 137, 140, 141, 142, 144, 161, 167, 174, 190, 207, 211], "defin": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 29, 32, 33, 34, 36, 37, 38, 39, 42, 43, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 79, 88, 89, 90, 91, 92, 93, 97, 101, 105, 108, 125, 129, 130, 136, 137, 140, 141, 142, 143, 144, 153, 154, 155, 163, 165, 167, 170, 174, 181, 182, 186, 190, 191, 195, 196, 197, 198, 204, 205, 208, 209, 211, 212, 213, 218], "thi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 42, 43, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 82, 83, 84, 85, 86, 88, 89, 90, 93, 95, 96, 97, 98, 101, 105, 108, 111, 112, 125, 126, 127, 129, 131, 132, 133, 134, 136, 137, 139, 140, 141, 142, 144, 146, 151, 152, 154, 155, 157, 161, 162, 164, 165, 166, 167, 169, 170, 174, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214], "int": [3, 4, 5, 6, 12, 13, 18, 20, 24, 25, 29, 32, 34, 35, 37, 38, 39, 43, 52, 54, 55, 56, 58, 63, 64, 65, 83, 88, 89, 90, 91, 96, 109, 112, 115, 120, 122, 125, 127, 129, 132, 136, 137, 139, 141, 142, 144, 154, 155, 157, 160], "number": [3, 4, 5, 6, 13, 18, 19, 20, 22, 23, 25, 29, 32, 34, 35, 37, 38, 39, 43, 52, 54, 55, 56, 57, 58, 63, 65, 66, 79, 81, 84, 88, 89, 90, 91, 96, 109, 112, 121, 125, 126, 127, 129, 132, 136, 137, 139, 141, 142, 144, 147, 148, 153, 154, 155, 156, 166, 170, 173, 190, 192, 204, 211, 212, 213], "pair": [3, 6, 13, 17, 54, 139, 155, 157, 161, 169, 187, 196, 205], "10": [3, 5, 13, 17, 18, 19, 23, 25, 26, 29, 32, 34, 35, 37, 38, 48, 52, 56, 57, 58, 63, 66, 68, 88, 89, 90, 93, 109, 112, 129, 133, 137, 139, 144, 154, 156, 157, 172, 179, 180, 200, 201, 211, 212, 213], "b_number": 3, "one": [3, 12, 17, 19, 23, 24, 58, 63, 65, 79, 81, 84, 85, 88, 89, 90, 91, 97, 108, 111, 116, 117, 125, 129, 153, 154, 155, 161, 163, 164, 165, 167, 168, 169, 170, 173, 174, 176, 179, 180, 183, 185, 186, 190, 193, 196, 200, 201, 204, 205, 206, 207, 211, 212, 213, 214, 215], "5": [3, 13, 18, 19, 23, 25, 29, 32, 37, 38, 39, 57, 58, 63, 72, 73, 88, 89, 90, 93, 96, 109, 112, 125, 129, 132, 139, 144, 156, 167, 197, 211, 212], "full": [4, 5, 65, 76, 79, 86, 126, 154, 161, 166, 180, 185, 197, 198, 210, 211, 213, 216], "4": [4, 5, 13, 17, 18, 19, 23, 84, 88, 89, 112, 124, 125, 129, 137, 139, 140, 154, 159, 167, 197, 201, 213], "dc": [4, 5, 7, 8, 32, 41, 42, 43, 50, 58, 63, 136], "n_step": 4, "increment": [4, 5, 13, 63, 142, 157, 170], "step": [4, 13, 15, 16, 63, 139, 154, 156, 170, 179, 186, 191, 197, 201, 207, 208, 209], "1": [4, 5, 6, 7, 10, 13, 16, 17, 18, 19, 23, 26, 28, 29, 36, 37, 38, 43, 55, 56, 57, 58, 63, 65, 68, 71, 72, 84, 88, 89, 90, 109, 112, 120, 124, 125, 126, 129, 134, 139, 141, 142, 146, 154, 159, 161, 166, 167, 178, 186, 190, 196, 197, 204, 208, 209, 211, 212, 213, 218], "test_width": 4, "doubl": [4, 5, 6, 13, 17, 18, 19, 20, 25, 26, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 45, 47, 48, 49, 50, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 88, 89, 90, 92, 93, 112, 129, 132, 133, 134, 136, 137, 139, 141, 142, 144, 171, 183, 186, 187, 207, 212, 217], "singl": [4, 6, 10, 13, 17, 19, 23, 26, 57, 58, 63, 70, 72, 82, 84, 88, 90, 92, 101, 108, 111, 112, 116, 129, 130, 134, 139, 161, 162, 167, 180, 181, 190, 194, 197, 208, 209, 211, 215, 216], "2000": [4, 19, 112, 136, 193, 204], "unit": [4, 5, 6, 9, 10, 13, 17, 18, 19, 20, 25, 26, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 45, 47, 48, 49, 50, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66, 68, 70, 71, 72, 73, 74, 75, 88, 89, 90, 92, 93, 97, 109, 112, 125, 126, 127, 129, 132, 133, 134, 136, 137, 139, 141, 142, 144, 153, 154, 156, 174, 178, 180, 193, 195, 198, 212], "\u03bcm": [4, 5, 6, 9, 10, 13, 17, 18, 19, 20, 25, 26, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 45, 47, 48, 49, 50, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66, 68, 70, 71, 72, 75, 88, 89, 90, 92, 93, 129, 132, 133, 134, 136, 137, 139, 141, 142, 144, 169, 193, 195], "pixel": [5, 7, 76, 154, 216], "corner": [5, 7, 13, 35, 37, 38, 39, 52, 63, 64, 65, 159, 184, 193, 196], "dice": [5, 7, 35, 83], "edg": [5, 7, 12, 19, 20, 24, 35, 36, 52, 58, 63, 64, 73, 74, 83, 89, 90, 91, 112, 121, 122, 124, 125, 126, 127, 129, 132, 133, 143, 154, 156, 169, 181, 187, 213], "option": [5, 23, 32, 37, 58, 63, 83, 84, 85, 93, 101, 109, 112, 115, 121, 124, 125, 127, 129, 130, 140, 148, 161, 165, 176, 181, 186, 187, 193, 195, 200, 201, 208, 209, 211, 214, 218], "all": [5, 11, 28, 31, 34, 36, 37, 38, 43, 48, 56, 57, 61, 63, 64, 66, 76, 82, 83, 84, 85, 88, 89, 90, 93, 97, 101, 105, 111, 112, 113, 115, 116, 124, 125, 129, 146, 154, 155, 157, 161, 162, 164, 167, 170, 174, 175, 176, 180, 181, 185, 186, 190, 193, 196, 197, 201, 204, 205, 207, 208, 210, 211, 212, 213, 214], "contain": [5, 22, 23, 28, 34, 36, 37, 38, 43, 48, 56, 57, 63, 69, 76, 77, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95, 97, 101, 105, 108, 111, 112, 113, 115, 116, 124, 125, 129, 130, 137, 141, 142, 144, 146, 153, 155, 157, 159, 164, 165, 166, 169, 170, 174, 177, 178, 179, 180, 181, 182, 187, 189, 192, 193, 194, 198, 205, 207, 208, 211, 213, 214, 216, 218], "connector": [5, 19, 32, 37, 40, 41, 42, 43, 58, 61, 62, 63, 182, 187, 190], "between": [5, 6, 9, 10, 12, 13, 17, 18, 19, 23, 24, 25, 29, 32, 34, 35, 37, 38, 39, 41, 43, 57, 58, 61, 62, 63, 64, 79, 90, 93, 112, 125, 127, 129, 134, 137, 139, 141, 142, 143, 144, 146, 154, 156, 165, 182, 198, 212, 213], "librari": [5, 28, 31, 37, 41, 45, 52, 60, 63, 70, 76, 90, 91, 92, 93, 139, 143, 157, 162, 178, 179, 180, 182, 183, 185, 186, 190, 193, 194, 197, 198, 201, 205, 206, 216, 217], "superconduct": [5, 37, 125, 143, 198], "quantum": [5, 28, 37, 69, 143, 198, 216], "circuit": [5, 28, 37, 143, 165, 198, 205, 216], "implement": [5, 13, 28, 31, 34, 36, 37, 38, 39, 43, 45, 48, 52, 55, 56, 57, 63, 64, 65, 70, 88, 89, 90, 92, 93, 97, 101, 105, 129, 139, 153, 154, 155, 161, 169, 173, 193, 196, 205, 209, 211, 213, 216], "static": [5, 37, 54, 63, 64, 65, 67, 76, 83, 84, 129, 160, 164, 170, 183], "chip_cel": [5, 82, 83], "return": [5, 34, 36, 37, 38, 43, 48, 52, 56, 57, 58, 63, 64, 65, 66, 76, 77, 83, 84, 86, 88, 89, 90, 92, 93, 97, 101, 105, 108, 109, 111, 112, 113, 116, 117, 118, 121, 122, 124, 125, 126, 127, 128, 129, 130, 133, 139, 146, 147, 148, 150, 153, 154, 155, 156, 157, 158, 160, 161, 162, 166, 167, 169, 170, 171, 190, 196, 207, 208, 213], "dictionari": [5, 23, 37, 58, 66, 79, 83, 84, 85, 97, 109, 112, 116, 118, 124, 127, 129, 130, 133, 148, 155, 162, 164, 165, 166, 167, 169, 196, 204, 213], "assign": [5, 101, 124, 169, 185, 196], "port_id": 5, "launcher_id": 5, "object": [5, 26, 34, 36, 37, 38, 43, 45, 48, 52, 56, 57, 63, 76, 77, 79, 82, 83, 84, 85, 88, 89, 90, 92, 93, 95, 97, 105, 106, 108, 111, 112, 116, 117, 118, 124, 125, 126, 127, 128, 129, 130, 134, 146, 152, 153, 154, 155, 157, 164, 165, 167, 169, 170, 174, 180, 183, 186, 191, 193, 195, 198, 206, 207, 208, 211, 212, 214, 215, 216, 217, 218], "junction_typ": [5, 9, 10, 13, 23, 26, 70, 71, 72, 73, 74, 75, 90, 92, 134, 139, 170, 213], "pad": [5, 9, 13, 29, 31, 32, 33, 34, 36, 38, 49, 50, 58, 71, 72, 74, 89, 90, 92, 93, 129, 136, 138, 139, 140, 143, 195, 213], "string": [5, 6, 7, 9, 10, 13, 14, 15, 16, 17, 19, 22, 23, 24, 25, 26, 29, 31, 32, 33, 34, 35, 37, 38, 41, 43, 45, 46, 47, 56, 58, 60, 61, 62, 63, 66, 70, 71, 72, 73, 74, 83, 84, 90, 92, 97, 109, 112, 113, 115, 116, 128, 129, 130, 132, 134, 139, 140, 144, 148, 153, 155, 157, 160, 161, 162, 163, 165, 166, 169, 190, 196, 208], "type": [5, 9, 10, 13, 14, 15, 16, 18, 19, 23, 25, 26, 27, 29, 31, 32, 33, 35, 37, 41, 43, 45, 46, 47, 52, 56, 58, 60, 61, 62, 63, 66, 70, 71, 72, 73, 74, 79, 84, 86, 90, 92, 93, 105, 112, 117, 121, 125, 127, 129, 130, 131, 134, 139, 140, 144, 146, 147, 148, 153, 154, 155, 157, 161, 165, 167, 170, 180, 181, 183, 184, 192, 193, 195, 204, 210, 212, 213, 218], "us": [5, 9, 11, 19, 23, 26, 28, 29, 34, 35, 36, 37, 38, 43, 48, 49, 52, 55, 56, 57, 58, 63, 64, 66, 68, 70, 75, 76, 79, 82, 83, 84, 85, 86, 88, 89, 90, 92, 93, 96, 97, 98, 101, 105, 106, 108, 109, 111, 112, 113, 115, 116, 121, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 139, 143, 148, 153, 154, 155, 156, 157, 160, 161, 162, 164, 165, 166, 167, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 186, 188, 189, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 204, 205, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218], "optic": [5, 15, 16, 137, 141, 142, 198, 216], "lithographi": [5, 15, 16, 129, 137, 141, 142, 216], "call": [5, 37, 57, 63, 84, 96, 97, 98, 101, 105, 112, 116, 125, 126, 129, 131, 132, 133, 134, 146, 155, 162, 164, 165, 174, 181, 194, 195, 196, 197, 206, 207, 208, 210, 211, 212, 213, 214, 216], "overrid": [5, 13, 83, 85, 96, 97, 98, 105, 124, 127, 129, 131, 132, 133, 134, 139, 174, 176, 209], "set": [5, 19, 37, 58, 63, 76, 81, 82, 84, 85, 97, 101, 105, 109, 112, 113, 121, 124, 125, 127, 129, 133, 153, 154, 169, 173, 174, 176, 179, 180, 181, 182, 183, 192, 193, 194, 195, 198, 204, 209, 211, 212, 213, 214], "given": [5, 34, 36, 37, 38, 43, 48, 55, 56, 57, 58, 63, 64, 76, 79, 82, 84, 88, 89, 90, 92, 93, 97, 105, 109, 112, 124, 125, 126, 127, 128, 129, 130, 137, 139, 140, 141, 142, 144, 153, 154, 155, 158, 159, 160, 162, 164, 167, 169, 170, 174, 176, 193, 196, 205, 208, 211, 212, 213, 215], "pya": [5, 37, 52, 63, 79, 83, 84, 86, 92, 124, 125, 126, 129, 143, 154, 155, 157, 165, 167, 169, 171, 178, 190, 193, 196, 204, 208, 213], "dbox": [5, 76, 92, 125, 126, 129, 190, 193, 204, 208, 213], "within": [5, 34, 36, 37, 38, 43, 48, 56, 57, 63, 88, 89, 90, 93, 101, 105, 112, 140, 170, 180, 181, 205, 215, 217], "id": [5, 6, 7, 10, 13, 16, 19, 25, 29, 32, 37, 38, 58, 63, 76, 79, 84, 85, 90, 129, 132, 139, 144, 153, 154, 166, 175, 180, 190, 194, 204, 206, 207, 208, 217], "where": [5, 13, 17, 19, 23, 25, 29, 32, 34, 36, 37, 38, 43, 48, 56, 57, 58, 63, 64, 65, 70, 75, 83, 84, 85, 88, 89, 90, 93, 97, 101, 108, 111, 112, 113, 116, 121, 125, 126, 128, 129, 130, 133, 139, 144, 153, 154, 157, 159, 161, 164, 165, 169, 170, 174, 179, 183, 192, 193, 196, 201, 204, 207, 208, 209, 211, 212, 213, 215], "frame_paramet": 5, "r0": [5, 37, 129, 143], "dtran": [5, 52, 65, 83, 130, 171, 193, 196, 213], "toler": [5, 64, 112, 122, 129, 154, 164], "004": [5, 129, 164], "base_metal_gap": [5, 79, 164, 192], "combin": [5, 37, 97, 116, 129, 164, 198, 213], "three": [5, 17, 69, 129, 164, 180, 199, 205, 207, 208, 211, 213], "subtract": [5, 52, 129, 143, 164], "insert": [5, 28, 35, 37, 58, 63, 76, 83, 92, 105, 129, 139, 143, 155, 164, 169, 180, 183, 187, 190, 196, 213], "oper": [5, 37, 63, 153, 164, 179, 180, 185, 187, 200, 201, 211], "base_metal_gap_wo_grid": [5, 92, 137, 139, 141, 142, 164, 165, 185, 192, 193, 194, 204], "base_metal_addit": [5, 164, 192], "ground_grid": [5, 164, 192], "info": [5, 115, 121, 129, 163, 164, 176, 211], "gap": [5, 13, 17, 18, 19, 20, 23, 25, 29, 32, 34, 35, 36, 37, 38, 39, 43, 45, 47, 48, 49, 56, 57, 58, 63, 64, 65, 66, 71, 72, 74, 88, 89, 90, 93, 124, 126, 129, 139, 143, 144, 148, 154, 164, 169, 192, 213], "ignor": [5, 84, 92, 97, 129, 154, 164, 169, 179, 211], "while": [5, 23, 37, 79, 112, 164, 165, 176, 181, 194, 201, 211], "\u00b5m": [5, 17, 35, 58, 63, 73, 74, 88, 89, 90, 92, 121, 129, 164], "possibli": [5, 52, 170, 197, 208], "befor": [5, 37, 63, 64, 76, 84, 112, 126, 129, 157, 168, 179, 183, 214], "get": [5, 63, 76, 97, 124, 125, 146, 155, 165, 167, 174, 176, 177, 179, 180, 181, 186, 191, 197, 198, 205, 207, 209], "specifi": [5, 31, 32, 33, 37, 49, 63, 76, 83, 84, 85, 97, 112, 125, 127, 129, 153, 154, 155, 157, 158, 163, 165, 166, 167, 170, 176, 177, 204, 205, 208, 209, 213, 214], "correctli": [5, 37, 64, 83, 187, 192, 196], "resolv": [5, 83, 178, 192], "integ": [5, 6, 7, 10, 16, 19, 83, 127, 129, 154, 155, 160, 213], "filter_layer_list": 5, "transform": [5, 37, 52, 65, 76, 83, 92, 129, 130, 139, 143, 154, 169, 193], "filter_region": 5, "tupl": [5, 23, 37, 63, 64, 65, 76, 83, 84, 108, 111, 113, 116, 124, 125, 129, 133, 146, 153, 155, 157, 161, 167], "layer_nam": [5, 37, 76, 82, 97, 125, 129], "distanc": [5, 6, 17, 18, 19, 25, 29, 35, 43, 63, 64, 66, 88, 89, 90, 112, 124, 129, 133, 134, 137, 143, 144, 154, 157], "filter": [5, 115, 181], "region": [5, 36, 37, 38, 52, 57, 63, 83, 93, 101, 105, 112, 124, 125, 126, 129, 130, 143, 154, 156, 160], "element_cel": 5, "shape_lay": 5, "locat": [5, 37, 52, 63, 76, 79, 83, 105, 108, 111, 121, 124, 127, 129, 133, 150, 159, 161, 166, 169, 170, 179, 180, 181, 182, 196, 197, 200, 207, 212, 213, 214], "rotat": [5, 37, 43, 63, 76, 83, 92, 129, 196, 208], "repeat": [5, 128], "list": [5, 6, 7, 9, 10, 13, 16, 17, 18, 19, 23, 25, 26, 28, 29, 32, 34, 35, 36, 37, 38, 43, 48, 52, 55, 56, 57, 58, 63, 64, 65, 66, 76, 77, 81, 83, 84, 85, 88, 89, 90, 91, 93, 97, 100, 101, 103, 104, 105, 108, 109, 111, 112, 113, 115, 116, 117, 121, 122, 124, 125, 126, 127, 128, 129, 130, 133, 134, 139, 144, 146, 153, 154, 155, 157, 159, 161, 162, 164, 165, 166, 167, 169, 170, 171, 176, 179, 180, 186, 190, 193, 197, 204, 205, 212, 213, 214, 215], "dpoint": [5, 37, 63, 64, 76, 83, 92, 122, 124, 125, 127, 129, 143, 153, 154, 157, 159, 165, 169, 193, 196, 204, 208, 213, 218], "degre": [5, 17, 36, 43, 63, 66, 83, 88, 89, 92, 112, 154, 196, 208], "bump_box": 5, "should": [5, 31, 34, 36, 37, 38, 43, 48, 56, 57, 58, 63, 64, 76, 77, 79, 88, 89, 90, 93, 96, 97, 98, 105, 112, 125, 126, 127, 129, 130, 131, 132, 133, 134, 151, 153, 155, 165, 167, 169, 170, 174, 175, 176, 177, 179, 180, 181, 183, 184, 186, 190, 192, 194, 195, 196, 197, 199, 200, 201, 204, 205, 207, 208, 213, 217], "fill": [5, 97, 121, 173, 185, 186, 192, 197], "bump": [5, 32, 41, 43, 58, 63, 129, 132, 173, 190, 213], "coordin": [5, 17, 37, 55, 63, 65, 76, 83, 90, 112, 125, 129, 143, 166, 169, 208], "mai": [5, 28, 37, 63, 76, 83, 84, 97, 127, 129, 130, 162, 164, 165, 166, 170, 174, 176, 177, 179, 180, 181, 185, 186, 194, 196, 201, 204, 205, 207, 208, 210, 211], "post": [5, 37, 116, 125, 128, 212, 214, 215], "sampleholder_typ": [5, 14, 204], "launcher_assign": 5, "none": [5, 13, 25, 26, 29, 31, 32, 35, 36, 37, 38, 41, 45, 52, 57, 58, 60, 63, 70, 76, 82, 83, 84, 85, 86, 90, 92, 93, 97, 105, 108, 109, 111, 113, 115, 116, 117, 122, 124, 125, 126, 127, 128, 129, 130, 133, 134, 139, 143, 144, 146, 148, 153, 154, 155, 161, 162, 165, 166, 167, 169, 170, 211, 213], "enabl": [5, 37, 57, 63, 101, 109, 112, 126, 129, 133, 163, 187, 192, 196, 198, 199, 212], "typic": [5, 13, 25, 29, 32, 37, 38, 58, 63, 69, 90, 129, 139, 144, 148, 162, 165, 190, 193, 213, 214, 215], "sampl": [5, 8, 18, 91, 133, 154, 193, 206], "holder": [5, 8, 18, 133, 193, 206], "size": [5, 29, 36, 38, 43, 57, 63, 68, 76, 83, 84, 88, 89, 112, 127, 129, 154, 159, 160, 166, 169, 182, 193, 204, 208], "self": [5, 37, 58, 63, 66, 70, 75, 83, 84, 92, 96, 97, 98, 129, 131, 132, 133, 134, 155, 175, 190, 192, 193, 196, 204, 205, 211, 213], "accordingli": [5, 37, 193], "wrapper": [5, 76, 133, 174], "around": [5, 19, 29, 35, 36, 37, 38, 52, 64, 65, 76, 83, 129, 153, 154, 159, 174, 185, 186, 189, 198, 205, 208, 213], "configur": [5, 13, 20, 27, 43, 76, 78, 79, 101, 117, 139, 140, 154, 174, 181, 190, 193, 198, 206], "mean": [5, 29, 36, 38, 43, 55, 57, 58, 63, 64, 68, 79, 125, 126, 129, 173, 174, 190, 208, 213], "index": [5, 19, 37, 63, 64, 65, 79, 122, 127, 129, 157, 169, 170, 180, 190, 198], "head": [5, 48, 133], "from": [5, 13, 19, 20, 23, 29, 31, 34, 35, 37, 49, 52, 58, 63, 64, 65, 66, 69, 71, 72, 76, 79, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 101, 105, 109, 112, 113, 115, 116, 122, 124, 125, 126, 127, 129, 131, 132, 133, 134, 139, 143, 146, 147, 150, 153, 154, 157, 158, 159, 160, 162, 163, 165, 167, 169, 170, 173, 174, 176, 177, 179, 180, 182, 183, 185, 186, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 206, 207, 208, 209, 211, 212, 213, 215, 216, 217, 218], "n": [5, 13, 25, 29, 32, 37, 38, 58, 63, 65, 88, 89, 90, 120, 129, 139, 144, 154, 155, 165, 181, 204, 211, 212], "launcher_typ": [5, 204], "launcher_width": [5, 20, 204], "launcher_gap": [5, 20, 204], "launcher_ind": [5, 20, 204], "pad_pitch": [5, 204], "port_id_remap": 5, "launcher_frame_gap": [5, 49], "chip_box": [5, 204], "chang": [5, 34, 36, 37, 38, 43, 48, 56, 57, 63, 88, 89, 90, 93, 130, 167, 170, 173, 174, 176, 179, 180, 181, 182, 183, 185, 187, 190, 193, 194, 197, 200, 204, 207, 209, 213, 214, 217], "equal": [5, 126, 154, 161, 166, 169, 212], "distribut": [5, 63, 85, 201], "overridden": [5, 96, 97, 98, 129, 131, 132, 133, 134], "desir": [5, 37, 63, 64, 92, 159, 180, 183, 190, 208, 209, 212, 213], "per": [5, 38, 57, 63, 66, 109, 140, 174, 211, 212], "disabl": [5, 13, 37, 71, 76, 90, 126, 129, 139, 169, 183, 207], "argument": [5, 34, 36, 37, 38, 43, 48, 52, 56, 57, 63, 76, 84, 85, 88, 89, 90, 92, 93, 96, 97, 98, 101, 105, 109, 112, 113, 115, 124, 125, 128, 129, 130, 131, 132, 133, 134, 139, 157, 160, 167, 176, 196, 201, 205, 208, 213, 214, 215], "If": [5, 37, 63, 66, 76, 85, 96, 97, 98, 101, 105, 109, 112, 113, 115, 124, 125, 126, 129, 130, 131, 132, 133, 134, 143, 153, 154, 155, 160, 161, 162, 163, 165, 166, 169, 170, 172, 175, 176, 177, 179, 180, 181, 183, 186, 187, 194, 196, 197, 201, 202, 204, 207, 208, 211, 213, 216, 217, 218], "neither": [5, 76], "rf": [5, 43, 181, 204], "most": [5, 122, 154, 155, 157, 169, 174, 182, 184, 191, 192, 200, 201, 205, 207, 211, 213, 216], "top": [5, 6, 19, 33, 41, 58, 76, 79, 83, 96, 97, 98, 125, 126, 129, 131, 132, 133, 134, 153, 161, 169, 170, 174, 182, 183, 185, 186, 187, 190, 192, 196, 207, 208, 213, 216], "clockwis": [5, 13, 19, 35, 58, 83, 122, 154, 208], "order": [5, 19, 23, 58, 63, 64, 97, 112, 122, 125, 129, 154, 155, 174, 176, 184, 189, 190, 212, 213], "x": [5, 17, 34, 55, 63, 64, 83, 88, 89, 92, 112, 122, 124, 125, 143, 153, 157, 165, 166, 177, 184, 201, 204, 206, 208, 211, 212, 213, 214], "y": [5, 13, 55, 63, 83, 92, 112, 120, 122, 125, 139, 143, 153, 157, 165, 166, 177, 208, 212, 213, 214], "your": [5, 52, 97, 108, 111, 127, 129, 172, 173, 175, 176, 179, 180, 181, 193, 194, 195, 197, 198, 200, 204, 205, 209, 214], "For": [5, 19, 23, 28, 37, 63, 79, 83, 92, 101, 105, 112, 129, 130, 153, 155, 157, 161, 162, 166, 167, 168, 170, 174, 176, 180, 181, 184, 186, 187, 190, 193, 194, 195, 196, 197, 199, 200, 201, 204, 205, 207, 211, 212, 213, 214], "flip": [5, 6, 16, 19, 32, 37, 40, 41, 43, 54, 58, 63, 132, 153, 187, 190, 195, 208, 213], "": [5, 12, 17, 24, 34, 36, 37, 38, 43, 48, 49, 56, 57, 63, 76, 84, 86, 88, 89, 90, 92, 93, 105, 109, 122, 129, 130, 139, 153, 154, 160, 161, 165, 167, 169, 170, 174, 177, 179, 185, 187, 190, 192, 194, 199, 201, 204, 205, 208, 209, 215, 217], "axi": [5, 13, 17, 24, 64, 88, 89, 92, 112, 139, 153, 170, 171], "rang": [5, 57, 155], "delta_x": 5, "100": [5, 13, 18, 25, 29, 32, 35, 37, 38, 43, 58, 60, 63, 64, 75, 90, 91, 92, 112, 120, 129, 132, 134, 137, 139, 141, 142, 144, 154, 186, 190, 193, 213, 214], "delta_i": 5, "x0": [5, 57], "y0": 5, "separ": [5, 13, 37, 71, 72, 76, 84, 90, 91, 97, 112, 125, 129, 139, 155, 157, 161, 162, 164, 181, 187, 193, 194, 195, 200, 201, 209, 213, 214], "along": [5, 58, 112, 170, 187, 218], "dimens": [5, 20, 76, 83, 126, 129, 177, 187, 212, 213], "displac": [5, 92, 196], "tsv_box": 5, "boolean": [5, 9, 10, 13, 18, 21, 23, 25, 29, 32, 34, 35, 37, 38, 43, 49, 52, 54, 55, 56, 58, 63, 64, 65, 66, 67, 68, 71, 72, 74, 76, 83, 84, 90, 92, 97, 129, 131, 132, 133, 139, 143, 144, 163], "make": [5, 28, 41, 83, 84, 85, 86, 108, 111, 112, 129, 167, 173, 174, 176, 177, 179, 180, 181, 182, 184, 185, 187, 192, 193, 194, 195, 197, 198, 199, 207, 208, 209, 213, 214, 218], "plane": [5, 36, 38, 39, 52, 88, 89, 129, 185, 186, 192, 208], "fals": [5, 13, 18, 19, 21, 25, 29, 32, 34, 35, 37, 38, 43, 49, 52, 54, 55, 56, 58, 63, 64, 65, 66, 67, 68, 71, 72, 76, 82, 83, 84, 90, 92, 97, 108, 109, 111, 112, 113, 115, 120, 121, 124, 126, 127, 128, 129, 131, 132, 139, 144, 154, 155, 159, 161, 162, 166, 169, 170, 196, 208, 211, 212, 213], "merge_base_metal_gap": 5, "a_cap": 5, "conductor": [5, 13, 17, 18, 19, 25, 29, 32, 37, 38, 43, 58, 63, 64, 66, 88, 89, 90, 129, 139, 144, 169], "cap": [5, 19], "b_cap": 5, "with_gnd_tsv": 5, "through": [5, 25, 57, 58, 64, 84, 85, 109, 144, 154, 176, 177, 195, 207, 213], "silicon": [5, 25, 129, 144, 192, 195, 213, 216], "tsv_grid_spac": 5, "space": [5, 12, 13, 15, 16, 19, 24, 26, 58, 63, 97, 132, 133, 134, 137, 139, 141, 142, 157, 159, 162, 180], "300": [5, 6, 48, 49, 58, 88, 89, 129], "edge_from_tsv": 5, "clearanc": [5, 52, 63, 83], "550": [5, 17, 129], "tsv_edge_to_tsv_edge_separ": 5, "exist": [5, 76, 83, 96, 97, 98, 112, 116, 125, 129, 131, 132, 133, 134, 153, 154, 157, 162, 166, 170, 174, 179, 183, 185, 186, 189, 193, 195, 196, 197, 200, 213, 214], "250": [5, 89, 91], "tsv_edge_to_nearest_el": 5, "with_gnd_bump": 5, "indium": [5, 129, 190, 213], "bump_grid_spac": 5, "120": [5, 88, 89, 93, 173, 175], "edge_from_bump": 5, "bump_edge_to_bump_edge_separ": 5, "95": 5, "frames_en": [5, 6, 7, 10, 16, 19], "drawn": [5, 6, 7, 10, 16, 19, 182, 213, 216], "frames_marker_dist": 5, "each": [5, 13, 18, 23, 26, 35, 36, 37, 58, 63, 64, 65, 66, 76, 79, 81, 82, 83, 84, 85, 88, 89, 91, 93, 97, 101, 109, 112, 125, 129, 134, 140, 143, 153, 154, 157, 160, 161, 162, 164, 165, 166, 170, 174, 179, 180, 181, 182, 183, 186, 187, 190, 193, 194, 196, 204, 205, 207, 208, 209, 211, 212, 213, 214, 215, 218], "1500": [5, 35], "1000": [5, 17, 18, 48, 56, 58, 76, 79, 83, 112, 129, 204], "frames_diagonal_squar": 5, "diagon": [5, 35, 52, 212], "squar": [5, 12, 24, 35, 38, 52, 83, 84, 143, 161, 180, 192, 194], "2": [5, 13, 18, 19, 23, 25, 26, 33, 34, 38, 39, 45, 57, 63, 71, 75, 83, 90, 92, 109, 112, 125, 134, 139, 140, 144, 154, 159, 167, 178, 179, 193, 198, 209, 211, 212, 213], "frames_mirror": 5, "mirror": [5, 9, 10, 13, 19, 82, 83, 92, 139, 159, 170, 171, 208], "true": [5, 9, 10, 13, 18, 19, 23, 29, 32, 37, 56, 58, 63, 64, 71, 72, 74, 76, 83, 84, 85, 90, 97, 105, 108, 109, 112, 113, 115, 121, 129, 131, 132, 133, 139, 147, 153, 154, 155, 157, 161, 162, 163, 164, 166, 167, 169, 170, 174, 193, 195, 196, 207, 208, 211, 212, 213], "frames_dice_width": 5, "street": 5, "200": [5, 13, 17, 19, 25, 35, 58, 63, 93, 144, 193], "140": 5, "face_box": 5, "8500": 5, "dice_grid_margin": [5, 35], "margin": [5, 13, 19, 25, 29, 32, 35, 37, 38, 58, 60, 63, 68, 71, 72, 83, 90, 129, 139, 144, 159, 192, 213, 214], "name_mask": [5, 35], "m000": [5, 35], "name_chip": [5, 7, 9, 10, 17, 22, 35], "ctest": [5, 35], "name_copi": [5, 35, 83], "copi": [5, 35, 37, 63, 83, 116, 161, 171, 174, 193, 209, 214, 215], "name_brand": [5, 35], "brand": [5, 35], "marker_typ": [5, 13, 35, 52], "lower": [5, 13, 23, 35, 74, 92, 126, 129, 194, 205, 212, 213], "standard": [5, 13, 25, 26, 35, 45, 46, 52, 53, 60, 62, 63, 92, 133, 134, 144, 154, 157, 163, 186, 194, 201], "chip_dicing_in_base_met": [5, 35], "line": [5, 6, 9, 17, 18, 19, 35, 36, 48, 56, 64, 84, 90, 91, 116, 122, 128, 129, 141, 142, 144, 154, 157, 173, 177, 179, 180, 186, 187, 204, 205, 206, 207, 208, 214, 215, 216, 217], "metal": [5, 11, 13, 25, 29, 32, 35, 37, 38, 41, 49, 58, 63, 64, 65, 67, 68, 71, 72, 74, 90, 92, 93, 97, 112, 124, 125, 126, 127, 129, 132, 139, 143, 144, 169, 192, 212, 213], "addit": [5, 13, 29, 35, 37, 49, 63, 64, 65, 67, 68, 71, 72, 79, 83, 90, 96, 98, 112, 125, 128, 129, 131, 132, 133, 134, 139, 173, 176, 184, 187, 192, 196, 208, 212], "bound": [5, 35, 55, 63, 83, 92, 126, 129, 139, 156, 159, 165, 185], "10000": [5, 18, 35, 97, 129, 208], "bump_typ": [5, 32, 41, 43, 58, 63], "choic": [5, 6, 10, 13, 14, 15, 16, 18, 19, 23, 25, 26, 29, 31, 32, 33, 34, 41, 43, 45, 46, 47, 56, 58, 60, 61, 62, 63, 66, 70, 71, 72, 73, 74, 90, 92, 109, 112, 134, 139, 140, 144, 167, 174, 180, 212], "tsv_type": [5, 25, 60, 61, 62, 144], "ellips": [5, 25, 60, 61, 144], "bottom": [6, 33, 37, 41, 58, 73, 74, 79, 83, 125, 126, 129, 169, 174, 186, 190, 192, 193, 208, 213], "transmiss": [6, 18, 56, 64, 144], "3": [6, 17, 18, 19, 23, 26, 34, 38, 39, 47, 54, 65, 83, 88, 89, 93, 112, 125, 129, 134, 154, 159, 167, 176, 178, 179, 197, 201, 212, 213], "crossing_length": 6, "400": [6, 17, 58, 88, 89, 129, 190, 204], "cross_talk_dist": 6, "meander_fac": 6, "two": [6, 9, 17, 35, 36, 38, 39, 41, 43, 55, 61, 62, 63, 71, 83, 89, 90, 91, 92, 125, 126, 129, 143, 153, 154, 157, 165, 169, 174, 179, 183, 184, 196, 208, 211, 212, 213, 214, 218], "daisi": 7, "woven": 7, "includ": [7, 9, 10, 13, 18, 25, 28, 29, 32, 37, 38, 56, 58, 63, 69, 71, 72, 82, 84, 85, 90, 92, 97, 108, 111, 125, 129, 131, 139, 144, 153, 154, 155, 161, 170, 172, 176, 177, 182, 184, 187, 190, 193, 198, 201, 204, 205, 208, 212, 214, 218], "text": [7, 35, 37, 63, 79, 83, 125, 127, 129, 141, 142, 157, 159, 160, 169, 180, 186, 192, 196], "manual": [7, 30, 58, 63, 69, 70, 75, 79, 84, 87, 101, 109, 112, 127, 151, 153, 176, 178, 188, 197, 198, 208, 212, 213, 214, 216], "pattern": [7, 58, 198], "No": [7, 10, 13, 23, 26, 70, 73, 90, 92, 112, 134, 139, 201], "input": [7, 17, 19, 43, 58, 63, 125, 154, 157, 211, 213, 218], "demonstr": [9, 10, 17, 180, 181, 183, 184, 218], "four": [9, 23, 52, 91, 136, 143, 154, 159, 165, 190, 208], "readout": [9, 10, 17, 23, 90, 91], "reson": [9, 10, 17, 18, 19, 23, 48, 56, 58, 131, 187, 212], "probe": [9, 17, 143, 153], "charg": [9, 186], "qubit_a_nr": [9, 10], "qubit_b_nr": [9, 10], "port_nr": [9, 129, 213], "qubit_nr": [9, 10], "cap_finger_nr": [9, 10], "probeline_nam": [9, 10], "readout_res_length": [9, 10, 17, 23, 208], "5000": [9, 10, 23, 58, 133, 196, 208], "5100": [9, 10, 23], "5200": [9, 10, 23], "5300": [9, 10, 23], "include_coupl": [9, 10, 208], "coupler": [9, 10, 17, 18, 19, 23, 26, 34, 36, 38, 56, 88, 89, 90, 91, 93, 129, 134, 148, 186, 213], "3d": [10, 28, 112, 124, 129, 187, 213], "integr": [10, 28, 109, 111, 112, 117, 187, 205, 215], "multi": [10, 29, 31, 32, 56, 58, 63, 66, 79, 84, 85, 129, 181, 190, 198], "featur": [10, 37, 63, 105, 155, 180, 181, 182, 187, 189, 191, 195, 197, 198, 199, 200, 206, 207, 208, 215], "dt": 10, "almost": [11, 165], "remov": [11, 34, 52, 83, 84, 129, 132, 153, 154, 162, 163, 167, 170, 177, 179, 180, 192], "ebl": [11, 77, 198, 208], "edge_len": [12, 24], "80": [12, 13, 24, 36, 66, 88, 89, 91], "inter_spac": [12, 24], "20": [12, 17, 18, 19, 24, 29, 31, 36, 38, 39, 68, 88, 89, 90, 91, 92, 141, 142, 211, 213], "pad_width": [13, 72, 90, 139, 143], "500": [13, 19, 25, 34, 48, 50, 56, 58, 63, 83, 90, 112, 136, 139, 144, 160, 190, 213], "junctions_horizont": [13, 139], "horizont": [13, 18, 23, 25, 58, 72, 83, 90, 139, 143, 144, 171], "small_loop_area": 13, "small": [13, 22, 64, 173, 192, 211], "loop": [13, 71, 75, 90, 92, 139], "large_loop_area": 13, "larg": [13, 181, 211], "130": [13, 204], "junction_width_smal": 13, "finger": [13, 17, 18, 19, 23, 34, 38, 39, 56, 57, 71, 72, 90, 93, 139, 148], "15": [13, 88, 89, 137, 213], "junction_width_larg": 13, "08": [13, 134], "junction_width_step_increment_smal": 13, "01": [13, 109, 112, 122, 129], "junction_width_step_increment_larg": 13, "03": 13, "pads_loop": 13, "central": [13, 196, 208], "6": [13, 17, 18, 19, 23, 25, 29, 32, 37, 38, 48, 58, 63, 66, 72, 88, 89, 90, 129, 139, 144, 154, 167], "turn": [13, 19, 25, 29, 32, 34, 36, 37, 38, 43, 48, 56, 57, 58, 63, 88, 89, 90, 93, 112, 129, 134, 139, 144, 169, 174, 183, 196], "64": [13, 25, 29, 32, 37, 38, 58, 63, 90, 129, 139, 144, 154, 200], "r": [13, 25, 29, 32, 37, 38, 43, 57, 58, 63, 64, 65, 90, 129, 139, 144, 154, 155, 169, 176, 179, 180, 196, 211, 214, 217], "radiu": [13, 25, 29, 32, 36, 37, 38, 39, 55, 58, 63, 64, 65, 72, 83, 88, 89, 90, 93, 129, 139, 144, 154, 169, 196], "protect": [13, 25, 29, 32, 37, 38, 58, 63, 68, 90, 129, 139, 144], "1t1": [13, 25, 29, 32, 37, 38, 58, 63, 79, 83, 84, 90, 129, 132, 139, 144, 153, 182, 185, 190, 192, 208, 213], "2b1": [13, 25, 29, 32, 37, 38, 58, 63, 79, 83, 90, 129, 139, 144, 190, 192, 208, 213], "1b1": [13, 25, 29, 32, 37, 38, 58, 63, 90, 129, 139, 144, 190], "2t1": [13, 25, 29, 32, 37, 38, 58, 63, 79, 83, 90, 129, 139, 144, 190, 192], "display_nam": [13, 25, 29, 32, 37, 38, 58, 63, 90, 129, 139, 144], "displai": [13, 25, 29, 32, 37, 38, 58, 63, 76, 90, 129, 139, 144, 185, 187, 207, 208], "gui": [13, 25, 28, 29, 32, 37, 38, 55, 58, 63, 64, 76, 79, 90, 101, 105, 113, 115, 129, 139, 144, 151, 153, 157, 161, 174, 178, 180, 186, 187, 189, 190, 195, 197, 198, 199, 201, 204, 205, 206, 207, 210, 213, 215, 216, 217], "protect_opposite_fac": [13, 25, 29, 32, 37, 38, 58, 63, 90, 129, 139, 144], "appli": [13, 25, 29, 32, 37, 38, 58, 63, 65, 76, 83, 84, 85, 90, 112, 124, 126, 129, 130, 139, 143, 144, 174, 187, 213], "onli": [13, 25, 29, 32, 34, 36, 37, 38, 43, 48, 56, 57, 58, 63, 64, 70, 83, 84, 85, 88, 89, 90, 92, 93, 97, 105, 112, 113, 115, 126, 129, 135, 139, 140, 144, 147, 151, 155, 157, 160, 164, 167, 168, 169, 170, 174, 176, 179, 180, 181, 183, 184, 185, 187, 190, 192, 193, 196, 197, 199, 201, 207, 208, 209, 210, 211, 212, 213, 214, 218], "signal": [13, 25, 29, 32, 37, 38, 58, 63, 90, 97, 112, 125, 127, 129, 139, 144, 169, 187, 212, 213], "carri": [13, 25, 29, 32, 37, 38, 58, 63, 90, 129, 139, 144], "opposing_face_id_group": [13, 25, 29, 32, 37, 38, 58, 63, 90, 129, 139, 144], "oppos": [13, 25, 29, 32, 37, 38, 58, 63, 90, 129, 139, 144, 213], "group": [13, 25, 29, 32, 37, 38, 58, 63, 69, 79, 90, 120, 121, 129, 139, 144, 153, 156, 182, 190, 192], "etch_opposite_fac": [13, 25, 29, 32, 37, 38, 58, 63, 90, 129, 139, 144], "etch": [13, 19, 25, 29, 32, 37, 38, 58, 63, 79, 90, 125, 126, 127, 129, 139, 144], "opposit": [13, 19, 25, 29, 32, 37, 38, 58, 63, 90, 129, 132, 139, 144, 213], "too": [13, 25, 29, 32, 37, 38, 49, 58, 63, 64, 65, 67, 68, 90, 129, 139, 144, 165, 167, 179, 180, 181], "etch_opposite_face_margin": [13, 19, 25, 29, 32, 37, 38, 58, 63, 90, 129, 139, 144], "_epr_show": [13, 25, 29, 32, 37, 38, 58, 63, 90, 101, 129, 139, 144], "geometri": [13, 25, 29, 32, 34, 36, 37, 38, 43, 48, 52, 56, 57, 58, 61, 62, 63, 71, 88, 89, 90, 92, 93, 96, 97, 98, 125, 126, 129, 131, 132, 133, 134, 139, 144, 154, 160, 165, 170, 173, 182, 185, 186, 190, 191, 192, 193, 194, 195, 196, 198, 207, 212, 215, 216, 218], "relat": [13, 25, 29, 32, 37, 38, 57, 58, 63, 79, 90, 117, 129, 139, 144, 196, 198, 202, 204], "avail": [13, 25, 29, 32, 37, 38, 58, 63, 76, 90, 92, 125, 129, 139, 144, 174, 180, 185, 190, 193, 194, 204, 211, 212, 214, 218], "_epr_cross_section_cut_lay": [13, 25, 29, 32, 37, 38, 58, 63, 90, 101, 129, 139, 144], "cut": [13, 25, 29, 32, 37, 38, 58, 63, 90, 101, 105, 124, 125, 129, 130, 139, 144, 218], "_epr_cross_section_cut_width": [13, 25, 29, 32, 37, 38, 58, 63, 90, 129, 139, 144], "when": [13, 25, 29, 32, 34, 36, 37, 38, 43, 48, 56, 57, 58, 63, 64, 76, 83, 88, 89, 90, 93, 101, 105, 112, 115, 117, 125, 126, 127, 129, 139, 144, 153, 154, 169, 170, 173, 174, 176, 177, 180, 182, 183, 187, 190, 192, 193, 195, 196, 201, 207, 208, 209, 211, 213, 216], "visualis": [13, 25, 29, 32, 37, 38, 58, 63, 90, 101, 125, 126, 129, 139, 144, 180], "area_height": [13, 139], "height": [13, 17, 19, 34, 72, 76, 83, 90, 124, 126, 127, 129, 136, 139, 143, 159, 213], "1900": [13, 139], "area_width": [13, 139], "1300": [13, 19, 139], "pad_spac": [13, 139], "only_pad": [13, 139], "pad_configur": [13, 139], "junction_width_step": [13, 139], "automat": [13, 39, 55, 58, 63, 71, 76, 81, 83, 86, 97, 108, 139, 161, 174, 176, 177, 179, 180, 184, 187, 192, 197, 200, 205, 207, 208, 209, 211], "junction_width": [13, 70, 90, 92, 139], "junction_test_pads_typ": [13, 139, 140], "junction_test_pads_paramet": [13, 139], "extra": [13, 19, 29, 33, 45, 63, 64, 66, 70, 83, 90, 92, 121, 139, 159, 170, 201], "_junction_test_pads_paramet": [13, 139], "previou": [13, 45, 63, 70, 90, 92, 139, 154, 179, 180, 185, 193, 196, 204, 207, 208], "state": [13, 45, 70, 90, 92, 139, 209, 211], "_paramet": [13, 37, 45, 70, 90, 92, 139], "mirror_squid": [13, 92, 139], "its": [13, 37, 58, 63, 64, 83, 92, 97, 105, 112, 129, 139, 153, 154, 155, 170, 174, 176, 183, 184, 195, 204, 208, 209], "junction_paramet": [13, 70, 90, 92, 139], "_junction_paramet": [13, 70, 90, 92, 139], "finger_overshoot": [13, 71, 72, 90, 139], "include_base_metal_gap": [13, 71, 72, 90, 139], "shadow_margin": [13, 71, 72, 90, 139], "shadow": [13, 71, 72, 90, 139], "compact_geometri": [13, 71, 90, 139], "compact": [13, 71, 90, 139, 155], "separate_junct": [13, 71, 72, 90, 139], "offset_compens": [13, 71, 72, 90, 139], "lead": [13, 38, 57, 71, 72, 90, 112, 139, 169, 179, 211, 213], "offset": [13, 63, 71, 72, 83, 90, 93, 139], "mirror_offset": [13, 71, 72, 90, 139], "move": [13, 55, 63, 71, 72, 90, 92, 139, 154, 176, 186, 187, 197], "finger_overlap": [13, 71, 72, 90, 139], "insid": [13, 36, 57, 58, 63, 71, 72, 90, 97, 109, 112, 125, 127, 129, 139, 155, 161, 169, 183, 186, 193, 194, 196, 207, 208, 213, 216], "single_junct": [13, 71, 90, 139], "second": [13, 17, 32, 37, 43, 71, 90, 112, 115, 124, 125, 129, 139, 154, 190, 209, 211, 214], "predefin": [14, 64, 125, 185], "sma8": [14, 18, 133, 193, 196], "ard24": [14, 18], "dc24": 14, "num_strip": [15, 16, 141, 142], "min_width": [15, 16], "max_width": [15, 16], "stripe_test": [15, 16], "stripe_test_increasing_width": [15, 16], "architectur": [16, 178, 190, 195, 198, 201], "circular": [17, 36, 62, 83, 88, 155], "island": [17, 36, 88, 89, 90, 91, 92, 93, 212, 213], "drivelin": [17, 88, 89, 90, 91], "11500": 17, "12700": 17, "8000": [17, 120], "kappa_finger_control": 17, "capacitor": [17, 18, 19, 34, 36, 38, 39, 56, 57, 63, 148, 165, 182, 196], "32": [17, 88, 89], "21": [17, 18, 19, 23], "46": 17, "coupler_length": 17, "9800": 17, "couplers_a_qb1": 17, "couplers_b_qb1": 17, "couplers_angle_qb1": 17, "0deg": [17, 88, 89], "225": 17, "315": 17, "couplers_width_qb1": 17, "radial": [17, 88, 89], "30": [17, 18, 25, 56, 60, 61, 67, 88, 89, 109, 136, 144, 193, 212], "50": [17, 25, 35, 90, 120, 127, 161, 169], "couplers_arc_amplitude_qb1": 17, "angular": [17, 88, 89], "extens": [17, 88, 89, 127, 129, 177, 178, 199, 209, 212], "25": [17, 32, 41, 58, 213], "65": 17, "couplers_a_qb2": 17, "couplers_b_qb2": 17, "couplers_angle_qb2": 17, "couplers_width_qb2": 17, "couplers_arc_amplitude_qb2": 17, "35": [17, 88, 89], "drive_line_offset": 17, "end": [17, 29, 32, 55, 58, 63, 64, 65, 108, 111, 115, 124, 126, 129, 132, 169, 170, 176, 177, 185, 207, 208, 212, 213], "drive": [17, 88, 89, 90, 133], "ground_gap": [17, 36, 57, 88, 89, 90], "1400": 17, "900": [17, 204], "coupler_ext": [17, 90], "150": [17, 88, 90, 93, 193, 204], "island1_ext": [17, 90], "first": [17, 18, 23, 37, 43, 55, 58, 63, 64, 76, 79, 90, 124, 125, 128, 129, 154, 167, 169, 174, 177, 179, 180, 184, 189, 190, 193, 194, 197, 198, 200, 206, 208, 210, 211, 213, 214], "island2_ext": [17, 90], "drive_posit": [17, 90], "1100": 17, "island_island_gap": [17, 90], "em1": 17, "res_length": [18, 19], "physic": [18, 19, 29, 36, 38, 43, 57, 63, 68, 108, 111, 112, 166, 211, 216, 218], "5434": [18, 19], "5429": [18, 19], "5374": [18, 19], "5412": [18, 19], "5493": [18, 19], "5589": [18, 19], "n_finger": [18, 19, 23, 56], "planar": [18, 19, 97], "l_finger": [18, 19, 23, 56], "23": [18, 19, 23], "9": [18, 19, 23, 201, 204, 208], "14": [18, 19, 23, 25, 179, 180], "28": [18, 19, 168, 180, 200], "type_coupl": [18, 19, 23, 56], "interdigit": [18, 19, 23, 56, 148], "n_ab": [18, 56, 136], "res_term": [18, 56], "termin": [18, 56, 58, 63, 64, 65, 115, 129, 132, 169, 179, 180, 199, 200, 201, 208, 209, 212, 213], "galvan": [18, 41, 56], "res_beg": [18, 56], "begin": [18, 56, 58, 65, 142, 208, 209], "res_a": [18, 19, 48, 56], "res_b": [18, 19, 48, 56], "12": [18, 19, 29, 68, 72, 74, 90, 92, 93, 109, 129, 212], "tl_airbridg": [18, 56], "res_airbridge_typ": [18, 56], "rectangular": [18, 29, 31, 33, 49, 56, 58, 63, 64, 65, 66, 83, 93, 208], "sample_holder_typ": 18, "marker_safeti": 18, "curv": [18, 64, 65, 154], "feedline_bend_dist": 18, "feedlin": [18, 23, 36, 38], "bend": [18, 55, 57, 63, 64, 213], "resonators_both_sid": 18, "both": [18, 19, 29, 30, 32, 37, 63, 70, 75, 86, 112, 118, 129, 169, 174, 177, 181, 208, 211, 213, 214], "max_res_len": [18, 56], "exceed": [18, 56], "becom": [18, 56, 63, 79, 128, 207, 212, 213], "1e": [18, 56, 112, 125, 134], "ground_grid_in_trac": [18, 55, 56, 63, 64, 65, 67], "trace": [18, 29, 48, 49, 56, 63, 64, 65, 67, 68, 127], "border": [18, 129], "preliminari": 19, "resonator_typ": 19, "connector_dist": [19, 58], "extra_resonator_avoid": 19, "extra_resonator_etch": 19, "spiral": [19, 58, 187], "attach": [19, 83, 162, 196, 208], "pl_": 19, "_t_port_c": 19, "identifi": [19, 84, 105, 113, 165, 166, 173, 190, 204, 208, 209], "long": [19, 173, 180, 196, 205, 211, 212, 213], "same": [19, 23, 36, 37, 38, 55, 63, 76, 83, 84, 85, 97, 125, 129, 154, 161, 164, 165, 166, 167, 170, 174, 179, 180, 181, 182, 188, 191, 193, 194, 196, 197, 207, 208, 209, 211, 213], "wai": [19, 22, 37, 63, 84, 85, 122, 125, 169, 174, 180, 183, 186, 190, 191, 196, 197, 198, 199, 204, 205, 208, 213, 214], "direct": [19, 22, 32, 33, 37, 49, 55, 63, 64, 83, 92, 112, 126, 129, 133, 147, 154, 157, 169, 184, 196, 213], "_corner": [19, 169], "cpw": [19, 25, 56, 144], "exclud": [19, 167, 169], "finger_control": [19, 57], "solid": [19, 212], "twofac": 19, "ground_grid_avoid": [19, 37, 92, 204], "counter": [19, 58, 154], "resonator_fac": 19, "2100": 19, "2900": 19, "3700": 19, "4500": 19, "spiral_box_height": 19, "spiral_box_width": 19, "x_indent": 19, "indent": [19, 20, 155], "800": [19, 58], "cap_res_dist": 19, "waveguide_indent": 19, "At": [19, 154], "bridge_spac": [19, 58], "parametr": [20, 182, 186, 191, 198], "connect": [20, 22, 23, 38, 43, 49, 50, 58, 64, 88, 89, 121, 127, 129, 140, 143, 161, 184, 186, 187, 190, 192, 195, 196, 213], "pairwis": 20, "coplanar": [20, 43, 63, 64, 65, 67, 68, 166, 187, 212], "n_launcher": 20, "40": [20, 32, 36, 41, 43, 58, 63], "launcher_pitch": 20, "pitch": [20, 25, 144], "635": 20, "160": [20, 186], "96": 20, "520": 20, "tunabl": 21, "veri": [22, 64, 76, 185, 186, 187, 196, 207, 213, 214], "coupl": [23, 48, 212], "half": [23, 91, 193], "abov": [23, 58, 129, 161, 180, 181, 184, 186, 187, 194, 207, 211, 212, 214, 215], "below": [23, 29, 58, 74, 124, 126, 129, 147, 161, 170, 172, 179, 190, 205, 207, 208, 209, 211, 212, 213, 215], "chargelin": [23, 93], "whose": [23, 161, 164], "upper": [23, 74, 92, 126, 129, 213], "six": 23, "5400": [23, 208], "5500": [23, 208], "use_test_reson": [23, 131], "test_res_length": 23, "5600": [23, 208], "5800": 23, "metrologi": 25, "segment": [25, 58, 63, 64, 65, 67, 68, 124, 129, 184, 187], "crossect": 25, "analysi": [25, 109, 121, 212], "array_form": 25, "array_layout": 25, "metrology_pitch": 25, "cpw_distanc": [25, 144], "placehold": [25, 144, 208], "hor_dist": [25, 144], "ver_dist": [25, 144], "tsv_diamet": [25, 60, 144], "diamet": [25, 32, 41, 58, 60, 144], "tsv_margin": [25, 60, 144], "tsv_elliptical_width": [25, 61, 144], "ellipt": [25, 61, 144], "pos_start": [26, 133], "end_i": [26, 133], "c_kappa_l_fing": 26, "dedic": [26, 125, 129, 134, 213, 215], "function": [26, 31, 37, 45, 57, 58, 63, 66, 70, 75, 79, 82, 84, 86, 92, 95, 97, 101, 105, 113, 117, 124, 125, 126, 129, 130, 133, 134, 146, 148, 151, 154, 155, 157, 164, 165, 167, 170, 173, 174, 175, 181, 190, 191, 193, 205, 206, 208, 211, 212, 213, 215], "also": [26, 28, 37, 49, 55, 63, 64, 65, 67, 76, 83, 84, 85, 86, 87, 92, 93, 111, 118, 126, 129, 134, 139, 141, 142, 143, 147, 153, 154, 155, 161, 162, 163, 165, 167, 170, 174, 176, 177, 179, 180, 181, 182, 185, 186, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217], "assum": [26, 64, 65, 76, 84, 129, 134, 200, 212, 213], "follow": [26, 58, 63, 64, 76, 79, 81, 82, 96, 97, 98, 129, 131, 132, 133, 134, 154, 155, 161, 162, 166, 172, 173, 174, 175, 176, 179, 180, 181, 182, 184, 185, 186, 187, 189, 190, 194, 197, 200, 207, 208, 209, 211, 212, 213, 214, 215, 218], "attribut": [26, 37, 82, 105, 127, 134, 167, 174, 175], "arm_width_a": [26, 133, 134], "arm_width_b": [26, 133, 134], "qubit_spac": [26, 133, 134], "fluxline_typ": [26, 45, 46, 47, 92, 134, 213], "rr_cpl_width": [26, 134], "arm": [26, 38, 92, 93, 133, 134, 137, 139, 193], "24": [26, 93, 133, 134], "rr": [26, 134], "qb": [26, 134], "um": [26, 93, 127, 129, 134, 159, 166], "file": [27, 37, 69, 76, 77, 79, 81, 82, 83, 84, 108, 109, 111, 112, 113, 115, 116, 121, 125, 128, 129, 151, 153, 158, 160, 163, 165, 166, 170, 172, 174, 176, 177, 179, 180, 181, 185, 193, 194, 195, 197, 198, 199, 200, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217], "thing": [27, 81, 174, 182, 192, 211], "path": [27, 58, 63, 64, 76, 82, 86, 108, 109, 111, 113, 116, 121, 124, 125, 128, 133, 153, 154, 158, 162, 165, 166, 176, 180, 181, 183, 186, 187, 196, 200, 201, 205, 209, 210, 211, 214, 218], "sub": [27, 37, 63, 64, 71, 83, 92, 112, 126, 129, 170, 174, 183, 208], "repres": [28, 63, 64, 65, 70, 75, 76, 81, 83, 84, 85, 125, 154, 190, 198, 207, 213], "form": [28, 63, 83, 97, 109, 112, 118, 122, 129, 161, 173, 174], "being": [28, 79, 179, 196], "pcelldeclarationhelp": [28, 37, 174], "load": [28, 69, 84, 87, 90, 91, 93, 158, 160, 162, 166, 170, 174, 207, 208], "klayout": [28, 63, 64, 76, 79, 86, 101, 105, 125, 129, 151, 153, 160, 161, 162, 163, 165, 168, 174, 176, 177, 179, 180, 182, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 204, 205, 206, 208, 213, 215, 216, 217], "code": [28, 30, 34, 36, 37, 38, 43, 48, 55, 56, 57, 63, 64, 69, 70, 75, 76, 87, 88, 89, 90, 92, 93, 97, 139, 155, 161, 170, 173, 174, 176, 178, 179, 180, 181, 183, 185, 186, 188, 191, 192, 193, 194, 196, 197, 198, 199, 205, 206, 207, 213, 214, 216, 217], "share": [28, 92, 129, 154, 211], "them": [28, 97, 109, 115, 165, 174, 179, 180, 181, 182, 184, 193, 195, 196, 204, 205, 208, 213], "have": [28, 31, 34, 36, 37, 38, 43, 48, 52, 56, 57, 63, 64, 76, 79, 83, 84, 85, 87, 88, 89, 90, 93, 105, 109, 125, 129, 153, 154, 161, 162, 165, 167, 169, 170, 174, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 190, 192, 193, 194, 195, 196, 197, 201, 202, 204, 207, 208, 209, 210, 212, 213, 218], "easi": [28, 179, 181, 198], "support": [28, 36, 63, 76, 106, 111, 112, 121, 153, 155, 160, 180, 187, 198, 201, 209, 211, 212, 213, 215, 218], "concept": [28, 182, 188, 195, 207, 213], "belong": [28, 79, 105, 165, 192], "certain": [28, 34, 36, 37, 38, 43, 48, 56, 57, 77, 83, 84, 88, 89, 90, 93, 129, 179, 180, 181, 193, 195, 213], "determin": [28, 37, 52, 63, 64, 83, 84, 108, 109, 112, 129, 143, 161, 163, 169, 170, 196, 204, 208, 209, 212, 213], "actual": [28, 31, 45, 63, 64, 65, 70, 75, 83, 84, 92, 106, 176, 180, 190, 197, 207, 208, 213, 218], "refer": [28, 35, 36, 37, 38, 39, 76, 79, 82, 88, 89, 129, 153, 154, 155, 169, 172, 174, 179, 180, 181, 184, 196, 207, 214], "taper": [29, 39, 49, 63, 68, 90], "bridge_gap_width": 29, "with_side_airbridg": 29, "With": [29, 79, 174, 187, 208], "with_right_waveguid": 29, "gap_between_bridg": 29, "inner": [29, 89, 129, 213], "adjac": [29, 63, 129, 154, 156], "bridg": [29, 31, 32, 33, 55, 58, 63, 66, 96, 195], "waveguide_extra": 29, "taper_length": [29, 39, 63, 68], "31": [29, 68, 155], "41592653589793": [29, 68], "m2": [29, 68, 201], "a2": [29, 36, 37, 38, 43, 57, 63, 66, 68], "non": [29, 36, 38, 43, 55, 57, 58, 63, 68, 109, 125, 129, 154, 155, 160, 173, 212, 213], "b2": [29, 36, 37, 38, 43, 57, 63, 66, 68], "add_met": [29, 49, 63, 64, 65, 67, 68], "add": [29, 32, 37, 49, 55, 61, 63, 64, 65, 67, 68, 74, 76, 83, 84, 96, 98, 112, 121, 125, 129, 131, 132, 133, 134, 143, 167, 174, 176, 192, 193, 195, 196, 197, 204, 208, 209, 213, 214], "airbridge_typ": [29, 31, 32, 33, 58, 63, 66], "bridge_width": [29, 31, 32, 58], "pad_length": [29, 31, 32, 58], "22": [29, 72, 90, 176, 179, 200], "bridge_length": [29, 31, 58, 195], "60": [29, 39, 88, 89], "without": [31, 45, 58, 63, 70, 75, 76, 83, 86, 92, 115, 122, 129, 140, 180, 181, 185, 188, 192, 197, 200, 208, 209, 211, 213, 217], "subclass": [31, 34, 36, 37, 38, 43, 48, 52, 56, 57, 63, 84, 85, 88, 89, 90, 92, 93, 97, 109, 112, 129, 155, 167, 212, 214, 215], "otherwis": [31, 32, 33, 37, 63, 64, 76, 96, 98, 113, 115, 126, 129, 130, 131, 132, 133, 134, 155, 162, 170, 179, 185, 200, 213], "user": [31, 32, 33, 37, 61, 63, 76, 84, 92, 115, 173, 176, 177, 179, 180, 189, 193, 194, 195, 198, 199, 200, 205, 208, 209, 211, 213], "classmethod": [31, 34, 36, 37, 38, 41, 43, 45, 48, 52, 54, 56, 57, 60, 63, 70, 88, 89, 90, 93, 97, 129, 139, 167, 174, 213], "18": [31, 45], "44": [31, 58, 195], "equival": [32, 63, 155], "origin": [32, 33, 37, 41, 61, 62, 65, 66, 73, 74, 76, 83, 125, 129, 154, 159, 186, 193], "geometr": [32, 33, 41, 61, 62, 154, 198], "include_bump": [32, 58], "ubm_diamet": [32, 41, 58], "under": [32, 37, 41, 58, 76, 84, 105, 124, 127, 129, 162, 176, 179, 183, 187, 192, 194, 197, 205, 207], "bump_diamet": [32, 41, 58], "part": [33, 48, 49, 58, 84, 92, 93, 112, 126, 127, 129, 139, 154, 179, 185, 186, 190, 193, 196, 207, 208, 211, 212], "port_a": [33, 37, 63, 130], "port_b": [33, 37, 63, 196], "closest": [33, 35, 122, 129, 143, 153, 161, 213], "pad_extra": 33, "capacit": [34, 57, 90, 91, 109, 112, 127, 134, 169, 211, 213, 215], "fem": [34, 211], "comput": [34, 69, 121, 154, 209, 211, 212], "best": [34, 36, 37, 38, 43, 48, 56, 57, 88, 89, 90, 93, 180, 201, 204], "practic": [34, 36, 37, 38, 43, 48, 56, 57, 63, 88, 89, 90, 93, 174, 205, 213], "effect": [34, 36, 37, 38, 43, 48, 56, 57, 88, 89, 90, 93, 109, 129, 130, 133, 159, 179, 181, 212], "serv": [34, 36, 37, 38, 43, 48, 56, 57, 88, 89, 90, 93], "deriv": [34, 36, 37, 38, 43, 48, 56, 57, 63, 88, 89, 90, 93, 101, 105, 130, 147, 154, 174, 195], "noth": [34, 36, 37, 38, 43, 48, 56, 57, 88, 89, 90, 93, 167, 207], "els": [34, 36, 37, 38, 43, 48, 56, 57, 88, 89, 90, 93, 155], "cl": [34, 36, 37, 38, 43, 48, 52, 56, 57, 88, 89, 90, 93, 97, 129, 148, 167, 213], "you": [34, 36, 37, 38, 43, 48, 52, 56, 57, 58, 76, 88, 89, 90, 93, 108, 111, 125, 155, 161, 172, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 186, 192, 193, 194, 195, 196, 197, 200, 201, 202, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218], "need": [34, 36, 37, 38, 43, 48, 52, 56, 57, 58, 63, 64, 77, 79, 86, 88, 89, 90, 93, 95, 97, 101, 105, 128, 151, 153, 154, 166, 172, 173, 174, 175, 176, 179, 180, 181, 184, 192, 194, 195, 197, 198, 200, 201, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215], "decid": [34, 36, 37, 38, 43, 48, 56, 57, 88, 89, 90, 93, 213], "x_coupler_length": 34, "x_coupler_height": 34, "x_coupler_vari": 34, "variant": [34, 46, 47, 81, 84, 208], "either": [34, 37, 58, 69, 70, 75, 76, 79, 84, 85, 87, 101, 129, 140, 154, 169, 179, 183, 196, 213, 215], "remove_capacitor": 34, "finger_numb": [34, 38, 39], "finger_width": [34, 38, 39, 57], "finger_gap": [34, 38, 39, 57], "finger_gap_end": [34, 38], "marker_dist": 35, "diagonal_squar": [35, 52], "use_face_prefix": 35, "prefix": [35, 37, 76, 82, 100, 101, 103, 104, 105, 111, 116, 125, 128, 129, 143, 154, 181, 196], "chip_dicing_width": 35, "chip_dicing_line_length": 35, "chip_dicing_gap_length": 35, "dash": [35, 187], "outer": [36, 49, 83, 89, 143, 190], "semi": 36, "fix": [36, 38, 57, 63, 129, 181, 200, 201], "imped": [36, 88, 89, 127], "r_inner": [36, 89], "r_outer": [36, 89], "extern": [36, 89, 194, 198, 205, 206, 213, 214], "swept_angl": 36, "cover": [36, 52, 83, 126, 129, 148, 156, 169, 181, 185, 189, 208, 212], "180": [36, 43, 63, 66, 89], "outer_island_width": [36, 89], "fixed_length": [36, 38, 57], "auto": [36, 38, 57, 192], "_epr_part_reg_cplrbulk_lay": 36, "partit": [36, 57, 93, 101, 105, 124, 126, 129, 130, 211], "cplrbulk": 36, "_epr_part_reg_1leadbulk_lay": 36, "1leadbulk": 36, "_epr_part_reg_2leadbulk_lay": 36, "2leadbulk": 36, "_epr_part_reg_1gapbulk_lay": 36, "1gapbulk": 36, "_epr_part_reg_2gapbulk_lay": 36, "2gapbulk": 36, "cell_transf": [37, 129], "extract": [37, 101, 105, 161, 165, 169, 170], "specif": [37, 52, 63, 70, 75, 76, 81, 82, 84, 97, 105, 117, 129, 155, 169, 172, 174, 176, 179, 180, 187, 188, 195, 197, 200, 201, 207, 213, 214, 215], "convert": [37, 63, 83, 129, 155, 157, 161, 162, 164, 165, 169, 170, 183, 188, 205], "target": [37, 63, 146, 169, 180, 201], "system": [37, 79, 112, 153, 169, 176, 179, 180, 195, 197, 200, 201, 206, 211, 214], "recurs": [37, 76, 129, 155, 164, 169], "level": [37, 76, 126, 129, 153, 155, 161, 169, 173, 174, 181, 183, 195, 196, 205, 207, 211, 218], "look": [37, 76, 128, 129, 130, 162, 169, 179, 189, 194, 196, 198], "subcel": [37, 63, 76, 92, 129, 139, 169, 193], "behav": 37, "like": [37, 63, 70, 75, 84, 101, 105, 155, 167, 174, 176, 177, 180, 181, 182, 187, 192, 193, 201, 208, 211, 212], "target_cel": 37, "label_tran": [37, 76, 129], "note": [37, 58, 63, 76, 83, 84, 101, 112, 157, 168, 169, 174, 176, 179, 180, 181, 183, 185, 186, 187, 193, 194, 208, 209, 211, 217], "To": [37, 84, 85, 86, 101, 109, 112, 133, 155, 176, 177, 179, 182, 183, 184, 186, 190, 193, 195, 196, 197, 200, 201, 204, 207, 208, 211, 212, 213, 217, 218], "inherit": [37, 174, 193, 213], "It": [37, 63, 64, 76, 83, 84, 85, 86, 92, 129, 139, 155, 174, 176, 179, 180, 181, 186, 187, 188, 192, 197, 198, 201, 204, 210, 211, 213, 214], "directli": [37, 63, 76, 129, 181, 185, 187, 190, 193, 195, 204, 205, 208, 211], "take": [37, 76, 97, 105, 125, 129, 130, 154, 155, 167, 169, 179, 183, 185, 186, 211, 212, 214, 215, 218], "provid": [37, 76, 85, 95, 129, 155, 176, 182, 207, 212, 213, 218], "keyword": [37, 52, 63, 76, 84, 85, 96, 97, 98, 124, 129, 131, 132, 133, 134, 213], "placement": [37, 52, 76, 83, 129, 133, 170, 177, 204], "parent": [37, 76, 129, 133, 169, 170, 174], "allow": [37, 63, 64, 76, 83, 92, 109, 112, 129, 139, 154, 155, 174, 180, 183, 197, 198, 199, 211, 212, 217], "possibl": [37, 52, 58, 63, 64, 76, 84, 92, 129, 140, 167, 174, 176, 179, 180, 185, 197, 209, 211, 212, 214, 216], "instanc": [37, 52, 63, 76, 84, 85, 109, 112, 129, 130, 147, 148, 152, 157, 161, 164, 165, 166, 170, 174, 179, 180, 182, 183, 184, 186, 193, 195, 196, 207, 212, 213, 214, 215, 216], "properti": [37, 61, 76, 83, 85, 97, 129, 166, 167, 170, 174, 183, 186, 187, 204, 205, 207], "rel": [37, 76, 92, 105, 108, 109, 112, 124, 129, 139, 159, 162, 169, 174, 196, 212], "dvector": [37, 76, 83, 92, 129, 154], "must": [37, 63, 64, 76, 126, 129, 154, 157, 168, 169, 170, 179, 180, 193, 194, 195, 204, 205, 207, 211, 212, 213, 214, 217], "default_fac": [37, 79, 204], "doe": [37, 63, 127, 154, 161, 176, 179, 183, 185, 197, 211, 215, 218], "necessarili": [37, 64], "sort": [37, 125, 155], "criteria": [37, 117], "push": [37, 176, 209], "_epr_": 37, "alphabet": 37, "subtyp": 37, "abstract": [37, 97, 129, 174], "care": [37, 154, 179, 181], "str": [37, 63, 83, 100, 101, 103, 104, 105, 108, 109, 111, 112, 114, 115, 118, 120, 124, 125, 127, 129, 130, 146, 153, 155, 157, 160, 161, 162, 167, 170], "indic": [37, 79, 124, 129, 169, 190, 192, 212, 213], "refpoint_transform": 37, "conveni": [37, 63, 83, 86, 129, 154, 210, 213], "new": [37, 76, 96, 97, 98, 116, 129, 131, 132, 133, 134, 146, 152, 153, 157, 162, 167, 170, 173, 174, 179, 180, 181, 182, 183, 185, 189, 193, 194, 195, 196, 197, 208], "present": [37, 117, 129, 170, 176, 179, 199], "give": [37, 112, 129, 179, 190, 193, 197, 199, 212], "current": [37, 76, 86, 106, 109, 121, 129, 153, 182, 185, 187, 201, 204, 208, 209, 213], "po": [37, 133, 143], "well": [37, 105, 122, 154, 170, 208, 213, 218], "netlist": [37, 84, 165, 166, 205, 208], "Will": [37, 125], "decor": [37, 167, 174, 213], "annot": [37, 61, 64, 65, 79, 177, 192, 205], "evalu": 37, "replac": [37, 84, 157, 170, 179, 208, 214], "mark": [37, 79, 207], "go": [37, 76, 129, 172, 176, 177, 196, 207, 213, 217], "_to_": 37, "cell_inst": 37, "new_nam": 37, "definit": [37, 116, 129, 161, 174, 193, 194, 195, 196, 198, 208, 209, 211, 216], "expos": [37, 63, 86, 207], "renam": 37, "nopar": [37, 97, 129], "abstract_class": [37, 97, 129], "ancestor": [37, 97, 129, 174], "up": [37, 97, 108, 109, 111, 112, 127, 129, 130, 156, 160, 162, 168, 169, 174, 179, 180, 181, 183, 187, 190, 194, 196, 207, 211, 212, 213, 215], "draw": [37, 61, 63, 166, 180, 182, 187, 190, 192, 194, 198, 205, 213, 214], "out": [37, 76, 115, 129, 160, 161, 169, 179, 180, 191, 192, 201, 208, 209, 212], "By": [37, 52, 55, 83, 84, 85, 92, 112, 129, 155, 163, 173, 190, 192, 207, 208, 209, 211, 216], "contour": 37, "overriden": [37, 129], "custom": [37, 52, 63, 79, 88, 89, 111, 117, 125, 126, 155, 177, 190, 193, 198, 206, 211], "behaviour": 37, "error_msg": 37, "error": [37, 108, 111, 112, 116, 117, 121, 163, 176, 179, 187, 192, 194, 197, 198, 201, 207], "rais": [37, 63, 116, 117, 155, 157, 170, 207], "valueerror": [37, 63, 155, 157], "messag": [37, 76, 117, 173, 194, 201], "pure": [37, 212], "doesn": [37, 97, 105, 129, 183, 213], "t": [37, 43, 63, 66, 79, 97, 105, 117, 129, 155, 174, 176, 179, 180, 183, 201, 211, 213], "dpolygon": [37, 126, 171, 193], "etc": [37, 63, 79, 125, 129, 165, 170, 174, 179, 193, 197, 204, 216], "primari": [37, 179, 212], "abc": [37, 83], "syncronis": 37, "json": [37, 82, 108, 111, 116, 125, 128, 153, 155, 165, 166, 170, 211, 212, 214, 218], "represent": [37, 63, 83, 154, 155, 211], "sever": [37, 63, 76, 155, 174, 179, 182, 185, 196, 197, 208, 213, 214, 215], "editor": [37, 86, 179, 180, 186, 194, 197, 201, 205, 207, 208, 214, 217], "particularli": [37, 167], "figur": [37, 166, 213], "fluxline_width": [37, 45, 47], "fluxline_paramet": [37, 45, 92], "Or": [37, 84, 86], "consid": [37, 64, 83, 97, 125, 154, 157, 180, 212, 213], "descend": [37, 164, 174], "common": [37, 52, 95, 105, 116, 198, 200, 207, 214], "respect": [37, 63, 126, 127, 129, 137, 159, 171, 213], "adjust": [37, 39, 63, 187], "_port": 37, "orient": [37, 63, 124, 170], "output_rot": [37, 43, 63], "x_max": 38, "y_max": 38, "x_end": 38, "y_left": 38, "y_right": 38, "ground_pad": 38, "ground_gap_ratio": 38, "ratio": [38, 39, 49, 76, 215], "finger_length": [38, 39], "corner_r": [38, 39], "maintain": [39, 173, 179, 191, 200], "match": [41, 65, 84, 85, 117, 194, 205, 209, 214], "contact": [41, 153], "over": [41, 63, 85, 109, 112, 129, 161, 167, 176, 179, 207, 212, 213], "inter": [42, 43], "output": [43, 63, 111, 112, 125, 146, 155, 157, 161, 163, 176, 180, 205, 209, 211, 212, 214, 215, 218], "chosen": [43, 55, 58, 76, 117, 187, 209, 211], "inter_bump_dist": [43, 63], "w": [43, 58, 63, 64, 133], "connector_a": [43, 58, 63], "connector_b": [43, 58, 63], "round_connector": [43, 58, 63], "round": [43, 58, 63, 72, 90, 93, 112, 129, 154, 160, 192], "n_center_bump": [43, 63], "seri": [43, 63, 91, 96, 214], "fluxline_gap_width": [45, 47], "_fluxline_paramet": [45, 92], "hanger": 48, "coupling_length": 48, "head_length": 48, "resonator_length": [48, 56], "total": [48, 55, 63, 73, 74, 92, 112, 129, 136, 146, 154, 211, 212], "ground_width": 48, "middl": [48, 63, 129, 130, 208, 213], "wirebond": [49, 50], "west": [49, 93, 153], "east": [49, 93, 153], "scale": [49, 83], "a_launch": 49, "b_launcher": 49, "l": [49, 67, 175], "240": 49, "144": 49, "cell_mark": [52, 54], "kwarg": [52, 54, 58, 63, 66, 76, 83, 84, 85, 96, 97, 98, 129, 131, 132, 133, 134, 146, 148, 155, 162, 167], "wafer": [52, 83, 85, 208, 216], "own": [52, 93, 125, 153, 176, 179, 193, 194, 197, 198, 199, 204], "wish": [52, 179, 208], "hous": 52, "encod": [52, 155], "prefer": [52, 151, 174, 177, 180, 210, 211, 216], "inst": [52, 54, 147], "surround": [52, 170], "extend": [52, 63, 64, 129, 169, 196, 198, 204, 208], "box_margin": 52, "window": [52, 54, 76, 111, 153, 154, 176, 178, 182, 183, 186, 194, 200, 207, 208, 210, 214, 217], "flyover": [52, 54], "arm_length": [54, 92, 93, 139, 193, 213], "arm_width": [54, 93, 193], "ubm": 54, "arrow_numb": 54, "arrow": [54, 207], "start_point": 55, "end_point": 55, "altern": [55, 58, 63, 64, 84, 105, 109, 112, 115, 129, 165, 170, 179, 211, 212, 214], "shown": [55, 76, 113, 115, 125, 165, 166, 174, 182, 190, 195, 207, 211], "latter": [55, 63, 84, 176], "cannot": [55, 63, 157, 186, 193, 200, 209], "edit": [55, 63, 64, 157, 180, 183, 185, 186, 194, 197, 204, 205, 217], "minim": [55, 63, 105], "taken": [55, 64, 65, 91, 125, 129, 154, 161, 174, 205, 213], "underli": [55, 205], "equidist": 55, "n_bridg": [55, 63, 96], "600": 55, "3000": [55, 196], "probeline_length": 56, "probelin": 56, "smooth": [56, 57, 148], "intern": [56, 97, 129, 169, 182, 212, 213, 214], "continu": [57, 58, 63, 64, 154, 181], "numer": [57, 154], "optim": [57, 112], "achiev": [57, 63, 92], "start_po": 57, "start_ang": 57, "order_numb": 57, "reg": 57, "xr": 57, "growth": 57, "_epr_part_reg_fingersbulk_lay": 57, "fingersbulk": 57, "input_path": 58, "goe": [58, 63, 154], "last": [58, 63, 64, 79, 101, 128, 129, 154, 186, 204, 208], "poly_path": 58, "unless": [58, 179, 180, 200, 208], "alreadi": [58, 76, 108, 115, 125, 179, 192, 208], "longer": [58, 164, 167, 183, 186], "than": [58, 63, 76, 79, 83, 112, 124, 129, 154, 161, 163, 165, 174, 190, 198, 201, 207, 211, 212], "vertex": 58, "parallel": [58, 84, 132, 179, 208, 211], "polygon_path": 58, "want": [58, 83, 101, 161, 170, 177, 179, 180, 181, 182, 186, 192, 196, 207, 208, 210, 211, 213, 214, 218], "choos": [58, 84, 92, 139, 180, 182, 186, 194, 196, 197, 200, 207, 208, 209, 211, 218], "attempt": [58, 155, 165, 179], "find": [58, 86, 122, 150, 157, 162, 174, 181, 192, 200, 201], "largest": [58, 154], "zero": [58, 125, 129, 213], "independ": [58, 179, 180, 191, 211], "n_bridges_pattern": 58, "neg": [58, 129, 155], "so": [58, 63, 84, 96, 97, 98, 105, 125, 129, 131, 132, 133, 134, 153, 154, 169, 170, 174, 176, 179, 180, 181, 188, 193, 195, 196, 197, 201, 204, 207, 212, 214, 217], "above_spac": 58, "below_spac": 58, "right_spac": 58, "x_space": 58, "y_space": 58, "bridges_left": 58, "bridges_bottom": 58, "bridges_right": 58, "bridges_top": 58, "easili": [58, 66, 121, 148, 180, 181, 195, 198, 205], "old": [58, 66, 162, 163, 170, 208], "spiralresonatorrectangl": 58, "bx": [58, 63, 64], "ex": [58, 63, 64, 200], "auto_spac": 58, "include_connector_length": 58, "manual_spac": 58, "term2": [58, 63, 64, 133], "substrat": [61, 62, 112, 124, 125, 126, 129, 192, 213], "e": [62, 63, 66, 83, 92, 112, 130, 133, 154, 155, 165, 170, 174, 176, 180, 190, 204, 205, 209, 210, 211, 212], "composit": [63, 101, 174, 187], "suppli": [63, 64, 85, 96, 98, 129, 131, 132, 133, 134, 153, 213], "serial": [63, 155], "from_seri": 63, "ast": [63, 157], "literal_ev": [63, 157], "node_object": 63, "node_obj": 63, "element_nam": 63, "human": [63, 198, 205], "readabl": [63, 205], "storag": [63, 185], "conform": [63, 121], "format": [63, 97, 153, 154, 161, 172, 211, 212, 214, 215], "class_str": 63, "parameter_dict": 63, "__str__": 63, "omit": [63, 201, 208, 213], "made": [63, 92, 164, 165, 166, 212, 213], "perspect": 63, "rout": [63, 129, 163, 187, 196], "As": [63, 182, 193, 194, 196, 204, 207, 208], "bonu": 63, "arbitrari": [63, 64, 154, 155, 196], "next": [63, 126, 129, 141, 142, 154, 184, 194, 207, 213], "waypoint": [63, 64], "except": [63, 64, 76, 84, 117, 124, 155, 157, 165, 167, 170, 174, 185, 207], "collinear": 63, "back": [63, 186, 192, 209], "pass": [63, 76, 84, 85, 96, 97, 98, 101, 105, 109, 112, 113, 129, 131, 132, 133, 134, 154, 155, 161, 162, 166, 174, 190, 196, 213], "ab_across": 63, "across": [63, 127, 213], "evenli": 63, "preced": 63, "calcul": [63, 83, 92, 101, 109, 112, 127, 139, 180, 185, 196, 212], "ab_to_ab_spac": 63, "ab_to_node_clear": 63, "former": 63, "densiti": [63, 83, 146, 185], "fact": 63, "instead": [63, 66, 76, 84, 112, 155, 157, 174, 176, 179, 184, 193, 195, 197, 209, 211, 212, 213], "normal": [63, 127, 174, 176], "those": [63, 126, 155, 184, 208, 209], "correct": [63, 86, 101, 105, 124, 130, 157, 174, 190, 193, 194, 200, 209], "compar": [63, 64, 155, 160, 205], "notabl": 63, "detail": [63, 95, 112, 176, 179, 180, 186, 191, 192, 194, 195, 197, 207, 212, 214, 215], "everi": [63, 64, 128, 155, 170, 174, 177, 180, 185, 216], "done": [63, 112, 180, 181, 182, 204, 210, 211, 212, 217], "segment_length": 63, "individu": [63, 83, 84, 85, 112, 125, 129, 173, 179, 180, 187, 213], "regular": [63, 200, 208, 213, 214], "test_waveguide_composit": [63, 207], "lym": [63, 170, 184, 207, 214], "script": [63, 76, 108, 111, 113, 115, 116, 128, 153, 161, 170, 176, 177, 179, 180, 185, 191, 197, 198, 201, 205, 206, 209, 210, 211, 212, 213, 214, 215, 216, 218], "were": [63, 101, 161, 170], "explicitli": [63, 105, 112, 153, 200, 201, 211], "implicitli": 63, "node_index": [63, 152, 157], "_created_": 63, "associ": [63, 76, 166, 207], "particular": [63, 190, 192, 196, 197, 207], "subscel": 63, "appear": [63, 183, 186, 190, 194, 207, 216], "retriev": 63, "itself": [63, 105, 179, 192, 197, 212], "count": [63, 129, 147, 213], "consecut": [63, 156], "special": [63, 154, 184], "consequ": [63, 91, 165], "accumul": 63, "oni": 63, "report": [63, 84, 112, 181], "route_funct": 63, "initial_guess": 63, "waveguide_param": 63, "lambda": 63, "f": [63, 66, 125, 127, 134, 176, 207], "more": [63, 79, 81, 84, 108, 111, 121, 125, 129, 165, 173, 174, 175, 176, 179, 180, 184, 185, 186, 189, 192, 193, 194, 195, 198, 204, 205, 207, 208, 211, 212, 213, 214, 215, 217], "compon": [63, 165], "tune": [63, 92, 170, 213], "weight": 63, "initi": [63, 76, 96, 97, 98, 129, 131, 132, 133, 134, 161, 169, 207, 208], "reason": [63, 174, 190], "interfac": [63, 112, 124, 125, 129, 212, 213], "snap": [63, 161], "behavior": [63, 76, 155], "unmodifi": 63, "requir": [63, 76, 112, 117, 151, 161, 174, 175, 178, 179, 181, 185, 197, 201, 205, 208, 211, 213, 214, 215, 218], "chain": 63, "iter": [63, 64, 109, 112, 155, 161, 212], "approri": 63, "target_len": 63, "point_a": 63, "point_a_corn": 63, "point_b": 63, "point_b_corn": 63, "endpoint": [63, 64, 125, 154, 165], "enable_gui_edit": [63, 157], "gui_path": 63, "gui_path_shadow": 63, "hidden": [63, 79, 167, 174, 192, 195], "detect": [63, 101, 184, 185, 196], "tight_rout": 63, "tight": 63, "airbridge_param": 63, "radio": 64, "bent": 64, "open": [64, 90, 91, 101, 153, 177, 179, 185, 186, 197, 200, 201, 203, 206, 207, 208, 211, 212, 217], "dpath": [64, 154, 196], "partial": [64, 186, 187], "case": [64, 79, 84, 86, 105, 116, 125, 129, 153, 164, 170, 177, 180, 181, 182, 186, 192, 194, 196, 199, 205, 207, 208, 209, 212, 213], "guid": [64, 84, 132, 175, 176, 183, 187, 189, 195, 198, 213], "visibl": [64, 76, 179, 182, 185, 187, 193, 194, 196, 197, 201, 207, 208], "graphic": [64, 83, 154], "due": [64, 174, 201], "precis": [64, 125, 129, 154, 198, 212], "arithmet": 64, "point1": 64, "point2": 64, "point3": 64, "data": [64, 79, 83, 95, 97, 109, 112, 125, 127, 128, 129, 161, 166, 170, 192, 193, 199, 204, 207, 212, 214, 215], "v1": 64, "v2": 64, "alpha1": 64, "alpha2": 64, "corner_po": 64, "vector": [64, 154], "elem": [64, 65], "point_1": 64, "point_2": 64, "term_len": [64, 65], "face_index": [64, 65], "One": [64, 129, 159, 165, 180, 183, 213], "waveguide_cel": 64, "annotation_lay": 64, "enough": [64, 161], "neighbor": [64, 187], "begin_shapes_rec": 64, "we": [64, 79, 83, 101, 129, 165, 169, 170, 173, 174, 175, 179, 180, 186, 188, 190, 191, 193, 194, 195, 196, 197, 200, 201, 207, 208, 211, 213, 214, 216], "unsign": [64, 154], "maximum": [64, 76, 109, 112, 211, 212], "tline": 64, "stop": [65, 109, 112, 154, 179, 207, 212], "mode": [65, 76, 101, 105, 151, 180, 186, 197, 205, 207, 211, 214, 217], "radian": [65, 154], "circl": [65, 154, 207], "discret": [65, 109, 212], "shortcut": 65, "detour": 65, "alpha": 65, "left_gap_inn": 65, "left_gap_out": 65, "right_gap_inn": 65, "right_gap_out": 65, "left_protect": 65, "right_protect": 65, "would": [65, 86, 105, 155, 157, 165, 180, 181, 184, 195], "rad": 65, "141592653589793": 65, "multiwai": 66, "splitter": 66, "letter": [66, 79, 115, 160, 162, 194], "length_extra": 66, "length_extra_sid": 66, "waveguidecoplanartcross": 66, "measur": [66, 88, 89, 129, 136, 207, 218], "11": [66, 124, 129, 179, 180], "270": 66, "use_airbridg": 66, "centr": [66, 88, 89], "bridge_dist": 66, "a_list": 66, "b_list": 66, "port_nam": [66, 117, 196], "c": [66, 84, 133, 174], "d": [66, 84, 129, 154, 155, 179, 208, 211], "g": [66, 83, 155, 170, 204], "h": [66, 127, 134], "j": [66, 212], "design": [69, 70, 75, 82, 84, 87, 92, 170, 177, 180, 182, 187, 190, 191, 195, 196, 198, 205, 207, 212, 215, 216], "packag": [69, 86, 95, 173, 176, 179, 180, 189, 193, 194, 195, 198, 199, 200, 205, 209, 210, 212, 216, 218], "oasi": [69, 116, 122], "devic": [69, 92, 139, 192], "research": 69, "qcd1": 69, "qcd2": 69, "qcd3": 69, "thu": [70, 75, 212], "junctionnam": 70, "02": [70, 90, 92, 139], "style": [71, 72, 173, 178, 189, 196, 198], "distinct": [71, 182, 199], "top_pad_lay": 71, "edge_height": 71, "small_loop_height": 71, "loop_bottom_i": 71, "delta_j": 71, "finger_margin": 71, "junction_shapes_top": 71, "junction_shapes_bottom": 71, "shadow_shap": 71, "h_pad_height": 71, "v_pad_width": 71, "pad_overlap": 71, "tp_width": 71, "tp_height": 71, "rounding_param": 71, "bp_height": 71, "bp_gap_x": 71, "big_loop_height": 71, "include_base_metal_addit": [72, 90], "pad_height": [72, 90, 136, 143], "pad_to_pad_separ": [72, 90], "x_offset": [72, 90], "pad_rounding_radiu": [72, 90], "junction_total_length": [73, 74, 92, 129], "26": 73, "33": [74, 92, 129], "junction_upper_pad_width": [74, 92, 129], "8": [74, 92, 124, 129, 166, 167, 174], "junction_upper_pad_length": [74, 92, 129], "13": [74, 92, 129, 200], "junction_lower_pad_width": [74, 92, 129], "junction_lower_pad_length": [74, 92, 129], "include_background_gap": 74, "squidnam": 75, "loop_area": [75, 90, 92, 139], "background_color": 76, "ffffff": 76, "helper": [76, 85, 97, 117, 124, 129, 145, 154, 162, 169, 180, 213], "render": [76, 129], "environ": [76, 121, 176, 178, 179, 200, 201, 209, 211, 215, 216, 218], "layoutview": [76, 207], "cellview": [76, 207], "view": [76, 79, 84, 112, 152, 161, 168, 180, 181, 185, 196, 197, 204, 207, 211, 214, 217], "imag": [76, 81, 166, 176, 177, 180, 198, 200, 206, 207, 208, 209, 211, 212, 213], "tab": [76, 155, 183, 186, 207, 208], "standalon": [76, 86, 153, 174, 178, 179, 191, 198, 199, 201, 207, 208, 210], "python": [76, 86, 128, 155, 157, 158, 161, 174, 175, 176, 178, 186, 189, 193, 194, 197, 198, 199, 205, 207, 208, 209, 210, 211, 212, 214, 217, 218], "keep": [76, 174, 180, 187, 208], "scope": [76, 180], "macro": [76, 161, 170, 179, 184, 185, 191, 194, 197, 198, 201, 205, 206, 208, 214, 216, 217], "applic": [76, 153, 154, 199, 206, 217], "command": [76, 84, 86, 94, 116, 128, 161, 175, 176, 177, 179, 180, 181, 188, 199, 200, 205, 207, 209, 211, 217], "act": [76, 127, 154, 187], "onc": [76, 111, 126, 151, 169, 174, 182, 183, 186, 196, 197, 207, 208, 209, 211, 213, 214, 218], "png": [76, 177], "jupyt": [76, 178], "notebook": [76, 178], "inlin": [76, 187], "wrap": [76, 77], "whether": [76, 90, 92, 124, 127, 128, 139, 153, 176, 210, 212], "background": [76, 209], "color": [76, 204, 213], "html": [76, 79, 176, 177, 200], "white": 76, "fit": [76, 112, 193, 207], "zoom": [76, 185, 186, 207], "main": [76, 83, 94, 111, 112, 165, 176, 180, 182, 191, 194, 195, 205, 207, 208, 215, 216], "ipython": 76, "bold": [76, 182, 207], "clear": 76, "popul": [76, 83, 84, 161], "top_cell_nam": 76, "filenam": [76, 82, 122, 163, 165], "layers_set": 76, "directori": [76, 82, 115, 116, 153, 174, 176, 177, 179, 180, 181, 194, 200, 201, 204, 205, 207, 208, 209, 214], "max_siz": 76, "bigger": 76, "pixelbuff": 76, "whole": [76, 132, 186], "hierarchi": [76, 83, 84, 147, 161, 170, 174, 181, 182, 185, 188, 196, 206, 207, 208], "correspondingli": 76, "viewport": 76, "aspect": [76, 92], "Not": [76, 111, 169], "deprec": [76, 83, 170], "miss": [76, 151, 170, 181, 207], "ui": 76, "layerinfo": [76, 79, 125, 146, 164, 204], "default_lay": [76, 79, 204, 205], "valid": [76, 117, 129, 157, 175, 180, 212], "cluster": [77, 209, 211], "process": [77, 79, 84, 96, 98, 109, 116, 125, 128, 129, 131, 132, 133, 134, 169, 179, 186, 194, 198, 199, 205, 206, 208, 211, 212, 214, 215], "inform": [77, 84, 125, 129, 172, 174, 184, 193, 194, 195, 204, 205, 208, 212, 213, 214, 218], "about": [77, 174, 179, 190, 193, 195, 198, 200, 205, 207, 218], "togeth": [77, 154, 167, 179, 187, 195, 196, 213], "220": 79, "reserv": [79, 97, 112], "127": [79, 192], "128": [79, 88, 192], "255": [79, 192], "work": [79, 84, 105, 125, 174, 176, 179, 180, 182, 191, 196, 197, 201, 207, 208, 210, 213, 216, 218], "anoth": [79, 90, 91, 93, 155, 169, 170, 174, 183, 192, 193, 204], "stack": [79, 97, 124, 129, 207, 215], "bond": 79, "denot": [79, 112, 190, 208], "manufactur": 79, "necessari": [79, 108, 170, 180, 210, 211], "deposit": [79, 125], "auxiliari": [79, 208], "field": [79, 97, 112, 129, 157, 169, 191, 209], "229": 79, "organis": 79, "accord": [79, 83, 125, 170, 177, 180], "www": [79, 112, 121, 200, 211, 214], "de": [79, 127, 200], "doc": [79, 109, 112, 167, 176, 177, 180, 205, 212, 213], "qt5": 79, "layer_sourc": 79, "flat": [79, 83, 174], "map": [79, 83, 84, 85, 105, 165, 213], "subset": [79, 190], "minor": [79, 173], "twist": 79, "1t1_base_metal_gap": 79, "invert": [79, 82], "skip_extra": 82, "bitmap": [82, 84], "oa": [82, 83, 84, 125, 153, 154, 160, 170, 205, 208, 211, 214, 218], "gd": [82, 108, 111, 153, 170, 205, 208, 211], "chip_nam": [82, 83], "chip_dir": 82, "alt_netlist": [82, 84, 165], "export_dir": 82, "subdirectori": [82, 197, 205], "modifi": [82, 83, 90, 91, 125, 129, 154, 180, 182, 184, 185, 194, 195, 197, 198, 204, 207, 209], "mask_document": 82, "md": 82, "spec_lay": 82, "mask_graphical_rep": 82, "postfix": [83, 165, 181], "creation": [83, 169, 211], "2d": [83, 84, 112, 124, 153], "local_chip_tran": 83, "position_label": 83, "1800": 83, "m90": 83, "h08": 83, "exact": [83, 182, 199, 207], "minimum": [83, 109, 112, 154, 179, 180, 212], "violat": 83, "conflict": 83, "never": 83, "factor": [83, 162], "coverag": [83, 181], "uniqu": [83, 153, 161, 165, 166, 196, 209, 215], "outsid": [83, 91, 112, 180, 192, 193], "dure": [83, 155, 180, 186], "calcualt": 83, "k": [83, 165], "rigtht": 83, "90": [83, 196, 208], "what": [83, 121, 175, 204, 205, 207, 213], "translat": [83, 200], "chip_placement_list": 83, "unit_x": 83, "unit_i": 83, "chip_coordin": 83, "global": [83, 112], "coord_x": 83, "coord_i": 83, "xxx": 83, "labels_cel": 83, "mask_name_for_chip": 83, "row": [83, 97, 212], "column": [83, 97, 212], "c03": 83, "posixpath": [84, 125], "home": [84, 125, 176, 208], "runner": [84, 125], "tmp": [84, 115, 176, 180, 205, 209, 211, 214], "add_mask_name_to_chip": 84, "These": [84, 85, 106, 161, 174, 177, 179, 196, 204, 205, 207, 208, 214], "Then": [84, 112, 170, 179, 183, 214], "entir": [84, 147, 176, 207], "switch": [84, 217], "debug": [84, 129, 163, 207, 208, 217], "limit": [84, 97, 126, 170, 176, 199, 212, 213, 214], "concurr": [84, 179], "cpu": [84, 181, 201], "resourc": [84, 209, 211], "manag": [84, 152, 176, 179, 197, 199, 200, 207, 209, 211, 218], "purpos": [84, 129, 135, 174, 180, 184, 213], "drc": [84, 153, 185, 205], "similar": [84, 112, 169, 207, 211, 212, 213, 214], "folder": [84, 108, 111, 115, 116, 124, 128, 176, 177, 179, 180, 181, 193, 194, 195, 205, 208, 209, 210, 211, 212, 214, 215, 218], "tmp_path": [84, 153, 208], "mask_layout_typ": [84, 85], "extra_face_param": [84, 85], "ident": [84, 85, 165, 166, 170, 174, 180], "overwritten": 84, "extra_kwarg": 84, "variant_nam": 84, "complex": [84, 182, 187, 198, 212], "polymorph": 84, "here": [84, 101, 163, 178, 183, 186, 192, 193, 194, 196, 197, 211, 216], "rest": 84, "quick_demo": [84, 180, 208], "py": [84, 108, 111, 115, 130, 174, 176, 177, 179, 180, 181, 190, 192, 193, 195, 201, 204, 205, 208, 209, 210, 211, 212, 214, 218], "further": [84, 176, 197, 208, 213], "qdg": 84, "o": [84, 86, 155, 179, 200], "cpu_count": 84, "whichev": 84, "smaller": [84, 129, 154], "remove_guiding_shap": 84, "box_map": 84, "mask_map": 84, "nxn": 84, "mxm": 84, "mnxmn": 84, "usual": [85, 105, 125, 127, 165, 179, 192, 194, 197, 205, 207, 208, 210, 211, 213], "instanti": [85, 169, 174, 180, 213], "extra_param": 85, "modul": [86, 111, 154, 158, 162, 174, 175, 178, 179, 181, 193, 197, 198, 199, 201, 205, 207, 210], "import": [86, 108, 161, 162, 166, 174, 176, 177, 180, 181, 182, 188, 193, 194, 196, 199, 201, 205, 207, 208, 213, 214], "api": [86, 112, 167, 173, 177, 180, 187, 193, 194, 198, 207, 211, 212, 213, 214, 216], "usag": [86, 162, 178, 186, 188, 197, 198, 206, 207, 208, 211, 212, 213, 214], "db": [86, 174], "execut": [86, 108, 111, 116, 128, 150, 176, 181, 200, 207, 208, 211, 214, 215], "session": 86, "found": [86, 117, 150, 153, 161, 172, 176, 195, 200, 205, 211, 212, 218], "transmon": [88, 89], "josephson": [88, 89], "r_island": 88, "squid_angl": [88, 89], "couplers_r": [88, 89], "couplers_a": [88, 89], "couplers_b": [88, 89], "couplers_angl": [88, 89], "340": [88, 89], "210": [88, 89], "couplers_width": [88, 89], "couplers_arc_amplitud": [88, 89], "45": [88, 89, 124, 129], "drive_angl": [88, 89], "drive_dist": [88, 89], "concentr": 89, "290": 89, "rectangl": [90, 91, 125, 174, 187], "shunt": [90, 91], "north": [90, 91, 93], "join": [90, 91], "700": 90, "ground_gap_r": 90, "coupler_r": 90, "coupler_a": 90, "coupler_offset": 90, "squid_offset": 90, "island1_r": 90, "island2_r": 90, "450": 90, "island1_taper_width": 90, "island1_taper_junction_width": 90, "island2_taper_width": 90, "island2_taper_junction_width": 90, "70": 90, "with_squid": 90, "spline": [91, 154], "construct": [91, 116, 154, 170, 208, 213], "island_splin": 91, "island_spline_sampl": 91, "collect": [92, 153, 182], "routin": 92, "beam": 92, "customari": 92, "probepoint": [92, 153], "simpli": [92, 129, 155, 176, 190, 213], "appropri": [92, 169, 173, 174, 190, 193, 204], "probe_ground": 92, "probe_island": 92, "probe_island_1": 92, "probe_island_2": 92, "transf": [92, 139], "only_arm": [92, 139], "base_metal_gap_for_ebl": [92, 139], "right_sid": [92, 139], "help": [92, 139, 179, 180, 181, 185, 198, 207], "dcplxtran": [92, 139, 170], "rot": 92, "flux": [92, 109, 117, 133, 186], "flux_corn": 92, "origin_fluxlin": 92, "origin_squid": 92, "port_common": 92, "howev": [92, 129, 154, 180, 187, 190, 197, 201, 208, 211], "might": [92, 108, 111, 112, 176, 179, 197, 200, 201, 211], "tweak": 92, "overwrit": [92, 176, 211], "south": 93, "gap_width": [93, 213], "wne": 93, "cpl_width": [93, 134], "cpl_length": 93, "cpl_gap": 93, "102": 93, "port_width": 93, "cl_offset": 93, "island_r": 93, "_epr_part_reg_crossbulk_lay": 93, "crossbulk": 93, "_epr_part_reg_0cplrbulk_lay": 93, "0cplrbulk": 93, "_epr_part_reg_1cplrbulk_lay": 93, "1cplrbulk": 93, "_epr_part_reg_2cplrbulk_lay": 93, "2cplrbulk": 93, "arg": [94, 113, 115, 146, 153, 155, 170, 176], "args_for_script": 94, "entri": [94, 153, 170, 197, 201, 208], "consol": [94, 115, 163, 201, 208, 210], "pars": [96, 97, 98, 113, 129, 131, 132, 133, 134, 157], "readi": [96, 98, 129, 131, 132, 133, 134], "co": 97, "intend": [97, 129, 154, 213, 218], "materi": [97, 112, 125, 129, 211, 212], "don": [97, 174, 179, 180, 201], "obei": 97, "vacuum": [97, 112, 124, 125, 126, 129, 213], "word": [97, 162, 194, 197], "result": [97, 105, 109, 143, 153, 154, 155, 186, 209, 211, 212, 215], "matric": [97, 109, 212], "introduc": [97, 125, 129, 191, 213], "dielectr": [97, 129, 213], "permitt": [97, 124, 125, 129], "regist": [97, 168, 174, 203, 205], "reset": 97, "param_nam": [97, 167, 177], "cast": [97, 129], "simulation_lay": 97, "relev": [97, 129, 154, 169, 212, 213], "london": [97, 125, 212], "penetr": [97, 125, 212], "depth": [97, 125, 212], "m": [97, 124, 129, 180, 211], "xsection_source_class": 97, "schema": [97, 170], "ignore_process_lay": 97, "boundari": [97, 112, 129, 212], "extra_json_data": [97, 129], "store": [97, 129, 146, 154, 170, 208, 212, 213], "virtual": [97, 129, 180, 201], "refpoint_prefix": [100, 101, 104, 105, 143], "parameter_remap_funct": [100, 101, 104, 105], "callabl": [100, 101, 104, 105, 124, 125, 130], "pointer": 101, "partition_region_funct": [101, 130], "could": [101, 115, 121, 155, 173, 175, 176, 211, 213], "_epr_part_reg_xxx_lay": 101, "differenti": [101, 125], "meant": [101, 205], "reus": [101, 160], "compos": [101, 189, 196], "bool": [105, 108, 109, 111, 112, 113, 115, 120, 127, 129, 153, 154, 164, 170], "check": [105, 117, 151, 155, 170, 179, 180, 205, 212, 217], "face_stack": [105, 129, 213], "needed_paramet": 105, "stub": [105, 129, 134], "parit": 105, "recommend": [105, 125, 179, 180, 188, 200, 201, 208, 211, 212], "suppos": [105, 208, 213], "But": 105, "qubit_a": 105, "program": [106, 198, 207, 210], "hfss": [106, 109, 212, 213, 215], "q3d": [106, 109, 212, 213, 215], "write": [108, 111, 116, 121, 153, 174, 176, 177, 179, 180, 181, 201, 211, 213, 217, 218], "json_filenam": [108, 111, 116, 128], "file_prefix": [108, 111, 116], "exit_after_run": 108, "execution_script": 108, "import_and_simul": 108, "use_rel_path": 108, "batch": [108, 128, 205, 214], "bat": [108, 116, 214], "electron": [108, 150, 212, 214, 215], "desktop": [108, 211, 212, 214, 215], "sequenc": [108, 111, 142, 154], "script_fold": [108, 111], "import_script": 108, "skip_error": [108, 111], "solution_param": [108, 109, 111, 112], "skip": [108, 111, 112, 155, 186], "caus": [108, 111, 130, 154, 155, 179], "carefulli": [108, 111, 173, 213], "sens": [108, 111, 207], "wast": [108, 111], "bad": [108, 111], "ghz": [109, 112, 212], "percentag": [109, 212], "mesh": [109, 112, 121, 211, 212], "refin": [109, 112, 212], "how": [109, 129, 170, 174, 180, 184, 186, 187, 193, 194, 196, 201, 205, 209, 212, 213], "mani": [109, 129, 172, 179, 180, 182, 187, 190, 193, 196, 198, 200, 201, 204, 205, 208, 211, 212, 213], "meet": [109, 187, 212], "criterion": [109, 112, 212], "maxim": [109, 112], "templat": [109, 177, 198], "classvar": [109, 112, 118], "101": [109, 212], "interpol": [109, 112, 212], "multifrequ": [109, 212], "sweep": [109, 112, 116, 121, 125, 170, 211, 212, 215], "lowest": [109, 129, 212, 213], "highest": [109, 129, 212], "fast": [109, 173, 212], "energi": [109, 111, 112, 215], "save": [109, 128, 154, 170, 194, 204, 209, 212, 213], "magnet": [109, 117], "pec": 109, "sheet": [109, 124, 129, 213], "matrix": [109, 112, 154, 211, 215], "nomin": 109, "moment": 109, "eigenmod": [109, 215], "eigenfrequ": [109, 212], "solv": [109, 212], "excit": [109, 112, 127, 212], "voltag": 109, "induct": [109, 112, 120, 127, 134, 169, 212], "workflow": [111, 121, 176, 187, 188, 189, 198, 205, 206, 207, 211, 215], "script_fil": 111, "compile_elmer_modul": 111, "launch": [111, 179, 200, 204, 208, 217], "compil": [111, 112, 180, 201, 209], "runtim": [111, 176], "model": [111, 112, 127, 129, 180, 211, 212, 213], "005": 112, "001": 112, "factori": 112, "adapt": [112, 213], "fraction": 112, "outlier": 112, "symmetr": 112, "big": [112, 208], "_": [112, 152, 196, 213], "larger": [112, 129, 211], "finer": 112, "divid": [112, 174, 180, 205, 211], "dim": [112, 126], "term": [112, 126, 129, 181, 212, 213], "entiti": 112, "expans": [112, 126, 129, 154, 169], "constant": [112, 129, 174, 212], "slope": 112, "increas": [112, 125, 142, 176, 211], "global_max": 112, "less": [112, 121, 174, 199, 201], "awai": [112, 126, 127, 129, 154, 157, 196], "forc": [112, 127, 129, 212], "niter": 112, "dimtag": 112, "gmsh": [112, 176, 206, 209, 210, 214, 215], "netgen": 112, "vtu": 112, "paraview": [112, 176, 210, 211, 214], "off": [112, 129, 207], "slightli": [112, 199], "faster": [112, 121, 170], "explicit": 112, "wave": [112, 129, 213], "equat": 112, "converg": 112, "supercurr": 112, "flow": 112, "thick": [112, 124, 125, 129, 213], "finit": 112, "nedelec": 112, "kind": [112, 180, 195], "formul": [112, 130], "vectorhelmholtz": 112, "potenti": [112, 127], "v": [112, 120, 173], "electr": [112, 212], "nic": 112, "funet": 112, "fi": 112, "pub": 112, "sci": 112, "elmermodelsmanu": 112, "pdf": [112, 121], "warn": [112, 163, 200], "experiment": [112, 216], "poor": [112, 211], "film": 112, "nest": [112, 129], "solver": [112, 211, 212, 214], "calc": 112, "wave_equ": [112, 212], "mg": 112, "09": 112, "ilu0": 112, "polynomi": [112, 154], "p": [112, 152], "multigrid": 112, "bicgstab": 112, "mention": [112, 129, 176], "elmersolv": [112, 176, 211], "umfpack": 112, "mump": 112, "pardiso": 112, "superlu": 112, "softwar": [112, 172, 176, 203, 211, 214], "redund": 112, "precondition": 112, "linear": [112, 173], "condit": [112, 212], "xmin": [112, 120], "xmax": [112, 120], "ymin": [112, 120], "ymax": [112, 120], "just": [112, 174, 176, 179, 180, 194, 196, 197, 205, 213], "impend": 112, "electrostat": 112, "sequenti": [112, 211], "1v": 112, "epr_3d": 112, "export_script": 113, "quiet": [113, 115], "export_onli": [113, 115], "basenam": [113, 209], "dialog": [113, 115, 187, 197, 210], "describ": [113, 127, 129, 148, 154, 161, 175, 180, 187, 190, 192, 210, 212, 213, 215], "stdout": [113, 163], "print": [113, 155, 161, 162, 163, 208], "export_path_identifi": 113, "script_export_path": 113, "remote_host": 114, "singularity_remote_path": 114, "ssh_login": 115, "kqc_remote_tmp_path": [115, 209], "detach_simul": 115, "poll_interv": 115, "export_path_basenam": 115, "local": [115, 173, 176, 177, 180, 194, 197, 199, 207, 209], "remot": [115, 206, 211, 215], "host": [115, 178, 180, 209, 211], "froce": 115, "q": [115, 180, 186, 210], "ssh": [115, 209], "login": 115, "hostnam": 115, "detach": [115, 209], "wait": 115, "finish": [115, 186, 209, 211], "poll": [115, 209], "interv": [115, 209], "export_tmp_dir": 115, "source_path": 116, "content": [116, 153, 197, 198, 211], "sh": [116, 176, 209, 211, 214], "json_data": 116, "json_file_path": 116, "sim_class": [116, 213, 214], "sim_paramet": [116, 213], "vari": [116, 195, 211, 213], "sol_class": 116, "sol_paramet": 116, "analys": 117, "inconsist": 117, "met": 117, "ensur": [117, 155, 174, 196], "least": [117, 154, 157, 170, 179, 185, 195, 196, 201, 207], "presenc": 117, "validation_typ": 117, "handl": [117, 146, 174, 184, 211, 215], "filename_templ": 120, "filename_output": 120, "rule": [120, 129, 177, 205], "nvertic": 120, "debugid": 120, "ilevel": 120, "mtype": 120, "filltyp": 120, "conmax": 120, "edge_mesh": 120, "sym": 120, "xwidth": 120, "ywidth": 120, "xcell": 120, "ycell": 120, "materials_typ": 120, "si": 120, "bt": 120, "port_ipoli": 120, "portnum": 120, "ipolygon": 120, "ivertex": 120, "port_typ": 120, "std": 120, "xcord": 120, "ycord": 120, "resist": [120, 127, 169], "react": 120, "capac": 120, "control_typ": 120, "dbu": [120, 121, 122, 125, 126, 146, 154], "fill_typ": [120, 121], "poli": 120, "detailed_reson": 121, "lower_accuraci": 121, "ab": 121, "staircas": 121, "simulation_safeti": 121, "son": [121, 214], "sonnetsoftwar": 121, "download": [121, 176, 200], "techdoc": 121, "enhanced_resonance_detection_featur": 121, "fine": [121, 167], "coars": 121, "accur": 121, "good": [121, 208], "everyth": [121, 182, 185, 192, 194], "output_format": [122, 161], "intersect": 122, "override_arg": 124, "ma_eps_r": 124, "ms_eps_r": 124, "sa_eps_r": 124, "ma_thick": [124, 125], "0048": 124, "ms_thick": [124, 125], "0003": 124, "sa_thick": [124, 125], "0024": 124, "ma_bg_eps_r": 124, "ms_bg_eps_r": 124, "sa_bg_eps_r": 124, "metal_height": [124, 129, 213], "p1": [124, 125, 129], "p2": [124, 125, 129], "metal_edg": 124, "later": [124, 126, 144, 170, 181, 196, 197], "mer": 124, "x_revers": 124, "closer": [124, 129, 154, 161], "z": [124, 126, 129, 176, 217], "z_revers": 124, "ma": [124, 129], "sa": [124, 129], "approxim": [124, 129], "input_oa": 125, "output_oa": 125, "cut1": 125, "cut2": 125, "process_path": 125, "kqc_process": [125, 218], "parameters_path": 125, "plugin": [125, 152, 168, 175, 179, 218], "down": [125, 127, 129, 185, 186, 196, 207], "output_path": 125, "pathlib": 125, "pyacor": 125, "post_processing_funct": 125, "oxidise_layers_funct": 125, "_oxidise_lay": 125, "ma_permitt": 125, "ms_permitt": 125, "sa_permitt": 125, "vertical_cul": 125, "mer_box": 125, "magnification_ord": 125, "perform": [125, 129, 170, 176, 180, 211, 212], "oxid": 125, "expect": [125, 173, 201], "signatur": 125, "pyhint": 125, "air": 125, "cull": 125, "retain": 125, "_mer": 125, "suffix": [125, 126, 153, 166], "magnif": [125, 182], "accomod": 125, "spacial": 125, "10x": 125, "100x": 125, "thin": [125, 129, 213], "sort_kei": [125, 155], "pick": 125, "tie": 125, "break": [125, 173, 176], "slot": 125, "cut_label": 125, "width_ratio": 125, "request": [125, 163, 170, 176, 209, 211], "xsection_cut": 125, "_1": 125, "_2": 125, "multipli": 125, "scalar": [126, 129], "vertical_dimens": 126, "metal_edge_dimens": 126, "accept": [126, 148, 157, 173, 179, 212], "domain": [126, 129, 213], "preview": [126, 129], "databas": [126, 154, 156, 216], "sign": 126, "metal_region": [126, 143], "etch_region": 126, "reactanc": [127, 169], "renorm": [127, 212], "ideal": 127, "rlc": [127, 212], "lump": [127, 129, 212, 213], "real": 127, "ohm": 127, "omega": 127, "imaginari": 127, "henri": 127, "farad": 127, "signal_loc": [127, 212, 213], "ground_loc": [127, 212, 213], "signal_lay": [127, 169], "etch_width": 127, "deembed_len": [127, 169, 212], "embed": 127, "micron": [127, 154, 160], "port_siz": [127, 129], "repeat_for_each": 128, "data_file_prefix": 128, "dimension": [129, 198, 212, 213], "basic": [129, 178, 179, 182, 188, 189, 205, 207, 216], "built": [129, 176, 177, 182, 193, 194, 197, 213, 217], "principl": [129, 157], "imagin": [129, 213], "surfac": [129, 212, 213], "touch": [129, 192], "lower_box_height": [129, 213], "account": [129, 159, 161, 174, 209, 211, 213], "pile": [129, 213], "That": [129, 212, 213], "leav": [129, 213], "substrate_height": [129, 213], "chip_dist": [129, 213], "infinit": [129, 155, 213], "insul": 129, "dielectric_height": [129, 213], "grid_siz": [129, 156], "expand": [129, 154], "resolut": 129, "list_or_const": 129, "ordin": 129, "short": [129, 182, 216], "duplic": [129, 154, 164, 179], "ascend": 129, "simplifi": 129, "polygon_toler": 129, "shrink": 129, "amount": [129, 154, 209, 211], "minimum_point_spac": 129, "z0": 129, "z1": 129, "split": [129, 154], "opp_i": 129, "__init__": 129, "hole": [129, 156], "overlap": [129, 154, 156, 165, 196], "subtract_kei": 129, "port_kwarg": 129, "engin": 129, "infer": [129, 153, 170], "brought": [129, 169], "at_edg": 129, "signal_edg": 129, "ground_edg": 129, "material_dict": 129, "member": [129, 155], "whatev": [129, 201], "delet": [129, 162, 164, 187, 197], "access": [129, 180, 185, 199], "append": [129, 154, 163, 165, 166, 213], "dtext": 129, "ground_grid_box": 129, "use_port": 129, "upper_box_height": 129, "fixed_level_stackup": 129, "375": 129, "substrate_box": 129, "correspondingsubstr": 129, "fulli": [129, 180, 212], "substrate_materi": 129, "electromagnet": [129, 191], "dielectric_loss_tang": 129, "airbridge_height": 129, "dielectric_materi": 129, "vertical_over_etch": 129, "hollow_tsv": 129, "hollow": 129, "constructor": [129, 155, 213], "tls_layer_thick": 129, "tl": [129, 212], "tls_layer_materi": 129, "tls_sheet_approxim": 129, "detach_tls_sheets_from_bodi": 129, "significantli": 129, "improv": [129, 180, 181, 200], "element_class": 130, "ignore_port": [130, 213], "transformation_from_cent": 130, "sim_junction_typ": 130, "deembed": [130, 169], "convent": [130, 174, 181, 196, 200, 205], "port_refpoint": 130, "cross_section_nam": 130, "port_am": 130, "xs1": 131, "xs2": 131, "cpw_length": 132, "n_guid": 132, "guide_face_id": 132, "add_bump": 132, "port_termination_end": 132, "use_edge_port": 132, "etch_whole_opposite_fac": 132, "qubit_cel": 133, "center_x": 133, "center_i": 133, "wn": [133, 196], "en": 133, "sw": [133, 153], "se": [133, 153], "nw": [133, 153], "ne": [133, 153], "enable_flux_lin": 133, "enable_drive_lin": 133, "enable_transmission_lin": 133, "transmit": 133, "66": 134, "junction_induct": 134, "35e": 134, "junction_capacit": 134, "16": [134, 204], "num_cross": 137, "cross_width": 137, "cross_length": 137, "cross_spac": 137, "cross_box_dist": 137, "stripe_width": 141, "stripe_length": [141, 142], "stripe_spac": [141, 142], "min_stripe_width": 142, "stripe_step": 142, "widen": 142, "pads_region": 143, "pad_spacing_x": 143, "pad_spacing_i": 143, "connect_pad": 143, "refpoint_dist": 143, "resembl": 144, "fenc": 144, "profil": [144, 209], "tsv_array_form": 144, "tileoutputreceiv": 146, "tilingprocessor": 146, "brief": [146, 152], "ix": 146, "ii": 146, "tile": 146, "obj": [146, 154], "clip": 146, "layer_info": 146, "rho": 146, "frac": 146, "bbox": 146, "pcell_class": 147, "isinst": 147, "pcell_declar": 147, "coupler_typ": 148, "element_kei": 148, "useless": 148, "latest": [150, 176, 180, 199, 200, 214], "instal": [150, 151, 176, 178, 182, 193, 194, 198, 205, 207, 210, 211, 214, 215, 217, 218], "against": [151, 205], "txt": [151, 179, 180, 201, 211, 214], "upgrad": [151, 179, 180, 201], "stand": [151, 161, 205, 207, 215], "alon": [151, 161, 205, 207, 215], "pip": [151, 179, 180, 201, 210, 211, 214], "sync": [151, 180], "venv": [151, 179, 180], "startup": [151, 157, 180], "button": [152, 186, 207], "prio": 152, "__": 152, "pluginfactori": 152, "flip_fac": 153, "default_probe_typ": 153, "default_probe_suffix": 153, "millimet": 153, "tell": 153, "site": [153, 180, 201], "cell_fil": 153, "dir_nam": 153, "tri": [153, 176], "write_versions_fil": 153, "commit_refer": [153, 211], "git": [153, 173, 178, 179, 180, 199, 205], "revis": [153, 216], "written": [153, 214], "export_machine_vers": 153, "filepath": 153, "maco": [153, 178, 200, 201], "linux": [153, 176, 178, 180, 200, 205, 208, 211, 214], "drc_script": 153, "name_drc_report": 153, "lyrdb": 153, "1t1_waveguide_path": 154, "2b1_waveguide_path": 154, "sum": 154, "children": 154, "objectinstpath": 154, "outward": 154, "whenev": [154, 173, 207], "elimin": [154, 155], "simple_polygon": 154, "polygon_point": 154, "counterclockwis": 154, "283185307179586": 154, "pi": 154, "control_point": 154, "sample_point": 154, "startpoint": 154, "uniformli": 154, "cubic": 154, "subsequ": 154, "slide": 154, "unlik": 154, "bezier": 154, "guarante": [154, 155, 197], "kaihuai": 154, "qin": 154, "proceed": 154, "pacif": 154, "98": 154, "sixth": 154, "confer": 154, "singapor": 154, "1998": 154, "pp": 154, "37": 154, "43": [154, 174], "doi": [154, 172], "1109": 154, "pccga": 154, "731996": 154, "uniform": [154, 213], "prepend": 154, "tangent": 154, "third": [154, 199, 211], "fourth": 154, "convers": 154, "ityp": 154, "dtype": 154, "odd": 154, "divis": 154, "mostli": [154, 188, 196], "waveguide_path": 154, "safe": [154, 180], "guard": 154, "unround": 154, "skipkei": 155, "ensure_ascii": 155, "check_circular": 155, "allow_nan": 155, "jsonencod": 155, "sensibl": 155, "typeerror": 155, "incom": 155, "ascii": 155, "charact": [155, 159, 160, 173], "escap": 155, "prevent": [155, 201], "recursionerror": 155, "nan": 155, "infin": 155, "compliant": 155, "javascript": 155, "decod": 155, "regress": 155, "dai": 155, "basi": [155, 174, 213], "pretti": 155, "newlin": 155, "item_separ": 155, "key_separ": 155, "whitespac": 155, "serializ": 155, "def": [155, 193, 196, 213], "try": [155, 179, 180, 201], "let": [155, 180, 196, 204], "jsondecod": 155, "object_hook": 155, "rpc": 155, "hint": 155, "object_pairs_hook": 155, "prioriti": [155, 183], "parse_float": 155, "num_str": 155, "datatyp": 155, "decim": 155, "parse_int": 155, "parse_const": 155, "invalid": 155, "encount": [155, 176], "strict": [155, 174], "context": [155, 170], "parseabl": 155, "boundbox": 156, "avoid_region": 156, "grid_step": 156, "group_n": 156, "speed": [156, 160, 169, 181, 211], "box_siz": 157, "require_gui_editing_en": 157, "search": [157, 198], "captur": 157, "invers": 157, "treat": [157, 165, 174], "strip": 157, "liter": 157, "namespac": [157, 167], "comma": [157, 161], "multilin": 157, "waveguide_inst": 157, "usabl": 157, "x_corner": 157, "slow": [157, 207, 208], "clumsi": 157, "curat": 157, "node_editor_valid_el": 157, "kept": 157, "file_path": 158, "enum": 159, "origin_offset": 159, "layer_protect": 159, "350": 159, "nearest": 160, "lai": 160, "font_polygon": 160, "cach": 160, "print_waveguides_as_composit": 161, "add_instance_nam": 161, "refpoint_snap": 161, "grid_snap": 161, "include_import": 161, "create_cod": 161, "past": 161, "statement": [161, 194], "node_param": 161, "complet": [161, 177, 180, 197, 204, 211], "flatten": 161, "flush": 162, "ones": [162, 179, 180], "src_path": 162, "memori": [162, 176, 211], "_kqc_librari": 162, "class_nam": 162, "pascalcas": [162, 174], "lowercas": [162, 197], "module_nam": 162, "_to_module_nam": 162, "titl": [162, 172], "qualiti": 162, "lowest_visible_level": 163, "remove_old_handl": 163, "log": [163, 208], "logfil": 163, "monitor": 163, "handler": 163, "root": [163, 176, 181, 205], "logger": 163, "critic": 163, "cell_list": 164, "layer_1": 164, "layer_2": 164, "layer_merg": 164, "only_el": 164, "prune": 164, "contrast": 164, "convert_to_stat": 164, "anywher": [164, 197], "net": 165, "subcircuit": [165, 166], "terminologi": [165, 198, 206], "eda": 165, "resistor": 165, "pin": [165, 180, 186], "wire": [165, 187], "conceptu": 165, "analog": 165, "exactli": [165, 205], "subcircuit_id": [165, 166], "unconnect": 165, "cell_nam": [165, 166], "subcircuit_loc": 165, "_pya_typ": 165, "subcircuit_origin": 165, "breakdown": 165, "regadless": 165, "absolut": [165, 180, 205], "cell_map": 165, "internal_cel": 165, "network": 166, "networkx": [166, 201], "graph": [166, 174, 180, 205], "cell_typ": 166, "instance_nam": [166, 192], "obtain": [166, 213], "with_label": 166, "with_posit": 166, "figsiz": 166, "spring": 166, "matplotlib": 166, "interact": [166, 206], "plot": 166, "param_with_default_valu": 167, "wildcard": 167, "simplic": [167, 174], "grain": 167, "pcellparameterdeclar": 167, "data_typ": 167, "plain": [167, 174, 194], "docstr": [167, 175, 177, 184], "sphinx": [167, 177], "owner": 167, "registr": 168, "happen": 168, "demand": 169, "builder": [169, 213], "ground_refpoint": 169, "port_squid_a": [169, 213], "port_squid_b": [169, 213], "separate_island_internal_port": 169, "commonli": [169, 193], "export_tuned_junct": 170, "class_typ": 170, "parent_nam": 170, "tuned_junction_paramet": 170, "qb1": 170, "testarray_nw": 170, "squid_0": 170, "squid_3": 170, "testarrai": 170, "even": [170, 174, 176, 180, 201, 207], "quick": [170, 204], "jsonabl": 170, "exhaust": 170, "read": [170, 176, 188, 196, 197, 199], "write_path": 170, "layer_str": 170, "visual": [170, 180, 205, 211], "again": [170, 176, 179, 207, 208], "parameter_nam": 170, "parameter_start": 170, "parameter_step": 170, "parameter_end": 170, "swept": 170, "squid_index": 170, "mirror_tran": 171, "project": [172, 174, 181, 200, 209, 211], "public": [172, 173, 176, 181], "citat": 172, "bib": 172, "zenodo": 172, "click": [172, 179, 182, 183, 186, 187, 194, 196, 197, 200, 207, 208, 217], "badg": 172, "cucurachi": 172, "daniel": 172, "da": 172, "soumya": 172, "ranjan": 172, "giri": 172, "rakshyakar": 172, "gusenkova": 172, "daria": 172, "guthri": 172, "andrew": 172, "inel": 172, "sinan": 172, "janzs\u00f3": 172, "d\u00e1vid": 172, "jenei": 172, "m\u00e1t\u00e9": 172, "juliusson": 172, "kristinn": 172, "kotilahti": 172, "jann": 172, "landra": 172, "alessandro": 172, "moretti": 172, "roberto": 172, "myll\u00e4ri": 172, "tuoma": 172, "ockeloen": 172, "korppi": 172, "caspar": 172, "r\u00e4bin\u00e4": 172, "jukka": 172, "savola": [172, 212], "niko": 172, "smirnov": 172, "pavel": 172, "takala": 172, "eeli": 172, "wubben": 172, "leon": 172, "month": 172, "jun": 172, "year": 172, "2021": 172, "publish": [172, 176], "5281": 172, "4944796": 172, "url": 172, "welcom": 173, "commun": [173, 211], "contributor": 173, "licens": [173, 212], "agreement": 173, "websit": [173, 176], "review": 173, "approv": 173, "pr": 173, "forward": [173, 211], "strategi": 173, "histori": 173, "pleas": [173, 179, 180, 181, 202, 203, 211, 212, 213, 214, 218], "organ": [173, 181, 204, 207], "commit": [173, 180], "meaning": [173, 192], "black": [173, 174, 175], "permit": [173, 190], "pep": [173, 174], "440": 173, "scheme": 173, "miniv": 173, "major": 173, "micro": 173, "offici": 173, "releas": [173, 176, 218], "salt": [173, 179, 180, 189, 193, 194, 198, 199, 205], "incompat": 173, "backward": [173, 180], "seriou": 173, "cosmet": 173, "affect": [173, 198, 201, 211], "explain": [174, 175, 179, 188, 193, 207, 214], "diagram": 174, "oval": 174, "concret": 174, "leaf": 174, "green": [174, 207, 213], "natur": 174, "ever": 174, "live": 174, "create_cel": 174, "properli": [174, 179, 181, 197], "variabl": [174, 176, 180, 193, 195, 204, 205, 207, 209, 211, 212], "descriptor": 174, "hierarch": 174, "transpar": 174, "caller": 174, "default_parameter_valu": 174, "technic": [174, 190, 192, 212], "intent": 174, "otherclass": 174, "param_a": 174, "param_b": 174, "myclass": 174, "param_c": 174, "42": 174, "param_d": 174, "41": 174, "syntax": [174, 213], "bit": [174, 186, 192, 200], "revers": 174, "why": [174, 175], "bodi": 174, "kqc_library_nam": 174, "downstream": 174, "discov": 174, "comment": [175, 184, 193, 201, 204, 205, 207], "someth": [175, 211], "feel": 175, "probabl": [175, 201], "rewritten": 175, "clearli": 175, "builtin": 175, "googl": 175, "dockerfil": 176, "addition": [176, 211, 213], "kl_file": 176, "md5": 176, "hash": [176, 180, 205], "kl_hash": 176, "klayout_0": 176, "29": [176, 200], "1_amd64": 176, "deb": 176, "421df42661a3d795b534da5048261044": 176, "ubuntu": [176, 179, 200], "quickli": 176, "m00x": 176, "volum": 176, "pwd": 176, "ghcr": 176, "io": [176, 218], "mount": 176, "run_script": 176, "nc": 176, "rx": [176, 205], "cours": [176, 195], "wd": 176, "older": [176, 180, 186], "hyperv": 176, "backend": 176, "ram": 176, "1gb": 176, "entrypoint": 176, "branch": [176, 194, 197, 207], "pipelin": [176, 181], "pull": [176, 179], "registri": 176, "sylab": 176, "quick_start": 176, "better": [176, 181, 213], "hpc": 176, "tutori": [176, 188, 189, 206, 207], "libexec": 176, "kqclib": [176, 211], "repo": 176, "ora": 176, "pem": 176, "rsa": 176, "encrypt": 176, "successfulli": [176, 179, 180, 217], "singularity_priv": 176, "privat": [176, 181], "now": [176, 186, 194, 196, 207], "create_link": 176, "among": [176, 198], "elmersolver_mpi": 176, "elmergrid": [176, 211], "symbol": [176, 205, 207, 209, 211], "link": [176, 179, 197, 199, 205, 207, 209, 211], "rememb": [176, 179, 185], "bin": [176, 209], "prepar": [176, 211], "klayout_packag": [176, 179, 180, 193, 205, 207, 209, 210, 211, 212, 214, 218], "And": [176, 205], "waveguides_sim_compar": [176, 180, 210, 211], "sure": [176, 179, 180, 181, 182, 187, 192, 194, 197, 207, 209, 214, 218], "ride": 176, "python_execut": [176, 211], "subsystem": 176, "wsl": 176, "problem": [176, 179, 180, 197, 201, 202, 212], "stuck": 176, "workload": [176, 209, 211], "simple_workload_manag": 176, "subfold": [176, 194, 195], "kqc_tmp_path": [176, 180], "waveguides_sim_elm": [176, 211], "affor": 176, "rst": 177, "rebuild": 177, "clean": 177, "apidoc": 177, "sphinxext": 177, "make_pcell_imag": 177, "pcell_imag": 177, "markers_for_png": 177, "x_2": 177, "y_2": 177, "ruler": [177, 218], "illustr": [177, 185, 213], "satisfactori": 177, "x2": 177, "y2": 177, "setup": [178, 187, 197, 198, 199, 204, 207, 209, 210, 215, 217, 218], "prerequisit": 178, "unlink": 178, "secondari": [178, 218], "symlink": 178, "reproduc": 178, "secur": [178, 211, 214], "exclus": 178, "pypi": [178, 205], "cli": 178, "docker": 178, "ci": [178, 180, 181, 205], "singular": [178, 205, 209, 211], "contribut": [178, 198], "come": [179, 196], "pre": [179, 213], "04": [179, 200], "platform": [179, 180, 200, 201], "lt": [179, 200], "clone": [179, 180, 199], "cd": [179, 180, 181], "python3": 179, "setup_within_klayout": [179, 180, 205], "virtualenv": 179, "libpython": 179, "dll": 179, "known": [179, 197, 198, 199], "issu": [179, 197, 198, 199, 200, 202], "downgrad": [179, 197], "ask": 179, "restart": [179, 185, 197, 207, 217], "afterward": [179, 180], "evolv": [179, 196], "realli": [179, 208], "simultan": 179, "kqc_2nd": 179, "know": [179, 180, 201], "klayout_hom": 179, "klayout_alt": 179, "mix": 179, "subsect": 179, "ln": 179, "path_to_kqcircuit": 179, "kqcircuits_script": [179, 205, 207, 208], "kqcircuits_requir": [179, 205], "prompt": [179, 180], "administr": 179, "privileg": 179, "homepath": [179, 200], "mklink": 179, "powershel": 179, "ye": 179, "mayb": 179, "won": [179, 180], "bulk": 179, "win": [179, 180, 205], "mac": [179, 180, 200, 201, 205, 208], "debugg": [180, 206], "autom": [180, 198, 215, 218], "suitabl": [180, 199, 212, 213], "viewer": [180, 214], "compat": [180, 201], "interfer": 180, "yet": [180, 183, 218], "bracket": 180, "trust": 180, "easier": [180, 195], "troubleshoot": 180, "subsitut": 180, "dep": 180, "rewrit": 180, "wipe": 180, "advanc": [180, 187, 189, 207], "categori": 180, "core": [180, 181, 211], "linter": 180, "netlist_as_graph": [180, 201, 205], "publicli": 180, "abl": [180, 207], "upload": 180, "double_pads_sim": [180, 212], "elsewher": [180, 208], "ipynb": [180, 212], "tofu": 180, "rare": [180, 192], "verifi": [180, 200, 208], "legitim": 180, "constraint": 180, "unsaf": 180, "substitut": 180, "tox": 181, "pytest": [181, 205], "pylint": 181, "lint": 181, "ini": 181, "framework": [181, 198, 212, 215], "num": 181, "reflect": 181, "propos": 181, "test_load_librari": 181, "test_invalid_nam": 181, "approach": [181, 197, 211, 213], "u": [181, 196], "our": [181, 193, 194], "understand": [181, 207], "unfortun": 181, "repetit": 181, "consider": 181, "cov": 181, "comprehens": [181, 189], "happi": 181, "failur": 181, "similarli": [181, 213, 214], "bug": [181, 207], "fail": 181, "prior": 181, "wil": 181, "reintroduc": 181, "conftest": 181, "panel": [182, 186, 192], "drag": [182, 183, 186, 187, 190, 194, 207, 217], "press": [182, 186, 187, 194, 197, 207], "f2": [182, 185, 186, 194], "block": [182, 193], "toolbox": [182, 183], "toolbar": [183, 186, 187], "evok": 183, "anim": [183, 184], "bring": [183, 187], "few": [183, 211], "situat": 183, "accid": 183, "export_cells_as_cod": 184, "nearbi": 184, "hardcod": [184, 193], "instruct": [184, 201], "nice": 184, "x_port_a": 184, "x_port_a_corn": 184, "anywai": [184, 196], "navig": [185, 186], "shift": [185, 186, 187, 207, 208], "drop": [185, 186, 194, 217], "unhid": [185, 186], "1t1_ground_grid": 185, "arrang": 185, "minut": 185, "reload": [185, 193, 194, 206], "video": [185, 187], "anyth": 185, "learn": [186, 190, 207], "ok": 186, "chiplibrari": 186, "menu": [186, 194, 197, 204, 207, 216], "still": [186, 201, 208], "mous": 186, "scroll": [186, 218], "littl": 186, "esc": 186, "plan": 186, "fabric": [186, 198, 199], "essenti": [187, 213], "power": 187, "confirm": 187, "del": 187, "flexibl": [187, 213], "highlight": [187, 188], "enter": 187, "introduct": 189, "topic": 189, "intuit": 190, "2nd": 190, "stackup": 190, "span": 190, "indium_bump": 190, "1t1_indium_bump": 190, "2b1_indium_bump": 190, "often": [190, 193, 207], "swap": 190, "tree": 192, "miscellan": [192, 194, 198, 206], "strictli": 192, "aptli": 192, "explan": [192, 193, 209], "wo": 192, "laid": 192, "encompass": 192, "plu": 192, "groud": 192, "formula": 192, "simplecross": 193, "hold": 193, "len1": 193, "len2": 193, "cross_poli": 193, "simple_cross": 193, "scratch": 193, "especi": 193, "my_packag": [193, 194], "newchip1": [193, 196], "samplehold": [193, 204], "default_samplehold": [193, 204], "half_width": 193, "cross_cel": 193, "new_chip1": 193, "f5": [194, 197, 207, 208], "my": 194, "my_el": 194, "myelement": [194, 195], "underscor": [194, 197, 205], "capit": 194, "ctrl": 194, "canva": 194, "discuss": [195, 202], "myelement2": 195, "multilay": 195, "myqubit": 195, "my_qubit": 195, "hide": 195, "follw": 195, "refpoint_nam": 196, "cap_refpoint": 196, "wn_port": 196, "wn_port_corn": 196, "port_b_corn": 196, "perhap": 196, "someel": 196, "refpoint_of_some_el": 196, "existing_ref": 196, "hard": 196, "port_name_corn": 196, "something_port": 196, "something_port_corn": 196, "wherev": 196, "easiest": [197, 205], "migrat": 197, "uninstal": 197, "recent": 197, "safest": 197, "quirk": 197, "broken": 197, "reinstal": 197, "earlier": 197, "reloc": 197, "behind": 197, "tqdm": 197, "reduc": [198, 212], "effort": 198, "processor": 198, "instantli": 198, "exchang": 198, "qpu": 198, "assembl": 198, "trademark": 198, "page": [198, 205, 218], "simplest": [199, 213], "instant": 199, "rather": 199, "codebas": 199, "simulation_script": 199, "parti": 199, "mask_script": 199, "yourself": 200, "homebrew": 200, "brew": 200, "cask": 200, "becaus": [200, 207, 208], "app": 200, "finder": 200, "bugfix": 200, "stabil": 200, "27": [200, 201], "17": 200, "microsoft": 200, "server": 200, "2022": 200, "talk": 200, "mental": 200, "appdata": [200, 210], "klayout_app": 200, "st": 201, "dynam": [201, 213], "sonoma": 201, "higher": 201, "heavyweight": 201, "hw": 201, "proce": 201, "bigsur": 201, "setuptool": 201, "_distutils_hack": 201, "v52": 201, "v57": 201, "sometim": [201, 207], "dir": 201, "binari": [201, 210], "__path__": 201, "queri": 201, "sy": 201, "version_info": 201, "x86_64": 201, "modern": 201, "macbook": 201, "henc": [201, 214], "numpi": 201, "scipi": 201, "macosx_10_9_x86_64": 201, "fetch": 201, "macosx_10_9_arm64": 201, "notic": [201, 208], "question": 202, "idea": 202, "polici": 203, "rf16": 204, "12000": 204, "layer_config_path": 204, "simpler": 204, "x_base_metal_gap_wo_grid": 204, "x_ground_grid_avoid": 204, "133": 204, "x_port": 204, "154": 204, "x_new_lay": 204, "999": 204, "new_lay": 204, "although": 204, "newli": 204, "default_layer_prop": 204, "mainli": [205, 213], "high": [205, 218], "pictur": 205, "console_script": 205, "camelcas": 205, "adher": 205, "rubi": 205, "librair": 205, "variou": 205, "check_layer_prop": 205, "create_element_from_path": 205, "gdiff": 205, "get_klayout_python_info": 205, "oas2dxf": 205, "dxf": 205, "rm": 205, "rd": 205, "element_path": 205, "incorpor": 205, "pycharm": 205, "studio": 205, "vim": 205, "neovim": 205, "demo_placing_a_pcel": 207, "icon": 207, "plai": 207, "exclam": 207, "task": [207, 211, 217], "toggl": 207, "breakpoint": 207, "red": 207, "f9": 207, "stage": 207, "pop": 207, "cancel": 207, "asterisk": 207, "caught": 207, "unrespons": 207, "heavi": 207, "though": 207, "demo_pya_bas": 207, "test_wgc_airbridg": 207, "photomask": 208, "product": 208, "effici": [208, 211], "observ": 208, "multiprocess": 208, "test_mask": 208, "de1": 208, "roughli": 208, "logging_setup": 208, "spcifi": 208, "de2": 208, "5700": 208, "dt1": 208, "qf1": 208, "my_chip": 208, "mcf": 208, "proper": 208, "complic": [208, 211, 217], "mdemo": 208, "ch2": 208, "45000": 208, "30000": 208, "ch1": 208, "sx1": 208, "jt1": 208, "ac1": 208, "st1": 208, "jt2": 208, "65000": 208, "interest": 208, "fragment": 208, "fragmet": 208, "centerd": 208, "exploit": 208, "slurm": [209, 211], "password": 209, "openmpi": 209, "install_softwar": 209, "mpi": [209, 211], "machin": [209, 211], "send": 209, "singularity_path": 209, "bash": 209, "sbatch_paramet": [209, 211], "kqc_remote_account": [209, 211], "sim_1": 209, "sim_2": 209, "sim_n": 209, "job": 209, "sim_i_tmp_fold": 209, "nohup_runid": 209, "runid": 209, "watch": 209, "cat": 209, "shell": [210, 211], "liner": 210, "initialis": 210, "admin": 210, "priviledg": 210, "elmer_help": 211, "gmsh_helper": 211, "sif": 211, "capacitancematrix": 211, "electric_potenti": 211, "pvsm": 211, "waveguides_n_guides_1": 211, "waveguides_n_guides_2": 211, "n_worker": 211, "elmer_n_process": 211, "thread": 211, "openmp": 211, "elmer_n_thread": 211, "benefici": 211, "relationship": 211, "independentprocess": 211, "parallelizationsecond": 211, "ofparallel": 211, "worker": 211, "floor": 211, "run_gmsh_gui": 211, "run_elmergrid": 211, "run_elm": 211, "run_paraview": 211, "omp": 211, "gmsh_n_thread": 211, "bsd": 211, "benefit": 211, "multithread": 211, "sbatch": 211, "max_threads_per_nod": 211, "max": 211, "elmer_mem": 211, "64g": 211, "elmer_tim": 211, "00": 211, "gmsh_mem": 211, "alloc": 211, "gmsh_time": 211, "project_0": 211, "bill": 211, "simulation_mesh": 211, "afterok": 211, "sent": 211, "queue": 211, "elmerfem": [211, 214], "elmercsc": [211, 214], "org": [211, 214], "suffic": 211, "scatter": 212, "snp": 212, "touchston": 212, "s1p": 212, "s2p": 212, "s3p": 212, "forth": 212, "emploi": 212, "export_paramet": [212, 214], "extractor": [212, 215], "consult": [212, 213], "estim": 212, "mutual": 212, "c_i_j": 212, "c_i_i": 212, "lifetim": 212, "eig": 212, "eigenvalu": 212, "_energi": 212, "cv": 212, "export_epr": 212, "post_process_script": 212, "_epr": 212, "csv": 212, "offer": 212, "accuraci": 212, "logic": 212, "cpw_cross_section_sim": 212, "waveguides_sim_xsect": [212, 218], "xmons_direct_coupling_pyepr": 212, "pyepr_exampl": 212, "t_1": 212, "intermediate_processing_command": 212, "t1_estim": 212, "queu": 212, "lossi": 212, "coher": 212, "master": 212, "thesi": 212, "2023": 212, "focus": 213, "distinguish": 213, "snippet": 213, "refp": 213, "mandatori": [213, 214], "100um": 213, "port_2": 213, "port_2_corn": 213, "port_3": 213, "port_3_corn": 213, "multipurpos": 213, "airbridge_flyov": 213, "joint": 213, "parameter": [213, 214], "purpl": 213, "troubl": 213, "port_cplr0": 213, "port_cplr1": 213, "port_cplr2": 213, "revert": 213, "swissmonsimul": 213, "port_cplr0_corn": 213, "port_cplr1_corn": 213, "port_cplr2_corn": 213, "squid_port_squid_a": 213, "squid_port_squid_b": 213, "portion": 213, "variat": 213, "procedur": 213, "eas": 213, "arm_length_500": 213, "gap_sweep": 213, "ansys_execut": 214, "swissmon_simulation_output": 214, "dir_path": 214, "ironpython": 214, "gdsii": 214, "meta": 214, "occurr": 214, "incomplet": 214, "manner": 214, "dev": 214, "abil": 215, "until": 215, "guidanc": 215, "particip": 215, "pyepr": 215, "summari": 216, "parameteriz": 216, "primit": 216, "emb": 216, "onto": 216, "archiv": 216, "traceabl": 216, "thought": 216, "manipul": 217, "interpret": 217, "browser": 217, "low": 218, "7": 218, "newest": 218, "lightweight": 218, "klayoutmatthia": 218, "docintro": 218, "docrefer": 218, "docgrow": 218, "docetch": 218}, "objects": {"": [[1, 0, 0, "-", "kqcircuits"]], "kqcircuits": [[2, 0, 0, "-", "chips"], [27, 0, 0, "-", "defaults"], [28, 0, 0, "-", "elements"], [69, 0, 0, "-", "junctions"], [76, 0, 0, "-", "klayout_view"], [77, 0, 0, "-", "layer_cluster"], [78, 0, 0, "-", "layer_config"], [81, 0, 0, "-", "masks"], [86, 0, 0, "-", "pya_resolver"], [87, 0, 0, "-", "qubits"], [94, 0, 0, "-", "run"], [95, 0, 0, "-", "simulations"], [135, 0, 0, "-", "test_structures"], [145, 0, 0, "-", "util"]], "kqcircuits.chips": [[3, 0, 0, "-", "airbridge_crossings"], [4, 0, 0, "-", "airbridge_dc_test"], [5, 0, 0, "-", "chip"], [6, 0, 0, "-", "crossing_twoface"], [7, 0, 0, "-", "daisy_woven"], [8, 0, 0, "-", "dc_test"], [9, 0, 0, "-", "demo"], [10, 0, 0, "-", "demo_twoface"], [11, 0, 0, "-", "empty"], [12, 0, 0, "-", "junction_test"], [13, 0, 0, "-", "junction_test2"], [14, 0, 0, "-", "launchers"], [15, 0, 0, "-", "lithography_test"], [16, 0, 0, "-", "lithography_test_twoface"], [17, 0, 0, "-", "munch_qubits"], [18, 0, 0, "-", "quality_factor"], [19, 0, 0, "-", "quality_factor_twoface"], [20, 0, 0, "-", "sample_holder_test"], [21, 0, 0, "-", "shaping"], [22, 0, 0, "-", "simple"], [23, 0, 0, "-", "single_xmons"], [24, 0, 0, "-", "stripes"], [25, 0, 0, "-", "tsv_test"], [26, 0, 0, "-", "xmons_direct_coupling"]], "kqcircuits.chips.airbridge_crossings": [[3, 1, 1, "", "AirbridgeCrossings"]], "kqcircuits.chips.airbridge_crossings.AirbridgeCrossings": [[3, 2, 1, "", "build"]], "kqcircuits.chips.airbridge_dc_test": [[4, 1, 1, "", "AirbridgeDcTest"]], "kqcircuits.chips.airbridge_dc_test.AirbridgeDcTest": [[4, 2, 1, "", "build"]], "kqcircuits.chips.chip": [[5, 1, 1, "", "Chip"]], "kqcircuits.chips.chip.Chip": [[5, 3, 1, "", "LIBRARY_DESCRIPTION"], [5, 3, 1, "", "LIBRARY_NAME"], [5, 3, 1, "", "LIBRARY_PATH"], [5, 2, 1, "", "can_create_from_shape_impl"], [5, 2, 1, "", "display_text_impl"], [5, 2, 1, "", "get_box"], [5, 2, 1, "", "get_filter_regions"], [5, 2, 1, "", "get_ground_bump_locations"], [5, 2, 1, "", "get_ground_tsv_locations"], [5, 2, 1, "", "get_launcher_assignments"], [5, 2, 1, "", "insert_filtered_elements"], [5, 2, 1, "", "make_grid_locations"], [5, 2, 1, "", "merge_layout_layers"], [5, 2, 1, "", "merge_layout_layers_on_face"], [5, 2, 1, "", "parameters_from_shape_impl"], [5, 2, 1, "", "post_build"], [5, 2, 1, "", "produce_frame"], [5, 2, 1, "", "produce_ground_grid"], [5, 2, 1, "", "produce_ground_on_face_grid"], [5, 2, 1, "", "produce_junction_tests"], [5, 2, 1, "", "produce_launchers"], [5, 2, 1, "", "produce_n_launchers"], [5, 2, 1, "", "produce_opt_lit_tests"], [5, 2, 1, "", "produce_structures"], [5, 2, 1, "", "transformation_from_shape_impl"]], "kqcircuits.chips.crossing_twoface": [[6, 1, 1, "", "CrossingTwoface"]], "kqcircuits.chips.crossing_twoface.CrossingTwoface": [[6, 2, 1, "", "build"]], "kqcircuits.chips.daisy_woven": [[7, 1, 1, "", "DaisyWoven"]], "kqcircuits.chips.daisy_woven.DaisyWoven": [[7, 2, 1, "", "build"]], "kqcircuits.chips.dc_test": [[8, 1, 1, "", "DcTest"]], "kqcircuits.chips.dc_test.DcTest": [[8, 2, 1, "", "build"]], "kqcircuits.chips.demo": [[9, 1, 1, "", "Demo"]], "kqcircuits.chips.demo.Demo": [[9, 2, 1, "", "build"], [9, 2, 1, "", "produce_control_lines"], [9, 2, 1, "", "produce_coupler"], [9, 2, 1, "", "produce_couplers"], [9, 2, 1, "", "produce_driveline"], [9, 2, 1, "", "produce_fluxline"], [9, 2, 1, "", "produce_junction_tests"], [9, 2, 1, "", "produce_probeline"], [9, 2, 1, "", "produce_probelines"], [9, 2, 1, "", "produce_qubit"], [9, 2, 1, "", "produce_qubits"], [9, 2, 1, "", "produce_readout_structure"], [9, 2, 1, "", "produce_readout_structures"]], "kqcircuits.chips.demo_twoface": [[10, 1, 1, "", "DemoTwoface"]], "kqcircuits.chips.demo_twoface.DemoTwoface": [[10, 2, 1, "", "build"], [10, 2, 1, "", "produce_control_lines"], [10, 2, 1, "", "produce_coupler"], [10, 2, 1, "", "produce_couplers"], [10, 2, 1, "", "produce_driveline"], [10, 2, 1, "", "produce_fluxline"], [10, 2, 1, "", "produce_probeline"], [10, 2, 1, "", "produce_probelines"], [10, 2, 1, "", "produce_qubit"], [10, 2, 1, "", "produce_qubits"], [10, 2, 1, "", "produce_readout_structure"], [10, 2, 1, "", "produce_readout_structures"]], "kqcircuits.chips.empty": [[11, 1, 1, "", "Empty"]], "kqcircuits.chips.empty.Empty": [[11, 2, 1, "", "build"], [11, 2, 1, "", "make_empty_area"]], "kqcircuits.chips.junction_test": [[12, 1, 1, "", "JunctionTest"]], "kqcircuits.chips.junction_test.JunctionTest": [[12, 2, 1, "", "build"]], "kqcircuits.chips.junction_test2": [[13, 1, 1, "", "JunctionTest2"]], "kqcircuits.chips.junction_test2.JunctionTest2": [[13, 2, 1, "", "build"], [13, 2, 1, "", "coerce_parameters_impl"]], "kqcircuits.chips.launchers": [[14, 1, 1, "", "Launchers"]], "kqcircuits.chips.launchers.Launchers": [[14, 2, 1, "", "build"]], "kqcircuits.chips.lithography_test": [[15, 1, 1, "", "LithographyTest"]], "kqcircuits.chips.lithography_test.LithographyTest": [[15, 2, 1, "", "build"], [15, 2, 1, "", "create_pattern"]], "kqcircuits.chips.lithography_test_twoface": [[16, 1, 1, "", "LithographyTestTwoface"]], "kqcircuits.chips.lithography_test_twoface.LithographyTestTwoface": [[16, 2, 1, "", "build"], [16, 2, 1, "", "create_pattern"]], "kqcircuits.chips.munch_qubits": [[17, 1, 1, "", "MunchQubits"]], "kqcircuits.chips.munch_qubits.MunchQubits": [[17, 2, 1, "", "build"], [17, 2, 1, "", "produce_coupler"], [17, 2, 1, "", "produce_drivelines"], [17, 2, 1, "", "produce_probeline"], [17, 2, 1, "", "produce_qubits"], [17, 2, 1, "", "produce_readout_resonators"]], "kqcircuits.chips.quality_factor": [[18, 1, 1, "", "QualityFactor"]], "kqcircuits.chips.quality_factor.QualityFactor": [[18, 2, 1, "", "build"]], "kqcircuits.chips.quality_factor_twoface": [[19, 1, 1, "", "QualityFactorTwoface"]], "kqcircuits.chips.quality_factor_twoface.QualityFactorTwoface": [[19, 2, 1, "", "build"], [19, 2, 1, "", "produce_resonator"]], "kqcircuits.chips.sample_holder_test": [[20, 1, 1, "", "SampleHolderTest"]], "kqcircuits.chips.sample_holder_test.SampleHolderTest": [[20, 2, 1, "", "build"]], "kqcircuits.chips.shaping": [[21, 1, 1, "", "Shaping"]], "kqcircuits.chips.shaping.Shaping": [[21, 2, 1, "", "build"]], "kqcircuits.chips.simple": [[22, 1, 1, "", "Simple"]], "kqcircuits.chips.simple.Simple": [[22, 2, 1, "", "build"]], "kqcircuits.chips.single_xmons": [[23, 1, 1, "", "SingleXmons"]], "kqcircuits.chips.single_xmons.SingleXmons": [[23, 2, 1, "", "build"], [23, 3, 1, "", "launchers"], [23, 3, 1, "", "qubits_refpoints"]], "kqcircuits.chips.stripes": [[24, 1, 1, "", "Stripes"]], "kqcircuits.chips.stripes.Stripes": [[24, 2, 1, "", "build"]], "kqcircuits.chips.tsv_test": [[25, 1, 1, "", "TsvTest"]], "kqcircuits.chips.tsv_test.TsvTest": [[25, 2, 1, "", "build"], [25, 2, 1, "", "create_xsection"]], "kqcircuits.chips.xmons_direct_coupling": [[26, 1, 1, "", "XMonsDirectCoupling"]], "kqcircuits.chips.xmons_direct_coupling.XMonsDirectCoupling": [[26, 2, 1, "", "build"], [26, 2, 1, "", "produce_qubits"], [26, 2, 1, "", "produce_readout_resonator"]], "kqcircuits.elements": [[29, 0, 0, "-", "airbridge_connection"], [30, 0, 0, "-", "airbridges"], [34, 0, 0, "-", "capacitive_x_coupler"], [35, 0, 0, "-", "chip_frame"], [36, 0, 0, "-", "circular_capacitor"], [37, 0, 0, "-", "element"], [38, 0, 0, "-", "finger_capacitor_square"], [39, 0, 0, "-", "finger_capacitor_taper"], [40, 0, 0, "-", "flip_chip_connectors"], [44, 0, 0, "-", "fluxlines"], [48, 0, 0, "-", "hanger_resonator"], [49, 0, 0, "-", "launcher"], [50, 0, 0, "-", "launcher_dc"], [51, 0, 0, "-", "markers"], [55, 0, 0, "-", "meander"], [56, 0, 0, "-", "quarter_wave_cpw_resonator"], [57, 0, 0, "-", "smooth_capacitor"], [58, 0, 0, "-", "spiral_resonator_polygon"], [59, 0, 0, "-", "tsvs"], [63, 0, 0, "-", "waveguide_composite"], [64, 0, 0, "-", "waveguide_coplanar"], [65, 0, 0, "-", "waveguide_coplanar_curved"], [66, 0, 0, "-", "waveguide_coplanar_splitter"], [67, 0, 0, "-", "waveguide_coplanar_straight"], [68, 0, 0, "-", "waveguide_coplanar_taper"]], "kqcircuits.elements.airbridge_connection": [[29, 1, 1, "", "AirbridgeConnection"]], "kqcircuits.elements.airbridge_connection.AirbridgeConnection": [[29, 2, 1, "", "build"]], "kqcircuits.elements.airbridges": [[31, 0, 0, "-", "airbridge"], [32, 0, 0, "-", "airbridge_multi_face"], [33, 0, 0, "-", "airbridge_rectangular"]], "kqcircuits.elements.airbridges.airbridge": [[31, 1, 1, "", "Airbridge"]], "kqcircuits.elements.airbridges.airbridge.Airbridge": [[31, 2, 1, "", "create"], [31, 3, 1, "", "default_type"], [31, 2, 1, "", "transformation_from_shape_impl"]], "kqcircuits.elements.airbridges.airbridge_multi_face": [[32, 1, 1, "", "AirbridgeMultiFace"]], "kqcircuits.elements.airbridges.airbridge_multi_face.AirbridgeMultiFace": [[32, 2, 1, "", "build"], [32, 3, 1, "", "default_type"]], "kqcircuits.elements.airbridges.airbridge_rectangular": [[33, 1, 1, "", "AirbridgeRectangular"]], "kqcircuits.elements.airbridges.airbridge_rectangular.AirbridgeRectangular": [[33, 2, 1, "", "build"], [33, 3, 1, "", "default_type"]], "kqcircuits.elements.capacitive_x_coupler": [[34, 1, 1, "", "CapacitiveXCoupler"]], "kqcircuits.elements.capacitive_x_coupler.CapacitiveXCoupler": [[34, 2, 1, "", "build"], [34, 2, 1, "", "get_sim_ports"]], "kqcircuits.elements.chip_frame": [[35, 1, 1, "", "ChipFrame"]], "kqcircuits.elements.chip_frame.ChipFrame": [[35, 2, 1, "", "build"]], "kqcircuits.elements.circular_capacitor": [[36, 1, 1, "", "CircularCapacitor"]], "kqcircuits.elements.circular_capacitor.CircularCapacitor": [[36, 2, 1, "", "build"], [36, 2, 1, "", "get_sim_ports"]], "kqcircuits.elements.element": [[37, 1, 1, "", "Element"], [37, 4, 1, "", "get_refpoints"], [37, 4, 1, "", "insert_cell_into"], [37, 4, 1, "", "parameter_order_key"], [37, 4, 1, "", "resolve_face"]], "kqcircuits.elements.element.Element": [[37, 3, 1, "", "LIBRARY_DESCRIPTION"], [37, 3, 1, "", "LIBRARY_NAME"], [37, 3, 1, "", "LIBRARY_PATH"], [37, 2, 1, "", "add_element"], [37, 2, 1, "", "add_port"], [37, 2, 1, "", "add_protection"], [37, 2, 1, "", "build"], [37, 2, 1, "", "copy_port"], [37, 2, 1, "", "create"], [37, 2, 1, "", "create_cell_from_shape"], [37, 2, 1, "", "create_subtype"], [37, 2, 1, "", "create_with_refpoints"], [37, 2, 1, "", "display_text_impl"], [37, 2, 1, "", "etch_opposite_face_impl"], [37, 2, 1, "", "face"], [37, 2, 1, "", "face_changer_waveguides"], [37, 2, 1, "", "get_layer"], [37, 2, 1, "", "get_refpoints"], [37, 2, 1, "", "get_schema"], [37, 2, 1, "", "get_sim_ports"], [37, 2, 1, "", "insert_cell"], [37, 2, 1, "", "left_and_right_waveguides"], [37, 2, 1, "", "pcell_params_by_name"], [37, 2, 1, "", "post_build"], [37, 2, 1, "", "produce_impl"], [37, 2, 1, "", "raise_error_on_cell"], [37, 2, 1, "", "sync_parameters"]], "kqcircuits.elements.finger_capacitor_square": [[38, 1, 1, "", "FingerCapacitorSquare"]], "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare": [[38, 2, 1, "", "add_waveguides"], [38, 2, 1, "", "build"], [38, 2, 1, "", "can_create_from_shape_impl"], [38, 2, 1, "", "cut_region"], [38, 2, 1, "", "finger_area_length"], [38, 2, 1, "", "finger_area_width"], [38, 2, 1, "", "get_ground_region"], [38, 2, 1, "", "get_sim_ports"]], "kqcircuits.elements.finger_capacitor_taper": [[39, 1, 1, "", "FingerCapacitorTaper"]], "kqcircuits.elements.finger_capacitor_taper.FingerCapacitorTaper": [[39, 2, 1, "", "build"], [39, 2, 1, "", "can_create_from_shape_impl"]], "kqcircuits.elements.flip_chip_connectors": [[41, 0, 0, "-", "flip_chip_connector"], [42, 0, 0, "-", "flip_chip_connector_dc"], [43, 0, 0, "-", "flip_chip_connector_rf"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector": [[41, 1, 1, "", "FlipChipConnector"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector.FlipChipConnector": [[41, 2, 1, "", "create"], [41, 3, 1, "", "default_type"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc": [[42, 1, 1, "", "FlipChipConnectorDc"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc.FlipChipConnectorDc": [[42, 2, 1, "", "build"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf": [[43, 1, 1, "", "FlipChipConnectorRf"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf.FlipChipConnectorRf": [[43, 2, 1, "", "build"], [43, 2, 1, "", "get_sim_ports"]], "kqcircuits.elements.fluxlines": [[45, 0, 0, "-", "fluxline"], [46, 0, 0, "-", "fluxline_standard"], [47, 0, 0, "-", "fluxline_straight"]], "kqcircuits.elements.fluxlines.fluxline": [[45, 1, 1, "", "Fluxline"]], "kqcircuits.elements.fluxlines.fluxline.Fluxline": [[45, 2, 1, "", "coerce_parameters_impl"], [45, 2, 1, "", "create"], [45, 3, 1, "", "default_type"]], "kqcircuits.elements.fluxlines.fluxline_standard": [[46, 1, 1, "", "FluxlineStandard"]], "kqcircuits.elements.fluxlines.fluxline_standard.FluxlineStandard": [[46, 2, 1, "", "build"]], "kqcircuits.elements.fluxlines.fluxline_straight": [[47, 1, 1, "", "FluxlineStraight"]], "kqcircuits.elements.fluxlines.fluxline_straight.FluxlineStraight": [[47, 2, 1, "", "build"]], "kqcircuits.elements.hanger_resonator": [[48, 1, 1, "", "HangerResonator"]], "kqcircuits.elements.hanger_resonator.HangerResonator": [[48, 2, 1, "", "build"], [48, 2, 1, "", "get_sim_ports"]], "kqcircuits.elements.launcher": [[49, 1, 1, "", "Launcher"]], "kqcircuits.elements.launcher.Launcher": [[49, 2, 1, "", "build"]], "kqcircuits.elements.launcher_dc": [[50, 1, 1, "", "LauncherDC"]], "kqcircuits.elements.launcher_dc.LauncherDC": [[50, 2, 1, "", "build"]], "kqcircuits.elements.markers": [[52, 0, 0, "-", "marker"], [53, 0, 0, "-", "marker_standard"], [54, 0, 0, "-", "mask_marker_fc"]], "kqcircuits.elements.markers.marker": [[52, 1, 1, "", "Marker"]], "kqcircuits.elements.markers.marker.Marker": [[52, 2, 1, "", "create"], [52, 3, 1, "", "default_type"], [52, 2, 1, "", "get_marker_locations"], [52, 2, 1, "", "get_marker_region"], [52, 2, 1, "", "produce_geometry"]], "kqcircuits.elements.markers.marker_standard": [[53, 1, 1, "", "MarkerStandard"]], "kqcircuits.elements.markers.marker_standard.MarkerStandard": [[53, 2, 1, "", "build"]], "kqcircuits.elements.markers.mask_marker_fc": [[54, 1, 1, "", "MaskMarkerFc"]], "kqcircuits.elements.markers.mask_marker_fc.MaskMarkerFc": [[54, 2, 1, "", "build"], [54, 2, 1, "", "create_cross"], [54, 2, 1, "", "get_marker_locations"], [54, 2, 1, "", "get_marker_region"]], "kqcircuits.elements.meander": [[55, 1, 1, "", "Meander"]], "kqcircuits.elements.meander.Meander": [[55, 2, 1, "", "build"], [55, 2, 1, "", "can_create_from_shape_impl"], [55, 2, 1, "", "parameters_from_shape_impl"]], "kqcircuits.elements.quarter_wave_cpw_resonator": [[56, 1, 1, "", "QuarterWaveCpwResonator"]], "kqcircuits.elements.quarter_wave_cpw_resonator.QuarterWaveCpwResonator": [[56, 2, 1, "", "build"], [56, 2, 1, "", "get_sim_ports"]], "kqcircuits.elements.smooth_capacitor": [[57, 1, 1, "", "SmoothCapacitor"]], "kqcircuits.elements.smooth_capacitor.SmoothCapacitor": [[57, 2, 1, "", "build"], [57, 2, 1, "", "can_create_from_shape_impl"], [57, 2, 1, "", "finger_polygon"], [57, 2, 1, "", "get_finger_regions"], [57, 2, 1, "", "get_sim_ports"], [57, 2, 1, "", "insert_wg_joint"], [57, 2, 1, "", "middle_gap_fill"], [57, 2, 1, "", "segment_points"], [57, 2, 1, "", "super_smoothen_region"], [57, 2, 1, "", "t_poly"]], "kqcircuits.elements.spiral_resonator_polygon": [[58, 1, 1, "", "SpiralResonatorPolygon"], [58, 4, 1, "", "rectangular_parameters"]], "kqcircuits.elements.spiral_resonator_polygon.SpiralResonatorPolygon": [[58, 2, 1, "", "build"]], "kqcircuits.elements.tsvs": [[60, 0, 0, "-", "tsv"], [61, 0, 0, "-", "tsv_ellipse"], [62, 0, 0, "-", "tsv_standard"]], "kqcircuits.elements.tsvs.tsv": [[60, 1, 1, "", "Tsv"]], "kqcircuits.elements.tsvs.tsv.Tsv": [[60, 2, 1, "", "create"], [60, 3, 1, "", "default_type"]], "kqcircuits.elements.tsvs.tsv_ellipse": [[61, 1, 1, "", "TsvEllipse"]], "kqcircuits.elements.tsvs.tsv_ellipse.TsvEllipse": [[61, 2, 1, "", "create_tsv_connector"], [61, 2, 1, "", "produce_impl"]], "kqcircuits.elements.tsvs.tsv_standard": [[62, 1, 1, "", "TsvStandard"]], "kqcircuits.elements.tsvs.tsv_standard.TsvStandard": [[62, 2, 1, "", "build"]], "kqcircuits.elements.waveguide_composite": [[63, 1, 1, "", "Node"], [63, 1, 1, "", "WaveguideComposite"], [63, 4, 1, "", "produce_fixed_length_bend"]], "kqcircuits.elements.waveguide_composite.Node": [[63, 3, 1, "", "align"], [63, 3, 1, "", "angle"], [63, 2, 1, "", "deserialize"], [63, 3, 1, "", "element"], [63, 3, 1, "", "inst_name"], [63, 3, 1, "", "length_before"], [63, 3, 1, "", "length_increment"], [63, 3, 1, "", "meander_direction"], [63, 2, 1, "", "nodes_from_string"], [63, 3, 1, "", "position"]], "kqcircuits.elements.waveguide_composite.WaveguideComposite": [[63, 2, 1, "", "build"], [63, 2, 1, "", "check_node_type"], [63, 2, 1, "", "coerce_parameters_impl"], [63, 2, 1, "", "create"], [63, 2, 1, "", "get_segment_cells"], [63, 2, 1, "", "get_segment_lengths"], [63, 2, 1, "", "produce_fixed_length_waveguide"], [63, 2, 1, "", "snap_point"]], "kqcircuits.elements.waveguide_coplanar": [[64, 1, 1, "", "WaveguideCoplanar"]], "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar": [[64, 2, 1, "", "build"], [64, 2, 1, "", "can_create_from_shape_impl"], [64, 2, 1, "", "get_corner_data"], [64, 2, 1, "", "is_continuous"], [64, 2, 1, "", "parameters_from_shape_impl"], [64, 2, 1, "", "produce_end_termination"], [64, 2, 1, "", "produce_waveguide"], [64, 2, 1, "", "transformation_from_shape_impl"]], "kqcircuits.elements.waveguide_coplanar_curved": [[65, 1, 1, "", "WaveguideCoplanarCurved"], [65, 4, 1, "", "arc"]], "kqcircuits.elements.waveguide_coplanar_curved.WaveguideCoplanarCurved": [[65, 2, 1, "", "build"], [65, 2, 1, "", "build_geometry"], [65, 2, 1, "", "coerce_parameters_impl"], [65, 2, 1, "", "create_curve_arcs"], [65, 2, 1, "", "produce_curve_termination"]], "kqcircuits.elements.waveguide_coplanar_splitter": [[66, 1, 1, "", "WaveguideCoplanarSplitter"], [66, 4, 1, "", "t_cross_parameters"]], "kqcircuits.elements.waveguide_coplanar_splitter.WaveguideCoplanarSplitter": [[66, 2, 1, "", "build"]], "kqcircuits.elements.waveguide_coplanar_straight": [[67, 1, 1, "", "WaveguideCoplanarStraight"]], "kqcircuits.elements.waveguide_coplanar_straight.WaveguideCoplanarStraight": [[67, 2, 1, "", "build"], [67, 2, 1, "", "build_geometry"]], "kqcircuits.elements.waveguide_coplanar_taper": [[68, 1, 1, "", "WaveguideCoplanarTaper"]], "kqcircuits.elements.waveguide_coplanar_taper.WaveguideCoplanarTaper": [[68, 2, 1, "", "build"]], "kqcircuits.junctions": [[70, 0, 0, "-", "junction"], [71, 0, 0, "-", "manhattan"], [72, 0, 0, "-", "manhattan_single_junction"], [73, 0, 0, "-", "no_squid"], [74, 0, 0, "-", "sim"], [75, 0, 0, "-", "squid"]], "kqcircuits.junctions.junction": [[70, 1, 1, "", "Junction"]], "kqcircuits.junctions.junction.Junction": [[70, 3, 1, "", "LIBRARY_DESCRIPTION"], [70, 3, 1, "", "LIBRARY_NAME"], [70, 3, 1, "", "LIBRARY_PATH"], [70, 2, 1, "", "coerce_parameters_impl"], [70, 2, 1, "", "create"], [70, 3, 1, "", "default_type"]], "kqcircuits.junctions.manhattan": [[71, 1, 1, "", "Manhattan"]], "kqcircuits.junctions.manhattan.Manhattan": [[71, 2, 1, "", "build"], [71, 2, 1, "", "produce_contact_pads"], [71, 2, 1, "", "produce_manhattan_squid"], [71, 2, 1, "", "produce_tp_large"], [71, 2, 1, "", "produce_tp_small"]], "kqcircuits.junctions.manhattan_single_junction": [[72, 1, 1, "", "ManhattanSingleJunction"]], "kqcircuits.junctions.manhattan_single_junction.ManhattanSingleJunction": [[72, 2, 1, "", "build"], [72, 2, 1, "", "produce_manhattan_junction"]], "kqcircuits.junctions.no_squid": [[73, 1, 1, "", "NoSquid"]], "kqcircuits.junctions.no_squid.NoSquid": [[73, 2, 1, "", "build"]], "kqcircuits.junctions.sim": [[74, 1, 1, "", "Sim"]], "kqcircuits.junctions.sim.Sim": [[74, 2, 1, "", "build"]], "kqcircuits.junctions.squid": [[75, 1, 1, "", "Squid"]], "kqcircuits.klayout_view": [[76, 1, 1, "", "KLayoutView"], [76, 6, 1, "", "MissingUILibraryException"], [76, 4, 1, "", "resolve_default_layer_info"]], "kqcircuits.klayout_view.KLayoutView": [[76, 5, 1, "", "active_cell"], [76, 2, 1, "", "add_default_layers"], [76, 5, 1, "", "cell_view"], [76, 2, 1, "", "clear_layers"], [76, 2, 1, "", "close"], [76, 2, 1, "", "create_top_cell"], [76, 2, 1, "", "export_all_layers_bitmap"], [76, 2, 1, "", "export_layers_bitmaps"], [76, 2, 1, "", "export_pcell_png"], [76, 2, 1, "", "focus"], [76, 2, 1, "", "get_active_cell"], [76, 2, 1, "", "get_active_cell_view"], [76, 2, 1, "", "get_active_layout"], [76, 2, 1, "", "get_pixels"], [76, 2, 1, "", "insert_cell"], [76, 5, 1, "", "layout"], [76, 3, 1, "", "layout_view"], [76, 2, 1, "", "show"], [76, 5, 1, "", "top_cell"]], "kqcircuits.layer_cluster": [[77, 1, 1, "", "LayerCluster"]], "kqcircuits.layer_cluster.LayerCluster": [[77, 2, 1, "", "all_layers"], [77, 3, 1, "", "extra_layers"], [77, 3, 1, "", "face_id"], [77, 3, 1, "", "main_layers"]], "kqcircuits.layer_config": [[79, 0, 0, "-", "default_layer_config"], [80, 0, 0, "-", "example_layer_config"]], "kqcircuits.masks": [[82, 0, 0, "-", "mask_export"], [83, 0, 0, "-", "mask_layout"], [84, 0, 0, "-", "mask_set"], [85, 0, 0, "-", "multi_face_mask_layout"]], "kqcircuits.masks.mask_export": [[82, 4, 1, "", "export_bitmaps"], [82, 4, 1, "", "export_chip"], [82, 4, 1, "", "export_designs"], [82, 4, 1, "", "export_docs"], [82, 4, 1, "", "export_junction_parameters"], [82, 4, 1, "", "export_mask"], [82, 4, 1, "", "export_mask_set"], [82, 4, 1, "", "export_masks_of_face"], [82, 4, 1, "", "get_mask_layout_full_name"]], "kqcircuits.masks.mask_layout": [[83, 1, 1, "", "MaskLayout"]], "kqcircuits.masks.mask_layout.MaskLayout": [[83, 2, 1, "", "add_chips_map"], [83, 3, 1, "", "added_chips"], [83, 3, 1, "", "align_to"], [83, 3, 1, "", "bbox_face_ids"], [83, 2, 1, "", "build"], [83, 3, 1, "", "chip_box_offset"], [83, 3, 1, "", "chip_copies"], [83, 3, 1, "", "chip_size"], [83, 3, 1, "", "chip_trans"], [83, 3, 1, "", "chips_map"], [83, 3, 1, "", "chips_map_legend"], [83, 3, 1, "", "chips_map_offset"], [83, 3, 1, "", "chips_placed_by_position_label"], [83, 3, 1, "", "covered_region_excluded_layers"], [83, 3, 1, "", "dice_width"], [83, 3, 1, "", "edge_clearance"], [83, 3, 1, "", "extra_chips"], [83, 3, 1, "", "extra_id"], [83, 2, 1, "", "face"], [83, 3, 1, "", "face_id"], [83, 2, 1, "", "generate_and_insert_chip_copy_labels"], [83, 2, 1, "", "generate_position_label"], [83, 2, 1, "", "insert_chip_copy_labels"], [83, 2, 1, "", "insert_chips"], [83, 3, 1, "", "layers_to_mask"], [83, 3, 1, "", "layout"], [83, 3, 1, "", "mask_export_density_layers"], [83, 3, 1, "", "mask_export_layers"], [83, 3, 1, "", "mask_marker_offset"], [83, 3, 1, "", "mask_markers_dict"], [83, 3, 1, "", "mask_name_box_margin"], [83, 3, 1, "", "mask_name_offset"], [83, 3, 1, "", "mask_name_scale"], [83, 3, 1, "", "mask_text_scale"], [83, 3, 1, "", "mirror_labels"], [83, 3, 1, "", "name"], [83, 2, 1, "", "position_label_to_two_coordinates"], [83, 3, 1, "", "remove_chips"], [83, 3, 1, "", "submasks"], [83, 3, 1, "", "text_margin"], [83, 3, 1, "", "top_cell"], [83, 2, 1, "", "two_coordinates_to_position_label"], [83, 3, 1, "", "version"], [83, 3, 1, "", "wafer_bottom_flat_length"], [83, 3, 1, "", "wafer_center"], [83, 3, 1, "", "wafer_rad"], [83, 3, 1, "", "wafer_top_flat_length"], [83, 3, 1, "", "with_grid"]], "kqcircuits.masks.mask_set": [[84, 1, 1, "", "MaskSet"]], "kqcircuits.masks.mask_set.MaskSet": [[84, 2, 1, "", "add_chip"], [84, 2, 1, "", "add_mask_layout"], [84, 2, 1, "", "add_multi_face_mask_layout"], [84, 2, 1, "", "build"], [84, 2, 1, "", "chips_map_from_box_map"], [84, 3, 1, "", "chips_map_legend"], [84, 2, 1, "", "export"], [84, 3, 1, "", "export_drc"], [84, 3, 1, "", "export_path"], [84, 3, 1, "", "layout"], [84, 3, 1, "", "mask_export_layers"], [84, 3, 1, "", "mask_layouts"], [84, 3, 1, "", "name"], [84, 3, 1, "", "used_chips"], [84, 3, 1, "", "version"], [84, 3, 1, "", "with_grid"]], "kqcircuits.masks.multi_face_mask_layout": [[85, 1, 1, "", "MultiFaceMaskLayout"]], "kqcircuits.masks.multi_face_mask_layout.MultiFaceMaskLayout": [[85, 2, 1, "", "add_chips_map"], [85, 3, 1, "", "face_ids"], [85, 3, 1, "", "mask_layouts"]], "kqcircuits.pya_resolver": [[86, 4, 1, "", "is_standalone_session"], [86, 4, 1, "", "klayout_executable_command"]], "kqcircuits.qubits": [[88, 0, 0, "-", "circular_transmon_single_island"], [89, 0, 0, "-", "concentric_transmon"], [90, 0, 0, "-", "double_pads"], [91, 0, 0, "-", "double_pads_splines"], [92, 0, 0, "-", "qubit"], [93, 0, 0, "-", "swissmon"]], "kqcircuits.qubits.circular_transmon_single_island": [[88, 1, 1, "", "CircularTransmonSingleIsland"]], "kqcircuits.qubits.circular_transmon_single_island.CircularTransmonSingleIsland": [[88, 2, 1, "", "build"], [88, 2, 1, "", "get_sim_ports"]], "kqcircuits.qubits.concentric_transmon": [[89, 1, 1, "", "ConcentricTransmon"]], "kqcircuits.qubits.concentric_transmon.ConcentricTransmon": [[89, 2, 1, "", "build"], [89, 2, 1, "", "get_sim_ports"]], "kqcircuits.qubits.double_pads": [[90, 1, 1, "", "DoublePads"]], "kqcircuits.qubits.double_pads.DoublePads": [[90, 2, 1, "", "build"], [90, 2, 1, "", "get_sim_ports"]], "kqcircuits.qubits.double_pads_splines": [[91, 1, 1, "", "DoublePadsSplines"]], "kqcircuits.qubits.qubit": [[92, 1, 1, "", "Qubit"]], "kqcircuits.qubits.qubit.Qubit": [[92, 3, 1, "", "LIBRARY_DESCRIPTION"], [92, 3, 1, "", "LIBRARY_NAME"], [92, 3, 1, "", "LIBRARY_PATH"], [92, 2, 1, "", "coerce_parameters_impl"], [92, 2, 1, "", "produce_fluxline"], [92, 2, 1, "", "produce_squid"]], "kqcircuits.qubits.swissmon": [[93, 1, 1, "", "Swissmon"]], "kqcircuits.qubits.swissmon.Swissmon": [[93, 2, 1, "", "build"], [93, 2, 1, "", "get_sim_ports"]], "kqcircuits.run": [[94, 4, 1, "", "argument_parser"], [94, 4, 1, "", "run"], [94, 4, 1, "", "run_kqc"]], "kqcircuits.simulations": [[96, 0, 0, "-", "airbridges_sim"], [97, 0, 0, "-", "cross_section_simulation"], [98, 0, 0, "-", "empty_simulation"], [106, 0, 0, "-", "export"], [126, 0, 0, "-", "partition_region"], [127, 0, 0, "-", "port"], [128, 0, 0, "-", "post_process"], [129, 0, 0, "-", "simulation"], [130, 0, 0, "-", "single_element_simulation"], [131, 0, 0, "-", "single_xmons_full_chip_sim"], [132, 0, 0, "-", "waveguides_sim"], [133, 0, 0, "-", "xmons_direct_coupling_full_chip_sim"], [134, 0, 0, "-", "xmons_direct_coupling_sim"]], "kqcircuits.simulations.airbridges_sim": [[96, 1, 1, "", "AirbridgesSim"]], "kqcircuits.simulations.airbridges_sim.AirbridgesSim": [[96, 2, 1, "", "build"]], "kqcircuits.simulations.cross_section_simulation": [[97, 1, 1, "", "CrossSectionSimulation"]], "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation": [[97, 3, 1, "", "LIBRARY_NAME"], [97, 2, 1, "", "build"], [97, 2, 1, "", "get_dict_by_layers"], [97, 2, 1, "", "get_layers"], [97, 2, 1, "", "get_parameters"], [97, 2, 1, "", "get_schema"], [97, 2, 1, "", "get_sim_layer"], [97, 2, 1, "", "get_simulation_data"], [97, 2, 1, "", "process_layers"], [97, 2, 1, "", "register_cell_layers_as_sim_layers"], [97, 2, 1, "", "set_permittivity"]], "kqcircuits.simulations.empty_simulation": [[98, 1, 1, "", "EmptySimulation"]], "kqcircuits.simulations.empty_simulation.EmptySimulation": [[98, 2, 1, "", "build"]], "kqcircuits.simulations.epr": [[100, 0, 0, "-", "circular_capacitor"], [101, 0, 0, "-", "example"], [102, 0, 0, "-", "gui_config"], [103, 0, 0, "-", "smooth_capacitor"], [104, 0, 0, "-", "swissmon"], [105, 0, 0, "-", "utils"]], "kqcircuits.simulations.epr.circular_capacitor": [[100, 4, 1, "", "correction_cuts"], [100, 4, 1, "", "extract_circular_capacitor_from"], [100, 4, 1, "", "partition_regions"]], "kqcircuits.simulations.epr.example": [[101, 4, 1, "", "correction_cuts"], [101, 4, 1, "", "extract_from"], [101, 4, 1, "", "partition_regions"]], "kqcircuits.simulations.epr.smooth_capacitor": [[103, 4, 1, "", "correction_cuts"], [103, 4, 1, "", "partition_regions"]], "kqcircuits.simulations.epr.swissmon": [[104, 4, 1, "", "correction_cuts"], [104, 4, 1, "", "extract_swissmon_from"], [104, 4, 1, "", "partition_regions"]], "kqcircuits.simulations.epr.utils": [[105, 4, 1, "", "extract_child_simulation"], [105, 4, 1, "", "in_gui"]], "kqcircuits.simulations.export": [[107, 0, 0, "-", "ansys"], [110, 0, 0, "-", "elmer"], [113, 0, 0, "-", "export_and_run"], [114, 0, 0, "-", "export_singularity"], [115, 0, 0, "-", "remote_export_and_run"], [116, 0, 0, "-", "simulation_export"], [117, 0, 0, "-", "simulation_validate"], [118, 0, 0, "-", "solution"], [119, 0, 0, "-", "sonnet"], [122, 0, 0, "-", "util"], [123, 0, 0, "-", "xsection"]], "kqcircuits.simulations.export.ansys": [[108, 0, 0, "-", "ansys_export"], [109, 0, 0, "-", "ansys_solution"]], "kqcircuits.simulations.export.ansys.ansys_export": [[108, 4, 1, "", "export_ansys"], [108, 4, 1, "", "export_ansys_bat"], [108, 4, 1, "", "export_ansys_json"]], "kqcircuits.simulations.export.ansys.ansys_solution": [[109, 1, 1, "", "AnsysCrossSectionSolution"], [109, 1, 1, "", "AnsysCurrentSolution"], [109, 1, 1, "", "AnsysEigenmodeSolution"], [109, 1, 1, "", "AnsysHfssSolution"], [109, 1, 1, "", "AnsysQ3dSolution"], [109, 1, 1, "", "AnsysSolution"], [109, 1, 1, "", "AnsysVoltageSolution"], [109, 4, 1, "", "get_ansys_solution"]], "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCrossSectionSolution": [[109, 3, 1, "", "ansys_tool"], [109, 3, 1, "", "frequency"], [109, 2, 1, "", "get_solution_data"], [109, 3, 1, "", "integrate_energies"], [109, 3, 1, "", "percent_error"]], "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCurrentSolution": [[109, 3, 1, "", "ansys_tool"], [109, 3, 1, "", "frequency"], [109, 2, 1, "", "get_solution_data"], [109, 3, 1, "", "integrate_energies"], [109, 3, 1, "", "integrate_magnetic_flux"], [109, 3, 1, "", "max_delta_e"]], "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution": [[109, 3, 1, "", "ansys_tool"], [109, 2, 1, "", "get_solution_data"], [109, 3, 1, "", "integrate_energies"], [109, 3, 1, "", "integrate_magnetic_flux"], [109, 3, 1, "", "max_delta_f"], [109, 3, 1, "", "min_frequency"], [109, 3, 1, "", "n_modes"]], "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution": [[109, 3, 1, "", "ansys_tool"], [109, 3, 1, "", "capacitance_export"], [109, 3, 1, "", "frequency"], [109, 2, 1, "", "get_solution_data"], [109, 3, 1, "", "integrate_energies"], [109, 3, 1, "", "integrate_magnetic_flux"], [109, 3, 1, "", "max_delta_s"], [109, 3, 1, "", "sweep_count"], [109, 3, 1, "", "sweep_enabled"], [109, 3, 1, "", "sweep_end"], [109, 3, 1, "", "sweep_start"], [109, 3, 1, "", "sweep_type"]], "kqcircuits.simulations.export.ansys.ansys_solution.AnsysQ3dSolution": [[109, 3, 1, "", "ansys_tool"], [109, 3, 1, "", "frequency"], [109, 2, 1, "", "get_solution_data"], [109, 3, 1, "", "percent_error"]], "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution": [[109, 3, 1, "", "ansys_project_template"], [109, 3, 1, "", "ansys_tool"], [109, 3, 1, "", "frequency_units"], [109, 2, 1, "", "get_solution_data"], [109, 3, 1, "", "maximum_passes"], [109, 3, 1, "", "mesh_size"], [109, 3, 1, "", "minimum_converged_passes"], [109, 3, 1, "", "minimum_passes"], [109, 3, 1, "", "percent_refinement"], [109, 3, 1, "", "simulation_flags"]], "kqcircuits.simulations.export.ansys.ansys_solution.AnsysVoltageSolution": [[109, 3, 1, "", "ansys_tool"], [109, 3, 1, "", "frequency"], [109, 2, 1, "", "get_solution_data"], [109, 3, 1, "", "integrate_energies"], [109, 3, 1, "", "integrate_magnetic_flux"], [109, 3, 1, "", "max_delta_e"]], "kqcircuits.simulations.export.elmer": [[111, 0, 0, "-", "elmer_export"], [112, 0, 0, "-", "elmer_solution"]], "kqcircuits.simulations.export.elmer.elmer_export": [[111, 4, 1, "", "export_elmer"], [111, 4, 1, "", "export_elmer_json"], [111, 4, 1, "", "export_elmer_script"]], "kqcircuits.simulations.export.elmer.elmer_solution": [[112, 1, 1, "", "ElmerCapacitanceSolution"], [112, 1, 1, "", "ElmerCrossSectionSolution"], [112, 1, 1, "", "ElmerEPR3DSolution"], [112, 1, 1, "", "ElmerSolution"], [112, 1, 1, "", "ElmerVectorHelmholtzSolution"], [112, 4, 1, "", "get_elmer_solution"]], "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCapacitanceSolution": [[112, 3, 1, "", "convergence_tolerance"], [112, 3, 1, "", "integrate_energies"], [112, 3, 1, "", "linear_system_method"], [112, 3, 1, "", "linear_system_preconditioning"], [112, 3, 1, "", "max_iterations"], [112, 3, 1, "", "p_element_order"], [112, 3, 1, "", "tool"]], "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution": [[112, 3, 1, "", "boundary_conditions"], [112, 3, 1, "", "convergence_tolerance"], [112, 3, 1, "", "integrate_energies"], [112, 3, 1, "", "linear_system_method"], [112, 3, 1, "", "linear_system_preconditioning"], [112, 3, 1, "", "max_iterations"], [112, 3, 1, "", "p_element_order"], [112, 3, 1, "", "run_inductance_sim"], [112, 3, 1, "", "tool"]], "kqcircuits.simulations.export.elmer.elmer_solution.ElmerEPR3DSolution": [[112, 3, 1, "", "convergence_tolerance"], [112, 3, 1, "", "linear_system_method"], [112, 3, 1, "", "linear_system_preconditioning"], [112, 3, 1, "", "max_iterations"], [112, 3, 1, "", "p_element_order"], [112, 3, 1, "", "sequential_signal_excitation"], [112, 3, 1, "", "tool"]], "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution": [[112, 2, 1, "", "get_solution_data"], [112, 3, 1, "", "is_axisymmetric"], [112, 3, 1, "", "max_error_scale"], [112, 3, 1, "", "max_outlier_fraction"], [112, 3, 1, "", "maximum_passes"], [112, 3, 1, "", "mesh_levels"], [112, 3, 1, "", "mesh_size"], [112, 3, 1, "", "minimum_passes"], [112, 3, 1, "", "percent_error"], [112, 3, 1, "", "tool"], [112, 3, 1, "", "vtu_output"]], "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution": [[112, 3, 1, "", "conductivity"], [112, 3, 1, "", "convergence_tolerance"], [112, 3, 1, "", "frequency"], [112, 3, 1, "", "frequency_batch"], [112, 3, 1, "", "london_penetration_depth"], [112, 3, 1, "", "max_delta_s"], [112, 3, 1, "", "max_iterations"], [112, 3, 1, "", "nested_iteration"], [112, 3, 1, "", "quadratic_approximation"], [112, 3, 1, "", "second_kind_basis"], [112, 3, 1, "", "sweep_type"], [112, 3, 1, "", "tool"], [112, 3, 1, "", "use_av"]], "kqcircuits.simulations.export.export_and_run": [[113, 4, 1, "", "export_and_run"], [113, 4, 1, "", "run_export_script"], [113, 4, 1, "", "run_simulations"]], "kqcircuits.simulations.export.export_singularity": [[114, 4, 1, "", "export_singularity"]], "kqcircuits.simulations.export.remote_export_and_run": [[115, 4, 1, "", "remote_export_and_run"], [115, 4, 1, "", "remote_run_only"]], "kqcircuits.simulations.export.simulation_export": [[116, 4, 1, "", "copy_content_into_directory"], [116, 4, 1, "", "cross_combine"], [116, 4, 1, "", "cross_sweep_simulation"], [116, 4, 1, "", "cross_sweep_solution"], [116, 4, 1, "", "export_simulation_json"], [116, 4, 1, "", "export_simulation_oas"], [116, 4, 1, "", "get_combined_parameters"], [116, 4, 1, "", "get_post_process_command_lines"], [116, 4, 1, "", "sweep_simulation"], [116, 4, 1, "", "sweep_solution"]], "kqcircuits.simulations.export.simulation_validate": [[117, 6, 1, "", "ValidateSimError"], [117, 4, 1, "", "flux_integration_layer_exists_if_needed"], [117, 4, 1, "", "get_port_names"], [117, 4, 1, "", "has_edgeport_when_forbidden"], [117, 4, 1, "", "has_no_ports_when_required"], [117, 4, 1, "", "simulation_and_solution_types_match"], [117, 4, 1, "", "validate_simulation"]], "kqcircuits.simulations.export.solution": [[118, 1, 1, "", "Solution"]], "kqcircuits.simulations.export.solution.Solution": [[118, 2, 1, "", "get_parameters"], [118, 3, 1, "", "name"]], "kqcircuits.simulations.export.sonnet": [[120, 0, 0, "-", "parser"], [121, 0, 0, "-", "sonnet_export"]], "kqcircuits.simulations.export.sonnet.parser": [[120, 4, 1, "", "apply_template"], [120, 4, 1, "", "box"], [120, 4, 1, "", "control"], [120, 4, 1, "", "polygon_head"], [120, 4, 1, "", "polygons"], [120, 4, 1, "", "port"], [120, 4, 1, "", "refplane"], [120, 4, 1, "", "refplanes"], [120, 4, 1, "", "symmetry"], [120, 4, 1, "", "via"]], "kqcircuits.simulations.export.sonnet.sonnet_export": [[121, 4, 1, "", "export_sonnet"], [121, 4, 1, "", "export_sonnet_son"], [121, 4, 1, "", "poly_and_edge_indices"]], "kqcircuits.simulations.export.util": [[122, 4, 1, "", "export_layers"], [122, 4, 1, "", "find_edge_from_point_in_cell"], [122, 4, 1, "", "find_edge_from_point_in_polygons"], [122, 4, 1, "", "get_enclosing_polygon"]], "kqcircuits.simulations.export.xsection": [[124, 0, 0, "-", "epr_correction_export"], [125, 0, 0, "-", "xsection_export"]], "kqcircuits.simulations.export.xsection.epr_correction_export": [[124, 4, 1, "", "get_epr_correction_elmer_solution"], [124, 4, 1, "", "get_epr_correction_simulations"]], "kqcircuits.simulations.export.xsection.xsection_export": [[125, 4, 1, "", "create_xsections_from_simulations"], [125, 4, 1, "", "find_layer_by_name"], [125, 4, 1, "", "free_layer_slots"], [125, 4, 1, "", "separate_signal_layer_shapes"], [125, 4, 1, "", "visualise_xsection_cut_on_original_layout"], [125, 4, 1, "", "xsection_call"]], "kqcircuits.simulations.partition_region": [[126, 1, 1, "", "PartitionRegion"], [126, 4, 1, "", "get_list_of_two"]], "kqcircuits.simulations.partition_region.PartitionRegion": [[126, 2, 1, "", "limit_box"], [126, 2, 1, "", "limit_face"]], "kqcircuits.simulations.port": [[127, 1, 1, "", "EdgePort"], [127, 1, 1, "", "InternalPort"], [127, 1, 1, "", "Port"]], "kqcircuits.simulations.port.InternalPort": [[127, 2, 1, "", "get_etch_polygon"]], "kqcircuits.simulations.port.Port": [[127, 2, 1, "", "as_dict"]], "kqcircuits.simulations.post_process": [[128, 1, 1, "", "PostProcess"]], "kqcircuits.simulations.post_process.PostProcess": [[128, 2, 1, "", "get_command_line"]], "kqcircuits.simulations.simulation": [[129, 1, 1, "", "Simulation"], [129, 4, 1, "", "get_simulation_layer_by_name"], [129, 4, 1, "", "to_1d_list"]], "kqcircuits.simulations.simulation.Simulation": [[129, 3, 1, "", "LIBRARY_NAME"], [129, 2, 1, "", "add_element"], [129, 2, 1, "", "build"], [129, 2, 1, "", "create_simulation_layers"], [129, 2, 1, "", "delete_instances"], [129, 2, 1, "", "etched_line"], [129, 2, 1, "", "face"], [129, 2, 1, "", "face_stack_list_of_lists"], [129, 2, 1, "", "face_z_levels"], [129, 2, 1, "", "from_cell"], [129, 2, 1, "", "get_layer"], [129, 2, 1, "", "get_layers"], [129, 2, 1, "", "get_parameters"], [129, 2, 1, "", "get_partition_regions"], [129, 2, 1, "", "get_port_data"], [129, 2, 1, "", "get_refpoints"], [129, 2, 1, "", "get_schema"], [129, 2, 1, "", "get_simulation_data"], [129, 2, 1, "", "ground_grid_region"], [129, 2, 1, "", "insert_cell"], [129, 2, 1, "", "insert_layer"], [129, 2, 1, "", "insert_layers_between_faces"], [129, 2, 1, "", "insert_stacked_up_layers"], [129, 2, 1, "", "ith_value"], [129, 2, 1, "", "pcell_params_by_name"], [129, 3, 1, "", "ports"], [129, 2, 1, "", "produce_layers"], [129, 2, 1, "", "produce_waveguide_to_port"], [129, 2, 1, "", "region_from_layer"], [129, 2, 1, "", "simplified_region"], [129, 2, 1, "", "visualise_region"]], "kqcircuits.simulations.single_element_simulation": [[130, 4, 1, "", "get_single_element_sim_class"]], "kqcircuits.simulations.single_xmons_full_chip_sim": [[131, 1, 1, "", "SingleXmonsFullChipSim"]], "kqcircuits.simulations.single_xmons_full_chip_sim.SingleXmonsFullChipSim": [[131, 2, 1, "", "build"]], "kqcircuits.simulations.waveguides_sim": [[132, 1, 1, "", "WaveGuidesSim"]], "kqcircuits.simulations.waveguides_sim.WaveGuidesSim": [[132, 2, 1, "", "build"], [132, 2, 1, "", "produce_ground_bumps"], [132, 2, 1, "", "produce_guides"]], "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim": [[133, 1, 1, "", "XMonsDirectCouplingFullChipSim"]], "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim": [[133, 2, 1, "", "build"], [133, 2, 1, "", "produce_launcher"], [133, 2, 1, "", "produce_launchers_SMA8"], [133, 2, 1, "", "produce_qubit"], [133, 2, 1, "", "produce_readout_resonator"], [133, 2, 1, "", "produce_waveguide"]], "kqcircuits.simulations.xmons_direct_coupling_sim": [[134, 1, 1, "", "XMonsDirectCouplingSim"]], "kqcircuits.simulations.xmons_direct_coupling_sim.XMonsDirectCouplingSim": [[134, 2, 1, "", "build"], [134, 2, 1, "", "produce_qubits"]], "kqcircuits.test_structures": [[136, 0, 0, "-", "airbridge_dc"], [137, 0, 0, "-", "cross_test"], [138, 0, 0, "-", "junction_test_pads"], [141, 0, 0, "-", "stripes_test"], [142, 0, 0, "-", "stripes_test_increasing_width"], [143, 0, 0, "-", "test_structure"], [144, 0, 0, "-", "tsv_test_pattern"]], "kqcircuits.test_structures.airbridge_dc": [[136, 1, 1, "", "AirbridgeDC"]], "kqcircuits.test_structures.airbridge_dc.AirbridgeDC": [[136, 2, 1, "", "build"]], "kqcircuits.test_structures.cross_test": [[137, 1, 1, "", "CrossTest"]], "kqcircuits.test_structures.cross_test.CrossTest": [[137, 2, 1, "", "build"]], "kqcircuits.test_structures.junction_test_pads": [[139, 0, 0, "-", "junction_test_pads"], [140, 0, 0, "-", "junction_test_pads_simple"]], "kqcircuits.test_structures.junction_test_pads.junction_test_pads": [[139, 1, 1, "", "JunctionTestPads"]], "kqcircuits.test_structures.junction_test_pads.junction_test_pads.JunctionTestPads": [[139, 2, 1, "", "coerce_parameters_impl"], [139, 2, 1, "", "create"], [139, 3, 1, "", "default_type"], [139, 2, 1, "", "produce_squid"]], "kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple": [[140, 1, 1, "", "JunctionTestPadsSimple"]], "kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple.JunctionTestPadsSimple": [[140, 2, 1, "", "build"]], "kqcircuits.test_structures.stripes_test": [[141, 1, 1, "", "StripesTest"]], "kqcircuits.test_structures.stripes_test.StripesTest": [[141, 2, 1, "", "build"]], "kqcircuits.test_structures.stripes_test_increasing_width": [[142, 1, 1, "", "StripesTestIncreasingWidth"]], "kqcircuits.test_structures.stripes_test_increasing_width.StripesTestIncreasingWidth": [[142, 2, 1, "", "build"]], "kqcircuits.test_structures.test_structure": [[143, 1, 1, "", "TestStructure"]], "kqcircuits.test_structures.test_structure.TestStructure": [[143, 3, 1, "", "LIBRARY_DESCRIPTION"], [143, 3, 1, "", "LIBRARY_NAME"], [143, 3, 1, "", "LIBRARY_PATH"], [143, 2, 1, "", "produce_etched_region"], [143, 2, 1, "", "produce_four_point_pads"], [143, 2, 1, "", "produce_pad"]], "kqcircuits.test_structures.tsv_test_pattern": [[144, 1, 1, "", "TsvTestPattern"]], "kqcircuits.test_structures.tsv_test_pattern.TsvTestPattern": [[144, 2, 1, "", "build"]], "kqcircuits.util": [[146, 0, 0, "-", "area"], [147, 0, 0, "-", "count_instances"], [148, 0, 0, "-", "coupler_lib"], [149, 0, 0, "-", "deep_delete"], [150, 0, 0, "-", "defaults_helper"], [151, 0, 0, "-", "dependencies"], [152, 0, 0, "-", "edit_node_plugin"], [153, 0, 0, "-", "export_helper"], [154, 0, 0, "-", "geometry_helper"], [155, 0, 0, "-", "geometry_json_encoder"], [156, 0, 0, "-", "groundgrid"], [157, 0, 0, "-", "gui_helper"], [158, 0, 0, "-", "import_helper"], [159, 0, 0, "-", "label"], [160, 0, 0, "-", "label_polygons"], [161, 0, 0, "-", "layout_to_code"], [162, 0, 0, "-", "library_helper"], [163, 0, 0, "-", "log_router"], [164, 0, 0, "-", "merge"], [165, 0, 0, "-", "netlist_extraction"], [166, 0, 0, "-", "netlist_graph"], [167, 0, 0, "-", "parameters"], [168, 0, 0, "-", "plugin_startup"], [169, 0, 0, "-", "refpoints"], [170, 0, 0, "-", "replace_junctions"], [171, 0, 0, "-", "symmetric_polygons"]], "kqcircuits.util.area": [[146, 1, 1, "", "AreaReceiver"], [146, 4, 1, "", "get_area_and_density"]], "kqcircuits.util.area.AreaReceiver": [[146, 2, 1, "", "put"]], "kqcircuits.util.count_instances": [[147, 4, 1, "", "count_instances_in_cell"]], "kqcircuits.util.coupler_lib": [[148, 4, 1, "", "cap_params"]], "kqcircuits.util.deep_delete": [[149, 4, 1, "", "deep_delete_all"], [149, 4, 1, "", "deep_delete_pcells"]], "kqcircuits.util.defaults_helper": [[150, 4, 1, "", "find_ansys_executable"]], "kqcircuits.util.dependencies": [[151, 4, 1, "", "install_kqc_gui_dependencies"]], "kqcircuits.util.edit_node_plugin": [[152, 1, 1, "", "EditNodePlugin"], [152, 1, 1, "", "EditNodePluginFactory"]], "kqcircuits.util.edit_node_plugin.EditNodePlugin": [[152, 2, 1, "", "activated"], [152, 2, 1, "", "create_dialog"], [152, 2, 1, "", "deactivated"], [152, 2, 1, "", "deselect"], [152, 2, 1, "", "has_tracking_position"], [152, 2, 1, "", "mouse_click_event"], [152, 2, 1, "", "mouse_moved_event"], [152, 2, 1, "", "select"], [152, 2, 1, "", "tracking_position"], [152, 2, 1, "", "update"], [152, 2, 1, "", "update_form_from_node"], [152, 2, 1, "", "update_node_from_form"]], "kqcircuits.util.edit_node_plugin.EditNodePluginFactory": [[152, 2, 1, "", "create_plugin"]], "kqcircuits.util.export_helper": [[153, 4, 1, "", "create_or_empty_tmp_directory"], [153, 4, 1, "", "export_drc_report"], [153, 4, 1, "", "generate_probepoints_from_file"], [153, 4, 1, "", "generate_probepoints_json"], [153, 4, 1, "", "get_active_or_new_layout"], [153, 4, 1, "", "get_klayout_version"], [153, 4, 1, "", "get_simulation_directory"], [153, 4, 1, "", "open_with_klayout_or_default_application"], [153, 4, 1, "", "write_commit_reference_file"], [153, 4, 1, "", "write_export_machine_versions_file"]], "kqcircuits.util.geometry_helper": [[154, 4, 1, "", "arc_points"], [154, 4, 1, "", "bezier_points"], [154, 4, 1, "", "bspline_points"], [154, 4, 1, "", "circle_polygon"], [154, 4, 1, "", "get_angle"], [154, 4, 1, "", "get_cell_path_length"], [154, 4, 1, "", "get_direction"], [154, 4, 1, "", "get_object_path_length"], [154, 4, 1, "", "is_clockwise"], [154, 4, 1, "", "merge_points_and_match_on_edges"], [154, 4, 1, "", "point_shift_along_vector"], [154, 4, 1, "", "region_with_merged_points"], [154, 4, 1, "", "region_with_merged_polygons"], [154, 4, 1, "", "round_dpath_width"], [154, 4, 1, "", "simple_region"], [154, 4, 1, "", "vector_length_and_direction"]], "kqcircuits.util.geometry_json_encoder": [[155, 1, 1, "", "GeometryJsonDecoder"], [155, 1, 1, "", "GeometryJsonEncoder"], [155, 4, 1, "", "decode_dict_as_python_obj"], [155, 4, 1, "", "encode_python_obj_as_dict"]], "kqcircuits.util.geometry_json_encoder.GeometryJsonEncoder": [[155, 2, 1, "", "default"]], "kqcircuits.util.groundgrid": [[156, 4, 1, "", "make_grid"]], "kqcircuits.util.gui_helper": [[157, 4, 1, "", "get_all_node_elements"], [157, 4, 1, "", "get_nodes_near_position"], [157, 4, 1, "", "get_valid_node_elements"], [157, 4, 1, "", "node_from_text"], [157, 4, 1, "", "node_to_text"], [157, 4, 1, "", "replace_node"]], "kqcircuits.util.import_helper": [[158, 4, 1, "", "module_from_file"]], "kqcircuits.util.label": [[159, 1, 1, "", "LabelOrigin"], [159, 4, 1, "", "produce_label"]], "kqcircuits.util.label.LabelOrigin": [[159, 3, 1, "", "BOTTOMLEFT"], [159, 3, 1, "", "BOTTOMRIGHT"], [159, 3, 1, "", "TOPLEFT"], [159, 3, 1, "", "TOPRIGHT"]], "kqcircuits.util.label_polygons": [[160, 4, 1, "", "get_text_polygon"], [160, 4, 1, "", "load_font_polygons"]], "kqcircuits.util.layout_to_code": [[161, 4, 1, "", "convert_cells_to_code"], [161, 4, 1, "", "extract_pcell_data_from_views"], [161, 4, 1, "", "get_node_params"], [161, 4, 1, "", "restore_pcells_to_views"]], "kqcircuits.util.library_helper": [[162, 4, 1, "", "delete_all_libraries"], [162, 4, 1, "", "delete_library"], [162, 4, 1, "", "element_by_class_name"], [162, 4, 1, "", "get_library_paths"], [162, 4, 1, "", "load_libraries"], [162, 4, 1, "", "to_library_name"], [162, 4, 1, "", "to_module_name"]], "kqcircuits.util.log_router": [[163, 4, 1, "", "route_log"]], "kqcircuits.util.merge": [[164, 4, 1, "", "convert_child_instances_to_static"], [164, 4, 1, "", "merge_layers"], [164, 4, 1, "", "merge_layout_layers_on_face"]], "kqcircuits.util.netlist_extraction": [[165, 4, 1, "", "export_cell_netlist"], [165, 4, 1, "", "extract_circuits"], [165, 4, 1, "", "extract_nets"]], "kqcircuits.util.netlist_graph": [[166, 4, 1, "", "draw_graph"], [166, 4, 1, "", "network_as_graph"]], "kqcircuits.util.parameters": [[167, 1, 1, "", "Param"], [167, 4, 1, "", "add_parameter"], [167, 4, 1, "", "add_parameters_from"], [167, 1, 1, "", "pdt"]], "kqcircuits.util.parameters.Param": [[167, 2, 1, "", "get_all"]], "kqcircuits.util.parameters.pdt": [[167, 3, 1, "", "TypeBoolean"], [167, 3, 1, "", "TypeDouble"], [167, 3, 1, "", "TypeInt"], [167, 3, 1, "", "TypeLayer"], [167, 3, 1, "", "TypeList"], [167, 3, 1, "", "TypeNone"], [167, 3, 1, "", "TypeShape"], [167, 3, 1, "", "TypeString"]], "kqcircuits.util.plugin_startup": [[168, 4, 1, "", "register_plugins"]], "kqcircuits.util.refpoints": [[169, 1, 1, "", "JunctionSimPort"], [169, 1, 1, "", "RefpointToEdgePort"], [169, 1, 1, "", "RefpointToInternalPort"], [169, 1, 1, "", "RefpointToSimPort"], [169, 1, 1, "", "Refpoints"], [169, 1, 1, "", "WaveguideToSimPort"]], "kqcircuits.util.refpoints.JunctionSimPort": [[169, 3, 1, "", "face"], [169, 3, 1, "", "floating"], [169, 3, 1, "", "other_refpoint"], [169, 3, 1, "", "refpoint"]], "kqcircuits.util.refpoints.RefpointToSimPort": [[169, 3, 1, "", "face"], [169, 3, 1, "", "refpoint"]], "kqcircuits.util.refpoints.Refpoints": [[169, 3, 1, "", "cell"], [169, 2, 1, "", "dict"], [169, 2, 1, "", "items"], [169, 2, 1, "", "keys"], [169, 3, 1, "", "layer"], [169, 3, 1, "", "rec_levels"], [169, 3, 1, "", "trans"], [169, 2, 1, "", "values"]], "kqcircuits.util.refpoints.WaveguideToSimPort": [[169, 3, 1, "", "a"], [169, 3, 1, "", "airbridge"], [169, 3, 1, "", "b"], [169, 3, 1, "", "deembed_cross_section"], [169, 3, 1, "", "face"], [169, 3, 1, "", "over_etching"], [169, 3, 1, "", "refpoint"], [169, 3, 1, "", "side"], [169, 3, 1, "", "term1"], [169, 3, 1, "", "towards"], [169, 3, 1, "", "turn_radius"], [169, 3, 1, "", "use_internal_ports"], [169, 3, 1, "", "waveguide_length"]], "kqcircuits.util.replace_junctions": [[170, 1, 1, "", "JunctionEntry"], [170, 4, 1, "", "check_static_cell_has_junctions"], [170, 4, 1, "", "convert_cells_to_static"], [170, 4, 1, "", "copy_one_layer_of_cell"], [170, 4, 1, "", "extract_junctions"], [170, 4, 1, "", "get_tuned_junction_json"], [170, 4, 1, "", "place_junctions"], [170, 4, 1, "", "replace_squid"], [170, 4, 1, "", "replace_squids"]], "kqcircuits.util.symmetric_polygons": [[171, 4, 1, "", "polygon_with_hsym"], [171, 4, 1, "", "polygon_with_sym"], [171, 4, 1, "", "polygon_with_vsym"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function", "5": "py:property", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"about": 0, "api": 1, "document": [1, 177, 198], "modul": [1, 2, 28, 30, 40, 44, 51, 59, 69, 78, 81, 87, 95, 106, 107, 110, 119, 123, 135, 138, 145, 180], "content": [1, 2, 28, 30, 40, 44, 51, 59, 69, 78, 81, 87, 95, 106, 107, 110, 119, 123, 135, 138, 145], "kqcircuit": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 180, 185, 192, 197], "chip": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 186, 193, 194, 205, 208], "airbridge_cross": 3, "airbridge_dc_test": 4, "crossing_twofac": 6, "daisy_woven": 7, "dc_test": 8, "demo": [9, 186], "demo_twofac": 10, "empti": 11, "junction_test": 12, "junction_test2": 13, "launcher": [14, 49], "lithography_test": 15, "lithography_test_twofac": 16, "munch_qubit": 17, "quality_factor": 18, "quality_factor_twofac": 19, "sample_holder_test": 20, "shape": [21, 186, 190], "simpl": 22, "single_xmon": 23, "stripe": 24, "tsv_test": 25, "xmons_direct_coupl": 26, "default": 27, "element": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 174, 182, 183, 184, 186, 190, 193, 194, 195, 205, 213], "airbridge_connect": 29, "airbridg": [30, 31, 32, 33], "airbridge_multi_fac": 32, "airbridge_rectangular": 33, "capacitive_x_coupl": 34, "chip_fram": 35, "circular_capacitor": [36, 100], "finger_capacitor_squar": 38, "finger_capacitor_tap": 39, "flip_chip_connector": [40, 41, 42, 43], "flip_chip_connector_dc": 42, "flip_chip_connector_rf": 43, "fluxlin": [44, 45, 46, 47], "fluxline_standard": 46, "fluxline_straight": 47, "hanger_reson": 48, "launcher_dc": 50, "marker": [51, 52, 53, 54], "marker_standard": 53, "mask_marker_fc": 54, "meander": 55, "quarter_wave_cpw_reson": 56, "smooth_capacitor": [57, 103], "spiral_resonator_polygon": 58, "tsv": [59, 60, 61, 62], "tsv_ellips": 61, "tsv_standard": 62, "waveguide_composit": 63, "waveguide_coplanar": 64, "waveguide_coplanar_curv": 65, "waveguide_coplanar_splitt": 66, "waveguide_coplanar_straight": 67, "waveguide_coplanar_tap": 68, "junction": [69, 70, 71, 72, 73, 74, 75], "manhattan": 71, "manhattan_single_junct": 72, "no_squid": 73, "sim": 74, "squid": 75, "klayout_view": 76, "layer_clust": 77, "layer_config": [78, 79, 80], "default_layer_config": 79, "example_layer_config": 80, "mask": [81, 82, 83, 84, 85, 208], "mask_export": 82, "mask_layout": 83, "mask_set": 84, "multi_face_mask_layout": 85, "pya_resolv": 86, "qubit": [87, 88, 89, 90, 91, 92, 93], "circular_transmon_single_island": 88, "concentric_transmon": 89, "double_pad": 90, "double_pads_splin": 91, "swissmon": [93, 104], "run": [94, 207, 210], "simul": [95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 209, 212, 213, 215], "airbridges_sim": 96, "cross_section_simul": 97, "empty_simul": 98, "epr": [99, 100, 101, 102, 103, 104, 105], "exampl": [101, 193, 207], "gui_config": 102, "util": [105, 122, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 205], "export": [106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 208, 210, 211, 214], "ansi": [107, 108, 109, 214], "ansys_export": 108, "ansys_solut": 109, "elmer": [110, 111, 112, 209, 211, 214], "elmer_export": 111, "elmer_solut": 112, "export_and_run": 113, "export_singular": 114, "remote_export_and_run": 115, "simulation_export": 116, "simulation_valid": 117, "solut": 118, "sonnet": [119, 120, 121, 214], "parser": 120, "sonnet_export": 121, "xsection": [123, 124, 125, 218], "epr_correction_export": 124, "xsection_export": 125, "partition_region": 126, "port": [127, 196, 213], "post_process": 128, "single_element_simul": 130, "single_xmons_full_chip_sim": 131, "waveguides_sim": 132, "xmons_direct_coupling_full_chip_sim": 133, "xmons_direct_coupling_sim": 134, "test_structur": [135, 136, 137, 138, 139, 140, 141, 142, 143, 144], "airbridge_dc": 136, "cross_test": 137, "junction_test_pad": [138, 139, 140], "junction_test_pads_simpl": 140, "stripes_test": 141, "stripes_test_increasing_width": 142, "tsv_test_pattern": 144, "area": 146, "count_inst": 147, "coupler_lib": 148, "deep_delet": 149, "defaults_help": 150, "depend": [151, 179, 180], "edit_node_plugin": 152, "export_help": 153, "geometry_help": 154, "geometry_json_encod": 155, "groundgrid": 156, "gui_help": 157, "import_help": 158, "label": 159, "label_polygon": 160, "layout_to_cod": 161, "library_help": 162, "log_rout": 163, "merg": 164, "netlist_extract": 165, "netlist_graph": 166, "paramet": [167, 174, 183, 186, 195, 212], "plugin_startup": 168, "refpoint": [169, 196], "replace_junct": 170, "symmetric_polygon": 171, "cite": 172, "contribut": 173, "version": [173, 201], "architectur": 174, "pcell": 174, "librari": [174, 195, 207], "pya": 174, "resolv": 174, "code": [175, 184, 195, 218], "style": 175, "contain": 176, "cli": 176, "usag": [176, 180, 217], "docker": 176, "ci": 176, "singular": 176, "develop": [178, 179, 180, 207], "guid": [178, 206], "gui": [179, 184, 188, 214, 218], "setup": [179, 180], "prerequisit": [179, 180], "python": [179, 180, 191, 201], "sourc": 179, "instal": [179, 180, 197, 199, 200, 201], "unlink": 179, "updat": [179, 180], "secondari": 179, "manual": [179, 186, 201], "symlink": 179, "linux": 179, "maco": 179, "window": 179, "standalon": 180, "1": 180, "basic": [180, 208], "2": 180, "reproduc": 180, "secur": 180, "3": 180, "exclus": 180, "environ": 180, "extens": 180, "pypi": 180, "jupyt": 180, "notebook": 180, "requir": 180, "test": 181, "unit": 181, "first": [182, 207], "look": 182, "around": 182, "introduct": 182, "place": [183, 184, 190], "modifi": [183, 186, 187, 208], "convert": [184, 186], "us": [185, 187, 190, 196, 207], "command": 185, "hotkei": 185, "menu": 185, "workflow": [186, 191, 209], "tutori": [186, 208], "gener": [186, 205, 213], "cell": 186, "static": 186, "chang": 186, "waveguid": [186, 187], "locat": 186, "an": [186, 193, 205], "add": 186, "new": [186, 204, 207], "ad": [186, 204, 208], "ground": [186, 208], "grid": [186, 208], "edit": 187, "waveguidecomposit": 187, "node": 187, "featur": [188, 212], "get": [189, 194], "start": [189, 194], "face": [190, 204, 208, 213], "creat": [190, 207, 218], "layer": [192, 204], "detail": 193, "defin": [193, 194], "insert": 193, "custom": [194, 204], "structur": [195, 205], "class": [195, 213], "build": 195, "salt": 197, "packag": [197, 201], "set": 197, "up": 197, "user": [197, 206], "directori": 197, "upgrad": 197, "remov": 197, "releas": 197, "note": 197, "kqc": [198, 218], "logo": 198, "indic": 198, "tabl": 198, "klayout": [200, 201, 207, 214, 218], "known": 201, "issu": 201, "differ": 201, "support": 202, "trademark": 203, "configur": 204, "sampl": 204, "holder": 204, "file": [204, 205, 218], "miscellan": 205, "system": 205, "hierarchi": 205, "open": 205, "from": [205, 214], "id": 205, "macro": 207, "script": [207, 208], "interact": 207, "applic": 207, "panel": 207, "access": 207, "current": 207, "activ": 207, "klayoutview": 207, "debugg": 207, "reload": 207, "multi": 208, "composit": 208, "map": 208, "remot": 209, "one": 210, "line": 210, "gmsh": 211, "": 212, "matrix": 212, "capacit": 212, "eigenmod": 212, "energi": 212, "integr": 212, "particip": 212, "ratio": 212, "cross": [212, 218], "section": [212, 218], "pyepr": 212, "object": 213, "The": 213, "box": 213, "stack": 213, "subclass": 213, "singl": 213, "geometri": [213, 214], "sweep": 213, "function": 214, "extern": 215, "tool": [215, 218], "terminologi": 216, "imag": 218, "call": 218, "process": 218, "x": 218}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"About": [[0, "about"]], "API documentation": [[1, "api-documentation"]], "Module contents": [[1, "module-kqcircuits"], [2, "module-kqcircuits.chips"], [28, "module-kqcircuits.elements"], [30, "module-kqcircuits.elements.airbridges"], [40, "module-kqcircuits.elements.flip_chip_connectors"], [44, "module-kqcircuits.elements.fluxlines"], [51, "module-kqcircuits.elements.markers"], [59, "module-kqcircuits.elements.tsvs"], [69, "module-kqcircuits.junctions"], [78, "module-kqcircuits.layer_config"], [81, "module-kqcircuits.masks"], [87, "module-kqcircuits.qubits"], [95, "module-kqcircuits.simulations"], [106, "module-kqcircuits.simulations.export"], [107, "module-kqcircuits.simulations.export.ansys"], [110, "module-kqcircuits.simulations.export.elmer"], [119, "module-kqcircuits.simulations.export.sonnet"], [123, "module-kqcircuits.simulations.export.xsection"], [135, "module-kqcircuits.test_structures"], [138, "module-kqcircuits.test_structures.junction_test_pads"], [145, "module-kqcircuits.util"]], "kqcircuits.chips": [[2, "kqcircuits-chips"]], "kqcircuits.chips.airbridge_crossings": [[3, "module-kqcircuits.chips.airbridge_crossings"]], "kqcircuits.chips.airbridge_dc_test": [[4, "module-kqcircuits.chips.airbridge_dc_test"]], "kqcircuits.chips.chip": [[5, "module-kqcircuits.chips.chip"]], "kqcircuits.chips.crossing_twoface": [[6, "module-kqcircuits.chips.crossing_twoface"]], "kqcircuits.chips.daisy_woven": [[7, "module-kqcircuits.chips.daisy_woven"]], "kqcircuits.chips.dc_test": [[8, "module-kqcircuits.chips.dc_test"]], "kqcircuits.chips.demo": [[9, "module-kqcircuits.chips.demo"]], "kqcircuits.chips.demo_twoface": [[10, "module-kqcircuits.chips.demo_twoface"]], "kqcircuits.chips.empty": [[11, "module-kqcircuits.chips.empty"]], "kqcircuits.chips.junction_test": [[12, "module-kqcircuits.chips.junction_test"]], "kqcircuits.chips.junction_test2": [[13, "module-kqcircuits.chips.junction_test2"]], "kqcircuits.chips.launchers": [[14, "module-kqcircuits.chips.launchers"]], "kqcircuits.chips.lithography_test": [[15, "module-kqcircuits.chips.lithography_test"]], "kqcircuits.chips.lithography_test_twoface": [[16, "module-kqcircuits.chips.lithography_test_twoface"]], "kqcircuits.chips.munch_qubits": [[17, "module-kqcircuits.chips.munch_qubits"]], "kqcircuits.chips.quality_factor": [[18, "module-kqcircuits.chips.quality_factor"]], "kqcircuits.chips.quality_factor_twoface": [[19, "module-kqcircuits.chips.quality_factor_twoface"]], "kqcircuits.chips.sample_holder_test": [[20, "module-kqcircuits.chips.sample_holder_test"]], "kqcircuits.chips.shaping": [[21, "module-kqcircuits.chips.shaping"]], "kqcircuits.chips.simple": [[22, "module-kqcircuits.chips.simple"]], "kqcircuits.chips.single_xmons": [[23, "module-kqcircuits.chips.single_xmons"]], "kqcircuits.chips.stripes": [[24, "module-kqcircuits.chips.stripes"]], "kqcircuits.chips.tsv_test": [[25, "module-kqcircuits.chips.tsv_test"]], "kqcircuits.chips.xmons_direct_coupling": [[26, "module-kqcircuits.chips.xmons_direct_coupling"]], "kqcircuits.defaults": [[27, "module-kqcircuits.defaults"]], "kqcircuits.elements": [[28, "kqcircuits-elements"]], "kqcircuits.elements.airbridge_connection": [[29, "module-kqcircuits.elements.airbridge_connection"]], "kqcircuits.elements.airbridges": [[30, "kqcircuits-elements-airbridges"]], "kqcircuits.elements.airbridges.airbridge": [[31, "module-kqcircuits.elements.airbridges.airbridge"]], "kqcircuits.elements.airbridges.airbridge_multi_face": [[32, "module-kqcircuits.elements.airbridges.airbridge_multi_face"]], "kqcircuits.elements.airbridges.airbridge_rectangular": [[33, "module-kqcircuits.elements.airbridges.airbridge_rectangular"]], "kqcircuits.elements.capacitive_x_coupler": [[34, "module-kqcircuits.elements.capacitive_x_coupler"]], "kqcircuits.elements.chip_frame": [[35, "module-kqcircuits.elements.chip_frame"]], "kqcircuits.elements.circular_capacitor": [[36, "module-kqcircuits.elements.circular_capacitor"]], "kqcircuits.elements.element": [[37, "module-kqcircuits.elements.element"]], "kqcircuits.elements.finger_capacitor_square": [[38, "module-kqcircuits.elements.finger_capacitor_square"]], "kqcircuits.elements.finger_capacitor_taper": [[39, "module-kqcircuits.elements.finger_capacitor_taper"]], "kqcircuits.elements.flip_chip_connectors": [[40, "kqcircuits-elements-flip-chip-connectors"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector": [[41, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc": [[42, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf": [[43, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf"]], "kqcircuits.elements.fluxlines": [[44, "kqcircuits-elements-fluxlines"]], "kqcircuits.elements.fluxlines.fluxline": [[45, "module-kqcircuits.elements.fluxlines.fluxline"]], "kqcircuits.elements.fluxlines.fluxline_standard": [[46, "module-kqcircuits.elements.fluxlines.fluxline_standard"]], "kqcircuits.elements.fluxlines.fluxline_straight": [[47, "module-kqcircuits.elements.fluxlines.fluxline_straight"]], "kqcircuits.elements.hanger_resonator": [[48, "module-kqcircuits.elements.hanger_resonator"]], "kqcircuits.elements.launcher": [[49, "module-kqcircuits.elements.launcher"]], "kqcircuits.elements.launcher_dc": [[50, "module-kqcircuits.elements.launcher_dc"]], "kqcircuits.elements.markers": [[51, "kqcircuits-elements-markers"]], "kqcircuits.elements.markers.marker": [[52, "module-kqcircuits.elements.markers.marker"]], "kqcircuits.elements.markers.marker_standard": [[53, "module-kqcircuits.elements.markers.marker_standard"]], "kqcircuits.elements.markers.mask_marker_fc": [[54, "module-kqcircuits.elements.markers.mask_marker_fc"]], "kqcircuits.elements.meander": [[55, "module-kqcircuits.elements.meander"]], "kqcircuits.elements.quarter_wave_cpw_resonator": [[56, "module-kqcircuits.elements.quarter_wave_cpw_resonator"]], "kqcircuits.elements.smooth_capacitor": [[57, "module-kqcircuits.elements.smooth_capacitor"]], "kqcircuits.elements.spiral_resonator_polygon": [[58, "module-kqcircuits.elements.spiral_resonator_polygon"]], "kqcircuits.elements.tsvs": [[59, "kqcircuits-elements-tsvs"]], "kqcircuits.elements.tsvs.tsv": [[60, "module-kqcircuits.elements.tsvs.tsv"]], "kqcircuits.elements.tsvs.tsv_ellipse": [[61, "module-kqcircuits.elements.tsvs.tsv_ellipse"]], "kqcircuits.elements.tsvs.tsv_standard": [[62, "module-kqcircuits.elements.tsvs.tsv_standard"]], "kqcircuits.elements.waveguide_composite": [[63, "module-kqcircuits.elements.waveguide_composite"]], "kqcircuits.elements.waveguide_coplanar": [[64, "module-kqcircuits.elements.waveguide_coplanar"]], "kqcircuits.elements.waveguide_coplanar_curved": [[65, "module-kqcircuits.elements.waveguide_coplanar_curved"]], "kqcircuits.elements.waveguide_coplanar_splitter": [[66, "module-kqcircuits.elements.waveguide_coplanar_splitter"]], "kqcircuits.elements.waveguide_coplanar_straight": [[67, "module-kqcircuits.elements.waveguide_coplanar_straight"]], "kqcircuits.elements.waveguide_coplanar_taper": [[68, "module-kqcircuits.elements.waveguide_coplanar_taper"]], "kqcircuits.junctions": [[69, "kqcircuits-junctions"]], "kqcircuits.junctions.junction": [[70, "module-kqcircuits.junctions.junction"]], "kqcircuits.junctions.manhattan": [[71, "module-kqcircuits.junctions.manhattan"]], "kqcircuits.junctions.manhattan_single_junction": [[72, "module-kqcircuits.junctions.manhattan_single_junction"]], "kqcircuits.junctions.no_squid": [[73, "module-kqcircuits.junctions.no_squid"]], "kqcircuits.junctions.sim": [[74, "module-kqcircuits.junctions.sim"]], "kqcircuits.junctions.squid": [[75, "module-kqcircuits.junctions.squid"]], "kqcircuits.klayout_view": [[76, "module-kqcircuits.klayout_view"]], "kqcircuits.layer_cluster": [[77, "module-kqcircuits.layer_cluster"]], "kqcircuits.layer_config": [[78, "kqcircuits-layer-config"]], "kqcircuits.layer_config.default_layer_config": [[79, "module-kqcircuits.layer_config.default_layer_config"]], "kqcircuits.layer_config.example_layer_config": [[80, "module-kqcircuits.layer_config.example_layer_config"]], "kqcircuits.masks": [[81, "kqcircuits-masks"]], "kqcircuits.masks.mask_export": [[82, "module-kqcircuits.masks.mask_export"]], "kqcircuits.masks.mask_layout": [[83, "module-kqcircuits.masks.mask_layout"]], "kqcircuits.masks.mask_set": [[84, "module-kqcircuits.masks.mask_set"]], "kqcircuits.masks.multi_face_mask_layout": [[85, "module-kqcircuits.masks.multi_face_mask_layout"]], "kqcircuits.pya_resolver": [[86, "module-kqcircuits.pya_resolver"]], "kqcircuits.qubits": [[87, "kqcircuits-qubits"]], "kqcircuits.qubits.circular_transmon_single_island": [[88, "module-kqcircuits.qubits.circular_transmon_single_island"]], "kqcircuits.qubits.concentric_transmon": [[89, "module-kqcircuits.qubits.concentric_transmon"]], "kqcircuits.qubits.double_pads": [[90, "module-kqcircuits.qubits.double_pads"]], "kqcircuits.qubits.double_pads_splines": [[91, "module-kqcircuits.qubits.double_pads_splines"]], "kqcircuits.qubits.qubit": [[92, "module-kqcircuits.qubits.qubit"]], "kqcircuits.qubits.swissmon": [[93, "module-kqcircuits.qubits.swissmon"]], "kqcircuits.run": [[94, "module-kqcircuits.run"]], "kqcircuits.simulations": [[95, "kqcircuits-simulations"]], "kqcircuits.simulations.airbridges_sim": [[96, "module-kqcircuits.simulations.airbridges_sim"]], "kqcircuits.simulations.cross_section_simulation": [[97, "module-kqcircuits.simulations.cross_section_simulation"]], "kqcircuits.simulations.empty_simulation": [[98, "module-kqcircuits.simulations.empty_simulation"]], "kqcircuits.simulations.epr": [[99, "kqcircuits-simulations-epr"]], "kqcircuits.simulations.epr.circular_capacitor": [[100, "module-kqcircuits.simulations.epr.circular_capacitor"]], "kqcircuits.simulations.epr.example": [[101, "module-kqcircuits.simulations.epr.example"]], "kqcircuits.simulations.epr.gui_config": [[102, "module-kqcircuits.simulations.epr.gui_config"]], "kqcircuits.simulations.epr.smooth_capacitor": [[103, "module-kqcircuits.simulations.epr.smooth_capacitor"]], "kqcircuits.simulations.epr.swissmon": [[104, "module-kqcircuits.simulations.epr.swissmon"]], "kqcircuits.simulations.epr.utils": [[105, "module-kqcircuits.simulations.epr.utils"]], "kqcircuits.simulations.export": [[106, "kqcircuits-simulations-export"]], "kqcircuits.simulations.export.ansys": [[107, "kqcircuits-simulations-export-ansys"]], "kqcircuits.simulations.export.ansys.ansys_export": [[108, "module-kqcircuits.simulations.export.ansys.ansys_export"]], "kqcircuits.simulations.export.ansys.ansys_solution": [[109, "module-kqcircuits.simulations.export.ansys.ansys_solution"]], "kqcircuits.simulations.export.elmer": [[110, "kqcircuits-simulations-export-elmer"]], "kqcircuits.simulations.export.elmer.elmer_export": [[111, "module-kqcircuits.simulations.export.elmer.elmer_export"]], "kqcircuits.simulations.export.elmer.elmer_solution": [[112, "module-kqcircuits.simulations.export.elmer.elmer_solution"]], "kqcircuits.simulations.export.export_and_run": [[113, "module-kqcircuits.simulations.export.export_and_run"]], "kqcircuits.simulations.export.export_singularity": [[114, "module-kqcircuits.simulations.export.export_singularity"]], "kqcircuits.simulations.export.remote_export_and_run": [[115, "module-kqcircuits.simulations.export.remote_export_and_run"]], "kqcircuits.simulations.export.simulation_export": [[116, "module-kqcircuits.simulations.export.simulation_export"]], "kqcircuits.simulations.export.simulation_validate": [[117, "module-kqcircuits.simulations.export.simulation_validate"]], "kqcircuits.simulations.export.solution": [[118, "module-kqcircuits.simulations.export.solution"]], "kqcircuits.simulations.export.sonnet": [[119, "kqcircuits-simulations-export-sonnet"]], "kqcircuits.simulations.export.sonnet.parser": [[120, "module-kqcircuits.simulations.export.sonnet.parser"]], "kqcircuits.simulations.export.sonnet.sonnet_export": [[121, "module-kqcircuits.simulations.export.sonnet.sonnet_export"]], "kqcircuits.simulations.export.util": [[122, "module-kqcircuits.simulations.export.util"]], "kqcircuits.simulations.export.xsection": [[123, "kqcircuits-simulations-export-xsection"]], "kqcircuits.simulations.export.xsection.epr_correction_export": [[124, "module-kqcircuits.simulations.export.xsection.epr_correction_export"]], "kqcircuits.simulations.export.xsection.xsection_export": [[125, "module-kqcircuits.simulations.export.xsection.xsection_export"]], "kqcircuits.simulations.partition_region": [[126, "module-kqcircuits.simulations.partition_region"]], "kqcircuits.simulations.port": [[127, "module-kqcircuits.simulations.port"]], "kqcircuits.simulations.post_process": [[128, "module-kqcircuits.simulations.post_process"]], "kqcircuits.simulations.simulation": [[129, "module-kqcircuits.simulations.simulation"]], "kqcircuits.simulations.single_element_simulation": [[130, "module-kqcircuits.simulations.single_element_simulation"]], "kqcircuits.simulations.single_xmons_full_chip_sim": [[131, "module-kqcircuits.simulations.single_xmons_full_chip_sim"]], "kqcircuits.simulations.waveguides_sim": [[132, "module-kqcircuits.simulations.waveguides_sim"]], "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim": [[133, "module-kqcircuits.simulations.xmons_direct_coupling_full_chip_sim"]], "kqcircuits.simulations.xmons_direct_coupling_sim": [[134, "module-kqcircuits.simulations.xmons_direct_coupling_sim"]], "kqcircuits.test_structures": [[135, "kqcircuits-test-structures"]], "kqcircuits.test_structures.airbridge_dc": [[136, "module-kqcircuits.test_structures.airbridge_dc"]], "kqcircuits.test_structures.cross_test": [[137, "module-kqcircuits.test_structures.cross_test"]], "kqcircuits.test_structures.junction_test_pads": [[138, "kqcircuits-test-structures-junction-test-pads"]], "kqcircuits.test_structures.junction_test_pads.junction_test_pads": [[139, "module-kqcircuits.test_structures.junction_test_pads.junction_test_pads"]], "kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple": [[140, "module-kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple"]], "kqcircuits.test_structures.stripes_test": [[141, "module-kqcircuits.test_structures.stripes_test"]], "kqcircuits.test_structures.stripes_test_increasing_width": [[142, "module-kqcircuits.test_structures.stripes_test_increasing_width"]], "kqcircuits.test_structures.test_structure": [[143, "module-kqcircuits.test_structures.test_structure"]], "kqcircuits.test_structures.tsv_test_pattern": [[144, "module-kqcircuits.test_structures.tsv_test_pattern"]], "kqcircuits.util": [[145, "kqcircuits-util"]], "kqcircuits.util.area": [[146, "module-kqcircuits.util.area"]], "kqcircuits.util.count_instances": [[147, "module-kqcircuits.util.count_instances"]], "kqcircuits.util.coupler_lib": [[148, "module-kqcircuits.util.coupler_lib"]], "kqcircuits.util.deep_delete": [[149, "module-kqcircuits.util.deep_delete"]], "kqcircuits.util.defaults_helper": [[150, "module-kqcircuits.util.defaults_helper"]], "kqcircuits.util.dependencies": [[151, "module-kqcircuits.util.dependencies"]], "kqcircuits.util.edit_node_plugin": [[152, "module-kqcircuits.util.edit_node_plugin"]], "kqcircuits.util.export_helper": [[153, "module-kqcircuits.util.export_helper"]], "kqcircuits.util.geometry_helper": [[154, "module-kqcircuits.util.geometry_helper"]], "kqcircuits.util.geometry_json_encoder": [[155, "module-kqcircuits.util.geometry_json_encoder"]], "kqcircuits.util.groundgrid": [[156, "module-kqcircuits.util.groundgrid"]], "kqcircuits.util.gui_helper": [[157, "module-kqcircuits.util.gui_helper"]], "kqcircuits.util.import_helper": [[158, "module-kqcircuits.util.import_helper"]], "kqcircuits.util.label": [[159, "module-kqcircuits.util.label"]], "kqcircuits.util.label_polygons": [[160, "module-kqcircuits.util.label_polygons"]], "kqcircuits.util.layout_to_code": [[161, "module-kqcircuits.util.layout_to_code"]], "kqcircuits.util.library_helper": [[162, "module-kqcircuits.util.library_helper"]], "kqcircuits.util.log_router": [[163, "module-kqcircuits.util.log_router"]], "kqcircuits.util.merge": [[164, "module-kqcircuits.util.merge"]], "kqcircuits.util.netlist_extraction": [[165, "module-kqcircuits.util.netlist_extraction"]], "kqcircuits.util.netlist_graph": [[166, "module-kqcircuits.util.netlist_graph"]], "kqcircuits.util.parameters": [[167, "module-kqcircuits.util.parameters"]], "kqcircuits.util.plugin_startup": [[168, "module-kqcircuits.util.plugin_startup"]], "kqcircuits.util.refpoints": [[169, "module-kqcircuits.util.refpoints"]], "kqcircuits.util.replace_junctions": [[170, "module-kqcircuits.util.replace_junctions"]], "kqcircuits.util.symmetric_polygons": [[171, "module-kqcircuits.util.symmetric_polygons"]], "Citing": [[172, "citing"]], "Contributing": [[173, "contributing"]], "Versioning": [[173, "versioning"]], "Architecture": [[174, "architecture"]], "Elements": [[174, "elements"]], "PCell parameters": [[174, "pcell-parameters"]], "Libraries": [[174, "libraries"], [195, "libraries"]], "pya resolver": [[174, "pya-resolver"]], "Coding Style": [[175, "coding-style"]], "Containers": [[176, "containers"]], "CLI usage": [[176, "cli-usage"]], "Docker CI usage": [[176, "docker-ci-usage"]], "Singularity usage": [[176, "singularity-usage"]], "Documentation": [[177, "documentation"], [198, "documentation"]], "Developer Guide": [[178, "developer-guide"]], "Developer GUI Setup": [[179, "developer-gui-setup"]], "Prerequisites": [[179, "prerequisites"], [180, "prerequisites"]], "Python": [[179, "python"]], "Sources": [[179, "sources"]], "Install": [[179, "install"]], "Unlinking": [[179, "unlinking"]], "Update": [[179, "update"]], "Secondary install": [[179, "secondary-install"]], "Manual installation": [[179, "manual-installation"]], "Symlinks in Linux or MacOS": [[179, "symlinks-in-linux-or-macos"]], "Symlinks in Windows": [[179, "symlinks-in-windows"]], "Installing dependencies": [[179, "installing-dependencies"]], "Developer Standalone module Setup": [[180, "developer-standalone-module-setup"]], "Installation": [[180, "installation"], [199, "installation"]], "1. Basic installation": [[180, "basic-installation"]], "2. Reproducible, Secure Installation": [[180, "reproducible-secure-installation"]], "3. KQCircuits exclusive python environment": [[180, "kqcircuits-exclusive-python-environment"]], "Dependency extensions": [[180, "dependency-extensions"]], "PyPI Installation": [[180, "pypi-installation"]], "Usage": [[180, "usage"], [217, "usage"]], "Jupyter notebook usage": [[180, "jupyter-notebook-usage"]], "Updating the required dependencies": [[180, "updating-the-required-dependencies"]], "Testing": [[181, "testing"]], "Unit tests": [[181, "unit-tests"]], "First look around": [[182, "first-look-around"]], "Introduction to Elements": [[182, "introduction-to-elements"]], "Placing Elements": [[183, "placing-elements"]], "Modifying Element parameters": [[183, "modifying-element-parameters"]], "Converting elements placed in GUI into code": [[184, "converting-elements-placed-in-gui-into-code"]], "Useful commands": [[185, "useful-commands"]], "Hotkeys": [[185, "hotkeys"]], "KQCircuits menu": [[185, "kqcircuits-menu"]], "Manual workflow tutorial": [[186, "manual-workflow-tutorial"]], "Generate Demo chip": [[186, "generate-demo-chip"]], "Convert the chip cell to static": [[186, "convert-the-chip-cell-to-static"]], "Change the shape of a waveguide": [[186, "change-the-shape-of-a-waveguide"]], "Change the location of an element": [[186, "change-the-location-of-an-element"]], "Modify element parameters": [[186, "modify-element-parameters"]], "Add new elements": [[186, "add-new-elements"]], "Adding ground grid": [[186, "adding-ground-grid"]], "Using waveguides": [[187, "using-waveguides"]], "Modifying waveguides": [[187, "modifying-waveguides"]], "Editing WaveguideComposite Nodes": [[187, "editing-waveguidecomposite-nodes"]], "GUI Features": [[188, "gui-features"]], "Getting started": [[189, "getting-started"], [194, "getting-started"]], "Faces": [[190, "faces"]], "Using faces": [[190, "using-faces"]], "Creating shapes in faces": [[190, "creating-shapes-in-faces"]], "Placing elements on faces": [[190, "placing-elements-on-faces"]], "Python workflow": [[191, "python-workflow"]], "KQCircuits Layers": [[192, "kqcircuits-layers"]], "Detailed examples": [[193, "detailed-examples"]], "Example of defining an Element": [[193, "example-of-defining-an-element"]], "Example of defining a Chip and inserting elements into it": [[193, "example-of-defining-a-chip-and-inserting-elements-into-it"]], "Defining a custom element": [[194, "defining-a-custom-element"]], "Defining a custom chip": [[194, "defining-a-custom-chip"]], "Structure of Element code": [[195, "structure-of-element-code"]], "Element class": [[195, "element-class"]], "Parameters": [[195, "parameters"]], "Build": [[195, "build"]], "Refpoints": [[196, "refpoints"]], "Using refpoints": [[196, "using-refpoints"]], "Port refpoints": [[196, "port-refpoints"]], "KQCircuits Salt package": [[197, "kqcircuits-salt-package"]], "Installing KQCircuits Salt Package": [[197, "installing-kqcircuits-salt-package"]], "Setting up a user package directory": [[197, "setting-up-a-user-package-directory"]], "Upgrading or Removing Salt Package": [[197, "upgrading-or-removing-salt-package"]], "Release Notes": [[197, "release-notes"]], "KQC logo": [[198, "logo"]], "Indices and tables": [[198, "indices-and-tables"]], "Installing KLayout": [[200, "installing-klayout"]], "Known installation issues": [[201, "known-installation-issues"]], "Installing different Python package versions to KLayout manually": [[201, "installing-different-python-package-versions-to-klayout-manually"]], "Support": [[202, "support"]], "Trademarks": [[203, "trademarks"]], "Custom configuration": [[204, "custom-configuration"]], "Configuring sample holders": [[204, "configuring-sample-holders"]], "Configuring faces": [[204, "configuring-faces"]], "Layer configuration files": [[204, "layer-configuration-files"]], "Adding a new face": [[204, "adding-a-new-face"]], "General Structure and Miscellaneous Utilities": [[205, "general-structure-and-miscellaneous-utilities"]], "File system hierarchy": [[205, "file-system-hierarchy"]], "Miscellaneous Utilities": [[205, "miscellaneous-utilities"]], "Opening Element or Chip from an IDE": [[205, "opening-element-or-chip-from-an-ide"]], "User Guide": [[206, "user-guide"]], "Macro and script development": [[207, "macro-and-script-development"]], "Running the first example": [[207, "running-the-first-example"]], "Interacting with the KLayout application": [[207, "interacting-with-the-klayout-application"]], "Creating a new panel": [[207, "creating-a-new-panel"]], "Accessing the currently active panel": [[207, "accessing-the-currently-active-panel"]], "Using KLayoutView": [[207, "using-klayoutview"]], "Debugger": [[207, "debugger"]], "Reloading libraries": [[207, "reloading-libraries"]], "Examples": [[207, "examples"]], "Mask export": [[208, "mask-export"]], "Tutorial": [[208, "tutorial"]], "Basic mask script and export": [[208, "basic-mask-script-and-export"]], "Ground grid": [[208, "ground-grid"]], "Adding and modifying chips": [[208, "adding-and-modifying-chips"]], "Multi-face masks": [[208, "multi-face-masks"]], "Composite mask maps": [[208, "composite-mask-maps"]], "Elmer remote simulations workflow": [[209, "elmer-remote-simulations-workflow"]], "Run and export in one line": [[210, "run-and-export-in-one-line"]], "Gmsh/Elmer export": [[211, "gmsh-elmer-export"]], "Simulation features": [[212, "simulation-features"]], "S-parameter matrix": [[212, "s-parameter-matrix"]], "Capacitance matrix": [[212, "capacitance-matrix"]], "Eigenmode": [[212, "eigenmode"]], "Energy integrals and participation ratio": [[212, "energy-integrals-and-participation-ratio"]], "Cross-sectional simulations": [[212, "cross-sectional-simulations"]], "pyEPR": [[212, "pyepr"]], "Simulation objects": [[213, "simulation-objects"]], "The Simulation class": [[213, "the-simulation-class"]], "Box": [[213, "box"]], "Ports": [[213, "ports"]], "Face stack": [[213, "face-stack"]], "Simulation subclass": [[213, "simulation-subclass"]], "Single element subclass": [[213, "single-element-subclass"]], "General subclass": [[213, "general-subclass"]], "Geometry sweeps": [[213, "geometry-sweeps"]], "Export functions": [[214, "export-functions"]], "Ansys export": [[214, "ansys-export"]], "Elmer export": [[214, "elmer-export"]], "Sonnet export": [[214, "sonnet-export"]], "Geometry from Klayout GUI": [[214, "geometry-from-klayout-gui"]], "External simulation tools": [[215, "external-simulation-tools"]], "Terminology": [[216, "terminology"]], "Creating cross section images": [[218, "creating-cross-section-images"]], "KLayout GUI XSection tool": [[218, "klayout-gui-xsection-tool"]], "XSection call in KQC code": [[218, "xsection-call-in-kqc-code"]], "Process files (.xs)": [[218, "process-files-xs"]]}, "indexentries": {"kqcircuits": [[1, "module-kqcircuits"]], "module": [[1, "module-kqcircuits"], [2, "module-kqcircuits.chips"], [3, "module-kqcircuits.chips.airbridge_crossings"], [4, "module-kqcircuits.chips.airbridge_dc_test"], [5, "module-kqcircuits.chips.chip"], [6, "module-kqcircuits.chips.crossing_twoface"], [7, "module-kqcircuits.chips.daisy_woven"], [8, "module-kqcircuits.chips.dc_test"], [9, "module-kqcircuits.chips.demo"], [10, "module-kqcircuits.chips.demo_twoface"], [11, "module-kqcircuits.chips.empty"], [12, "module-kqcircuits.chips.junction_test"], [13, "module-kqcircuits.chips.junction_test2"], [14, "module-kqcircuits.chips.launchers"], [15, "module-kqcircuits.chips.lithography_test"], [16, "module-kqcircuits.chips.lithography_test_twoface"], [17, "module-kqcircuits.chips.munch_qubits"], [18, "module-kqcircuits.chips.quality_factor"], [19, "module-kqcircuits.chips.quality_factor_twoface"], [20, "module-kqcircuits.chips.sample_holder_test"], [21, "module-kqcircuits.chips.shaping"], [22, "module-kqcircuits.chips.simple"], [23, "module-kqcircuits.chips.single_xmons"], [24, "module-kqcircuits.chips.stripes"], [25, "module-kqcircuits.chips.tsv_test"], [26, "module-kqcircuits.chips.xmons_direct_coupling"], [27, "module-kqcircuits.defaults"], [28, "module-kqcircuits.elements"], [29, "module-kqcircuits.elements.airbridge_connection"], [30, "module-kqcircuits.elements.airbridges"], [31, "module-kqcircuits.elements.airbridges.airbridge"], [32, "module-kqcircuits.elements.airbridges.airbridge_multi_face"], [33, "module-kqcircuits.elements.airbridges.airbridge_rectangular"], [34, "module-kqcircuits.elements.capacitive_x_coupler"], [35, "module-kqcircuits.elements.chip_frame"], [36, "module-kqcircuits.elements.circular_capacitor"], [37, "module-kqcircuits.elements.element"], [38, "module-kqcircuits.elements.finger_capacitor_square"], [39, "module-kqcircuits.elements.finger_capacitor_taper"], [40, "module-kqcircuits.elements.flip_chip_connectors"], [41, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector"], [42, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc"], [43, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf"], [44, "module-kqcircuits.elements.fluxlines"], [45, "module-kqcircuits.elements.fluxlines.fluxline"], [46, "module-kqcircuits.elements.fluxlines.fluxline_standard"], [47, "module-kqcircuits.elements.fluxlines.fluxline_straight"], [48, "module-kqcircuits.elements.hanger_resonator"], [49, "module-kqcircuits.elements.launcher"], [50, "module-kqcircuits.elements.launcher_dc"], [51, "module-kqcircuits.elements.markers"], [52, "module-kqcircuits.elements.markers.marker"], [53, "module-kqcircuits.elements.markers.marker_standard"], [54, "module-kqcircuits.elements.markers.mask_marker_fc"], [55, "module-kqcircuits.elements.meander"], [56, "module-kqcircuits.elements.quarter_wave_cpw_resonator"], [57, "module-kqcircuits.elements.smooth_capacitor"], [58, "module-kqcircuits.elements.spiral_resonator_polygon"], [59, "module-kqcircuits.elements.tsvs"], [60, "module-kqcircuits.elements.tsvs.tsv"], [61, "module-kqcircuits.elements.tsvs.tsv_ellipse"], [62, "module-kqcircuits.elements.tsvs.tsv_standard"], [63, "module-kqcircuits.elements.waveguide_composite"], [64, "module-kqcircuits.elements.waveguide_coplanar"], [65, "module-kqcircuits.elements.waveguide_coplanar_curved"], [66, "module-kqcircuits.elements.waveguide_coplanar_splitter"], [67, "module-kqcircuits.elements.waveguide_coplanar_straight"], [68, "module-kqcircuits.elements.waveguide_coplanar_taper"], [69, "module-kqcircuits.junctions"], [70, "module-kqcircuits.junctions.junction"], [71, "module-kqcircuits.junctions.manhattan"], [72, "module-kqcircuits.junctions.manhattan_single_junction"], [73, "module-kqcircuits.junctions.no_squid"], [74, "module-kqcircuits.junctions.sim"], [75, "module-kqcircuits.junctions.squid"], [76, "module-kqcircuits.klayout_view"], [77, "module-kqcircuits.layer_cluster"], [78, "module-kqcircuits.layer_config"], [79, "module-kqcircuits.layer_config.default_layer_config"], [80, "module-kqcircuits.layer_config.example_layer_config"], [81, "module-kqcircuits.masks"], [82, "module-kqcircuits.masks.mask_export"], [83, "module-kqcircuits.masks.mask_layout"], [84, "module-kqcircuits.masks.mask_set"], [85, "module-kqcircuits.masks.multi_face_mask_layout"], [86, "module-kqcircuits.pya_resolver"], [87, "module-kqcircuits.qubits"], [88, "module-kqcircuits.qubits.circular_transmon_single_island"], [89, "module-kqcircuits.qubits.concentric_transmon"], [90, "module-kqcircuits.qubits.double_pads"], [91, "module-kqcircuits.qubits.double_pads_splines"], [92, "module-kqcircuits.qubits.qubit"], [93, "module-kqcircuits.qubits.swissmon"], [94, "module-kqcircuits.run"], [95, "module-kqcircuits.simulations"], [96, "module-kqcircuits.simulations.airbridges_sim"], [97, "module-kqcircuits.simulations.cross_section_simulation"], [98, "module-kqcircuits.simulations.empty_simulation"], [100, "module-kqcircuits.simulations.epr.circular_capacitor"], [101, "module-kqcircuits.simulations.epr.example"], [102, "module-kqcircuits.simulations.epr.gui_config"], [103, "module-kqcircuits.simulations.epr.smooth_capacitor"], [104, "module-kqcircuits.simulations.epr.swissmon"], [105, "module-kqcircuits.simulations.epr.utils"], [106, "module-kqcircuits.simulations.export"], [107, "module-kqcircuits.simulations.export.ansys"], [108, "module-kqcircuits.simulations.export.ansys.ansys_export"], [109, "module-kqcircuits.simulations.export.ansys.ansys_solution"], [110, "module-kqcircuits.simulations.export.elmer"], [111, "module-kqcircuits.simulations.export.elmer.elmer_export"], [112, "module-kqcircuits.simulations.export.elmer.elmer_solution"], [113, "module-kqcircuits.simulations.export.export_and_run"], [114, "module-kqcircuits.simulations.export.export_singularity"], [115, "module-kqcircuits.simulations.export.remote_export_and_run"], [116, "module-kqcircuits.simulations.export.simulation_export"], [117, "module-kqcircuits.simulations.export.simulation_validate"], [118, "module-kqcircuits.simulations.export.solution"], [119, "module-kqcircuits.simulations.export.sonnet"], [120, "module-kqcircuits.simulations.export.sonnet.parser"], [121, "module-kqcircuits.simulations.export.sonnet.sonnet_export"], [122, "module-kqcircuits.simulations.export.util"], [123, "module-kqcircuits.simulations.export.xsection"], [124, "module-kqcircuits.simulations.export.xsection.epr_correction_export"], [125, "module-kqcircuits.simulations.export.xsection.xsection_export"], [126, "module-kqcircuits.simulations.partition_region"], [127, "module-kqcircuits.simulations.port"], [128, "module-kqcircuits.simulations.post_process"], [129, "module-kqcircuits.simulations.simulation"], [130, "module-kqcircuits.simulations.single_element_simulation"], [131, "module-kqcircuits.simulations.single_xmons_full_chip_sim"], [132, "module-kqcircuits.simulations.waveguides_sim"], [133, "module-kqcircuits.simulations.xmons_direct_coupling_full_chip_sim"], [134, "module-kqcircuits.simulations.xmons_direct_coupling_sim"], [135, "module-kqcircuits.test_structures"], [136, "module-kqcircuits.test_structures.airbridge_dc"], [137, "module-kqcircuits.test_structures.cross_test"], [138, "module-kqcircuits.test_structures.junction_test_pads"], [139, "module-kqcircuits.test_structures.junction_test_pads.junction_test_pads"], [140, "module-kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple"], [141, "module-kqcircuits.test_structures.stripes_test"], [142, "module-kqcircuits.test_structures.stripes_test_increasing_width"], [143, "module-kqcircuits.test_structures.test_structure"], [144, "module-kqcircuits.test_structures.tsv_test_pattern"], [145, "module-kqcircuits.util"], [146, "module-kqcircuits.util.area"], [147, "module-kqcircuits.util.count_instances"], [148, "module-kqcircuits.util.coupler_lib"], [149, "module-kqcircuits.util.deep_delete"], [150, "module-kqcircuits.util.defaults_helper"], [151, "module-kqcircuits.util.dependencies"], [152, "module-kqcircuits.util.edit_node_plugin"], [153, "module-kqcircuits.util.export_helper"], [154, "module-kqcircuits.util.geometry_helper"], [155, "module-kqcircuits.util.geometry_json_encoder"], [156, "module-kqcircuits.util.groundgrid"], [157, "module-kqcircuits.util.gui_helper"], [158, "module-kqcircuits.util.import_helper"], [159, "module-kqcircuits.util.label"], [160, "module-kqcircuits.util.label_polygons"], [161, "module-kqcircuits.util.layout_to_code"], [162, "module-kqcircuits.util.library_helper"], [163, "module-kqcircuits.util.log_router"], [164, "module-kqcircuits.util.merge"], [165, "module-kqcircuits.util.netlist_extraction"], [166, "module-kqcircuits.util.netlist_graph"], [167, "module-kqcircuits.util.parameters"], [168, "module-kqcircuits.util.plugin_startup"], [169, "module-kqcircuits.util.refpoints"], [170, "module-kqcircuits.util.replace_junctions"], [171, "module-kqcircuits.util.symmetric_polygons"]], "kqcircuits.chips": [[2, "module-kqcircuits.chips"]], "airbridgecrossings (class in kqcircuits.chips.airbridge_crossings)": [[3, "kqcircuits.chips.airbridge_crossings.AirbridgeCrossings"]], "build() (kqcircuits.chips.airbridge_crossings.airbridgecrossings method)": [[3, "kqcircuits.chips.airbridge_crossings.AirbridgeCrossings.build"]], "kqcircuits.chips.airbridge_crossings": [[3, "module-kqcircuits.chips.airbridge_crossings"]], "airbridgedctest (class in kqcircuits.chips.airbridge_dc_test)": [[4, "kqcircuits.chips.airbridge_dc_test.AirbridgeDcTest"]], "build() (kqcircuits.chips.airbridge_dc_test.airbridgedctest method)": [[4, "kqcircuits.chips.airbridge_dc_test.AirbridgeDcTest.build"]], "kqcircuits.chips.airbridge_dc_test": [[4, "module-kqcircuits.chips.airbridge_dc_test"]], "chip (class in kqcircuits.chips.chip)": [[5, "kqcircuits.chips.chip.Chip"]], "library_description (kqcircuits.chips.chip.chip attribute)": [[5, "kqcircuits.chips.chip.Chip.LIBRARY_DESCRIPTION"]], "library_name (kqcircuits.chips.chip.chip attribute)": [[5, "kqcircuits.chips.chip.Chip.LIBRARY_NAME"]], "library_path (kqcircuits.chips.chip.chip attribute)": [[5, "kqcircuits.chips.chip.Chip.LIBRARY_PATH"]], "can_create_from_shape_impl() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.can_create_from_shape_impl"]], "display_text_impl() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.display_text_impl"]], "get_box() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.get_box"]], "get_filter_regions() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.get_filter_regions"]], "get_ground_bump_locations() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.get_ground_bump_locations"]], "get_ground_tsv_locations() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.get_ground_tsv_locations"]], "get_launcher_assignments() (kqcircuits.chips.chip.chip static method)": [[5, "kqcircuits.chips.chip.Chip.get_launcher_assignments"]], "insert_filtered_elements() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.insert_filtered_elements"]], "kqcircuits.chips.chip": [[5, "module-kqcircuits.chips.chip"]], "make_grid_locations() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.make_grid_locations"]], "merge_layout_layers() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.merge_layout_layers"]], "merge_layout_layers_on_face() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.merge_layout_layers_on_face"]], "parameters_from_shape_impl() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.parameters_from_shape_impl"]], "post_build() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.post_build"]], "produce_frame() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.produce_frame"]], "produce_ground_grid() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.produce_ground_grid"]], "produce_ground_on_face_grid() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.produce_ground_on_face_grid"]], "produce_junction_tests() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.produce_junction_tests"]], "produce_launchers() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.produce_launchers"]], "produce_n_launchers() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.produce_n_launchers"]], "produce_opt_lit_tests() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.produce_opt_lit_tests"]], "produce_structures() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.produce_structures"]], "transformation_from_shape_impl() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.transformation_from_shape_impl"]], "crossingtwoface (class in kqcircuits.chips.crossing_twoface)": [[6, "kqcircuits.chips.crossing_twoface.CrossingTwoface"]], "build() (kqcircuits.chips.crossing_twoface.crossingtwoface method)": [[6, "kqcircuits.chips.crossing_twoface.CrossingTwoface.build"]], "kqcircuits.chips.crossing_twoface": [[6, "module-kqcircuits.chips.crossing_twoface"]], "daisywoven (class in kqcircuits.chips.daisy_woven)": [[7, "kqcircuits.chips.daisy_woven.DaisyWoven"]], "build() (kqcircuits.chips.daisy_woven.daisywoven method)": [[7, "kqcircuits.chips.daisy_woven.DaisyWoven.build"]], "kqcircuits.chips.daisy_woven": [[7, "module-kqcircuits.chips.daisy_woven"]], "dctest (class in kqcircuits.chips.dc_test)": [[8, "kqcircuits.chips.dc_test.DcTest"]], "build() (kqcircuits.chips.dc_test.dctest method)": [[8, "kqcircuits.chips.dc_test.DcTest.build"]], "kqcircuits.chips.dc_test": [[8, "module-kqcircuits.chips.dc_test"]], "demo (class in kqcircuits.chips.demo)": [[9, "kqcircuits.chips.demo.Demo"]], "build() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.build"]], "kqcircuits.chips.demo": [[9, "module-kqcircuits.chips.demo"]], "produce_control_lines() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_control_lines"]], "produce_coupler() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_coupler"]], "produce_couplers() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_couplers"]], "produce_driveline() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_driveline"]], "produce_fluxline() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_fluxline"]], "produce_junction_tests() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_junction_tests"]], "produce_probeline() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_probeline"]], "produce_probelines() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_probelines"]], "produce_qubit() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_qubit"]], "produce_qubits() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_qubits"]], "produce_readout_structure() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_readout_structure"]], "produce_readout_structures() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_readout_structures"]], "demotwoface (class in kqcircuits.chips.demo_twoface)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface"]], "build() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.build"]], "kqcircuits.chips.demo_twoface": [[10, "module-kqcircuits.chips.demo_twoface"]], "produce_control_lines() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_control_lines"]], "produce_coupler() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_coupler"]], "produce_couplers() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_couplers"]], "produce_driveline() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_driveline"]], "produce_fluxline() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_fluxline"]], "produce_probeline() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_probeline"]], "produce_probelines() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_probelines"]], "produce_qubit() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_qubit"]], "produce_qubits() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_qubits"]], "produce_readout_structure() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_readout_structure"]], "produce_readout_structures() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_readout_structures"]], "empty (class in kqcircuits.chips.empty)": [[11, "kqcircuits.chips.empty.Empty"]], "build() (kqcircuits.chips.empty.empty method)": [[11, "kqcircuits.chips.empty.Empty.build"]], "kqcircuits.chips.empty": [[11, "module-kqcircuits.chips.empty"]], "make_empty_area() (kqcircuits.chips.empty.empty method)": [[11, "kqcircuits.chips.empty.Empty.make_empty_area"]], "junctiontest (class in kqcircuits.chips.junction_test)": [[12, "kqcircuits.chips.junction_test.JunctionTest"]], "build() (kqcircuits.chips.junction_test.junctiontest method)": [[12, "kqcircuits.chips.junction_test.JunctionTest.build"]], "kqcircuits.chips.junction_test": [[12, "module-kqcircuits.chips.junction_test"]], "junctiontest2 (class in kqcircuits.chips.junction_test2)": [[13, "kqcircuits.chips.junction_test2.JunctionTest2"]], "build() (kqcircuits.chips.junction_test2.junctiontest2 method)": [[13, "kqcircuits.chips.junction_test2.JunctionTest2.build"]], "coerce_parameters_impl() (kqcircuits.chips.junction_test2.junctiontest2 method)": [[13, "kqcircuits.chips.junction_test2.JunctionTest2.coerce_parameters_impl"]], "kqcircuits.chips.junction_test2": [[13, "module-kqcircuits.chips.junction_test2"]], "launchers (class in kqcircuits.chips.launchers)": [[14, "kqcircuits.chips.launchers.Launchers"]], "build() (kqcircuits.chips.launchers.launchers method)": [[14, "kqcircuits.chips.launchers.Launchers.build"]], "kqcircuits.chips.launchers": [[14, "module-kqcircuits.chips.launchers"]], "lithographytest (class in kqcircuits.chips.lithography_test)": [[15, "kqcircuits.chips.lithography_test.LithographyTest"]], "build() (kqcircuits.chips.lithography_test.lithographytest method)": [[15, "kqcircuits.chips.lithography_test.LithographyTest.build"]], "create_pattern() (kqcircuits.chips.lithography_test.lithographytest method)": [[15, "kqcircuits.chips.lithography_test.LithographyTest.create_pattern"]], "kqcircuits.chips.lithography_test": [[15, "module-kqcircuits.chips.lithography_test"]], "lithographytesttwoface (class in kqcircuits.chips.lithography_test_twoface)": [[16, "kqcircuits.chips.lithography_test_twoface.LithographyTestTwoface"]], "build() (kqcircuits.chips.lithography_test_twoface.lithographytesttwoface method)": [[16, "kqcircuits.chips.lithography_test_twoface.LithographyTestTwoface.build"]], "create_pattern() (kqcircuits.chips.lithography_test_twoface.lithographytesttwoface method)": [[16, "kqcircuits.chips.lithography_test_twoface.LithographyTestTwoface.create_pattern"]], "kqcircuits.chips.lithography_test_twoface": [[16, "module-kqcircuits.chips.lithography_test_twoface"]], "munchqubits (class in kqcircuits.chips.munch_qubits)": [[17, "kqcircuits.chips.munch_qubits.MunchQubits"]], "build() (kqcircuits.chips.munch_qubits.munchqubits method)": [[17, "kqcircuits.chips.munch_qubits.MunchQubits.build"]], "kqcircuits.chips.munch_qubits": [[17, "module-kqcircuits.chips.munch_qubits"]], "produce_coupler() (kqcircuits.chips.munch_qubits.munchqubits method)": [[17, "kqcircuits.chips.munch_qubits.MunchQubits.produce_coupler"]], "produce_drivelines() (kqcircuits.chips.munch_qubits.munchqubits method)": [[17, "kqcircuits.chips.munch_qubits.MunchQubits.produce_drivelines"]], "produce_probeline() (kqcircuits.chips.munch_qubits.munchqubits method)": [[17, "kqcircuits.chips.munch_qubits.MunchQubits.produce_probeline"]], "produce_qubits() (kqcircuits.chips.munch_qubits.munchqubits method)": [[17, "kqcircuits.chips.munch_qubits.MunchQubits.produce_qubits"]], "produce_readout_resonators() (kqcircuits.chips.munch_qubits.munchqubits method)": [[17, "kqcircuits.chips.munch_qubits.MunchQubits.produce_readout_resonators"]], "qualityfactor (class in kqcircuits.chips.quality_factor)": [[18, "kqcircuits.chips.quality_factor.QualityFactor"]], "build() (kqcircuits.chips.quality_factor.qualityfactor method)": [[18, "kqcircuits.chips.quality_factor.QualityFactor.build"]], "kqcircuits.chips.quality_factor": [[18, "module-kqcircuits.chips.quality_factor"]], "qualityfactortwoface (class in kqcircuits.chips.quality_factor_twoface)": [[19, "kqcircuits.chips.quality_factor_twoface.QualityFactorTwoface"]], "build() (kqcircuits.chips.quality_factor_twoface.qualityfactortwoface method)": [[19, "kqcircuits.chips.quality_factor_twoface.QualityFactorTwoface.build"]], "kqcircuits.chips.quality_factor_twoface": [[19, "module-kqcircuits.chips.quality_factor_twoface"]], "produce_resonator() (kqcircuits.chips.quality_factor_twoface.qualityfactortwoface method)": [[19, "kqcircuits.chips.quality_factor_twoface.QualityFactorTwoface.produce_resonator"]], "sampleholdertest (class in kqcircuits.chips.sample_holder_test)": [[20, "kqcircuits.chips.sample_holder_test.SampleHolderTest"]], "build() (kqcircuits.chips.sample_holder_test.sampleholdertest method)": [[20, "kqcircuits.chips.sample_holder_test.SampleHolderTest.build"]], "kqcircuits.chips.sample_holder_test": [[20, "module-kqcircuits.chips.sample_holder_test"]], "shaping (class in kqcircuits.chips.shaping)": [[21, "kqcircuits.chips.shaping.Shaping"]], "build() (kqcircuits.chips.shaping.shaping method)": [[21, "kqcircuits.chips.shaping.Shaping.build"]], "kqcircuits.chips.shaping": [[21, "module-kqcircuits.chips.shaping"]], "simple (class in kqcircuits.chips.simple)": [[22, "kqcircuits.chips.simple.Simple"]], "build() (kqcircuits.chips.simple.simple method)": [[22, "kqcircuits.chips.simple.Simple.build"]], "kqcircuits.chips.simple": [[22, "module-kqcircuits.chips.simple"]], "singlexmons (class in kqcircuits.chips.single_xmons)": [[23, "kqcircuits.chips.single_xmons.SingleXmons"]], "build() (kqcircuits.chips.single_xmons.singlexmons method)": [[23, "kqcircuits.chips.single_xmons.SingleXmons.build"]], "kqcircuits.chips.single_xmons": [[23, "module-kqcircuits.chips.single_xmons"]], "launchers (kqcircuits.chips.single_xmons.singlexmons attribute)": [[23, "kqcircuits.chips.single_xmons.SingleXmons.launchers"]], "qubits_refpoints (kqcircuits.chips.single_xmons.singlexmons attribute)": [[23, "kqcircuits.chips.single_xmons.SingleXmons.qubits_refpoints"]], "stripes (class in kqcircuits.chips.stripes)": [[24, "kqcircuits.chips.stripes.Stripes"]], "build() (kqcircuits.chips.stripes.stripes method)": [[24, "kqcircuits.chips.stripes.Stripes.build"]], "kqcircuits.chips.stripes": [[24, "module-kqcircuits.chips.stripes"]], "tsvtest (class in kqcircuits.chips.tsv_test)": [[25, "kqcircuits.chips.tsv_test.TsvTest"]], "build() (kqcircuits.chips.tsv_test.tsvtest method)": [[25, "kqcircuits.chips.tsv_test.TsvTest.build"]], "create_xsection() (kqcircuits.chips.tsv_test.tsvtest method)": [[25, "kqcircuits.chips.tsv_test.TsvTest.create_xsection"]], "kqcircuits.chips.tsv_test": [[25, "module-kqcircuits.chips.tsv_test"]], "xmonsdirectcoupling (class in kqcircuits.chips.xmons_direct_coupling)": [[26, "kqcircuits.chips.xmons_direct_coupling.XMonsDirectCoupling"]], "build() (kqcircuits.chips.xmons_direct_coupling.xmonsdirectcoupling method)": [[26, "kqcircuits.chips.xmons_direct_coupling.XMonsDirectCoupling.build"]], "kqcircuits.chips.xmons_direct_coupling": [[26, "module-kqcircuits.chips.xmons_direct_coupling"]], "produce_qubits() (kqcircuits.chips.xmons_direct_coupling.xmonsdirectcoupling method)": [[26, "kqcircuits.chips.xmons_direct_coupling.XMonsDirectCoupling.produce_qubits"]], "produce_readout_resonator() (kqcircuits.chips.xmons_direct_coupling.xmonsdirectcoupling method)": [[26, "kqcircuits.chips.xmons_direct_coupling.XMonsDirectCoupling.produce_readout_resonator"]], "kqcircuits.defaults": [[27, "module-kqcircuits.defaults"]], "kqcircuits.elements": [[28, "module-kqcircuits.elements"]], "airbridgeconnection (class in kqcircuits.elements.airbridge_connection)": [[29, "kqcircuits.elements.airbridge_connection.AirbridgeConnection"]], "build() (kqcircuits.elements.airbridge_connection.airbridgeconnection method)": [[29, "kqcircuits.elements.airbridge_connection.AirbridgeConnection.build"]], "kqcircuits.elements.airbridge_connection": [[29, "module-kqcircuits.elements.airbridge_connection"]], "kqcircuits.elements.airbridges": [[30, "module-kqcircuits.elements.airbridges"]], "airbridge (class in kqcircuits.elements.airbridges.airbridge)": [[31, "kqcircuits.elements.airbridges.airbridge.Airbridge"]], "create() (kqcircuits.elements.airbridges.airbridge.airbridge class method)": [[31, "kqcircuits.elements.airbridges.airbridge.Airbridge.create"]], "default_type (kqcircuits.elements.airbridges.airbridge.airbridge attribute)": [[31, "kqcircuits.elements.airbridges.airbridge.Airbridge.default_type"]], "kqcircuits.elements.airbridges.airbridge": [[31, "module-kqcircuits.elements.airbridges.airbridge"]], "transformation_from_shape_impl() (kqcircuits.elements.airbridges.airbridge.airbridge method)": [[31, "kqcircuits.elements.airbridges.airbridge.Airbridge.transformation_from_shape_impl"]], "airbridgemultiface (class in kqcircuits.elements.airbridges.airbridge_multi_face)": [[32, "kqcircuits.elements.airbridges.airbridge_multi_face.AirbridgeMultiFace"]], "build() (kqcircuits.elements.airbridges.airbridge_multi_face.airbridgemultiface method)": [[32, "kqcircuits.elements.airbridges.airbridge_multi_face.AirbridgeMultiFace.build"]], "default_type (kqcircuits.elements.airbridges.airbridge_multi_face.airbridgemultiface attribute)": [[32, "kqcircuits.elements.airbridges.airbridge_multi_face.AirbridgeMultiFace.default_type"]], "kqcircuits.elements.airbridges.airbridge_multi_face": [[32, "module-kqcircuits.elements.airbridges.airbridge_multi_face"]], "airbridgerectangular (class in kqcircuits.elements.airbridges.airbridge_rectangular)": [[33, "kqcircuits.elements.airbridges.airbridge_rectangular.AirbridgeRectangular"]], "build() (kqcircuits.elements.airbridges.airbridge_rectangular.airbridgerectangular method)": [[33, "kqcircuits.elements.airbridges.airbridge_rectangular.AirbridgeRectangular.build"]], "default_type (kqcircuits.elements.airbridges.airbridge_rectangular.airbridgerectangular attribute)": [[33, "kqcircuits.elements.airbridges.airbridge_rectangular.AirbridgeRectangular.default_type"]], "kqcircuits.elements.airbridges.airbridge_rectangular": [[33, "module-kqcircuits.elements.airbridges.airbridge_rectangular"]], "capacitivexcoupler (class in kqcircuits.elements.capacitive_x_coupler)": [[34, "kqcircuits.elements.capacitive_x_coupler.CapacitiveXCoupler"]], "build() (kqcircuits.elements.capacitive_x_coupler.capacitivexcoupler method)": [[34, "kqcircuits.elements.capacitive_x_coupler.CapacitiveXCoupler.build"]], "get_sim_ports() (kqcircuits.elements.capacitive_x_coupler.capacitivexcoupler class method)": [[34, "kqcircuits.elements.capacitive_x_coupler.CapacitiveXCoupler.get_sim_ports"]], "kqcircuits.elements.capacitive_x_coupler": [[34, "module-kqcircuits.elements.capacitive_x_coupler"]], "chipframe (class in kqcircuits.elements.chip_frame)": [[35, "kqcircuits.elements.chip_frame.ChipFrame"]], "build() (kqcircuits.elements.chip_frame.chipframe method)": [[35, "kqcircuits.elements.chip_frame.ChipFrame.build"]], "kqcircuits.elements.chip_frame": [[35, "module-kqcircuits.elements.chip_frame"]], "circularcapacitor (class in kqcircuits.elements.circular_capacitor)": [[36, "kqcircuits.elements.circular_capacitor.CircularCapacitor"]], "build() (kqcircuits.elements.circular_capacitor.circularcapacitor method)": [[36, "kqcircuits.elements.circular_capacitor.CircularCapacitor.build"]], "get_sim_ports() (kqcircuits.elements.circular_capacitor.circularcapacitor class method)": [[36, "kqcircuits.elements.circular_capacitor.CircularCapacitor.get_sim_ports"]], "kqcircuits.elements.circular_capacitor": [[36, "module-kqcircuits.elements.circular_capacitor"]], "element (class in kqcircuits.elements.element)": [[37, "kqcircuits.elements.element.Element"]], "library_description (kqcircuits.elements.element.element attribute)": [[37, "kqcircuits.elements.element.Element.LIBRARY_DESCRIPTION"]], "library_name (kqcircuits.elements.element.element attribute)": [[37, "kqcircuits.elements.element.Element.LIBRARY_NAME"]], "library_path (kqcircuits.elements.element.element attribute)": [[37, "kqcircuits.elements.element.Element.LIBRARY_PATH"]], "add_element() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.add_element"]], "add_port() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.add_port"]], "add_protection() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.add_protection"]], "build() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.build"]], "copy_port() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.copy_port"]], "create() (kqcircuits.elements.element.element class method)": [[37, "kqcircuits.elements.element.Element.create"]], "create_cell_from_shape() (kqcircuits.elements.element.element static method)": [[37, "kqcircuits.elements.element.Element.create_cell_from_shape"]], "create_subtype() (kqcircuits.elements.element.element class method)": [[37, "kqcircuits.elements.element.Element.create_subtype"]], "create_with_refpoints() (kqcircuits.elements.element.element class method)": [[37, "kqcircuits.elements.element.Element.create_with_refpoints"]], "display_text_impl() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.display_text_impl"]], "etch_opposite_face_impl() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.etch_opposite_face_impl"]], "face() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.face"]], "face_changer_waveguides() (kqcircuits.elements.element.element static method)": [[37, "kqcircuits.elements.element.Element.face_changer_waveguides"]], "get_layer() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.get_layer"]], "get_refpoints() (in module kqcircuits.elements.element)": [[37, "kqcircuits.elements.element.get_refpoints"]], "get_refpoints() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.get_refpoints"]], "get_schema() (kqcircuits.elements.element.element class method)": [[37, "kqcircuits.elements.element.Element.get_schema"]], "get_sim_ports() (kqcircuits.elements.element.element class method)": [[37, "kqcircuits.elements.element.Element.get_sim_ports"]], "insert_cell() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.insert_cell"]], "insert_cell_into() (in module kqcircuits.elements.element)": [[37, "kqcircuits.elements.element.insert_cell_into"]], "kqcircuits.elements.element": [[37, "module-kqcircuits.elements.element"]], "left_and_right_waveguides() (kqcircuits.elements.element.element static method)": [[37, "kqcircuits.elements.element.Element.left_and_right_waveguides"]], "parameter_order_key() (in module kqcircuits.elements.element)": [[37, "kqcircuits.elements.element.parameter_order_key"]], "pcell_params_by_name() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.pcell_params_by_name"]], "post_build() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.post_build"]], "produce_impl() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.produce_impl"]], "raise_error_on_cell() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.raise_error_on_cell"]], "resolve_face() (in module kqcircuits.elements.element)": [[37, "kqcircuits.elements.element.resolve_face"]], "sync_parameters() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.sync_parameters"]], "fingercapacitorsquare (class in kqcircuits.elements.finger_capacitor_square)": [[38, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare"]], "add_waveguides() (kqcircuits.elements.finger_capacitor_square.fingercapacitorsquare method)": [[38, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare.add_waveguides"]], "build() (kqcircuits.elements.finger_capacitor_square.fingercapacitorsquare method)": [[38, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare.build"]], "can_create_from_shape_impl() (kqcircuits.elements.finger_capacitor_square.fingercapacitorsquare method)": [[38, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare.can_create_from_shape_impl"]], "cut_region() (kqcircuits.elements.finger_capacitor_square.fingercapacitorsquare method)": [[38, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare.cut_region"]], "finger_area_length() (kqcircuits.elements.finger_capacitor_square.fingercapacitorsquare method)": [[38, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare.finger_area_length"]], "finger_area_width() (kqcircuits.elements.finger_capacitor_square.fingercapacitorsquare method)": [[38, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare.finger_area_width"]], "get_ground_region() (kqcircuits.elements.finger_capacitor_square.fingercapacitorsquare method)": [[38, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare.get_ground_region"]], "get_sim_ports() (kqcircuits.elements.finger_capacitor_square.fingercapacitorsquare class method)": [[38, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare.get_sim_ports"]], "kqcircuits.elements.finger_capacitor_square": [[38, "module-kqcircuits.elements.finger_capacitor_square"]], "fingercapacitortaper (class in kqcircuits.elements.finger_capacitor_taper)": [[39, "kqcircuits.elements.finger_capacitor_taper.FingerCapacitorTaper"]], "build() (kqcircuits.elements.finger_capacitor_taper.fingercapacitortaper method)": [[39, "kqcircuits.elements.finger_capacitor_taper.FingerCapacitorTaper.build"]], "can_create_from_shape_impl() (kqcircuits.elements.finger_capacitor_taper.fingercapacitortaper method)": [[39, "kqcircuits.elements.finger_capacitor_taper.FingerCapacitorTaper.can_create_from_shape_impl"]], "kqcircuits.elements.finger_capacitor_taper": [[39, "module-kqcircuits.elements.finger_capacitor_taper"]], "kqcircuits.elements.flip_chip_connectors": [[40, "module-kqcircuits.elements.flip_chip_connectors"]], "flipchipconnector (class in kqcircuits.elements.flip_chip_connectors.flip_chip_connector)": [[41, "kqcircuits.elements.flip_chip_connectors.flip_chip_connector.FlipChipConnector"]], "create() (kqcircuits.elements.flip_chip_connectors.flip_chip_connector.flipchipconnector class method)": [[41, "kqcircuits.elements.flip_chip_connectors.flip_chip_connector.FlipChipConnector.create"]], "default_type (kqcircuits.elements.flip_chip_connectors.flip_chip_connector.flipchipconnector attribute)": [[41, "kqcircuits.elements.flip_chip_connectors.flip_chip_connector.FlipChipConnector.default_type"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector": [[41, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector"]], "flipchipconnectordc (class in kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc)": [[42, "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc.FlipChipConnectorDc"]], "build() (kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc.flipchipconnectordc method)": [[42, "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc.FlipChipConnectorDc.build"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc": [[42, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc"]], "flipchipconnectorrf (class in kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf)": [[43, "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf.FlipChipConnectorRf"]], "build() (kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf.flipchipconnectorrf method)": [[43, "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf.FlipChipConnectorRf.build"]], "get_sim_ports() (kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf.flipchipconnectorrf class method)": [[43, "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf.FlipChipConnectorRf.get_sim_ports"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf": [[43, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf"]], "kqcircuits.elements.fluxlines": [[44, "module-kqcircuits.elements.fluxlines"]], "fluxline (class in kqcircuits.elements.fluxlines.fluxline)": [[45, "kqcircuits.elements.fluxlines.fluxline.Fluxline"]], "coerce_parameters_impl() (kqcircuits.elements.fluxlines.fluxline.fluxline method)": [[45, "kqcircuits.elements.fluxlines.fluxline.Fluxline.coerce_parameters_impl"]], "create() (kqcircuits.elements.fluxlines.fluxline.fluxline class method)": [[45, "kqcircuits.elements.fluxlines.fluxline.Fluxline.create"]], "default_type (kqcircuits.elements.fluxlines.fluxline.fluxline attribute)": [[45, "kqcircuits.elements.fluxlines.fluxline.Fluxline.default_type"]], "kqcircuits.elements.fluxlines.fluxline": [[45, "module-kqcircuits.elements.fluxlines.fluxline"]], "fluxlinestandard (class in kqcircuits.elements.fluxlines.fluxline_standard)": [[46, "kqcircuits.elements.fluxlines.fluxline_standard.FluxlineStandard"]], "build() (kqcircuits.elements.fluxlines.fluxline_standard.fluxlinestandard method)": [[46, "kqcircuits.elements.fluxlines.fluxline_standard.FluxlineStandard.build"]], "kqcircuits.elements.fluxlines.fluxline_standard": [[46, "module-kqcircuits.elements.fluxlines.fluxline_standard"]], "fluxlinestraight (class in kqcircuits.elements.fluxlines.fluxline_straight)": [[47, "kqcircuits.elements.fluxlines.fluxline_straight.FluxlineStraight"]], "build() (kqcircuits.elements.fluxlines.fluxline_straight.fluxlinestraight method)": [[47, "kqcircuits.elements.fluxlines.fluxline_straight.FluxlineStraight.build"]], "kqcircuits.elements.fluxlines.fluxline_straight": [[47, "module-kqcircuits.elements.fluxlines.fluxline_straight"]], "hangerresonator (class in kqcircuits.elements.hanger_resonator)": [[48, "kqcircuits.elements.hanger_resonator.HangerResonator"]], "build() (kqcircuits.elements.hanger_resonator.hangerresonator method)": [[48, "kqcircuits.elements.hanger_resonator.HangerResonator.build"]], "get_sim_ports() (kqcircuits.elements.hanger_resonator.hangerresonator class method)": [[48, "kqcircuits.elements.hanger_resonator.HangerResonator.get_sim_ports"]], "kqcircuits.elements.hanger_resonator": [[48, "module-kqcircuits.elements.hanger_resonator"]], "launcher (class in kqcircuits.elements.launcher)": [[49, "kqcircuits.elements.launcher.Launcher"]], "build() (kqcircuits.elements.launcher.launcher method)": [[49, "kqcircuits.elements.launcher.Launcher.build"]], "kqcircuits.elements.launcher": [[49, "module-kqcircuits.elements.launcher"]], "launcherdc (class in kqcircuits.elements.launcher_dc)": [[50, "kqcircuits.elements.launcher_dc.LauncherDC"]], "build() (kqcircuits.elements.launcher_dc.launcherdc method)": [[50, "kqcircuits.elements.launcher_dc.LauncherDC.build"]], "kqcircuits.elements.launcher_dc": [[50, "module-kqcircuits.elements.launcher_dc"]], "kqcircuits.elements.markers": [[51, "module-kqcircuits.elements.markers"]], "marker (class in kqcircuits.elements.markers.marker)": [[52, "kqcircuits.elements.markers.marker.Marker"]], "create() (kqcircuits.elements.markers.marker.marker class method)": [[52, "kqcircuits.elements.markers.marker.Marker.create"]], "default_type (kqcircuits.elements.markers.marker.marker attribute)": [[52, "kqcircuits.elements.markers.marker.Marker.default_type"]], "get_marker_locations() (kqcircuits.elements.markers.marker.marker class method)": [[52, "kqcircuits.elements.markers.marker.Marker.get_marker_locations"]], "get_marker_region() (kqcircuits.elements.markers.marker.marker class method)": [[52, "kqcircuits.elements.markers.marker.Marker.get_marker_region"]], "kqcircuits.elements.markers.marker": [[52, "module-kqcircuits.elements.markers.marker"]], "produce_geometry() (kqcircuits.elements.markers.marker.marker method)": [[52, "kqcircuits.elements.markers.marker.Marker.produce_geometry"]], "markerstandard (class in kqcircuits.elements.markers.marker_standard)": [[53, "kqcircuits.elements.markers.marker_standard.MarkerStandard"]], "build() (kqcircuits.elements.markers.marker_standard.markerstandard method)": [[53, "kqcircuits.elements.markers.marker_standard.MarkerStandard.build"]], "kqcircuits.elements.markers.marker_standard": [[53, "module-kqcircuits.elements.markers.marker_standard"]], "maskmarkerfc (class in kqcircuits.elements.markers.mask_marker_fc)": [[54, "kqcircuits.elements.markers.mask_marker_fc.MaskMarkerFc"]], "build() (kqcircuits.elements.markers.mask_marker_fc.maskmarkerfc method)": [[54, "kqcircuits.elements.markers.mask_marker_fc.MaskMarkerFc.build"]], "create_cross() (kqcircuits.elements.markers.mask_marker_fc.maskmarkerfc static method)": [[54, "kqcircuits.elements.markers.mask_marker_fc.MaskMarkerFc.create_cross"]], "get_marker_locations() (kqcircuits.elements.markers.mask_marker_fc.maskmarkerfc class method)": [[54, "kqcircuits.elements.markers.mask_marker_fc.MaskMarkerFc.get_marker_locations"]], "get_marker_region() (kqcircuits.elements.markers.mask_marker_fc.maskmarkerfc class method)": [[54, "kqcircuits.elements.markers.mask_marker_fc.MaskMarkerFc.get_marker_region"]], "kqcircuits.elements.markers.mask_marker_fc": [[54, "module-kqcircuits.elements.markers.mask_marker_fc"]], "meander (class in kqcircuits.elements.meander)": [[55, "kqcircuits.elements.meander.Meander"]], "build() (kqcircuits.elements.meander.meander method)": [[55, "kqcircuits.elements.meander.Meander.build"]], "can_create_from_shape_impl() (kqcircuits.elements.meander.meander method)": [[55, "kqcircuits.elements.meander.Meander.can_create_from_shape_impl"]], "kqcircuits.elements.meander": [[55, "module-kqcircuits.elements.meander"]], "parameters_from_shape_impl() (kqcircuits.elements.meander.meander method)": [[55, "kqcircuits.elements.meander.Meander.parameters_from_shape_impl"]], "quarterwavecpwresonator (class in kqcircuits.elements.quarter_wave_cpw_resonator)": [[56, "kqcircuits.elements.quarter_wave_cpw_resonator.QuarterWaveCpwResonator"]], "build() (kqcircuits.elements.quarter_wave_cpw_resonator.quarterwavecpwresonator method)": [[56, "kqcircuits.elements.quarter_wave_cpw_resonator.QuarterWaveCpwResonator.build"]], "get_sim_ports() (kqcircuits.elements.quarter_wave_cpw_resonator.quarterwavecpwresonator class method)": [[56, "kqcircuits.elements.quarter_wave_cpw_resonator.QuarterWaveCpwResonator.get_sim_ports"]], "kqcircuits.elements.quarter_wave_cpw_resonator": [[56, "module-kqcircuits.elements.quarter_wave_cpw_resonator"]], "smoothcapacitor (class in kqcircuits.elements.smooth_capacitor)": [[57, "kqcircuits.elements.smooth_capacitor.SmoothCapacitor"]], "build() (kqcircuits.elements.smooth_capacitor.smoothcapacitor method)": [[57, "kqcircuits.elements.smooth_capacitor.SmoothCapacitor.build"]], "can_create_from_shape_impl() (kqcircuits.elements.smooth_capacitor.smoothcapacitor method)": [[57, "kqcircuits.elements.smooth_capacitor.SmoothCapacitor.can_create_from_shape_impl"]], "finger_polygon() (kqcircuits.elements.smooth_capacitor.smoothcapacitor method)": [[57, "kqcircuits.elements.smooth_capacitor.SmoothCapacitor.finger_polygon"]], "get_finger_regions() (kqcircuits.elements.smooth_capacitor.smoothcapacitor method)": [[57, "kqcircuits.elements.smooth_capacitor.SmoothCapacitor.get_finger_regions"]], "get_sim_ports() (kqcircuits.elements.smooth_capacitor.smoothcapacitor class method)": [[57, "kqcircuits.elements.smooth_capacitor.SmoothCapacitor.get_sim_ports"]], "insert_wg_joint() (kqcircuits.elements.smooth_capacitor.smoothcapacitor method)": [[57, "kqcircuits.elements.smooth_capacitor.SmoothCapacitor.insert_wg_joint"]], "kqcircuits.elements.smooth_capacitor": [[57, "module-kqcircuits.elements.smooth_capacitor"]], "middle_gap_fill() (kqcircuits.elements.smooth_capacitor.smoothcapacitor method)": [[57, "kqcircuits.elements.smooth_capacitor.SmoothCapacitor.middle_gap_fill"]], "segment_points() (kqcircuits.elements.smooth_capacitor.smoothcapacitor method)": [[57, "kqcircuits.elements.smooth_capacitor.SmoothCapacitor.segment_points"]], "super_smoothen_region() (kqcircuits.elements.smooth_capacitor.smoothcapacitor method)": [[57, "kqcircuits.elements.smooth_capacitor.SmoothCapacitor.super_smoothen_region"]], "t_poly() (kqcircuits.elements.smooth_capacitor.smoothcapacitor method)": [[57, "kqcircuits.elements.smooth_capacitor.SmoothCapacitor.t_poly"]], "spiralresonatorpolygon (class in kqcircuits.elements.spiral_resonator_polygon)": [[58, "kqcircuits.elements.spiral_resonator_polygon.SpiralResonatorPolygon"]], "build() (kqcircuits.elements.spiral_resonator_polygon.spiralresonatorpolygon method)": [[58, "kqcircuits.elements.spiral_resonator_polygon.SpiralResonatorPolygon.build"]], "kqcircuits.elements.spiral_resonator_polygon": [[58, "module-kqcircuits.elements.spiral_resonator_polygon"]], "rectangular_parameters() (in module kqcircuits.elements.spiral_resonator_polygon)": [[58, "kqcircuits.elements.spiral_resonator_polygon.rectangular_parameters"]], "kqcircuits.elements.tsvs": [[59, "module-kqcircuits.elements.tsvs"]], "tsv (class in kqcircuits.elements.tsvs.tsv)": [[60, "kqcircuits.elements.tsvs.tsv.Tsv"]], "create() (kqcircuits.elements.tsvs.tsv.tsv class method)": [[60, "kqcircuits.elements.tsvs.tsv.Tsv.create"]], "default_type (kqcircuits.elements.tsvs.tsv.tsv attribute)": [[60, "kqcircuits.elements.tsvs.tsv.Tsv.default_type"]], "kqcircuits.elements.tsvs.tsv": [[60, "module-kqcircuits.elements.tsvs.tsv"]], "tsvellipse (class in kqcircuits.elements.tsvs.tsv_ellipse)": [[61, "kqcircuits.elements.tsvs.tsv_ellipse.TsvEllipse"]], "create_tsv_connector() (kqcircuits.elements.tsvs.tsv_ellipse.tsvellipse method)": [[61, "kqcircuits.elements.tsvs.tsv_ellipse.TsvEllipse.create_tsv_connector"]], "kqcircuits.elements.tsvs.tsv_ellipse": [[61, "module-kqcircuits.elements.tsvs.tsv_ellipse"]], "produce_impl() (kqcircuits.elements.tsvs.tsv_ellipse.tsvellipse method)": [[61, "kqcircuits.elements.tsvs.tsv_ellipse.TsvEllipse.produce_impl"]], "tsvstandard (class in kqcircuits.elements.tsvs.tsv_standard)": [[62, "kqcircuits.elements.tsvs.tsv_standard.TsvStandard"]], "build() (kqcircuits.elements.tsvs.tsv_standard.tsvstandard method)": [[62, "kqcircuits.elements.tsvs.tsv_standard.TsvStandard.build"]], "kqcircuits.elements.tsvs.tsv_standard": [[62, "module-kqcircuits.elements.tsvs.tsv_standard"]], "node (class in kqcircuits.elements.waveguide_composite)": [[63, "kqcircuits.elements.waveguide_composite.Node"]], "waveguidecomposite (class in kqcircuits.elements.waveguide_composite)": [[63, "kqcircuits.elements.waveguide_composite.WaveguideComposite"]], "align (kqcircuits.elements.waveguide_composite.node attribute)": [[63, "kqcircuits.elements.waveguide_composite.Node.align"]], "angle (kqcircuits.elements.waveguide_composite.node attribute)": [[63, "kqcircuits.elements.waveguide_composite.Node.angle"]], "build() (kqcircuits.elements.waveguide_composite.waveguidecomposite method)": [[63, "kqcircuits.elements.waveguide_composite.WaveguideComposite.build"]], "check_node_type() (kqcircuits.elements.waveguide_composite.waveguidecomposite method)": [[63, "kqcircuits.elements.waveguide_composite.WaveguideComposite.check_node_type"]], "coerce_parameters_impl() (kqcircuits.elements.waveguide_composite.waveguidecomposite method)": [[63, "kqcircuits.elements.waveguide_composite.WaveguideComposite.coerce_parameters_impl"]], "create() (kqcircuits.elements.waveguide_composite.waveguidecomposite class method)": [[63, "kqcircuits.elements.waveguide_composite.WaveguideComposite.create"]], "deserialize() (kqcircuits.elements.waveguide_composite.node class method)": [[63, "kqcircuits.elements.waveguide_composite.Node.deserialize"]], "element (kqcircuits.elements.waveguide_composite.node attribute)": [[63, "kqcircuits.elements.waveguide_composite.Node.element"]], "get_segment_cells() (kqcircuits.elements.waveguide_composite.waveguidecomposite static method)": [[63, "kqcircuits.elements.waveguide_composite.WaveguideComposite.get_segment_cells"]], "get_segment_lengths() (kqcircuits.elements.waveguide_composite.waveguidecomposite static method)": [[63, "kqcircuits.elements.waveguide_composite.WaveguideComposite.get_segment_lengths"]], "inst_name (kqcircuits.elements.waveguide_composite.node attribute)": [[63, "kqcircuits.elements.waveguide_composite.Node.inst_name"]], "kqcircuits.elements.waveguide_composite": [[63, "module-kqcircuits.elements.waveguide_composite"]], "length_before (kqcircuits.elements.waveguide_composite.node attribute)": [[63, "kqcircuits.elements.waveguide_composite.Node.length_before"]], "length_increment (kqcircuits.elements.waveguide_composite.node attribute)": [[63, "kqcircuits.elements.waveguide_composite.Node.length_increment"]], "meander_direction (kqcircuits.elements.waveguide_composite.node attribute)": [[63, "kqcircuits.elements.waveguide_composite.Node.meander_direction"]], "nodes_from_string() (kqcircuits.elements.waveguide_composite.node static method)": [[63, "kqcircuits.elements.waveguide_composite.Node.nodes_from_string"]], "position (kqcircuits.elements.waveguide_composite.node attribute)": [[63, "kqcircuits.elements.waveguide_composite.Node.position"]], "produce_fixed_length_bend() (in module kqcircuits.elements.waveguide_composite)": [[63, "kqcircuits.elements.waveguide_composite.produce_fixed_length_bend"]], "produce_fixed_length_waveguide() (kqcircuits.elements.waveguide_composite.waveguidecomposite static method)": [[63, "kqcircuits.elements.waveguide_composite.WaveguideComposite.produce_fixed_length_waveguide"]], "snap_point() (kqcircuits.elements.waveguide_composite.waveguidecomposite method)": [[63, "kqcircuits.elements.waveguide_composite.WaveguideComposite.snap_point"]], "waveguidecoplanar (class in kqcircuits.elements.waveguide_coplanar)": [[64, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar"]], "build() (kqcircuits.elements.waveguide_coplanar.waveguidecoplanar method)": [[64, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar.build"]], "can_create_from_shape_impl() (kqcircuits.elements.waveguide_coplanar.waveguidecoplanar method)": [[64, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar.can_create_from_shape_impl"]], "get_corner_data() (kqcircuits.elements.waveguide_coplanar.waveguidecoplanar static method)": [[64, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar.get_corner_data"]], "is_continuous() (kqcircuits.elements.waveguide_coplanar.waveguidecoplanar static method)": [[64, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar.is_continuous"]], "kqcircuits.elements.waveguide_coplanar": [[64, "module-kqcircuits.elements.waveguide_coplanar"]], "parameters_from_shape_impl() (kqcircuits.elements.waveguide_coplanar.waveguidecoplanar method)": [[64, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar.parameters_from_shape_impl"]], "produce_end_termination() (kqcircuits.elements.waveguide_coplanar.waveguidecoplanar static method)": [[64, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar.produce_end_termination"]], "produce_waveguide() (kqcircuits.elements.waveguide_coplanar.waveguidecoplanar method)": [[64, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar.produce_waveguide"]], "transformation_from_shape_impl() (kqcircuits.elements.waveguide_coplanar.waveguidecoplanar method)": [[64, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar.transformation_from_shape_impl"]], "waveguidecoplanarcurved (class in kqcircuits.elements.waveguide_coplanar_curved)": [[65, "kqcircuits.elements.waveguide_coplanar_curved.WaveguideCoplanarCurved"]], "arc() (in module kqcircuits.elements.waveguide_coplanar_curved)": [[65, "kqcircuits.elements.waveguide_coplanar_curved.arc"]], "build() (kqcircuits.elements.waveguide_coplanar_curved.waveguidecoplanarcurved method)": [[65, "kqcircuits.elements.waveguide_coplanar_curved.WaveguideCoplanarCurved.build"]], "build_geometry() (kqcircuits.elements.waveguide_coplanar_curved.waveguidecoplanarcurved static method)": [[65, "kqcircuits.elements.waveguide_coplanar_curved.WaveguideCoplanarCurved.build_geometry"]], "coerce_parameters_impl() (kqcircuits.elements.waveguide_coplanar_curved.waveguidecoplanarcurved method)": [[65, "kqcircuits.elements.waveguide_coplanar_curved.WaveguideCoplanarCurved.coerce_parameters_impl"]], "create_curve_arcs() (kqcircuits.elements.waveguide_coplanar_curved.waveguidecoplanarcurved static method)": [[65, "kqcircuits.elements.waveguide_coplanar_curved.WaveguideCoplanarCurved.create_curve_arcs"]], "kqcircuits.elements.waveguide_coplanar_curved": [[65, "module-kqcircuits.elements.waveguide_coplanar_curved"]], "produce_curve_termination() (kqcircuits.elements.waveguide_coplanar_curved.waveguidecoplanarcurved static method)": [[65, "kqcircuits.elements.waveguide_coplanar_curved.WaveguideCoplanarCurved.produce_curve_termination"]], "waveguidecoplanarsplitter (class in kqcircuits.elements.waveguide_coplanar_splitter)": [[66, "kqcircuits.elements.waveguide_coplanar_splitter.WaveguideCoplanarSplitter"]], "build() (kqcircuits.elements.waveguide_coplanar_splitter.waveguidecoplanarsplitter method)": [[66, "kqcircuits.elements.waveguide_coplanar_splitter.WaveguideCoplanarSplitter.build"]], "kqcircuits.elements.waveguide_coplanar_splitter": [[66, "module-kqcircuits.elements.waveguide_coplanar_splitter"]], "t_cross_parameters() (in module kqcircuits.elements.waveguide_coplanar_splitter)": [[66, "kqcircuits.elements.waveguide_coplanar_splitter.t_cross_parameters"]], "waveguidecoplanarstraight (class in kqcircuits.elements.waveguide_coplanar_straight)": [[67, "kqcircuits.elements.waveguide_coplanar_straight.WaveguideCoplanarStraight"]], "build() (kqcircuits.elements.waveguide_coplanar_straight.waveguidecoplanarstraight method)": [[67, "kqcircuits.elements.waveguide_coplanar_straight.WaveguideCoplanarStraight.build"]], "build_geometry() (kqcircuits.elements.waveguide_coplanar_straight.waveguidecoplanarstraight static method)": [[67, "kqcircuits.elements.waveguide_coplanar_straight.WaveguideCoplanarStraight.build_geometry"]], "kqcircuits.elements.waveguide_coplanar_straight": [[67, "module-kqcircuits.elements.waveguide_coplanar_straight"]], "waveguidecoplanartaper (class in kqcircuits.elements.waveguide_coplanar_taper)": [[68, "kqcircuits.elements.waveguide_coplanar_taper.WaveguideCoplanarTaper"]], "build() (kqcircuits.elements.waveguide_coplanar_taper.waveguidecoplanartaper method)": [[68, "kqcircuits.elements.waveguide_coplanar_taper.WaveguideCoplanarTaper.build"]], "kqcircuits.elements.waveguide_coplanar_taper": [[68, "module-kqcircuits.elements.waveguide_coplanar_taper"]], "kqcircuits.junctions": [[69, "module-kqcircuits.junctions"]], "junction (class in kqcircuits.junctions.junction)": [[70, "kqcircuits.junctions.junction.Junction"]], "library_description (kqcircuits.junctions.junction.junction attribute)": [[70, "kqcircuits.junctions.junction.Junction.LIBRARY_DESCRIPTION"]], "library_name (kqcircuits.junctions.junction.junction attribute)": [[70, "kqcircuits.junctions.junction.Junction.LIBRARY_NAME"]], "library_path (kqcircuits.junctions.junction.junction attribute)": [[70, "kqcircuits.junctions.junction.Junction.LIBRARY_PATH"]], "coerce_parameters_impl() (kqcircuits.junctions.junction.junction method)": [[70, "kqcircuits.junctions.junction.Junction.coerce_parameters_impl"]], "create() (kqcircuits.junctions.junction.junction class method)": [[70, "kqcircuits.junctions.junction.Junction.create"]], "default_type (kqcircuits.junctions.junction.junction attribute)": [[70, "kqcircuits.junctions.junction.Junction.default_type"]], "kqcircuits.junctions.junction": [[70, "module-kqcircuits.junctions.junction"]], "manhattan (class in kqcircuits.junctions.manhattan)": [[71, "kqcircuits.junctions.manhattan.Manhattan"]], "build() (kqcircuits.junctions.manhattan.manhattan method)": [[71, "kqcircuits.junctions.manhattan.Manhattan.build"]], "kqcircuits.junctions.manhattan": [[71, "module-kqcircuits.junctions.manhattan"]], "produce_contact_pads() (kqcircuits.junctions.manhattan.manhattan method)": [[71, "kqcircuits.junctions.manhattan.Manhattan.produce_contact_pads"]], "produce_manhattan_squid() (kqcircuits.junctions.manhattan.manhattan method)": [[71, "kqcircuits.junctions.manhattan.Manhattan.produce_manhattan_squid"]], "produce_tp_large() (kqcircuits.junctions.manhattan.manhattan method)": [[71, "kqcircuits.junctions.manhattan.Manhattan.produce_tp_large"]], "produce_tp_small() (kqcircuits.junctions.manhattan.manhattan method)": [[71, "kqcircuits.junctions.manhattan.Manhattan.produce_tp_small"]], "manhattansinglejunction (class in kqcircuits.junctions.manhattan_single_junction)": [[72, "kqcircuits.junctions.manhattan_single_junction.ManhattanSingleJunction"]], "build() (kqcircuits.junctions.manhattan_single_junction.manhattansinglejunction method)": [[72, "kqcircuits.junctions.manhattan_single_junction.ManhattanSingleJunction.build"]], "kqcircuits.junctions.manhattan_single_junction": [[72, "module-kqcircuits.junctions.manhattan_single_junction"]], "produce_manhattan_junction() (kqcircuits.junctions.manhattan_single_junction.manhattansinglejunction method)": [[72, "kqcircuits.junctions.manhattan_single_junction.ManhattanSingleJunction.produce_manhattan_junction"]], "nosquid (class in kqcircuits.junctions.no_squid)": [[73, "kqcircuits.junctions.no_squid.NoSquid"]], "build() (kqcircuits.junctions.no_squid.nosquid method)": [[73, "kqcircuits.junctions.no_squid.NoSquid.build"]], "kqcircuits.junctions.no_squid": [[73, "module-kqcircuits.junctions.no_squid"]], "sim (class in kqcircuits.junctions.sim)": [[74, "kqcircuits.junctions.sim.Sim"]], "build() (kqcircuits.junctions.sim.sim method)": [[74, "kqcircuits.junctions.sim.Sim.build"]], "kqcircuits.junctions.sim": [[74, "module-kqcircuits.junctions.sim"]], "squid (class in kqcircuits.junctions.squid)": [[75, "kqcircuits.junctions.squid.Squid"]], "kqcircuits.junctions.squid": [[75, "module-kqcircuits.junctions.squid"]], "klayoutview (class in kqcircuits.klayout_view)": [[76, "kqcircuits.klayout_view.KLayoutView"]], "missinguilibraryexception": [[76, "kqcircuits.klayout_view.MissingUILibraryException"]], "active_cell (kqcircuits.klayout_view.klayoutview property)": [[76, "kqcircuits.klayout_view.KLayoutView.active_cell"]], "add_default_layers() (kqcircuits.klayout_view.klayoutview method)": [[76, "kqcircuits.klayout_view.KLayoutView.add_default_layers"]], "cell_view (kqcircuits.klayout_view.klayoutview property)": [[76, "kqcircuits.klayout_view.KLayoutView.cell_view"]], "clear_layers() (kqcircuits.klayout_view.klayoutview method)": [[76, "kqcircuits.klayout_view.KLayoutView.clear_layers"]], "close() (kqcircuits.klayout_view.klayoutview method)": [[76, "kqcircuits.klayout_view.KLayoutView.close"]], "create_top_cell() (kqcircuits.klayout_view.klayoutview method)": [[76, "kqcircuits.klayout_view.KLayoutView.create_top_cell"]], "export_all_layers_bitmap() (kqcircuits.klayout_view.klayoutview method)": [[76, "kqcircuits.klayout_view.KLayoutView.export_all_layers_bitmap"]], "export_layers_bitmaps() (kqcircuits.klayout_view.klayoutview method)": [[76, "kqcircuits.klayout_view.KLayoutView.export_layers_bitmaps"]], "export_pcell_png() (kqcircuits.klayout_view.klayoutview method)": [[76, "kqcircuits.klayout_view.KLayoutView.export_pcell_png"]], "focus() (kqcircuits.klayout_view.klayoutview method)": [[76, "kqcircuits.klayout_view.KLayoutView.focus"]], "get_active_cell() (kqcircuits.klayout_view.klayoutview static method)": [[76, "kqcircuits.klayout_view.KLayoutView.get_active_cell"]], "get_active_cell_view() (kqcircuits.klayout_view.klayoutview static method)": [[76, "kqcircuits.klayout_view.KLayoutView.get_active_cell_view"]], "get_active_layout() (kqcircuits.klayout_view.klayoutview static method)": [[76, "kqcircuits.klayout_view.KLayoutView.get_active_layout"]], "get_pixels() (kqcircuits.klayout_view.klayoutview method)": [[76, "kqcircuits.klayout_view.KLayoutView.get_pixels"]], "insert_cell() (kqcircuits.klayout_view.klayoutview method)": [[76, "kqcircuits.klayout_view.KLayoutView.insert_cell"]], "kqcircuits.klayout_view": [[76, "module-kqcircuits.klayout_view"]], "layout (kqcircuits.klayout_view.klayoutview property)": [[76, "kqcircuits.klayout_view.KLayoutView.layout"]], "layout_view (kqcircuits.klayout_view.klayoutview attribute)": [[76, "kqcircuits.klayout_view.KLayoutView.layout_view"]], "resolve_default_layer_info() (in module kqcircuits.klayout_view)": [[76, "kqcircuits.klayout_view.resolve_default_layer_info"]], "show() (kqcircuits.klayout_view.klayoutview method)": [[76, "kqcircuits.klayout_view.KLayoutView.show"]], "top_cell (kqcircuits.klayout_view.klayoutview property)": [[76, "kqcircuits.klayout_view.KLayoutView.top_cell"]], "layercluster (class in kqcircuits.layer_cluster)": [[77, "kqcircuits.layer_cluster.LayerCluster"]], "all_layers() (kqcircuits.layer_cluster.layercluster method)": [[77, "kqcircuits.layer_cluster.LayerCluster.all_layers"]], "extra_layers (kqcircuits.layer_cluster.layercluster attribute)": [[77, "kqcircuits.layer_cluster.LayerCluster.extra_layers"]], "face_id (kqcircuits.layer_cluster.layercluster attribute)": [[77, "kqcircuits.layer_cluster.LayerCluster.face_id"]], "kqcircuits.layer_cluster": [[77, "module-kqcircuits.layer_cluster"]], "main_layers (kqcircuits.layer_cluster.layercluster attribute)": [[77, "kqcircuits.layer_cluster.LayerCluster.main_layers"]], "kqcircuits.layer_config": [[78, "module-kqcircuits.layer_config"]], "kqcircuits.layer_config.default_layer_config": [[79, "module-kqcircuits.layer_config.default_layer_config"]], "kqcircuits.layer_config.example_layer_config": [[80, "module-kqcircuits.layer_config.example_layer_config"]], "kqcircuits.masks": [[81, "module-kqcircuits.masks"]], "export_bitmaps() (in module kqcircuits.masks.mask_export)": [[82, "kqcircuits.masks.mask_export.export_bitmaps"]], "export_chip() (in module kqcircuits.masks.mask_export)": [[82, "kqcircuits.masks.mask_export.export_chip"]], "export_designs() (in module kqcircuits.masks.mask_export)": [[82, "kqcircuits.masks.mask_export.export_designs"]], "export_docs() (in module kqcircuits.masks.mask_export)": [[82, "kqcircuits.masks.mask_export.export_docs"]], "export_junction_parameters() (in module kqcircuits.masks.mask_export)": [[82, "kqcircuits.masks.mask_export.export_junction_parameters"]], "export_mask() (in module kqcircuits.masks.mask_export)": [[82, "kqcircuits.masks.mask_export.export_mask"]], "export_mask_set() (in module kqcircuits.masks.mask_export)": [[82, "kqcircuits.masks.mask_export.export_mask_set"]], "export_masks_of_face() (in module kqcircuits.masks.mask_export)": [[82, "kqcircuits.masks.mask_export.export_masks_of_face"]], "get_mask_layout_full_name() (in module kqcircuits.masks.mask_export)": [[82, "kqcircuits.masks.mask_export.get_mask_layout_full_name"]], "kqcircuits.masks.mask_export": [[82, "module-kqcircuits.masks.mask_export"]], "masklayout (class in kqcircuits.masks.mask_layout)": [[83, "kqcircuits.masks.mask_layout.MaskLayout"]], "add_chips_map() (kqcircuits.masks.mask_layout.masklayout method)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.add_chips_map"]], "added_chips (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.added_chips"]], "align_to (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.align_to"]], "bbox_face_ids (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.bbox_face_ids"]], "build() (kqcircuits.masks.mask_layout.masklayout method)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.build"]], "chip_box_offset (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.chip_box_offset"]], "chip_copies (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.chip_copies"]], "chip_size (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.chip_size"]], "chip_trans (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.chip_trans"]], "chips_map (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.chips_map"]], "chips_map_legend (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.chips_map_legend"]], "chips_map_offset (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.chips_map_offset"]], "chips_placed_by_position_label (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.chips_placed_by_position_label"]], "covered_region_excluded_layers (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.covered_region_excluded_layers"]], "dice_width (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.dice_width"]], "edge_clearance (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.edge_clearance"]], "extra_chips (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.extra_chips"]], "extra_id (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.extra_id"]], "face() (kqcircuits.masks.mask_layout.masklayout method)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.face"]], "face_id (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.face_id"]], "generate_and_insert_chip_copy_labels() (kqcircuits.masks.mask_layout.masklayout method)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.generate_and_insert_chip_copy_labels"]], "generate_position_label() (kqcircuits.masks.mask_layout.masklayout static method)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.generate_position_label"]], "insert_chip_copy_labels() (kqcircuits.masks.mask_layout.masklayout method)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.insert_chip_copy_labels"]], "insert_chips() (kqcircuits.masks.mask_layout.masklayout method)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.insert_chips"]], "kqcircuits.masks.mask_layout": [[83, "module-kqcircuits.masks.mask_layout"]], "layers_to_mask (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.layers_to_mask"]], "layout (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.layout"]], "mask_export_density_layers (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.mask_export_density_layers"]], "mask_export_layers (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.mask_export_layers"]], "mask_marker_offset (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.mask_marker_offset"]], "mask_markers_dict (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.mask_markers_dict"]], "mask_name_box_margin (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.mask_name_box_margin"]], "mask_name_offset (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.mask_name_offset"]], "mask_name_scale (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.mask_name_scale"]], "mask_text_scale (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.mask_text_scale"]], "mirror_labels (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.mirror_labels"]], "name (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.name"]], "position_label_to_two_coordinates() (kqcircuits.masks.mask_layout.masklayout static method)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.position_label_to_two_coordinates"]], "remove_chips (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.remove_chips"]], "submasks (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.submasks"]], "text_margin (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.text_margin"]], "top_cell (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.top_cell"]], "two_coordinates_to_position_label() (kqcircuits.masks.mask_layout.masklayout static method)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.two_coordinates_to_position_label"]], "version (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.version"]], "wafer_bottom_flat_length (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.wafer_bottom_flat_length"]], "wafer_center (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.wafer_center"]], "wafer_rad (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.wafer_rad"]], "wafer_top_flat_length (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.wafer_top_flat_length"]], "with_grid (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.with_grid"]], "maskset (class in kqcircuits.masks.mask_set)": [[84, "kqcircuits.masks.mask_set.MaskSet"]], "add_chip() (kqcircuits.masks.mask_set.maskset method)": [[84, "kqcircuits.masks.mask_set.MaskSet.add_chip"]], "add_mask_layout() (kqcircuits.masks.mask_set.maskset method)": [[84, "kqcircuits.masks.mask_set.MaskSet.add_mask_layout"]], "add_multi_face_mask_layout() (kqcircuits.masks.mask_set.maskset method)": [[84, "kqcircuits.masks.mask_set.MaskSet.add_multi_face_mask_layout"]], "build() (kqcircuits.masks.mask_set.maskset method)": [[84, "kqcircuits.masks.mask_set.MaskSet.build"]], "chips_map_from_box_map() (kqcircuits.masks.mask_set.maskset static method)": [[84, "kqcircuits.masks.mask_set.MaskSet.chips_map_from_box_map"]], "chips_map_legend (kqcircuits.masks.mask_set.maskset attribute)": [[84, "kqcircuits.masks.mask_set.MaskSet.chips_map_legend"]], "export() (kqcircuits.masks.mask_set.maskset method)": [[84, "kqcircuits.masks.mask_set.MaskSet.export"]], "export_drc (kqcircuits.masks.mask_set.maskset attribute)": [[84, "kqcircuits.masks.mask_set.MaskSet.export_drc"]], "export_path (kqcircuits.masks.mask_set.maskset attribute)": [[84, "kqcircuits.masks.mask_set.MaskSet.export_path"]], "kqcircuits.masks.mask_set": [[84, "module-kqcircuits.masks.mask_set"]], "layout (kqcircuits.masks.mask_set.maskset attribute)": [[84, "kqcircuits.masks.mask_set.MaskSet.layout"]], "mask_export_layers (kqcircuits.masks.mask_set.maskset attribute)": [[84, "kqcircuits.masks.mask_set.MaskSet.mask_export_layers"]], "mask_layouts (kqcircuits.masks.mask_set.maskset attribute)": [[84, "kqcircuits.masks.mask_set.MaskSet.mask_layouts"]], "name (kqcircuits.masks.mask_set.maskset attribute)": [[84, "kqcircuits.masks.mask_set.MaskSet.name"]], "used_chips (kqcircuits.masks.mask_set.maskset attribute)": [[84, "kqcircuits.masks.mask_set.MaskSet.used_chips"]], "version (kqcircuits.masks.mask_set.maskset attribute)": [[84, "kqcircuits.masks.mask_set.MaskSet.version"]], "with_grid (kqcircuits.masks.mask_set.maskset attribute)": [[84, "kqcircuits.masks.mask_set.MaskSet.with_grid"]], "multifacemasklayout (class in kqcircuits.masks.multi_face_mask_layout)": [[85, "kqcircuits.masks.multi_face_mask_layout.MultiFaceMaskLayout"]], "add_chips_map() (kqcircuits.masks.multi_face_mask_layout.multifacemasklayout method)": [[85, "kqcircuits.masks.multi_face_mask_layout.MultiFaceMaskLayout.add_chips_map"]], "face_ids (kqcircuits.masks.multi_face_mask_layout.multifacemasklayout attribute)": [[85, "kqcircuits.masks.multi_face_mask_layout.MultiFaceMaskLayout.face_ids"]], "kqcircuits.masks.multi_face_mask_layout": [[85, "module-kqcircuits.masks.multi_face_mask_layout"]], "mask_layouts (kqcircuits.masks.multi_face_mask_layout.multifacemasklayout attribute)": [[85, "kqcircuits.masks.multi_face_mask_layout.MultiFaceMaskLayout.mask_layouts"]], "is_standalone_session() (in module kqcircuits.pya_resolver)": [[86, "kqcircuits.pya_resolver.is_standalone_session"]], "klayout_executable_command() (in module kqcircuits.pya_resolver)": [[86, "kqcircuits.pya_resolver.klayout_executable_command"]], "kqcircuits.pya_resolver": [[86, "module-kqcircuits.pya_resolver"]], "kqcircuits.qubits": [[87, "module-kqcircuits.qubits"]], "circulartransmonsingleisland (class in kqcircuits.qubits.circular_transmon_single_island)": [[88, "kqcircuits.qubits.circular_transmon_single_island.CircularTransmonSingleIsland"]], "build() (kqcircuits.qubits.circular_transmon_single_island.circulartransmonsingleisland method)": [[88, "kqcircuits.qubits.circular_transmon_single_island.CircularTransmonSingleIsland.build"]], "get_sim_ports() (kqcircuits.qubits.circular_transmon_single_island.circulartransmonsingleisland class method)": [[88, "kqcircuits.qubits.circular_transmon_single_island.CircularTransmonSingleIsland.get_sim_ports"]], "kqcircuits.qubits.circular_transmon_single_island": [[88, "module-kqcircuits.qubits.circular_transmon_single_island"]], "concentrictransmon (class in kqcircuits.qubits.concentric_transmon)": [[89, "kqcircuits.qubits.concentric_transmon.ConcentricTransmon"]], "build() (kqcircuits.qubits.concentric_transmon.concentrictransmon method)": [[89, "kqcircuits.qubits.concentric_transmon.ConcentricTransmon.build"]], "get_sim_ports() (kqcircuits.qubits.concentric_transmon.concentrictransmon class method)": [[89, "kqcircuits.qubits.concentric_transmon.ConcentricTransmon.get_sim_ports"]], "kqcircuits.qubits.concentric_transmon": [[89, "module-kqcircuits.qubits.concentric_transmon"]], "doublepads (class in kqcircuits.qubits.double_pads)": [[90, "kqcircuits.qubits.double_pads.DoublePads"]], "build() (kqcircuits.qubits.double_pads.doublepads method)": [[90, "kqcircuits.qubits.double_pads.DoublePads.build"]], "get_sim_ports() (kqcircuits.qubits.double_pads.doublepads class method)": [[90, "kqcircuits.qubits.double_pads.DoublePads.get_sim_ports"]], "kqcircuits.qubits.double_pads": [[90, "module-kqcircuits.qubits.double_pads"]], "doublepadssplines (class in kqcircuits.qubits.double_pads_splines)": [[91, "kqcircuits.qubits.double_pads_splines.DoublePadsSplines"]], "kqcircuits.qubits.double_pads_splines": [[91, "module-kqcircuits.qubits.double_pads_splines"]], "library_description (kqcircuits.qubits.qubit.qubit attribute)": [[92, "kqcircuits.qubits.qubit.Qubit.LIBRARY_DESCRIPTION"]], "library_name (kqcircuits.qubits.qubit.qubit attribute)": [[92, "kqcircuits.qubits.qubit.Qubit.LIBRARY_NAME"]], "library_path (kqcircuits.qubits.qubit.qubit attribute)": [[92, "kqcircuits.qubits.qubit.Qubit.LIBRARY_PATH"]], "qubit (class in kqcircuits.qubits.qubit)": [[92, "kqcircuits.qubits.qubit.Qubit"]], "coerce_parameters_impl() (kqcircuits.qubits.qubit.qubit method)": [[92, "kqcircuits.qubits.qubit.Qubit.coerce_parameters_impl"]], "kqcircuits.qubits.qubit": [[92, "module-kqcircuits.qubits.qubit"]], "produce_fluxline() (kqcircuits.qubits.qubit.qubit method)": [[92, "kqcircuits.qubits.qubit.Qubit.produce_fluxline"]], "produce_squid() (kqcircuits.qubits.qubit.qubit method)": [[92, "kqcircuits.qubits.qubit.Qubit.produce_squid"]], "swissmon (class in kqcircuits.qubits.swissmon)": [[93, "kqcircuits.qubits.swissmon.Swissmon"]], "build() (kqcircuits.qubits.swissmon.swissmon method)": [[93, "kqcircuits.qubits.swissmon.Swissmon.build"]], "get_sim_ports() (kqcircuits.qubits.swissmon.swissmon class method)": [[93, "kqcircuits.qubits.swissmon.Swissmon.get_sim_ports"]], "kqcircuits.qubits.swissmon": [[93, "module-kqcircuits.qubits.swissmon"]], "argument_parser() (in module kqcircuits.run)": [[94, "kqcircuits.run.argument_parser"]], "kqcircuits.run": [[94, "module-kqcircuits.run"]], "run() (in module kqcircuits.run)": [[94, "kqcircuits.run.run"]], "run_kqc() (in module kqcircuits.run)": [[94, "kqcircuits.run.run_kqc"]], "kqcircuits.simulations": [[95, "module-kqcircuits.simulations"]], "airbridgessim (class in kqcircuits.simulations.airbridges_sim)": [[96, "kqcircuits.simulations.airbridges_sim.AirbridgesSim"]], "build() (kqcircuits.simulations.airbridges_sim.airbridgessim method)": [[96, "kqcircuits.simulations.airbridges_sim.AirbridgesSim.build"]], "kqcircuits.simulations.airbridges_sim": [[96, "module-kqcircuits.simulations.airbridges_sim"]], "crosssectionsimulation (class in kqcircuits.simulations.cross_section_simulation)": [[97, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation"]], "library_name (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation attribute)": [[97, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.LIBRARY_NAME"]], "build() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[97, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.build"]], "get_dict_by_layers() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[97, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.get_dict_by_layers"]], "get_layers() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[97, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.get_layers"]], "get_parameters() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[97, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.get_parameters"]], "get_schema() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation class method)": [[97, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.get_schema"]], "get_sim_layer() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[97, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.get_sim_layer"]], "get_simulation_data() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[97, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.get_simulation_data"]], "kqcircuits.simulations.cross_section_simulation": [[97, "module-kqcircuits.simulations.cross_section_simulation"]], "process_layers() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[97, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.process_layers"]], "register_cell_layers_as_sim_layers() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[97, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.register_cell_layers_as_sim_layers"]], "set_permittivity() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[97, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.set_permittivity"]], "emptysimulation (class in kqcircuits.simulations.empty_simulation)": [[98, "kqcircuits.simulations.empty_simulation.EmptySimulation"]], "build() (kqcircuits.simulations.empty_simulation.emptysimulation method)": [[98, "kqcircuits.simulations.empty_simulation.EmptySimulation.build"]], "kqcircuits.simulations.empty_simulation": [[98, "module-kqcircuits.simulations.empty_simulation"]], "correction_cuts() (in module kqcircuits.simulations.epr.circular_capacitor)": [[100, "kqcircuits.simulations.epr.circular_capacitor.correction_cuts"]], "extract_circular_capacitor_from() (in module kqcircuits.simulations.epr.circular_capacitor)": [[100, "kqcircuits.simulations.epr.circular_capacitor.extract_circular_capacitor_from"]], "kqcircuits.simulations.epr.circular_capacitor": [[100, "module-kqcircuits.simulations.epr.circular_capacitor"]], "partition_regions() (in module kqcircuits.simulations.epr.circular_capacitor)": [[100, "kqcircuits.simulations.epr.circular_capacitor.partition_regions"]], "correction_cuts() (in module kqcircuits.simulations.epr.example)": [[101, "kqcircuits.simulations.epr.example.correction_cuts"]], "extract_from() (in module kqcircuits.simulations.epr.example)": [[101, "kqcircuits.simulations.epr.example.extract_from"]], "kqcircuits.simulations.epr.example": [[101, "module-kqcircuits.simulations.epr.example"]], "partition_regions() (in module kqcircuits.simulations.epr.example)": [[101, "kqcircuits.simulations.epr.example.partition_regions"]], "kqcircuits.simulations.epr.gui_config": [[102, "module-kqcircuits.simulations.epr.gui_config"]], "correction_cuts() (in module kqcircuits.simulations.epr.smooth_capacitor)": [[103, "kqcircuits.simulations.epr.smooth_capacitor.correction_cuts"]], "kqcircuits.simulations.epr.smooth_capacitor": [[103, "module-kqcircuits.simulations.epr.smooth_capacitor"]], "partition_regions() (in module kqcircuits.simulations.epr.smooth_capacitor)": [[103, "kqcircuits.simulations.epr.smooth_capacitor.partition_regions"]], "correction_cuts() (in module kqcircuits.simulations.epr.swissmon)": [[104, "kqcircuits.simulations.epr.swissmon.correction_cuts"]], "extract_swissmon_from() (in module kqcircuits.simulations.epr.swissmon)": [[104, "kqcircuits.simulations.epr.swissmon.extract_swissmon_from"]], "kqcircuits.simulations.epr.swissmon": [[104, "module-kqcircuits.simulations.epr.swissmon"]], "partition_regions() (in module kqcircuits.simulations.epr.swissmon)": [[104, "kqcircuits.simulations.epr.swissmon.partition_regions"]], "extract_child_simulation() (in module kqcircuits.simulations.epr.utils)": [[105, "kqcircuits.simulations.epr.utils.extract_child_simulation"]], "in_gui() (in module kqcircuits.simulations.epr.utils)": [[105, "kqcircuits.simulations.epr.utils.in_gui"]], "kqcircuits.simulations.epr.utils": [[105, "module-kqcircuits.simulations.epr.utils"]], "kqcircuits.simulations.export": [[106, "module-kqcircuits.simulations.export"]], "kqcircuits.simulations.export.ansys": [[107, "module-kqcircuits.simulations.export.ansys"]], "export_ansys() (in module kqcircuits.simulations.export.ansys.ansys_export)": [[108, "kqcircuits.simulations.export.ansys.ansys_export.export_ansys"]], "export_ansys_bat() (in module kqcircuits.simulations.export.ansys.ansys_export)": [[108, "kqcircuits.simulations.export.ansys.ansys_export.export_ansys_bat"]], "export_ansys_json() (in module kqcircuits.simulations.export.ansys.ansys_export)": [[108, "kqcircuits.simulations.export.ansys.ansys_export.export_ansys_json"]], "kqcircuits.simulations.export.ansys.ansys_export": [[108, "module-kqcircuits.simulations.export.ansys.ansys_export"]], "ansyscrosssectionsolution (class in kqcircuits.simulations.export.ansys.ansys_solution)": [[109, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCrossSectionSolution"]], "ansyscurrentsolution (class in kqcircuits.simulations.export.ansys.ansys_solution)": [[109, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCurrentSolution"]], "ansyseigenmodesolution (class in kqcircuits.simulations.export.ansys.ansys_solution)": [[109, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution"]], "ansyshfsssolution (class in kqcircuits.simulations.export.ansys.ansys_solution)": [[109, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution"]], "ansysq3dsolution (class in kqcircuits.simulations.export.ansys.ansys_solution)": [[109, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysQ3dSolution"]], "ansyssolution (class in kqcircuits.simulations.export.ansys.ansys_solution)": [[109, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution"]], "ansysvoltagesolution (class in kqcircuits.simulations.export.ansys.ansys_solution)": [[109, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysVoltageSolution"]], "ansys_project_template (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution attribute)": [[109, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.ansys_project_template"]], "ansys_tool (kqcircuits.simulations.export.ansys.ansys_solution.ansyscrosssectionsolution attribute)": [[109, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCrossSectionSolution.ansys_tool"]], "ansys_tool (kqcircuits.simulations.export.ansys.ansys_solution.ansyscurrentsolution attribute)": [[109, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCurrentSolution.ansys_tool"]], "ansys_tool (kqcircuits.simulations.export.ansys.ansys_solution.ansyseigenmodesolution attribute)": [[109, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution.ansys_tool"]], "ansys_tool (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[109, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.ansys_tool"]], "ansys_tool (kqcircuits.simulations.export.ansys.ansys_solution.ansysq3dsolution attribute)": [[109, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysQ3dSolution.ansys_tool"]], "ansys_tool (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution attribute)": [[109, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.ansys_tool"]], "ansys_tool (kqcircuits.simulations.export.ansys.ansys_solution.ansysvoltagesolution attribute)": [[109, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysVoltageSolution.ansys_tool"]], "capacitance_export (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[109, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.capacitance_export"]], "frequency (kqcircuits.simulations.export.ansys.ansys_solution.ansyscrosssectionsolution attribute)": [[109, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCrossSectionSolution.frequency"]], "frequency (kqcircuits.simulations.export.ansys.ansys_solution.ansyscurrentsolution attribute)": [[109, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCurrentSolution.frequency"]], "frequency (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[109, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.frequency"]], "frequency (kqcircuits.simulations.export.ansys.ansys_solution.ansysq3dsolution attribute)": [[109, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysQ3dSolution.frequency"]], "frequency (kqcircuits.simulations.export.ansys.ansys_solution.ansysvoltagesolution attribute)": [[109, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysVoltageSolution.frequency"]], "frequency_units (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution attribute)": [[109, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.frequency_units"]], "get_ansys_solution() (in module kqcircuits.simulations.export.ansys.ansys_solution)": [[109, "kqcircuits.simulations.export.ansys.ansys_solution.get_ansys_solution"]], "get_solution_data() (kqcircuits.simulations.export.ansys.ansys_solution.ansyscrosssectionsolution method)": [[109, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCrossSectionSolution.get_solution_data"]], "get_solution_data() (kqcircuits.simulations.export.ansys.ansys_solution.ansyscurrentsolution method)": [[109, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCurrentSolution.get_solution_data"]], "get_solution_data() (kqcircuits.simulations.export.ansys.ansys_solution.ansyseigenmodesolution method)": [[109, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution.get_solution_data"]], "get_solution_data() (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution method)": [[109, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.get_solution_data"]], "get_solution_data() (kqcircuits.simulations.export.ansys.ansys_solution.ansysq3dsolution method)": [[109, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysQ3dSolution.get_solution_data"]], "get_solution_data() (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution method)": [[109, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.get_solution_data"]], "get_solution_data() (kqcircuits.simulations.export.ansys.ansys_solution.ansysvoltagesolution method)": [[109, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysVoltageSolution.get_solution_data"]], "integrate_energies (kqcircuits.simulations.export.ansys.ansys_solution.ansyscrosssectionsolution attribute)": [[109, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCrossSectionSolution.integrate_energies"]], "integrate_energies (kqcircuits.simulations.export.ansys.ansys_solution.ansyscurrentsolution attribute)": [[109, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCurrentSolution.integrate_energies"]], "integrate_energies (kqcircuits.simulations.export.ansys.ansys_solution.ansyseigenmodesolution attribute)": [[109, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution.integrate_energies"]], "integrate_energies (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[109, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.integrate_energies"]], "integrate_energies (kqcircuits.simulations.export.ansys.ansys_solution.ansysvoltagesolution attribute)": [[109, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysVoltageSolution.integrate_energies"]], "integrate_magnetic_flux (kqcircuits.simulations.export.ansys.ansys_solution.ansyscurrentsolution attribute)": [[109, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCurrentSolution.integrate_magnetic_flux"]], "integrate_magnetic_flux (kqcircuits.simulations.export.ansys.ansys_solution.ansyseigenmodesolution attribute)": [[109, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution.integrate_magnetic_flux"]], "integrate_magnetic_flux (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[109, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.integrate_magnetic_flux"]], "integrate_magnetic_flux (kqcircuits.simulations.export.ansys.ansys_solution.ansysvoltagesolution attribute)": [[109, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysVoltageSolution.integrate_magnetic_flux"]], "kqcircuits.simulations.export.ansys.ansys_solution": [[109, "module-kqcircuits.simulations.export.ansys.ansys_solution"]], "max_delta_e (kqcircuits.simulations.export.ansys.ansys_solution.ansyscurrentsolution attribute)": [[109, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCurrentSolution.max_delta_e"]], "max_delta_e (kqcircuits.simulations.export.ansys.ansys_solution.ansysvoltagesolution attribute)": [[109, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysVoltageSolution.max_delta_e"]], "max_delta_f (kqcircuits.simulations.export.ansys.ansys_solution.ansyseigenmodesolution attribute)": [[109, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution.max_delta_f"]], "max_delta_s (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[109, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.max_delta_s"]], "maximum_passes (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution attribute)": [[109, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.maximum_passes"]], "mesh_size (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution attribute)": [[109, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.mesh_size"]], "min_frequency (kqcircuits.simulations.export.ansys.ansys_solution.ansyseigenmodesolution attribute)": [[109, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution.min_frequency"]], "minimum_converged_passes (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution attribute)": [[109, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.minimum_converged_passes"]], "minimum_passes (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution attribute)": [[109, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.minimum_passes"]], "n_modes (kqcircuits.simulations.export.ansys.ansys_solution.ansyseigenmodesolution attribute)": [[109, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution.n_modes"]], "percent_error (kqcircuits.simulations.export.ansys.ansys_solution.ansyscrosssectionsolution attribute)": [[109, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCrossSectionSolution.percent_error"]], "percent_error (kqcircuits.simulations.export.ansys.ansys_solution.ansysq3dsolution attribute)": [[109, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysQ3dSolution.percent_error"]], "percent_refinement (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution attribute)": [[109, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.percent_refinement"]], "simulation_flags (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution attribute)": [[109, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.simulation_flags"]], "sweep_count (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[109, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.sweep_count"]], "sweep_enabled (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[109, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.sweep_enabled"]], "sweep_end (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[109, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.sweep_end"]], "sweep_start (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[109, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.sweep_start"]], "sweep_type (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[109, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.sweep_type"]], "kqcircuits.simulations.export.elmer": [[110, "module-kqcircuits.simulations.export.elmer"]], "export_elmer() (in module kqcircuits.simulations.export.elmer.elmer_export)": [[111, "kqcircuits.simulations.export.elmer.elmer_export.export_elmer"]], "export_elmer_json() (in module kqcircuits.simulations.export.elmer.elmer_export)": [[111, "kqcircuits.simulations.export.elmer.elmer_export.export_elmer_json"]], "export_elmer_script() (in module kqcircuits.simulations.export.elmer.elmer_export)": [[111, "kqcircuits.simulations.export.elmer.elmer_export.export_elmer_script"]], "kqcircuits.simulations.export.elmer.elmer_export": [[111, "module-kqcircuits.simulations.export.elmer.elmer_export"]], "elmercapacitancesolution (class in kqcircuits.simulations.export.elmer.elmer_solution)": [[112, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCapacitanceSolution"]], "elmercrosssectionsolution (class in kqcircuits.simulations.export.elmer.elmer_solution)": [[112, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution"]], "elmerepr3dsolution (class in kqcircuits.simulations.export.elmer.elmer_solution)": [[112, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerEPR3DSolution"]], "elmersolution (class in kqcircuits.simulations.export.elmer.elmer_solution)": [[112, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution"]], "elmervectorhelmholtzsolution (class in kqcircuits.simulations.export.elmer.elmer_solution)": [[112, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution"]], "boundary_conditions (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[112, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.boundary_conditions"]], "conductivity (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[112, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.conductivity"]], "convergence_tolerance (kqcircuits.simulations.export.elmer.elmer_solution.elmercapacitancesolution attribute)": [[112, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCapacitanceSolution.convergence_tolerance"]], "convergence_tolerance (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[112, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.convergence_tolerance"]], "convergence_tolerance (kqcircuits.simulations.export.elmer.elmer_solution.elmerepr3dsolution attribute)": [[112, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerEPR3DSolution.convergence_tolerance"]], "convergence_tolerance (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[112, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.convergence_tolerance"]], "frequency (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[112, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.frequency"]], "frequency_batch (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[112, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.frequency_batch"]], "get_elmer_solution() (in module kqcircuits.simulations.export.elmer.elmer_solution)": [[112, "kqcircuits.simulations.export.elmer.elmer_solution.get_elmer_solution"]], "get_solution_data() (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution method)": [[112, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.get_solution_data"]], "integrate_energies (kqcircuits.simulations.export.elmer.elmer_solution.elmercapacitancesolution attribute)": [[112, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCapacitanceSolution.integrate_energies"]], "integrate_energies (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[112, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.integrate_energies"]], "is_axisymmetric (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[112, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.is_axisymmetric"]], "kqcircuits.simulations.export.elmer.elmer_solution": [[112, "module-kqcircuits.simulations.export.elmer.elmer_solution"]], "linear_system_method (kqcircuits.simulations.export.elmer.elmer_solution.elmercapacitancesolution attribute)": [[112, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCapacitanceSolution.linear_system_method"]], "linear_system_method (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[112, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.linear_system_method"]], "linear_system_method (kqcircuits.simulations.export.elmer.elmer_solution.elmerepr3dsolution attribute)": [[112, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerEPR3DSolution.linear_system_method"]], "linear_system_preconditioning (kqcircuits.simulations.export.elmer.elmer_solution.elmercapacitancesolution attribute)": [[112, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCapacitanceSolution.linear_system_preconditioning"]], "linear_system_preconditioning (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[112, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.linear_system_preconditioning"]], "linear_system_preconditioning (kqcircuits.simulations.export.elmer.elmer_solution.elmerepr3dsolution attribute)": [[112, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerEPR3DSolution.linear_system_preconditioning"]], "london_penetration_depth (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[112, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.london_penetration_depth"]], "max_delta_s (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[112, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.max_delta_s"]], "max_error_scale (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[112, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.max_error_scale"]], "max_iterations (kqcircuits.simulations.export.elmer.elmer_solution.elmercapacitancesolution attribute)": [[112, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCapacitanceSolution.max_iterations"]], "max_iterations (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[112, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.max_iterations"]], "max_iterations (kqcircuits.simulations.export.elmer.elmer_solution.elmerepr3dsolution attribute)": [[112, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerEPR3DSolution.max_iterations"]], "max_iterations (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[112, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.max_iterations"]], "max_outlier_fraction (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[112, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.max_outlier_fraction"]], "maximum_passes (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[112, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.maximum_passes"]], "mesh_levels (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[112, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.mesh_levels"]], "mesh_size (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[112, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.mesh_size"]], "minimum_passes (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[112, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.minimum_passes"]], "nested_iteration (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[112, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.nested_iteration"]], "p_element_order (kqcircuits.simulations.export.elmer.elmer_solution.elmercapacitancesolution attribute)": [[112, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCapacitanceSolution.p_element_order"]], "p_element_order (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[112, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.p_element_order"]], "p_element_order (kqcircuits.simulations.export.elmer.elmer_solution.elmerepr3dsolution attribute)": [[112, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerEPR3DSolution.p_element_order"]], "percent_error (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[112, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.percent_error"]], "quadratic_approximation (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[112, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.quadratic_approximation"]], "run_inductance_sim (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[112, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.run_inductance_sim"]], "second_kind_basis (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[112, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.second_kind_basis"]], "sequential_signal_excitation (kqcircuits.simulations.export.elmer.elmer_solution.elmerepr3dsolution attribute)": [[112, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerEPR3DSolution.sequential_signal_excitation"]], "sweep_type (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[112, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.sweep_type"]], "tool (kqcircuits.simulations.export.elmer.elmer_solution.elmercapacitancesolution attribute)": [[112, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCapacitanceSolution.tool"]], "tool (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[112, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.tool"]], "tool (kqcircuits.simulations.export.elmer.elmer_solution.elmerepr3dsolution attribute)": [[112, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerEPR3DSolution.tool"]], "tool (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[112, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.tool"]], "tool (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[112, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.tool"]], "use_av (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[112, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.use_av"]], "vtu_output (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[112, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.vtu_output"]], "export_and_run() (in module kqcircuits.simulations.export.export_and_run)": [[113, "kqcircuits.simulations.export.export_and_run.export_and_run"]], "kqcircuits.simulations.export.export_and_run": [[113, "module-kqcircuits.simulations.export.export_and_run"]], "run_export_script() (in module kqcircuits.simulations.export.export_and_run)": [[113, "kqcircuits.simulations.export.export_and_run.run_export_script"]], "run_simulations() (in module kqcircuits.simulations.export.export_and_run)": [[113, "kqcircuits.simulations.export.export_and_run.run_simulations"]], "export_singularity() (in module kqcircuits.simulations.export.export_singularity)": [[114, "kqcircuits.simulations.export.export_singularity.export_singularity"]], "kqcircuits.simulations.export.export_singularity": [[114, "module-kqcircuits.simulations.export.export_singularity"]], "kqcircuits.simulations.export.remote_export_and_run": [[115, "module-kqcircuits.simulations.export.remote_export_and_run"]], "remote_export_and_run() (in module kqcircuits.simulations.export.remote_export_and_run)": [[115, "kqcircuits.simulations.export.remote_export_and_run.remote_export_and_run"]], "remote_run_only() (in module kqcircuits.simulations.export.remote_export_and_run)": [[115, "kqcircuits.simulations.export.remote_export_and_run.remote_run_only"]], "copy_content_into_directory() (in module kqcircuits.simulations.export.simulation_export)": [[116, "kqcircuits.simulations.export.simulation_export.copy_content_into_directory"]], "cross_combine() (in module kqcircuits.simulations.export.simulation_export)": [[116, "kqcircuits.simulations.export.simulation_export.cross_combine"]], "cross_sweep_simulation() (in module kqcircuits.simulations.export.simulation_export)": [[116, "kqcircuits.simulations.export.simulation_export.cross_sweep_simulation"]], "cross_sweep_solution() (in module kqcircuits.simulations.export.simulation_export)": [[116, "kqcircuits.simulations.export.simulation_export.cross_sweep_solution"]], "export_simulation_json() (in module kqcircuits.simulations.export.simulation_export)": [[116, "kqcircuits.simulations.export.simulation_export.export_simulation_json"]], "export_simulation_oas() (in module kqcircuits.simulations.export.simulation_export)": [[116, "kqcircuits.simulations.export.simulation_export.export_simulation_oas"]], "get_combined_parameters() (in module kqcircuits.simulations.export.simulation_export)": [[116, "kqcircuits.simulations.export.simulation_export.get_combined_parameters"]], "get_post_process_command_lines() (in module kqcircuits.simulations.export.simulation_export)": [[116, "kqcircuits.simulations.export.simulation_export.get_post_process_command_lines"]], "kqcircuits.simulations.export.simulation_export": [[116, "module-kqcircuits.simulations.export.simulation_export"]], "sweep_simulation() (in module kqcircuits.simulations.export.simulation_export)": [[116, "kqcircuits.simulations.export.simulation_export.sweep_simulation"]], "sweep_solution() (in module kqcircuits.simulations.export.simulation_export)": [[116, "kqcircuits.simulations.export.simulation_export.sweep_solution"]], "validatesimerror": [[117, "kqcircuits.simulations.export.simulation_validate.ValidateSimError"]], "flux_integration_layer_exists_if_needed() (in module kqcircuits.simulations.export.simulation_validate)": [[117, "kqcircuits.simulations.export.simulation_validate.flux_integration_layer_exists_if_needed"]], "get_port_names() (in module kqcircuits.simulations.export.simulation_validate)": [[117, "kqcircuits.simulations.export.simulation_validate.get_port_names"]], "has_edgeport_when_forbidden() (in module kqcircuits.simulations.export.simulation_validate)": [[117, "kqcircuits.simulations.export.simulation_validate.has_edgeport_when_forbidden"]], "has_no_ports_when_required() (in module kqcircuits.simulations.export.simulation_validate)": [[117, "kqcircuits.simulations.export.simulation_validate.has_no_ports_when_required"]], "kqcircuits.simulations.export.simulation_validate": [[117, "module-kqcircuits.simulations.export.simulation_validate"]], "simulation_and_solution_types_match() (in module kqcircuits.simulations.export.simulation_validate)": [[117, "kqcircuits.simulations.export.simulation_validate.simulation_and_solution_types_match"]], "validate_simulation() (in module kqcircuits.simulations.export.simulation_validate)": [[117, "kqcircuits.simulations.export.simulation_validate.validate_simulation"]], "solution (class in kqcircuits.simulations.export.solution)": [[118, "kqcircuits.simulations.export.solution.Solution"]], "get_parameters() (kqcircuits.simulations.export.solution.solution method)": [[118, "kqcircuits.simulations.export.solution.Solution.get_parameters"]], "kqcircuits.simulations.export.solution": [[118, "module-kqcircuits.simulations.export.solution"]], "name (kqcircuits.simulations.export.solution.solution attribute)": [[118, "kqcircuits.simulations.export.solution.Solution.name"]], "kqcircuits.simulations.export.sonnet": [[119, "module-kqcircuits.simulations.export.sonnet"]], "apply_template() (in module kqcircuits.simulations.export.sonnet.parser)": [[120, "kqcircuits.simulations.export.sonnet.parser.apply_template"]], "box() (in module kqcircuits.simulations.export.sonnet.parser)": [[120, "kqcircuits.simulations.export.sonnet.parser.box"]], "control() (in module kqcircuits.simulations.export.sonnet.parser)": [[120, "kqcircuits.simulations.export.sonnet.parser.control"]], "kqcircuits.simulations.export.sonnet.parser": [[120, "module-kqcircuits.simulations.export.sonnet.parser"]], "polygon_head() (in module kqcircuits.simulations.export.sonnet.parser)": [[120, "kqcircuits.simulations.export.sonnet.parser.polygon_head"]], "polygons() (in module kqcircuits.simulations.export.sonnet.parser)": [[120, "kqcircuits.simulations.export.sonnet.parser.polygons"]], "port() (in module kqcircuits.simulations.export.sonnet.parser)": [[120, "kqcircuits.simulations.export.sonnet.parser.port"]], "refplane() (in module kqcircuits.simulations.export.sonnet.parser)": [[120, "kqcircuits.simulations.export.sonnet.parser.refplane"]], "refplanes() (in module kqcircuits.simulations.export.sonnet.parser)": [[120, "kqcircuits.simulations.export.sonnet.parser.refplanes"]], "symmetry() (in module kqcircuits.simulations.export.sonnet.parser)": [[120, "kqcircuits.simulations.export.sonnet.parser.symmetry"]], "via() (in module kqcircuits.simulations.export.sonnet.parser)": [[120, "kqcircuits.simulations.export.sonnet.parser.via"]], "export_sonnet() (in module kqcircuits.simulations.export.sonnet.sonnet_export)": [[121, "kqcircuits.simulations.export.sonnet.sonnet_export.export_sonnet"]], "export_sonnet_son() (in module kqcircuits.simulations.export.sonnet.sonnet_export)": [[121, "kqcircuits.simulations.export.sonnet.sonnet_export.export_sonnet_son"]], "kqcircuits.simulations.export.sonnet.sonnet_export": [[121, "module-kqcircuits.simulations.export.sonnet.sonnet_export"]], "poly_and_edge_indices() (in module kqcircuits.simulations.export.sonnet.sonnet_export)": [[121, "kqcircuits.simulations.export.sonnet.sonnet_export.poly_and_edge_indices"]], "export_layers() (in module kqcircuits.simulations.export.util)": [[122, "kqcircuits.simulations.export.util.export_layers"]], "find_edge_from_point_in_cell() (in module kqcircuits.simulations.export.util)": [[122, "kqcircuits.simulations.export.util.find_edge_from_point_in_cell"]], "find_edge_from_point_in_polygons() (in module kqcircuits.simulations.export.util)": [[122, "kqcircuits.simulations.export.util.find_edge_from_point_in_polygons"]], "get_enclosing_polygon() (in module kqcircuits.simulations.export.util)": [[122, "kqcircuits.simulations.export.util.get_enclosing_polygon"]], "kqcircuits.simulations.export.util": [[122, "module-kqcircuits.simulations.export.util"]], "kqcircuits.simulations.export.xsection": [[123, "module-kqcircuits.simulations.export.xsection"]], "get_epr_correction_elmer_solution() (in module kqcircuits.simulations.export.xsection.epr_correction_export)": [[124, "kqcircuits.simulations.export.xsection.epr_correction_export.get_epr_correction_elmer_solution"]], "get_epr_correction_simulations() (in module kqcircuits.simulations.export.xsection.epr_correction_export)": [[124, "kqcircuits.simulations.export.xsection.epr_correction_export.get_epr_correction_simulations"]], "kqcircuits.simulations.export.xsection.epr_correction_export": [[124, "module-kqcircuits.simulations.export.xsection.epr_correction_export"]], "create_xsections_from_simulations() (in module kqcircuits.simulations.export.xsection.xsection_export)": [[125, "kqcircuits.simulations.export.xsection.xsection_export.create_xsections_from_simulations"]], "find_layer_by_name() (in module kqcircuits.simulations.export.xsection.xsection_export)": [[125, "kqcircuits.simulations.export.xsection.xsection_export.find_layer_by_name"]], "free_layer_slots() (in module kqcircuits.simulations.export.xsection.xsection_export)": [[125, "kqcircuits.simulations.export.xsection.xsection_export.free_layer_slots"]], "kqcircuits.simulations.export.xsection.xsection_export": [[125, "module-kqcircuits.simulations.export.xsection.xsection_export"]], "separate_signal_layer_shapes() (in module kqcircuits.simulations.export.xsection.xsection_export)": [[125, "kqcircuits.simulations.export.xsection.xsection_export.separate_signal_layer_shapes"]], "visualise_xsection_cut_on_original_layout() (in module kqcircuits.simulations.export.xsection.xsection_export)": [[125, "kqcircuits.simulations.export.xsection.xsection_export.visualise_xsection_cut_on_original_layout"]], "xsection_call() (in module kqcircuits.simulations.export.xsection.xsection_export)": [[125, "kqcircuits.simulations.export.xsection.xsection_export.xsection_call"]], "partitionregion (class in kqcircuits.simulations.partition_region)": [[126, "kqcircuits.simulations.partition_region.PartitionRegion"]], "get_list_of_two() (in module kqcircuits.simulations.partition_region)": [[126, "kqcircuits.simulations.partition_region.get_list_of_two"]], "kqcircuits.simulations.partition_region": [[126, "module-kqcircuits.simulations.partition_region"]], "limit_box() (kqcircuits.simulations.partition_region.partitionregion method)": [[126, "kqcircuits.simulations.partition_region.PartitionRegion.limit_box"]], "limit_face() (kqcircuits.simulations.partition_region.partitionregion method)": [[126, "kqcircuits.simulations.partition_region.PartitionRegion.limit_face"]], "edgeport (class in kqcircuits.simulations.port)": [[127, "kqcircuits.simulations.port.EdgePort"]], "internalport (class in kqcircuits.simulations.port)": [[127, "kqcircuits.simulations.port.InternalPort"]], "port (class in kqcircuits.simulations.port)": [[127, "kqcircuits.simulations.port.Port"]], "as_dict() (kqcircuits.simulations.port.port method)": [[127, "kqcircuits.simulations.port.Port.as_dict"]], "get_etch_polygon() (kqcircuits.simulations.port.internalport method)": [[127, "kqcircuits.simulations.port.InternalPort.get_etch_polygon"]], "kqcircuits.simulations.port": [[127, "module-kqcircuits.simulations.port"]], "postprocess (class in kqcircuits.simulations.post_process)": [[128, "kqcircuits.simulations.post_process.PostProcess"]], "get_command_line() (kqcircuits.simulations.post_process.postprocess method)": [[128, "kqcircuits.simulations.post_process.PostProcess.get_command_line"]], "kqcircuits.simulations.post_process": [[128, "module-kqcircuits.simulations.post_process"]], "library_name (kqcircuits.simulations.simulation.simulation attribute)": [[129, "kqcircuits.simulations.simulation.Simulation.LIBRARY_NAME"]], "simulation (class in kqcircuits.simulations.simulation)": [[129, "kqcircuits.simulations.simulation.Simulation"]], "add_element() (kqcircuits.simulations.simulation.simulation method)": [[129, "kqcircuits.simulations.simulation.Simulation.add_element"]], "build() (kqcircuits.simulations.simulation.simulation method)": [[129, "kqcircuits.simulations.simulation.Simulation.build"]], "create_simulation_layers() (kqcircuits.simulations.simulation.simulation method)": [[129, "kqcircuits.simulations.simulation.Simulation.create_simulation_layers"]], "delete_instances() (kqcircuits.simulations.simulation.simulation static method)": [[129, "kqcircuits.simulations.simulation.Simulation.delete_instances"]], "etched_line() (kqcircuits.simulations.simulation.simulation method)": [[129, "kqcircuits.simulations.simulation.Simulation.etched_line"]], "face() (kqcircuits.simulations.simulation.simulation method)": [[129, "kqcircuits.simulations.simulation.Simulation.face"]], "face_stack_list_of_lists() (kqcircuits.simulations.simulation.simulation method)": [[129, "kqcircuits.simulations.simulation.Simulation.face_stack_list_of_lists"]], "face_z_levels() (kqcircuits.simulations.simulation.simulation method)": [[129, "kqcircuits.simulations.simulation.Simulation.face_z_levels"]], "from_cell() (kqcircuits.simulations.simulation.simulation class method)": [[129, "kqcircuits.simulations.simulation.Simulation.from_cell"]], "get_layer() (kqcircuits.simulations.simulation.simulation method)": [[129, "kqcircuits.simulations.simulation.Simulation.get_layer"]], "get_layers() (kqcircuits.simulations.simulation.simulation method)": [[129, "kqcircuits.simulations.simulation.Simulation.get_layers"]], "get_parameters() (kqcircuits.simulations.simulation.simulation method)": [[129, "kqcircuits.simulations.simulation.Simulation.get_parameters"]], "get_partition_regions() (kqcircuits.simulations.simulation.simulation method)": [[129, "kqcircuits.simulations.simulation.Simulation.get_partition_regions"]], "get_port_data() (kqcircuits.simulations.simulation.simulation method)": [[129, "kqcircuits.simulations.simulation.Simulation.get_port_data"]], "get_refpoints() (kqcircuits.simulations.simulation.simulation method)": [[129, "kqcircuits.simulations.simulation.Simulation.get_refpoints"]], "get_schema() (kqcircuits.simulations.simulation.simulation class method)": [[129, "kqcircuits.simulations.simulation.Simulation.get_schema"]], "get_simulation_data() (kqcircuits.simulations.simulation.simulation method)": [[129, "kqcircuits.simulations.simulation.Simulation.get_simulation_data"]], "get_simulation_layer_by_name() (in module kqcircuits.simulations.simulation)": [[129, "kqcircuits.simulations.simulation.get_simulation_layer_by_name"]], "ground_grid_region() (kqcircuits.simulations.simulation.simulation method)": [[129, "kqcircuits.simulations.simulation.Simulation.ground_grid_region"]], "insert_cell() (kqcircuits.simulations.simulation.simulation method)": [[129, "kqcircuits.simulations.simulation.Simulation.insert_cell"]], "insert_layer() (kqcircuits.simulations.simulation.simulation method)": [[129, "kqcircuits.simulations.simulation.Simulation.insert_layer"]], "insert_layers_between_faces() (kqcircuits.simulations.simulation.simulation method)": [[129, "kqcircuits.simulations.simulation.Simulation.insert_layers_between_faces"]], "insert_stacked_up_layers() (kqcircuits.simulations.simulation.simulation method)": [[129, "kqcircuits.simulations.simulation.Simulation.insert_stacked_up_layers"]], "ith_value() (kqcircuits.simulations.simulation.simulation static method)": [[129, "kqcircuits.simulations.simulation.Simulation.ith_value"]], "kqcircuits.simulations.simulation": [[129, "module-kqcircuits.simulations.simulation"]], "pcell_params_by_name() (kqcircuits.simulations.simulation.simulation method)": [[129, "kqcircuits.simulations.simulation.Simulation.pcell_params_by_name"]], "ports (kqcircuits.simulations.simulation.simulation attribute)": [[129, "kqcircuits.simulations.simulation.Simulation.ports"]], "produce_layers() (kqcircuits.simulations.simulation.simulation method)": [[129, "kqcircuits.simulations.simulation.Simulation.produce_layers"]], "produce_waveguide_to_port() (kqcircuits.simulations.simulation.simulation method)": [[129, "kqcircuits.simulations.simulation.Simulation.produce_waveguide_to_port"]], "region_from_layer() (kqcircuits.simulations.simulation.simulation method)": [[129, "kqcircuits.simulations.simulation.Simulation.region_from_layer"]], "simplified_region() (kqcircuits.simulations.simulation.simulation method)": [[129, "kqcircuits.simulations.simulation.Simulation.simplified_region"]], "to_1d_list() (in module kqcircuits.simulations.simulation)": [[129, "kqcircuits.simulations.simulation.to_1d_list"]], "visualise_region() (kqcircuits.simulations.simulation.simulation method)": [[129, "kqcircuits.simulations.simulation.Simulation.visualise_region"]], "get_single_element_sim_class() (in module kqcircuits.simulations.single_element_simulation)": [[130, "kqcircuits.simulations.single_element_simulation.get_single_element_sim_class"]], "kqcircuits.simulations.single_element_simulation": [[130, "module-kqcircuits.simulations.single_element_simulation"]], "singlexmonsfullchipsim (class in kqcircuits.simulations.single_xmons_full_chip_sim)": [[131, "kqcircuits.simulations.single_xmons_full_chip_sim.SingleXmonsFullChipSim"]], "build() (kqcircuits.simulations.single_xmons_full_chip_sim.singlexmonsfullchipsim method)": [[131, "kqcircuits.simulations.single_xmons_full_chip_sim.SingleXmonsFullChipSim.build"]], "kqcircuits.simulations.single_xmons_full_chip_sim": [[131, "module-kqcircuits.simulations.single_xmons_full_chip_sim"]], "waveguidessim (class in kqcircuits.simulations.waveguides_sim)": [[132, "kqcircuits.simulations.waveguides_sim.WaveGuidesSim"]], "build() (kqcircuits.simulations.waveguides_sim.waveguidessim method)": [[132, "kqcircuits.simulations.waveguides_sim.WaveGuidesSim.build"]], "kqcircuits.simulations.waveguides_sim": [[132, "module-kqcircuits.simulations.waveguides_sim"]], "produce_ground_bumps() (kqcircuits.simulations.waveguides_sim.waveguidessim method)": [[132, "kqcircuits.simulations.waveguides_sim.WaveGuidesSim.produce_ground_bumps"]], "produce_guides() (kqcircuits.simulations.waveguides_sim.waveguidessim method)": [[132, "kqcircuits.simulations.waveguides_sim.WaveGuidesSim.produce_guides"]], "xmonsdirectcouplingfullchipsim (class in kqcircuits.simulations.xmons_direct_coupling_full_chip_sim)": [[133, "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim"]], "build() (kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.xmonsdirectcouplingfullchipsim method)": [[133, "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim.build"]], "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim": [[133, "module-kqcircuits.simulations.xmons_direct_coupling_full_chip_sim"]], "produce_launcher() (kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.xmonsdirectcouplingfullchipsim method)": [[133, "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim.produce_launcher"]], "produce_launchers_sma8() (kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.xmonsdirectcouplingfullchipsim method)": [[133, "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim.produce_launchers_SMA8"]], "produce_qubit() (kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.xmonsdirectcouplingfullchipsim method)": [[133, "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim.produce_qubit"]], "produce_readout_resonator() (kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.xmonsdirectcouplingfullchipsim method)": [[133, "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim.produce_readout_resonator"]], "produce_waveguide() (kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.xmonsdirectcouplingfullchipsim method)": [[133, "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim.produce_waveguide"]], "xmonsdirectcouplingsim (class in kqcircuits.simulations.xmons_direct_coupling_sim)": [[134, "kqcircuits.simulations.xmons_direct_coupling_sim.XMonsDirectCouplingSim"]], "build() (kqcircuits.simulations.xmons_direct_coupling_sim.xmonsdirectcouplingsim method)": [[134, "kqcircuits.simulations.xmons_direct_coupling_sim.XMonsDirectCouplingSim.build"]], "kqcircuits.simulations.xmons_direct_coupling_sim": [[134, "module-kqcircuits.simulations.xmons_direct_coupling_sim"]], "produce_qubits() (kqcircuits.simulations.xmons_direct_coupling_sim.xmonsdirectcouplingsim method)": [[134, "kqcircuits.simulations.xmons_direct_coupling_sim.XMonsDirectCouplingSim.produce_qubits"]], "kqcircuits.test_structures": [[135, "module-kqcircuits.test_structures"]], "airbridgedc (class in kqcircuits.test_structures.airbridge_dc)": [[136, "kqcircuits.test_structures.airbridge_dc.AirbridgeDC"]], "build() (kqcircuits.test_structures.airbridge_dc.airbridgedc method)": [[136, "kqcircuits.test_structures.airbridge_dc.AirbridgeDC.build"]], "kqcircuits.test_structures.airbridge_dc": [[136, "module-kqcircuits.test_structures.airbridge_dc"]], "crosstest (class in kqcircuits.test_structures.cross_test)": [[137, "kqcircuits.test_structures.cross_test.CrossTest"]], "build() (kqcircuits.test_structures.cross_test.crosstest method)": [[137, "kqcircuits.test_structures.cross_test.CrossTest.build"]], "kqcircuits.test_structures.cross_test": [[137, "module-kqcircuits.test_structures.cross_test"]], "kqcircuits.test_structures.junction_test_pads": [[138, "module-kqcircuits.test_structures.junction_test_pads"]], "junctiontestpads (class in kqcircuits.test_structures.junction_test_pads.junction_test_pads)": [[139, "kqcircuits.test_structures.junction_test_pads.junction_test_pads.JunctionTestPads"]], "coerce_parameters_impl() (kqcircuits.test_structures.junction_test_pads.junction_test_pads.junctiontestpads method)": [[139, "kqcircuits.test_structures.junction_test_pads.junction_test_pads.JunctionTestPads.coerce_parameters_impl"]], "create() (kqcircuits.test_structures.junction_test_pads.junction_test_pads.junctiontestpads class method)": [[139, "kqcircuits.test_structures.junction_test_pads.junction_test_pads.JunctionTestPads.create"]], "default_type (kqcircuits.test_structures.junction_test_pads.junction_test_pads.junctiontestpads attribute)": [[139, "kqcircuits.test_structures.junction_test_pads.junction_test_pads.JunctionTestPads.default_type"]], "kqcircuits.test_structures.junction_test_pads.junction_test_pads": [[139, "module-kqcircuits.test_structures.junction_test_pads.junction_test_pads"]], "produce_squid() (kqcircuits.test_structures.junction_test_pads.junction_test_pads.junctiontestpads method)": [[139, "kqcircuits.test_structures.junction_test_pads.junction_test_pads.JunctionTestPads.produce_squid"]], "junctiontestpadssimple (class in kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple)": [[140, "kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple.JunctionTestPadsSimple"]], "build() (kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple.junctiontestpadssimple method)": [[140, "kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple.JunctionTestPadsSimple.build"]], "kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple": [[140, "module-kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple"]], "stripestest (class in kqcircuits.test_structures.stripes_test)": [[141, "kqcircuits.test_structures.stripes_test.StripesTest"]], "build() (kqcircuits.test_structures.stripes_test.stripestest method)": [[141, "kqcircuits.test_structures.stripes_test.StripesTest.build"]], "kqcircuits.test_structures.stripes_test": [[141, "module-kqcircuits.test_structures.stripes_test"]], "stripestestincreasingwidth (class in kqcircuits.test_structures.stripes_test_increasing_width)": [[142, "kqcircuits.test_structures.stripes_test_increasing_width.StripesTestIncreasingWidth"]], "build() (kqcircuits.test_structures.stripes_test_increasing_width.stripestestincreasingwidth method)": [[142, "kqcircuits.test_structures.stripes_test_increasing_width.StripesTestIncreasingWidth.build"]], "kqcircuits.test_structures.stripes_test_increasing_width": [[142, "module-kqcircuits.test_structures.stripes_test_increasing_width"]], "library_description (kqcircuits.test_structures.test_structure.teststructure attribute)": [[143, "kqcircuits.test_structures.test_structure.TestStructure.LIBRARY_DESCRIPTION"]], "library_name (kqcircuits.test_structures.test_structure.teststructure attribute)": [[143, "kqcircuits.test_structures.test_structure.TestStructure.LIBRARY_NAME"]], "library_path (kqcircuits.test_structures.test_structure.teststructure attribute)": [[143, "kqcircuits.test_structures.test_structure.TestStructure.LIBRARY_PATH"]], "teststructure (class in kqcircuits.test_structures.test_structure)": [[143, "kqcircuits.test_structures.test_structure.TestStructure"]], "kqcircuits.test_structures.test_structure": [[143, "module-kqcircuits.test_structures.test_structure"]], "produce_etched_region() (kqcircuits.test_structures.test_structure.teststructure method)": [[143, "kqcircuits.test_structures.test_structure.TestStructure.produce_etched_region"]], "produce_four_point_pads() (kqcircuits.test_structures.test_structure.teststructure method)": [[143, "kqcircuits.test_structures.test_structure.TestStructure.produce_four_point_pads"]], "produce_pad() (kqcircuits.test_structures.test_structure.teststructure method)": [[143, "kqcircuits.test_structures.test_structure.TestStructure.produce_pad"]], "tsvtestpattern (class in kqcircuits.test_structures.tsv_test_pattern)": [[144, "kqcircuits.test_structures.tsv_test_pattern.TsvTestPattern"]], "build() (kqcircuits.test_structures.tsv_test_pattern.tsvtestpattern method)": [[144, "kqcircuits.test_structures.tsv_test_pattern.TsvTestPattern.build"]], "kqcircuits.test_structures.tsv_test_pattern": [[144, "module-kqcircuits.test_structures.tsv_test_pattern"]], "kqcircuits.util": [[145, "module-kqcircuits.util"]], "areareceiver (class in kqcircuits.util.area)": [[146, "kqcircuits.util.area.AreaReceiver"]], "get_area_and_density() (in module kqcircuits.util.area)": [[146, "kqcircuits.util.area.get_area_and_density"]], "kqcircuits.util.area": [[146, "module-kqcircuits.util.area"]], "put() (kqcircuits.util.area.areareceiver method)": [[146, "kqcircuits.util.area.AreaReceiver.put"]], "count_instances_in_cell() (in module kqcircuits.util.count_instances)": [[147, "kqcircuits.util.count_instances.count_instances_in_cell"]], "kqcircuits.util.count_instances": [[147, "module-kqcircuits.util.count_instances"]], "cap_params() (in module kqcircuits.util.coupler_lib)": [[148, "kqcircuits.util.coupler_lib.cap_params"]], "kqcircuits.util.coupler_lib": [[148, "module-kqcircuits.util.coupler_lib"]], "deep_delete_all() (in module kqcircuits.util.deep_delete)": [[149, "kqcircuits.util.deep_delete.deep_delete_all"]], "deep_delete_pcells() (in module kqcircuits.util.deep_delete)": [[149, "kqcircuits.util.deep_delete.deep_delete_pcells"]], "kqcircuits.util.deep_delete": [[149, "module-kqcircuits.util.deep_delete"]], "find_ansys_executable() (in module kqcircuits.util.defaults_helper)": [[150, "kqcircuits.util.defaults_helper.find_ansys_executable"]], "kqcircuits.util.defaults_helper": [[150, "module-kqcircuits.util.defaults_helper"]], "install_kqc_gui_dependencies() (in module kqcircuits.util.dependencies)": [[151, "kqcircuits.util.dependencies.install_kqc_gui_dependencies"]], "kqcircuits.util.dependencies": [[151, "module-kqcircuits.util.dependencies"]], "editnodeplugin (class in kqcircuits.util.edit_node_plugin)": [[152, "kqcircuits.util.edit_node_plugin.EditNodePlugin"]], "editnodepluginfactory (class in kqcircuits.util.edit_node_plugin)": [[152, "kqcircuits.util.edit_node_plugin.EditNodePluginFactory"]], "activated() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[152, "kqcircuits.util.edit_node_plugin.EditNodePlugin.activated"]], "create_dialog() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[152, "kqcircuits.util.edit_node_plugin.EditNodePlugin.create_dialog"]], "create_plugin() (kqcircuits.util.edit_node_plugin.editnodepluginfactory method)": [[152, "kqcircuits.util.edit_node_plugin.EditNodePluginFactory.create_plugin"]], "deactivated() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[152, "kqcircuits.util.edit_node_plugin.EditNodePlugin.deactivated"]], "deselect() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[152, "kqcircuits.util.edit_node_plugin.EditNodePlugin.deselect"]], "has_tracking_position() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[152, "kqcircuits.util.edit_node_plugin.EditNodePlugin.has_tracking_position"]], "kqcircuits.util.edit_node_plugin": [[152, "module-kqcircuits.util.edit_node_plugin"]], "mouse_click_event() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[152, "kqcircuits.util.edit_node_plugin.EditNodePlugin.mouse_click_event"]], "mouse_moved_event() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[152, "kqcircuits.util.edit_node_plugin.EditNodePlugin.mouse_moved_event"]], "select() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[152, "kqcircuits.util.edit_node_plugin.EditNodePlugin.select"]], "tracking_position() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[152, "kqcircuits.util.edit_node_plugin.EditNodePlugin.tracking_position"]], "update() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[152, "kqcircuits.util.edit_node_plugin.EditNodePlugin.update"]], "update_form_from_node() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[152, "kqcircuits.util.edit_node_plugin.EditNodePlugin.update_form_from_node"]], "update_node_from_form() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[152, "kqcircuits.util.edit_node_plugin.EditNodePlugin.update_node_from_form"]], "create_or_empty_tmp_directory() (in module kqcircuits.util.export_helper)": [[153, "kqcircuits.util.export_helper.create_or_empty_tmp_directory"]], "export_drc_report() (in module kqcircuits.util.export_helper)": [[153, "kqcircuits.util.export_helper.export_drc_report"]], "generate_probepoints_from_file() (in module kqcircuits.util.export_helper)": [[153, "kqcircuits.util.export_helper.generate_probepoints_from_file"]], "generate_probepoints_json() (in module kqcircuits.util.export_helper)": [[153, "kqcircuits.util.export_helper.generate_probepoints_json"]], "get_active_or_new_layout() (in module kqcircuits.util.export_helper)": [[153, "kqcircuits.util.export_helper.get_active_or_new_layout"]], "get_klayout_version() (in module kqcircuits.util.export_helper)": [[153, "kqcircuits.util.export_helper.get_klayout_version"]], "get_simulation_directory() (in module kqcircuits.util.export_helper)": [[153, "kqcircuits.util.export_helper.get_simulation_directory"]], "kqcircuits.util.export_helper": [[153, "module-kqcircuits.util.export_helper"]], "open_with_klayout_or_default_application() (in module kqcircuits.util.export_helper)": [[153, "kqcircuits.util.export_helper.open_with_klayout_or_default_application"]], "write_commit_reference_file() (in module kqcircuits.util.export_helper)": [[153, "kqcircuits.util.export_helper.write_commit_reference_file"]], "write_export_machine_versions_file() (in module kqcircuits.util.export_helper)": [[153, "kqcircuits.util.export_helper.write_export_machine_versions_file"]], "arc_points() (in module kqcircuits.util.geometry_helper)": [[154, "kqcircuits.util.geometry_helper.arc_points"]], "bezier_points() (in module kqcircuits.util.geometry_helper)": [[154, "kqcircuits.util.geometry_helper.bezier_points"]], "bspline_points() (in module kqcircuits.util.geometry_helper)": [[154, "kqcircuits.util.geometry_helper.bspline_points"]], "circle_polygon() (in module kqcircuits.util.geometry_helper)": [[154, "kqcircuits.util.geometry_helper.circle_polygon"]], "get_angle() (in module kqcircuits.util.geometry_helper)": [[154, "kqcircuits.util.geometry_helper.get_angle"]], "get_cell_path_length() (in module kqcircuits.util.geometry_helper)": [[154, "kqcircuits.util.geometry_helper.get_cell_path_length"]], "get_direction() (in module kqcircuits.util.geometry_helper)": [[154, "kqcircuits.util.geometry_helper.get_direction"]], "get_object_path_length() (in module kqcircuits.util.geometry_helper)": [[154, "kqcircuits.util.geometry_helper.get_object_path_length"]], "is_clockwise() (in module kqcircuits.util.geometry_helper)": [[154, "kqcircuits.util.geometry_helper.is_clockwise"]], "kqcircuits.util.geometry_helper": [[154, "module-kqcircuits.util.geometry_helper"]], "merge_points_and_match_on_edges() (in module kqcircuits.util.geometry_helper)": [[154, "kqcircuits.util.geometry_helper.merge_points_and_match_on_edges"]], "point_shift_along_vector() (in module kqcircuits.util.geometry_helper)": [[154, "kqcircuits.util.geometry_helper.point_shift_along_vector"]], "region_with_merged_points() (in module kqcircuits.util.geometry_helper)": [[154, "kqcircuits.util.geometry_helper.region_with_merged_points"]], "region_with_merged_polygons() (in module kqcircuits.util.geometry_helper)": [[154, "kqcircuits.util.geometry_helper.region_with_merged_polygons"]], "round_dpath_width() (in module kqcircuits.util.geometry_helper)": [[154, "kqcircuits.util.geometry_helper.round_dpath_width"]], "simple_region() (in module kqcircuits.util.geometry_helper)": [[154, "kqcircuits.util.geometry_helper.simple_region"]], "vector_length_and_direction() (in module kqcircuits.util.geometry_helper)": [[154, "kqcircuits.util.geometry_helper.vector_length_and_direction"]], "geometryjsondecoder (class in kqcircuits.util.geometry_json_encoder)": [[155, "kqcircuits.util.geometry_json_encoder.GeometryJsonDecoder"]], "geometryjsonencoder (class in kqcircuits.util.geometry_json_encoder)": [[155, "kqcircuits.util.geometry_json_encoder.GeometryJsonEncoder"]], "decode_dict_as_python_obj() (in module kqcircuits.util.geometry_json_encoder)": [[155, "kqcircuits.util.geometry_json_encoder.decode_dict_as_python_obj"]], "default() (kqcircuits.util.geometry_json_encoder.geometryjsonencoder method)": [[155, "kqcircuits.util.geometry_json_encoder.GeometryJsonEncoder.default"]], "encode_python_obj_as_dict() (in module kqcircuits.util.geometry_json_encoder)": [[155, "kqcircuits.util.geometry_json_encoder.encode_python_obj_as_dict"]], "kqcircuits.util.geometry_json_encoder": [[155, "module-kqcircuits.util.geometry_json_encoder"]], "kqcircuits.util.groundgrid": [[156, "module-kqcircuits.util.groundgrid"]], "make_grid() (in module kqcircuits.util.groundgrid)": [[156, "kqcircuits.util.groundgrid.make_grid"]], "get_all_node_elements() (in module kqcircuits.util.gui_helper)": [[157, "kqcircuits.util.gui_helper.get_all_node_elements"]], "get_nodes_near_position() (in module kqcircuits.util.gui_helper)": [[157, "kqcircuits.util.gui_helper.get_nodes_near_position"]], "get_valid_node_elements() (in module kqcircuits.util.gui_helper)": [[157, "kqcircuits.util.gui_helper.get_valid_node_elements"]], "kqcircuits.util.gui_helper": [[157, "module-kqcircuits.util.gui_helper"]], "node_from_text() (in module kqcircuits.util.gui_helper)": [[157, "kqcircuits.util.gui_helper.node_from_text"]], "node_to_text() (in module kqcircuits.util.gui_helper)": [[157, "kqcircuits.util.gui_helper.node_to_text"]], "replace_node() (in module kqcircuits.util.gui_helper)": [[157, "kqcircuits.util.gui_helper.replace_node"]], "kqcircuits.util.import_helper": [[158, "module-kqcircuits.util.import_helper"]], "module_from_file() (in module kqcircuits.util.import_helper)": [[158, "kqcircuits.util.import_helper.module_from_file"]], "bottomleft (kqcircuits.util.label.labelorigin attribute)": [[159, "kqcircuits.util.label.LabelOrigin.BOTTOMLEFT"]], "bottomright (kqcircuits.util.label.labelorigin attribute)": [[159, "kqcircuits.util.label.LabelOrigin.BOTTOMRIGHT"]], "labelorigin (class in kqcircuits.util.label)": [[159, "kqcircuits.util.label.LabelOrigin"]], "topleft (kqcircuits.util.label.labelorigin attribute)": [[159, "kqcircuits.util.label.LabelOrigin.TOPLEFT"]], "topright (kqcircuits.util.label.labelorigin attribute)": [[159, "kqcircuits.util.label.LabelOrigin.TOPRIGHT"]], "kqcircuits.util.label": [[159, "module-kqcircuits.util.label"]], "produce_label() (in module kqcircuits.util.label)": [[159, "kqcircuits.util.label.produce_label"]], "get_text_polygon() (in module kqcircuits.util.label_polygons)": [[160, "kqcircuits.util.label_polygons.get_text_polygon"]], "kqcircuits.util.label_polygons": [[160, "module-kqcircuits.util.label_polygons"]], "load_font_polygons() (in module kqcircuits.util.label_polygons)": [[160, "kqcircuits.util.label_polygons.load_font_polygons"]], "convert_cells_to_code() (in module kqcircuits.util.layout_to_code)": [[161, "kqcircuits.util.layout_to_code.convert_cells_to_code"]], "extract_pcell_data_from_views() (in module kqcircuits.util.layout_to_code)": [[161, "kqcircuits.util.layout_to_code.extract_pcell_data_from_views"]], "get_node_params() (in module kqcircuits.util.layout_to_code)": [[161, "kqcircuits.util.layout_to_code.get_node_params"]], "kqcircuits.util.layout_to_code": [[161, "module-kqcircuits.util.layout_to_code"]], "restore_pcells_to_views() (in module kqcircuits.util.layout_to_code)": [[161, "kqcircuits.util.layout_to_code.restore_pcells_to_views"]], "delete_all_libraries() (in module kqcircuits.util.library_helper)": [[162, "kqcircuits.util.library_helper.delete_all_libraries"]], "delete_library() (in module kqcircuits.util.library_helper)": [[162, "kqcircuits.util.library_helper.delete_library"]], "element_by_class_name() (in module kqcircuits.util.library_helper)": [[162, "kqcircuits.util.library_helper.element_by_class_name"]], "get_library_paths() (in module kqcircuits.util.library_helper)": [[162, "kqcircuits.util.library_helper.get_library_paths"]], "kqcircuits.util.library_helper": [[162, "module-kqcircuits.util.library_helper"]], "load_libraries() (in module kqcircuits.util.library_helper)": [[162, "kqcircuits.util.library_helper.load_libraries"]], "to_library_name() (in module kqcircuits.util.library_helper)": [[162, "kqcircuits.util.library_helper.to_library_name"]], "to_module_name() (in module kqcircuits.util.library_helper)": [[162, "kqcircuits.util.library_helper.to_module_name"]], "kqcircuits.util.log_router": [[163, "module-kqcircuits.util.log_router"]], "route_log() (in module kqcircuits.util.log_router)": [[163, "kqcircuits.util.log_router.route_log"]], "convert_child_instances_to_static() (in module kqcircuits.util.merge)": [[164, "kqcircuits.util.merge.convert_child_instances_to_static"]], "kqcircuits.util.merge": [[164, "module-kqcircuits.util.merge"]], "merge_layers() (in module kqcircuits.util.merge)": [[164, "kqcircuits.util.merge.merge_layers"]], "merge_layout_layers_on_face() (in module kqcircuits.util.merge)": [[164, "kqcircuits.util.merge.merge_layout_layers_on_face"]], "export_cell_netlist() (in module kqcircuits.util.netlist_extraction)": [[165, "kqcircuits.util.netlist_extraction.export_cell_netlist"]], "extract_circuits() (in module kqcircuits.util.netlist_extraction)": [[165, "kqcircuits.util.netlist_extraction.extract_circuits"]], "extract_nets() (in module kqcircuits.util.netlist_extraction)": [[165, "kqcircuits.util.netlist_extraction.extract_nets"]], "kqcircuits.util.netlist_extraction": [[165, "module-kqcircuits.util.netlist_extraction"]], "draw_graph() (in module kqcircuits.util.netlist_graph)": [[166, "kqcircuits.util.netlist_graph.draw_graph"]], "kqcircuits.util.netlist_graph": [[166, "module-kqcircuits.util.netlist_graph"]], "network_as_graph() (in module kqcircuits.util.netlist_graph)": [[166, "kqcircuits.util.netlist_graph.network_as_graph"]], "param (class in kqcircuits.util.parameters)": [[167, "kqcircuits.util.parameters.Param"]], "typeboolean (kqcircuits.util.parameters.pdt attribute)": [[167, "kqcircuits.util.parameters.pdt.TypeBoolean"]], "typedouble (kqcircuits.util.parameters.pdt attribute)": [[167, "kqcircuits.util.parameters.pdt.TypeDouble"]], "typeint (kqcircuits.util.parameters.pdt attribute)": [[167, "kqcircuits.util.parameters.pdt.TypeInt"]], "typelayer (kqcircuits.util.parameters.pdt attribute)": [[167, "kqcircuits.util.parameters.pdt.TypeLayer"]], "typelist (kqcircuits.util.parameters.pdt attribute)": [[167, "kqcircuits.util.parameters.pdt.TypeList"]], "typenone (kqcircuits.util.parameters.pdt attribute)": [[167, "kqcircuits.util.parameters.pdt.TypeNone"]], "typeshape (kqcircuits.util.parameters.pdt attribute)": [[167, "kqcircuits.util.parameters.pdt.TypeShape"]], "typestring (kqcircuits.util.parameters.pdt attribute)": [[167, "kqcircuits.util.parameters.pdt.TypeString"]], "add_parameter() (in module kqcircuits.util.parameters)": [[167, "kqcircuits.util.parameters.add_parameter"]], "add_parameters_from() (in module kqcircuits.util.parameters)": [[167, "kqcircuits.util.parameters.add_parameters_from"]], "get_all() (kqcircuits.util.parameters.param class method)": [[167, "kqcircuits.util.parameters.Param.get_all"]], "kqcircuits.util.parameters": [[167, "module-kqcircuits.util.parameters"]], "pdt (class in kqcircuits.util.parameters)": [[167, "kqcircuits.util.parameters.pdt"]], "kqcircuits.util.plugin_startup": [[168, "module-kqcircuits.util.plugin_startup"]], "register_plugins() (in module kqcircuits.util.plugin_startup)": [[168, "kqcircuits.util.plugin_startup.register_plugins"]], "junctionsimport (class in kqcircuits.util.refpoints)": [[169, "kqcircuits.util.refpoints.JunctionSimPort"]], "refpointtoedgeport (class in kqcircuits.util.refpoints)": [[169, "kqcircuits.util.refpoints.RefpointToEdgePort"]], "refpointtointernalport (class in kqcircuits.util.refpoints)": [[169, "kqcircuits.util.refpoints.RefpointToInternalPort"]], "refpointtosimport (class in kqcircuits.util.refpoints)": [[169, "kqcircuits.util.refpoints.RefpointToSimPort"]], "refpoints (class in kqcircuits.util.refpoints)": [[169, "kqcircuits.util.refpoints.Refpoints"]], "waveguidetosimport (class in kqcircuits.util.refpoints)": [[169, "kqcircuits.util.refpoints.WaveguideToSimPort"]], "a (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[169, "kqcircuits.util.refpoints.WaveguideToSimPort.a"]], "airbridge (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[169, "kqcircuits.util.refpoints.WaveguideToSimPort.airbridge"]], "b (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[169, "kqcircuits.util.refpoints.WaveguideToSimPort.b"]], "cell (kqcircuits.util.refpoints.refpoints attribute)": [[169, "kqcircuits.util.refpoints.Refpoints.cell"]], "deembed_cross_section (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[169, "kqcircuits.util.refpoints.WaveguideToSimPort.deembed_cross_section"]], "dict() (kqcircuits.util.refpoints.refpoints method)": [[169, "kqcircuits.util.refpoints.Refpoints.dict"]], "face (kqcircuits.util.refpoints.junctionsimport attribute)": [[169, "kqcircuits.util.refpoints.JunctionSimPort.face"]], "face (kqcircuits.util.refpoints.refpointtosimport attribute)": [[169, "kqcircuits.util.refpoints.RefpointToSimPort.face"]], "face (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[169, "kqcircuits.util.refpoints.WaveguideToSimPort.face"]], "floating (kqcircuits.util.refpoints.junctionsimport attribute)": [[169, "kqcircuits.util.refpoints.JunctionSimPort.floating"]], "items() (kqcircuits.util.refpoints.refpoints method)": [[169, "kqcircuits.util.refpoints.Refpoints.items"]], "keys() (kqcircuits.util.refpoints.refpoints method)": [[169, "kqcircuits.util.refpoints.Refpoints.keys"]], "kqcircuits.util.refpoints": [[169, "module-kqcircuits.util.refpoints"]], "layer (kqcircuits.util.refpoints.refpoints attribute)": [[169, "kqcircuits.util.refpoints.Refpoints.layer"]], "other_refpoint (kqcircuits.util.refpoints.junctionsimport attribute)": [[169, "kqcircuits.util.refpoints.JunctionSimPort.other_refpoint"]], "over_etching (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[169, "kqcircuits.util.refpoints.WaveguideToSimPort.over_etching"]], "rec_levels (kqcircuits.util.refpoints.refpoints attribute)": [[169, "kqcircuits.util.refpoints.Refpoints.rec_levels"]], "refpoint (kqcircuits.util.refpoints.junctionsimport attribute)": [[169, "kqcircuits.util.refpoints.JunctionSimPort.refpoint"]], "refpoint (kqcircuits.util.refpoints.refpointtosimport attribute)": [[169, "kqcircuits.util.refpoints.RefpointToSimPort.refpoint"]], "refpoint (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[169, "kqcircuits.util.refpoints.WaveguideToSimPort.refpoint"]], "side (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[169, "kqcircuits.util.refpoints.WaveguideToSimPort.side"]], "term1 (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[169, "kqcircuits.util.refpoints.WaveguideToSimPort.term1"]], "towards (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[169, "kqcircuits.util.refpoints.WaveguideToSimPort.towards"]], "trans (kqcircuits.util.refpoints.refpoints attribute)": [[169, "kqcircuits.util.refpoints.Refpoints.trans"]], "turn_radius (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[169, "kqcircuits.util.refpoints.WaveguideToSimPort.turn_radius"]], "use_internal_ports (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[169, "kqcircuits.util.refpoints.WaveguideToSimPort.use_internal_ports"]], "values() (kqcircuits.util.refpoints.refpoints method)": [[169, "kqcircuits.util.refpoints.Refpoints.values"]], "waveguide_length (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[169, "kqcircuits.util.refpoints.WaveguideToSimPort.waveguide_length"]], "junctionentry (class in kqcircuits.util.replace_junctions)": [[170, "kqcircuits.util.replace_junctions.JunctionEntry"]], "check_static_cell_has_junctions() (in module kqcircuits.util.replace_junctions)": [[170, "kqcircuits.util.replace_junctions.check_static_cell_has_junctions"]], "convert_cells_to_static() (in module kqcircuits.util.replace_junctions)": [[170, "kqcircuits.util.replace_junctions.convert_cells_to_static"]], "copy_one_layer_of_cell() (in module kqcircuits.util.replace_junctions)": [[170, "kqcircuits.util.replace_junctions.copy_one_layer_of_cell"]], "extract_junctions() (in module kqcircuits.util.replace_junctions)": [[170, "kqcircuits.util.replace_junctions.extract_junctions"]], "get_tuned_junction_json() (in module kqcircuits.util.replace_junctions)": [[170, "kqcircuits.util.replace_junctions.get_tuned_junction_json"]], "kqcircuits.util.replace_junctions": [[170, "module-kqcircuits.util.replace_junctions"]], "place_junctions() (in module kqcircuits.util.replace_junctions)": [[170, "kqcircuits.util.replace_junctions.place_junctions"]], "replace_squid() (in module kqcircuits.util.replace_junctions)": [[170, "kqcircuits.util.replace_junctions.replace_squid"]], "replace_squids() (in module kqcircuits.util.replace_junctions)": [[170, "kqcircuits.util.replace_junctions.replace_squids"]], "kqcircuits.util.symmetric_polygons": [[171, "module-kqcircuits.util.symmetric_polygons"]], "polygon_with_hsym() (in module kqcircuits.util.symmetric_polygons)": [[171, "kqcircuits.util.symmetric_polygons.polygon_with_hsym"]], "polygon_with_sym() (in module kqcircuits.util.symmetric_polygons)": [[171, "kqcircuits.util.symmetric_polygons.polygon_with_sym"]], "polygon_with_vsym() (in module kqcircuits.util.symmetric_polygons)": [[171, "kqcircuits.util.symmetric_polygons.polygon_with_vsym"]]}})