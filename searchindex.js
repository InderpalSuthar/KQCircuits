Search.setIndex({"docnames": ["about", "api/kqcircuits", "api/kqcircuits.chips", "api/kqcircuits.chips.airbridge_crossings", "api/kqcircuits.chips.airbridge_dc_test", "api/kqcircuits.chips.chip", "api/kqcircuits.chips.crossing_twoface", "api/kqcircuits.chips.daisy_woven", "api/kqcircuits.chips.dc_test", "api/kqcircuits.chips.demo", "api/kqcircuits.chips.demo_twoface", "api/kqcircuits.chips.empty", "api/kqcircuits.chips.junction_test", "api/kqcircuits.chips.junction_test2", "api/kqcircuits.chips.launchers", "api/kqcircuits.chips.lithography_test", "api/kqcircuits.chips.lithography_test_twoface", "api/kqcircuits.chips.quality_factor", "api/kqcircuits.chips.quality_factor_twoface", "api/kqcircuits.chips.sample_holder_test", "api/kqcircuits.chips.shaping", "api/kqcircuits.chips.simple", "api/kqcircuits.chips.single_xmons", "api/kqcircuits.chips.stripes", "api/kqcircuits.chips.tsv_test", "api/kqcircuits.chips.xmons_direct_coupling", "api/kqcircuits.defaults", "api/kqcircuits.elements", "api/kqcircuits.elements.airbridge_connection", "api/kqcircuits.elements.airbridges", "api/kqcircuits.elements.airbridges.airbridge", "api/kqcircuits.elements.airbridges.airbridge_multi_face", "api/kqcircuits.elements.airbridges.airbridge_rectangular", "api/kqcircuits.elements.capacitive_x_coupler", "api/kqcircuits.elements.chip_frame", "api/kqcircuits.elements.circular_capacitor", "api/kqcircuits.elements.element", "api/kqcircuits.elements.finger_capacitor_square", "api/kqcircuits.elements.finger_capacitor_taper", "api/kqcircuits.elements.flip_chip_connectors", "api/kqcircuits.elements.flip_chip_connectors.flip_chip_connector", "api/kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc", "api/kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf", "api/kqcircuits.elements.fluxlines", "api/kqcircuits.elements.fluxlines.fluxline", "api/kqcircuits.elements.fluxlines.fluxline_standard", "api/kqcircuits.elements.fluxlines.fluxline_straight", "api/kqcircuits.elements.hanger_resonator", "api/kqcircuits.elements.launcher", "api/kqcircuits.elements.launcher_dc", "api/kqcircuits.elements.markers", "api/kqcircuits.elements.markers.marker", "api/kqcircuits.elements.markers.marker_standard", "api/kqcircuits.elements.markers.mask_marker_fc", "api/kqcircuits.elements.meander", "api/kqcircuits.elements.smooth_capacitor", "api/kqcircuits.elements.spiral_resonator_polygon", "api/kqcircuits.elements.tsvs", "api/kqcircuits.elements.tsvs.tsv", "api/kqcircuits.elements.tsvs.tsv_ellipse", "api/kqcircuits.elements.tsvs.tsv_standard", "api/kqcircuits.elements.waveguide_composite", "api/kqcircuits.elements.waveguide_coplanar", "api/kqcircuits.elements.waveguide_coplanar_curved", "api/kqcircuits.elements.waveguide_coplanar_splitter", "api/kqcircuits.elements.waveguide_coplanar_straight", "api/kqcircuits.elements.waveguide_coplanar_taper", "api/kqcircuits.junctions", "api/kqcircuits.junctions.junction", "api/kqcircuits.junctions.manhattan", "api/kqcircuits.junctions.manhattan_single_junction", "api/kqcircuits.junctions.no_squid", "api/kqcircuits.junctions.sim", "api/kqcircuits.junctions.squid", "api/kqcircuits.klayout_view", "api/kqcircuits.layer_cluster", "api/kqcircuits.layer_config", "api/kqcircuits.layer_config.default_layer_config", "api/kqcircuits.layer_config.example_layer_config", "api/kqcircuits.masks", "api/kqcircuits.masks.mask_export", "api/kqcircuits.masks.mask_layout", "api/kqcircuits.masks.mask_set", "api/kqcircuits.masks.multi_face_mask_layout", "api/kqcircuits.pya_resolver", "api/kqcircuits.qubits", "api/kqcircuits.qubits.concentric_transmon", "api/kqcircuits.qubits.double_pads", "api/kqcircuits.qubits.double_pads_splines", "api/kqcircuits.qubits.qubit", "api/kqcircuits.qubits.swissmon", "api/kqcircuits.run", "api/kqcircuits.simulations", "api/kqcircuits.simulations.airbridges_sim", "api/kqcircuits.simulations.cross_section_simulation", "api/kqcircuits.simulations.empty_simulation", "api/kqcircuits.simulations.export", "api/kqcircuits.simulations.export.ansys", "api/kqcircuits.simulations.export.ansys.ansys_export", "api/kqcircuits.simulations.export.elmer", "api/kqcircuits.simulations.export.elmer.elmer_export", "api/kqcircuits.simulations.export.export_and_run", "api/kqcircuits.simulations.export.export_singularity", "api/kqcircuits.simulations.export.remote_export_and_run", "api/kqcircuits.simulations.export.simulation_export", "api/kqcircuits.simulations.export.sonnet", "api/kqcircuits.simulations.export.sonnet.parser", "api/kqcircuits.simulations.export.sonnet.sonnet_export", "api/kqcircuits.simulations.export.util", "api/kqcircuits.simulations.export.xsection", "api/kqcircuits.simulations.export.xsection.xsection_export", "api/kqcircuits.simulations.partition_region", "api/kqcircuits.simulations.port", "api/kqcircuits.simulations.post_process", "api/kqcircuits.simulations.simulation", "api/kqcircuits.simulations.single_element_simulation", "api/kqcircuits.simulations.single_xmons_full_chip_sim", "api/kqcircuits.simulations.waveguides_sim", "api/kqcircuits.simulations.xmons_direct_coupling_full_chip_sim", "api/kqcircuits.simulations.xmons_direct_coupling_sim", "api/kqcircuits.test_structures", "api/kqcircuits.test_structures.airbridge_dc", "api/kqcircuits.test_structures.cross_test", "api/kqcircuits.test_structures.junction_test_pads", "api/kqcircuits.test_structures.junction_test_pads.junction_test_pads", "api/kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple", "api/kqcircuits.test_structures.stripes_test", "api/kqcircuits.test_structures.stripes_test_increasing_width", "api/kqcircuits.test_structures.test_structure", "api/kqcircuits.test_structures.tsv_test_pattern", "api/kqcircuits.util", "api/kqcircuits.util.area", "api/kqcircuits.util.count_instances", "api/kqcircuits.util.coupler_lib", "api/kqcircuits.util.deep_delete", "api/kqcircuits.util.defaults_helper", "api/kqcircuits.util.dependencies", "api/kqcircuits.util.edit_node_plugin", "api/kqcircuits.util.export_helper", "api/kqcircuits.util.geometry_helper", "api/kqcircuits.util.geometry_json_encoder", "api/kqcircuits.util.groundgrid", "api/kqcircuits.util.gui_helper", "api/kqcircuits.util.import_helper", "api/kqcircuits.util.label", "api/kqcircuits.util.layout_to_code", "api/kqcircuits.util.library_helper", "api/kqcircuits.util.log_router", "api/kqcircuits.util.merge", "api/kqcircuits.util.netlist_extraction", "api/kqcircuits.util.netlist_graph", "api/kqcircuits.util.parameters", "api/kqcircuits.util.plugin_startup", "api/kqcircuits.util.refpoints", "api/kqcircuits.util.replace_junctions", "api/kqcircuits.util.symmetric_polygons", "citing", "contributing", "developer/architecture", "developer/coding_style", "developer/containers", "developer/documentation", "developer/index", "developer/setup", "developer/standalone", "developer/testing", "index", "installation", "salt", "support", "trademarks", "user_guide/file_system_and_utilities", "user_guide/gui_features", "user_guide/gui_workflow", "user_guide/index", "user_guide/macro_workflow", "user_guide/mask_export", "user_guide/python_workflow", "user_guide/simulation/elmer_remote_workflow", "user_guide/simulation/export_and_run", "user_guide/simulation/gmsh_elmer_export", "user_guide/simulation/simulation_features", "user_guide/simulation/simulation_objects", "user_guide/simulation/simulation_scripts", "user_guide/simulations", "user_guide/terminology", "user_guide/usage", "user_guide/xsection"], "filenames": ["about.rst", "api/kqcircuits.rst", "api/kqcircuits.chips.rst", "api/kqcircuits.chips.airbridge_crossings.rst", "api/kqcircuits.chips.airbridge_dc_test.rst", "api/kqcircuits.chips.chip.rst", "api/kqcircuits.chips.crossing_twoface.rst", "api/kqcircuits.chips.daisy_woven.rst", "api/kqcircuits.chips.dc_test.rst", "api/kqcircuits.chips.demo.rst", "api/kqcircuits.chips.demo_twoface.rst", "api/kqcircuits.chips.empty.rst", "api/kqcircuits.chips.junction_test.rst", "api/kqcircuits.chips.junction_test2.rst", "api/kqcircuits.chips.launchers.rst", "api/kqcircuits.chips.lithography_test.rst", "api/kqcircuits.chips.lithography_test_twoface.rst", "api/kqcircuits.chips.quality_factor.rst", "api/kqcircuits.chips.quality_factor_twoface.rst", "api/kqcircuits.chips.sample_holder_test.rst", "api/kqcircuits.chips.shaping.rst", "api/kqcircuits.chips.simple.rst", "api/kqcircuits.chips.single_xmons.rst", "api/kqcircuits.chips.stripes.rst", "api/kqcircuits.chips.tsv_test.rst", "api/kqcircuits.chips.xmons_direct_coupling.rst", "api/kqcircuits.defaults.rst", "api/kqcircuits.elements.rst", "api/kqcircuits.elements.airbridge_connection.rst", "api/kqcircuits.elements.airbridges.rst", "api/kqcircuits.elements.airbridges.airbridge.rst", "api/kqcircuits.elements.airbridges.airbridge_multi_face.rst", "api/kqcircuits.elements.airbridges.airbridge_rectangular.rst", "api/kqcircuits.elements.capacitive_x_coupler.rst", "api/kqcircuits.elements.chip_frame.rst", "api/kqcircuits.elements.circular_capacitor.rst", "api/kqcircuits.elements.element.rst", "api/kqcircuits.elements.finger_capacitor_square.rst", "api/kqcircuits.elements.finger_capacitor_taper.rst", "api/kqcircuits.elements.flip_chip_connectors.rst", "api/kqcircuits.elements.flip_chip_connectors.flip_chip_connector.rst", "api/kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc.rst", "api/kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf.rst", "api/kqcircuits.elements.fluxlines.rst", "api/kqcircuits.elements.fluxlines.fluxline.rst", "api/kqcircuits.elements.fluxlines.fluxline_standard.rst", "api/kqcircuits.elements.fluxlines.fluxline_straight.rst", "api/kqcircuits.elements.hanger_resonator.rst", "api/kqcircuits.elements.launcher.rst", "api/kqcircuits.elements.launcher_dc.rst", "api/kqcircuits.elements.markers.rst", "api/kqcircuits.elements.markers.marker.rst", "api/kqcircuits.elements.markers.marker_standard.rst", "api/kqcircuits.elements.markers.mask_marker_fc.rst", "api/kqcircuits.elements.meander.rst", "api/kqcircuits.elements.smooth_capacitor.rst", "api/kqcircuits.elements.spiral_resonator_polygon.rst", "api/kqcircuits.elements.tsvs.rst", "api/kqcircuits.elements.tsvs.tsv.rst", "api/kqcircuits.elements.tsvs.tsv_ellipse.rst", "api/kqcircuits.elements.tsvs.tsv_standard.rst", "api/kqcircuits.elements.waveguide_composite.rst", "api/kqcircuits.elements.waveguide_coplanar.rst", "api/kqcircuits.elements.waveguide_coplanar_curved.rst", "api/kqcircuits.elements.waveguide_coplanar_splitter.rst", "api/kqcircuits.elements.waveguide_coplanar_straight.rst", "api/kqcircuits.elements.waveguide_coplanar_taper.rst", "api/kqcircuits.junctions.rst", "api/kqcircuits.junctions.junction.rst", "api/kqcircuits.junctions.manhattan.rst", "api/kqcircuits.junctions.manhattan_single_junction.rst", "api/kqcircuits.junctions.no_squid.rst", "api/kqcircuits.junctions.sim.rst", "api/kqcircuits.junctions.squid.rst", "api/kqcircuits.klayout_view.rst", "api/kqcircuits.layer_cluster.rst", "api/kqcircuits.layer_config.rst", "api/kqcircuits.layer_config.default_layer_config.rst", "api/kqcircuits.layer_config.example_layer_config.rst", "api/kqcircuits.masks.rst", "api/kqcircuits.masks.mask_export.rst", "api/kqcircuits.masks.mask_layout.rst", "api/kqcircuits.masks.mask_set.rst", "api/kqcircuits.masks.multi_face_mask_layout.rst", "api/kqcircuits.pya_resolver.rst", "api/kqcircuits.qubits.rst", "api/kqcircuits.qubits.concentric_transmon.rst", "api/kqcircuits.qubits.double_pads.rst", "api/kqcircuits.qubits.double_pads_splines.rst", "api/kqcircuits.qubits.qubit.rst", "api/kqcircuits.qubits.swissmon.rst", "api/kqcircuits.run.rst", "api/kqcircuits.simulations.rst", "api/kqcircuits.simulations.airbridges_sim.rst", "api/kqcircuits.simulations.cross_section_simulation.rst", "api/kqcircuits.simulations.empty_simulation.rst", "api/kqcircuits.simulations.export.rst", "api/kqcircuits.simulations.export.ansys.rst", "api/kqcircuits.simulations.export.ansys.ansys_export.rst", "api/kqcircuits.simulations.export.elmer.rst", "api/kqcircuits.simulations.export.elmer.elmer_export.rst", "api/kqcircuits.simulations.export.export_and_run.rst", "api/kqcircuits.simulations.export.export_singularity.rst", "api/kqcircuits.simulations.export.remote_export_and_run.rst", "api/kqcircuits.simulations.export.simulation_export.rst", "api/kqcircuits.simulations.export.sonnet.rst", "api/kqcircuits.simulations.export.sonnet.parser.rst", "api/kqcircuits.simulations.export.sonnet.sonnet_export.rst", "api/kqcircuits.simulations.export.util.rst", "api/kqcircuits.simulations.export.xsection.rst", "api/kqcircuits.simulations.export.xsection.xsection_export.rst", "api/kqcircuits.simulations.partition_region.rst", "api/kqcircuits.simulations.port.rst", "api/kqcircuits.simulations.post_process.rst", "api/kqcircuits.simulations.simulation.rst", "api/kqcircuits.simulations.single_element_simulation.rst", "api/kqcircuits.simulations.single_xmons_full_chip_sim.rst", "api/kqcircuits.simulations.waveguides_sim.rst", "api/kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.rst", "api/kqcircuits.simulations.xmons_direct_coupling_sim.rst", "api/kqcircuits.test_structures.rst", "api/kqcircuits.test_structures.airbridge_dc.rst", "api/kqcircuits.test_structures.cross_test.rst", "api/kqcircuits.test_structures.junction_test_pads.rst", "api/kqcircuits.test_structures.junction_test_pads.junction_test_pads.rst", "api/kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple.rst", "api/kqcircuits.test_structures.stripes_test.rst", "api/kqcircuits.test_structures.stripes_test_increasing_width.rst", "api/kqcircuits.test_structures.test_structure.rst", "api/kqcircuits.test_structures.tsv_test_pattern.rst", "api/kqcircuits.util.rst", "api/kqcircuits.util.area.rst", "api/kqcircuits.util.count_instances.rst", "api/kqcircuits.util.coupler_lib.rst", "api/kqcircuits.util.deep_delete.rst", "api/kqcircuits.util.defaults_helper.rst", "api/kqcircuits.util.dependencies.rst", "api/kqcircuits.util.edit_node_plugin.rst", "api/kqcircuits.util.export_helper.rst", "api/kqcircuits.util.geometry_helper.rst", "api/kqcircuits.util.geometry_json_encoder.rst", "api/kqcircuits.util.groundgrid.rst", "api/kqcircuits.util.gui_helper.rst", "api/kqcircuits.util.import_helper.rst", "api/kqcircuits.util.label.rst", "api/kqcircuits.util.layout_to_code.rst", "api/kqcircuits.util.library_helper.rst", "api/kqcircuits.util.log_router.rst", "api/kqcircuits.util.merge.rst", "api/kqcircuits.util.netlist_extraction.rst", "api/kqcircuits.util.netlist_graph.rst", "api/kqcircuits.util.parameters.rst", "api/kqcircuits.util.plugin_startup.rst", "api/kqcircuits.util.refpoints.rst", "api/kqcircuits.util.replace_junctions.rst", "api/kqcircuits.util.symmetric_polygons.rst", "citing.rst", "contributing.rst", "developer/architecture.rst", "developer/coding_style.rst", "developer/containers.rst", "developer/documentation.rst", "developer/index.rst", "developer/setup.rst", "developer/standalone.rst", "developer/testing.rst", "index.rst", "installation.rst", "salt.rst", "support.rst", "trademarks.rst", "user_guide/file_system_and_utilities.rst", "user_guide/gui_features.rst", "user_guide/gui_workflow.rst", "user_guide/index.rst", "user_guide/macro_workflow.rst", "user_guide/mask_export.rst", "user_guide/python_workflow.rst", "user_guide/simulation/elmer_remote_workflow.rst", "user_guide/simulation/export_and_run.rst", "user_guide/simulation/gmsh_elmer_export.rst", "user_guide/simulation/simulation_features.rst", "user_guide/simulation/simulation_objects.rst", "user_guide/simulation/simulation_scripts.rst", "user_guide/simulations.rst", "user_guide/terminology.rst", "user_guide/usage.rst", "user_guide/xsection.rst"], "titles": ["About", "API documentation", "kqcircuits.chips", "kqcircuits.chips.airbridge_crossings", "kqcircuits.chips.airbridge_dc_test", "kqcircuits.chips.chip", "kqcircuits.chips.crossing_twoface", "kqcircuits.chips.daisy_woven", "kqcircuits.chips.dc_test", "kqcircuits.chips.demo", "kqcircuits.chips.demo_twoface", "kqcircuits.chips.empty", "kqcircuits.chips.junction_test", "kqcircuits.chips.junction_test2", "kqcircuits.chips.launchers", "kqcircuits.chips.lithography_test", "kqcircuits.chips.lithography_test_twoface", "kqcircuits.chips.quality_factor", "kqcircuits.chips.quality_factor_twoface", "kqcircuits.chips.sample_holder_test", "kqcircuits.chips.shaping", "kqcircuits.chips.simple", "kqcircuits.chips.single_xmons", "kqcircuits.chips.stripes", "kqcircuits.chips.tsv_test", "kqcircuits.chips.xmons_direct_coupling", "kqcircuits.defaults", "kqcircuits.elements", "kqcircuits.elements.airbridge_connection", "kqcircuits.elements.airbridges", "kqcircuits.elements.airbridges.airbridge", "kqcircuits.elements.airbridges.airbridge_multi_face", "kqcircuits.elements.airbridges.airbridge_rectangular", "kqcircuits.elements.capacitive_x_coupler", "kqcircuits.elements.chip_frame", "kqcircuits.elements.circular_capacitor", "kqcircuits.elements.element", "kqcircuits.elements.finger_capacitor_square", "kqcircuits.elements.finger_capacitor_taper", "kqcircuits.elements.flip_chip_connectors", "kqcircuits.elements.flip_chip_connectors.flip_chip_connector", "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc", "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf", "kqcircuits.elements.fluxlines", "kqcircuits.elements.fluxlines.fluxline", "kqcircuits.elements.fluxlines.fluxline_standard", "kqcircuits.elements.fluxlines.fluxline_straight", "kqcircuits.elements.hanger_resonator", "kqcircuits.elements.launcher", "kqcircuits.elements.launcher_dc", "kqcircuits.elements.markers", "kqcircuits.elements.markers.marker", "kqcircuits.elements.markers.marker_standard", "kqcircuits.elements.markers.mask_marker_fc", "kqcircuits.elements.meander", "kqcircuits.elements.smooth_capacitor", "kqcircuits.elements.spiral_resonator_polygon", "kqcircuits.elements.tsvs", "kqcircuits.elements.tsvs.tsv", "kqcircuits.elements.tsvs.tsv_ellipse", "kqcircuits.elements.tsvs.tsv_standard", "kqcircuits.elements.waveguide_composite", "kqcircuits.elements.waveguide_coplanar", "kqcircuits.elements.waveguide_coplanar_curved", "kqcircuits.elements.waveguide_coplanar_splitter", "kqcircuits.elements.waveguide_coplanar_straight", "kqcircuits.elements.waveguide_coplanar_taper", "kqcircuits.junctions", "kqcircuits.junctions.junction", "kqcircuits.junctions.manhattan", "kqcircuits.junctions.manhattan_single_junction", "kqcircuits.junctions.no_squid", "kqcircuits.junctions.sim", "kqcircuits.junctions.squid", "kqcircuits.klayout_view", "kqcircuits.layer_cluster", "kqcircuits.layer_config", "kqcircuits.layer_config.default_layer_config", "kqcircuits.layer_config.example_layer_config", "kqcircuits.masks", "kqcircuits.masks.mask_export", "kqcircuits.masks.mask_layout", "kqcircuits.masks.mask_set", "kqcircuits.masks.multi_face_mask_layout", "kqcircuits.pya_resolver", "kqcircuits.qubits", "kqcircuits.qubits.concentric_transmon", "kqcircuits.qubits.double_pads", "kqcircuits.qubits.double_pads_splines", "kqcircuits.qubits.qubit", "kqcircuits.qubits.swissmon", "kqcircuits.run", "kqcircuits.simulations", "kqcircuits.simulations.airbridges_sim", "kqcircuits.simulations.cross_section_simulation", "kqcircuits.simulations.empty_simulation", "kqcircuits.simulations.export", "kqcircuits.simulations.export.ansys", "kqcircuits.simulations.export.ansys.ansys_export", "kqcircuits.simulations.export.elmer", "kqcircuits.simulations.export.elmer.elmer_export", "kqcircuits.simulations.export.export_and_run", "kqcircuits.simulations.export.export_singularity", "kqcircuits.simulations.export.remote_export_and_run", "kqcircuits.simulations.export.simulation_export", "kqcircuits.simulations.export.sonnet", "kqcircuits.simulations.export.sonnet.parser", "kqcircuits.simulations.export.sonnet.sonnet_export", "kqcircuits.simulations.export.util", "kqcircuits.simulations.export.xsection", "kqcircuits.simulations.export.xsection.xsection_export", "kqcircuits.simulations.partition_region", "kqcircuits.simulations.port", "kqcircuits.simulations.post_process", "kqcircuits.simulations.simulation", "kqcircuits.simulations.single_element_simulation", "kqcircuits.simulations.single_xmons_full_chip_sim", "kqcircuits.simulations.waveguides_sim", "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim", "kqcircuits.simulations.xmons_direct_coupling_sim", "kqcircuits.test_structures", "kqcircuits.test_structures.airbridge_dc", "kqcircuits.test_structures.cross_test", "kqcircuits.test_structures.junction_test_pads", "kqcircuits.test_structures.junction_test_pads.junction_test_pads", "kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple", "kqcircuits.test_structures.stripes_test", "kqcircuits.test_structures.stripes_test_increasing_width", "kqcircuits.test_structures.test_structure", "kqcircuits.test_structures.tsv_test_pattern", "kqcircuits.util", "kqcircuits.util.area", "kqcircuits.util.count_instances", "kqcircuits.util.coupler_lib", "kqcircuits.util.deep_delete", "kqcircuits.util.defaults_helper", "kqcircuits.util.dependencies", "kqcircuits.util.edit_node_plugin", "kqcircuits.util.export_helper", "kqcircuits.util.geometry_helper", "kqcircuits.util.geometry_json_encoder", "kqcircuits.util.groundgrid", "kqcircuits.util.gui_helper", "kqcircuits.util.import_helper", "kqcircuits.util.label", "kqcircuits.util.layout_to_code", "kqcircuits.util.library_helper", "kqcircuits.util.log_router", "kqcircuits.util.merge", "kqcircuits.util.netlist_extraction", "kqcircuits.util.netlist_graph", "kqcircuits.util.parameters", "kqcircuits.util.plugin_startup", "kqcircuits.util.refpoints", "kqcircuits.util.replace_junctions", "kqcircuits.util.symmetric_polygons", "Citing", "Contributing", "Architecture", "Coding Style", "Containers", "Documentation", "Developer Guide", "Developer Setup", "KLayout Standalone Usage", "Testing", "KQCircuits documentation", "Installation", "Getting started (Salt package)", "Support", "Trademarks", "General Structure and Miscellaneous Utilities", "GUI Features", "Point-and-click workflow tutorial", "User Guide", "Macro development", "Mask export", "Python workflow tutorial", "Elmer remote simulations workflow", "Run and export in one line", "Gmsh/Elmer export", "Simulation features", "Simulation objects", "Export functions", "External simulation tools", "Terminology", "Usage", "Creating cross section images"], "terms": {"kqcircuit": [0, 1, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187], "develop": [0, 157, 164, 165, 166, 167, 168, 174, 177, 183], "wa": [0, 36, 81, 94, 145, 153, 166, 168, 175, 176, 180, 182, 186], "start": [0, 5, 13, 18, 34, 54, 56, 61, 62, 63, 64, 77, 86, 103, 108, 114, 124, 139, 145, 151, 154, 161, 164, 166, 167, 169, 175, 177, 178, 180, 182], "johann": [0, 156], "heinsoo": [0, 156], "aalto": [0, 67, 181], "univers": [0, 181], "The": [0, 3, 5, 6, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 25, 28, 31, 32, 34, 35, 36, 37, 38, 40, 42, 48, 49, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 74, 77, 79, 80, 81, 82, 83, 85, 86, 89, 90, 92, 93, 94, 95, 98, 100, 107, 108, 110, 111, 113, 114, 115, 116, 117, 118, 119, 121, 132, 138, 139, 140, 142, 143, 145, 148, 149, 150, 151, 154, 157, 158, 160, 161, 163, 164, 165, 167, 168, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187], "final": [0, 61, 77, 82, 114, 164, 177, 183], "kqc": [0, 94, 101, 103, 150, 152, 153, 157, 158, 160, 163, 164, 167, 168, 172, 174, 175, 176, 177, 178, 179, 180, 186], "version": [0, 1, 79, 80, 81, 82, 83, 140, 156, 160, 162, 163, 164, 168, 173, 176, 178, 180, 183, 187], "correspond": [0, 18, 25, 36, 61, 77, 81, 83, 86, 111, 114, 119, 139, 143, 144, 145, 149, 158, 160, 165, 168, 171, 172, 175, 177, 181, 182, 184, 185], "v0": [0, 167], "0": [0, 5, 6, 7, 10, 13, 16, 17, 18, 22, 27, 28, 30, 34, 35, 36, 37, 46, 54, 55, 56, 61, 62, 63, 64, 68, 69, 70, 74, 77, 87, 88, 89, 90, 94, 98, 100, 106, 107, 108, 110, 112, 114, 118, 124, 128, 131, 139, 140, 145, 148, 151, 152, 153, 154, 160, 163, 164, 167, 168, 173, 176, 177, 181, 182], "tag": [0, 149, 157, 160, 164, 185], "iqm": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187], "github": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187], "repositori": [0, 138, 160, 162, 168, 171, 181], "sinc": [0, 142, 163, 172, 177, 182], "ha": [0, 5, 19, 22, 35, 36, 37, 55, 61, 69, 82, 86, 90, 94, 114, 138, 142, 145, 150, 151, 154, 160, 163, 164, 167, 168, 172, 175, 176, 177, 178, 180, 182], "been": [0, 61, 82, 114, 146, 160, 167, 168, 176], "see": [0, 2, 18, 36, 61, 77, 82, 93, 95, 98, 107, 110, 114, 116, 117, 118, 119, 120, 154, 157, 158, 160, 163, 164, 167, 168, 170, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 186], "cite": [0, 166], "section": [0, 62, 94, 100, 110, 149, 158, 163, 164, 166, 168, 172, 174, 176, 177, 179, 182, 184], "other": [0, 2, 5, 13, 27, 33, 36, 37, 61, 62, 69, 70, 74, 75, 77, 87, 89, 94, 103, 107, 114, 124, 133, 139, 147, 153, 154, 155, 156, 157, 158, 160, 163, 164, 165, 166, 167, 171, 172, 175, 176, 177, 180, 181, 182, 183, 185, 186, 187], "author": [0, 156], "http": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187], "com": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187], "finland": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187], "chip": [1, 27, 28, 31, 34, 36, 37, 39, 40, 41, 42, 48, 53, 56, 61, 77, 79, 80, 81, 82, 83, 87, 114, 117, 118, 124, 129, 138, 145, 149, 150, 158, 160, 166, 167, 171, 172, 173, 174, 175, 182, 185, 186], "airbridge_cross": [1, 2], "airbridgecross": [1, 2, 3], "build": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 79, 81, 82, 85, 86, 87, 90, 92, 93, 94, 95, 114, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 145, 146, 158, 160, 161, 163, 164, 167, 168, 172, 174, 176, 178, 180, 181, 182, 183, 184], "airbridge_dc_test": [1, 2], "airbridgedctest": [1, 2, 4], "library_nam": [1, 2, 5, 27, 36, 61, 67, 68, 85, 89, 92, 94, 114, 120, 128, 146, 158], "library_descript": [1, 2, 5, 27, 36, 67, 68, 85, 89, 120, 128, 158], "library_path": [1, 2, 5, 27, 36, 67, 68, 85, 89, 120, 128, 146], "display_text_impl": [1, 2, 5, 27, 36], "can_create_from_shape_impl": [1, 2, 5, 27, 37, 38, 54, 55, 62], "parameters_from_shape_impl": [1, 2, 5, 27, 54, 62], "transformation_from_shape_impl": [1, 2, 5, 27, 29, 30, 62], "get_launcher_assign": [1, 2, 5], "produce_junction_test": [1, 2, 5, 9], "produce_opt_lit_test": [1, 2, 5], "produce_ground_grid": [1, 2, 5], "produce_ground_on_face_grid": [1, 2, 5], "produce_fram": [1, 2, 5], "merge_layout_layers_on_fac": [1, 2, 5, 130, 148], "merge_layout_lay": [1, 2, 5], "produce_structur": [1, 2, 5], "get_box": [1, 2, 5], "get_filter_region": [1, 2, 5], "insert_filtered_el": [1, 2, 5], "get_ground_bump_loc": [1, 2, 5], "post_build": [1, 2, 5, 27, 36], "produce_launch": [1, 2, 5, 92, 118, 177], "produce_n_launch": [1, 2, 5], "make_grid_loc": [1, 2, 5], "get_ground_tsv_loc": [1, 2, 5], "crossing_twofac": [1, 2], "crossingtwofac": [1, 2, 6], "daisy_woven": [1, 2], "daisywoven": [1, 2, 7], "dc_test": [1, 2], "dctest": [1, 2, 8], "demo": [1, 2, 173, 175, 176, 177], "produce_qubit": [1, 2, 9, 10, 25, 92, 118, 119], "produce_coupl": [1, 2, 9, 10], "produce_control_lin": [1, 2, 9, 10], "produce_drivelin": [1, 2, 9, 10], "produce_fluxlin": [1, 2, 9, 10, 85, 89], "produce_readout_structur": [1, 2, 9, 10], "produce_probelin": [1, 2, 9, 10], "demo_twofac": [1, 2, 176], "demotwofac": [1, 2, 10, 176], "empti": [1, 2, 5, 13, 24, 28, 31, 33, 35, 36, 37, 42, 47, 55, 56, 61, 64, 82, 83, 86, 87, 90, 94, 114, 124, 129, 142, 145, 150, 151, 165, 172, 181, 182, 183], "make_empty_area": [1, 2, 11], "junction_test": [1, 2], "junctiontest": [1, 2, 12], "junction_test2": [1, 2], "junctiontest2": [1, 2, 13], "coerce_parameters_impl": [1, 2, 13, 27, 36, 43, 44, 61, 63, 67, 68, 85, 89, 120, 123, 124], "launcher": [1, 2, 5, 7, 8, 17, 19, 22, 27, 49, 90, 116, 118, 149, 173, 177], "lithography_test": [1, 2], "lithographytest": [1, 2, 15], "create_pattern": [1, 2, 15, 16], "lithography_test_twofac": [1, 2], "lithographytesttwofac": [1, 2, 16], "quality_factor": [1, 2, 146, 176], "qualityfactor": [1, 2, 17, 82, 146, 176], "quality_factor_twofac": [1, 2], "qualityfactortwofac": [1, 2, 18], "produce_reson": [1, 2, 18], "sample_holder_test": [1, 2], "sampleholdertest": [1, 2, 19], "shape": [1, 2, 5, 13, 17, 24, 27, 28, 30, 31, 32, 34, 36, 37, 42, 54, 56, 61, 62, 75, 80, 82, 86, 87, 89, 94, 110, 114, 124, 128, 129, 144, 148, 154, 172, 173, 175, 177, 182, 183, 185, 187], "simpl": [1, 2, 13, 82, 84, 107, 114, 124, 125, 160, 176, 180], "single_xmon": [1, 2], "singlexmon": [1, 2, 22], "qubits_refpoint": [1, 2, 22], "stripe": [1, 2, 5, 15, 16, 126, 127], "tsv_test": [1, 2], "tsvtest": [1, 2, 24], "create_xsect": [1, 2, 24], "xmons_direct_coupl": [1, 2], "xmonsdirectcoupl": [1, 2, 25], "produce_readout_reson": [1, 2, 25, 92, 118], "element": [1, 2, 3, 5, 13, 21, 22, 24, 26, 68, 70, 74, 81, 82, 86, 87, 89, 90, 98, 100, 112, 114, 115, 120, 124, 128, 129, 130, 133, 139, 140, 142, 145, 146, 148, 149, 150, 151, 153, 154, 160, 162, 164, 166, 171, 174, 175, 176, 181, 183, 184, 186], "airbridg": [1, 3, 4, 17, 18, 27, 28, 36, 51, 53, 54, 56, 61, 64, 114, 121, 130, 146, 153, 172, 182], "default_typ": [1, 27, 29, 30, 31, 32, 43, 44, 50, 51, 57, 58, 67, 68, 120, 123, 124], "creat": [1, 2, 5, 27, 29, 30, 31, 36, 43, 44, 50, 51, 57, 58, 61, 62, 63, 67, 68, 73, 74, 77, 81, 82, 83, 84, 89, 93, 94, 95, 98, 100, 104, 110, 114, 115, 116, 117, 118, 119, 120, 123, 124, 131, 137, 138, 142, 145, 146, 148, 152, 153, 158, 161, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 176, 177, 180, 181, 182, 183, 185], "airbridge_multi_fac": [1, 27, 29], "airbridgemultifac": [1, 27, 29, 31], "airbridge_rectangular": [1, 27, 29], "airbridgerectangular": [1, 27, 29, 32], "flip_chip_connector": [1, 27], "flipchipconnector": [1, 27, 39, 40, 41, 42, 61], "create_bump_connector": [1, 27, 39, 40], "flip_chip_connector_dc": [1, 27, 39], "flipchipconnectordc": [1, 27, 39, 41], "flip_chip_connector_rf": [1, 27, 39], "flipchipconnectorrf": [1, 27, 39, 42, 177], "get_sim_port": [1, 27, 33, 35, 36, 37, 39, 42, 47, 55, 85, 86, 87, 90, 182], "fluxlin": [1, 9, 22, 25, 27, 36, 85, 89, 90, 119], "fluxline_standard": [1, 27, 43], "fluxlinestandard": [1, 27, 43, 45], "fluxline_straight": [1, 27, 43], "fluxlinestraight": [1, 27, 43, 46], "marker": [1, 5, 13, 27, 34, 54, 81, 122, 138, 154], "produce_geometri": [1, 27, 50, 51], "get_marker_loc": [1, 27, 50, 51, 53], "get_marker_region": [1, 27, 50, 51, 53], "marker_standard": [1, 27, 50], "markerstandard": [1, 27, 50, 52], "mask_marker_fc": [1, 27, 50], "maskmarkerfc": [1, 27, 50, 53], "create_cross": [1, 27, 50, 53], "tsv": [1, 5, 24, 27, 36, 114, 129], "tsv_ellips": [1, 27, 57], "tsvellips": [1, 27, 57, 59], "produce_impl": [1, 27, 36, 57, 59, 158], "create_tsv_connector": [1, 27, 57, 59], "tsv_standard": [1, 27, 57], "tsvstandard": [1, 27, 57, 60], "airbridge_connect": [1, 27], "airbridgeconnect": [1, 27, 28, 61], "capacitive_x_coupl": [1, 27], "capacitivexcoupl": [1, 27, 33], "chip_fram": [1, 27], "chipfram": [1, 5, 6, 7, 10, 16, 18, 27, 34], "circular_capacitor": [1, 27], "circularcapacitor": [1, 27, 35], "get_refpoint": [1, 27, 36, 92, 114], "insert_cell_into": [1, 27, 36], "resolve_fac": [1, 27, 36], "create_cell_from_shap": [1, 27, 36], "create_subtyp": [1, 27, 36], "create_with_refpoint": [1, 27, 36, 145], "add_el": [1, 27, 36, 68, 73, 92, 114, 133, 158, 177], "insert_cel": [1, 25, 27, 36, 74, 92, 114, 119, 133, 145, 158, 175, 177, 182], "face": [1, 5, 6, 7, 10, 13, 16, 18, 24, 27, 28, 30, 31, 34, 36, 37, 40, 42, 56, 59, 60, 61, 62, 63, 64, 74, 77, 79, 80, 81, 82, 83, 87, 92, 110, 111, 112, 114, 117, 124, 129, 130, 138, 148, 149, 153, 154, 168, 172, 174, 184], "pcell_params_by_nam": [1, 27, 36, 92, 114], "add_port": [1, 27, 36], "copy_port": [1, 27, 36], "get_schema": [1, 27, 36, 92, 94, 114], "get_lay": [1, 27, 36, 89, 92, 114, 177], "raise_error_on_cel": [1, 27, 36], "add_protect": [1, 27, 36], "sync_paramet": [1, 27, 36], "left_and_right_waveguid": [1, 27, 36], "face_changer_waveguid": [1, 27, 36], "finger_capacitor_squar": [1, 27, 177], "fingercapacitorsquar": [1, 27, 37, 133, 177], "get_ground_region": [1, 27, 37], "finger_area_width": [1, 27, 37], "finger_area_length": [1, 27, 37], "cut_region": [1, 27, 37], "add_waveguid": [1, 27, 37], "finger_capacitor_tap": [1, 27], "fingercapacitortap": [1, 27, 38], "hanger_reson": [1, 27], "hangerreson": [1, 27, 47], "launcher_dc": [1, 27], "launcherdc": [1, 27, 49], "meander": [1, 3, 6, 17, 27, 61, 107, 142, 172], "smooth_capacitor": [1, 27], "smoothcapacitor": [1, 18, 27, 55, 133], "spiral_resonator_polygon": [1, 27], "spiralresonatorpolygon": [1, 27, 56], "rectangular_paramet": [1, 27, 56], "waveguide_composit": [1, 27], "node": [1, 27, 61, 137, 142, 145, 150, 173, 174, 177, 180], "posit": [1, 22, 24, 27, 30, 36, 54, 61, 62, 63, 81, 86, 89, 90, 106, 138, 142, 144, 145, 150, 153, 172, 176, 177], "align": [1, 27, 36, 53, 61, 74, 81, 89, 114, 122, 138, 142, 154, 172, 176, 177], "inst_nam": [1, 9, 10, 27, 36, 61, 74, 114, 142, 154, 177], "angl": [1, 27, 35, 61, 62, 63, 64, 86, 139, 142], "length_befor": [1, 27, 61, 142], "length_incr": [1, 27, 61, 142], "deseri": [1, 27, 61, 140], "nodes_from_str": [1, 27, 61], "waveguidecomposit": [1, 27, 61, 142, 145, 174, 177], "get_segment_cel": [1, 27, 61], "get_segment_length": [1, 27, 61], "produce_fixed_length_waveguid": [1, 27, 61], "snap_point": [1, 27, 61], "check_node_typ": [1, 27, 61], "produce_fixed_length_bend": [1, 27, 61], "waveguide_coplanar": [1, 27, 177], "waveguidecoplanar": [1, 27, 61, 62, 145, 172, 177], "produce_waveguid": [1, 27, 62, 92, 118], "get_corner_data": [1, 27, 62], "produce_end_termin": [1, 27, 62], "is_continu": [1, 27, 62], "waveguide_coplanar_curv": [1, 27], "arc": [1, 27, 63, 86, 139], "waveguidecoplanarcurv": [1, 27, 63], "create_curve_arc": [1, 27, 63], "produce_curve_termin": [1, 27, 63], "waveguide_coplanar_splitt": [1, 27], "waveguidecoplanarsplitt": [1, 27, 64], "t_cross_paramet": [1, 27, 64], "waveguide_coplanar_straight": [1, 27], "waveguidecoplanarstraight": [1, 27, 65], "waveguide_coplanar_tap": [1, 27], "waveguidecoplanartap": [1, 27, 61, 66], "junction": [1, 5, 9, 10, 13, 22, 25, 80, 86, 87, 88, 89, 112, 114, 119, 123, 124, 125, 153, 154, 158, 166, 168, 177, 181, 182], "manhattan": [1, 5, 10, 13, 22, 25, 67, 68, 70, 87, 89, 119, 124], "produce_manhattan_squid": [1, 67, 69], "produce_contact_pad": [1, 67, 69], "manhattan_single_junct": [1, 67], "manhattansinglejunct": [1, 67, 70], "produce_manhattan_junct": [1, 67, 70], "no_squid": [1, 67], "nosquid": [1, 10, 13, 22, 25, 67, 68, 71, 87, 89, 119, 124], "sim": [1, 10, 13, 22, 25, 67, 68, 87, 89, 119, 124, 164, 178, 179, 180, 182], "squid": [1, 13, 67, 69, 71, 72, 85, 87, 88, 89, 90, 112, 124, 154], "layer_config": [1, 166, 177], "default_layer_config": [1, 76, 177], "example_layer_config": [1, 76, 177], "mask": [1, 5, 34, 51, 53, 130, 160, 164, 166, 171, 174, 177, 185], "mask_export": [1, 79], "export_mask_set": [1, 79, 80], "export_design": [1, 79, 80], "export_chip": [1, 79, 80], "export_masks_of_fac": [1, 79, 80], "export_mask": [1, 79, 80], "export_doc": [1, 79, 80], "export_bitmap": [1, 79, 80], "get_mask_layout_full_nam": [1, 79, 80], "export_junction_paramet": [1, 79, 80], "mask_layout": [1, 79, 80, 82, 83, 176], "masklayout": [1, 79, 80, 81, 82, 83], "layout": [1, 24, 25, 27, 30, 36, 44, 51, 58, 61, 68, 74, 79, 80, 81, 82, 83, 92, 93, 94, 95, 104, 108, 110, 111, 114, 116, 117, 118, 119, 124, 129, 138, 139, 145, 146, 148, 149, 150, 152, 154, 158, 164, 166, 172, 173, 175, 176, 177, 181, 182, 183, 184, 186, 187], "name": [1, 5, 7, 9, 10, 13, 18, 21, 22, 24, 25, 28, 31, 34, 36, 37, 56, 59, 61, 64, 68, 73, 74, 75, 77, 79, 80, 81, 82, 83, 87, 89, 94, 98, 100, 103, 104, 111, 113, 114, 118, 124, 128, 129, 131, 138, 142, 145, 146, 147, 148, 149, 150, 151, 153, 154, 158, 160, 161, 163, 167, 168, 173, 175, 176, 177, 178, 182, 183, 184], "with_grid": [1, 5, 79, 81, 82, 83, 114, 176], "face_id": [1, 5, 13, 15, 16, 18, 24, 27, 28, 31, 36, 37, 56, 61, 74, 75, 79, 81, 82, 83, 87, 114, 124, 129, 177], "layers_to_mask": [1, 79, 81, 176], "covered_region_excluded_lay": [1, 79, 81], "chips_map": [1, 79, 81, 82, 83], "align_to": [1, 36, 74, 79, 81, 114, 176, 177], "chips_map_legend": [1, 79, 81, 82], "wafer_rad": [1, 79, 81], "wafer_cent": [1, 79, 81], "chips_map_offset": [1, 79, 81], "wafer_top_flat_length": [1, 79, 81], "wafer_bottom_flat_length": [1, 79, 81], "dice_width": [1, 34, 79, 81], "text_margin": [1, 34, 79, 81], "chip_siz": [1, 79, 81, 176], "edge_clear": [1, 79, 81, 176], "remove_chip": [1, 79, 81], "chip_box_offset": [1, 79, 81], "chip_tran": [1, 79, 81], "mask_name_offset": [1, 79, 81], "mask_name_scal": [1, 79, 81], "mask_name_box_margin": [1, 79, 81], "mask_text_scal": [1, 79, 81], "mask_markers_dict": [1, 79, 81], "mask_marker_offset": [1, 79, 81], "mask_export_lay": [1, 77, 79, 81, 82], "mask_export_density_lay": [1, 79, 81], "submask": [1, 79, 81], "extra_id": [1, 79, 81], "extra_chip": [1, 79, 81], "top_cel": [1, 74, 79, 81, 142, 145, 154, 175, 185], "added_chip": [1, 79, 81], "chips_placed_by_position_label": [1, 79, 81], "chip_copi": [1, 79, 81], "mirror_label": [1, 79, 81], "bbox_face_id": [1, 79, 81, 82, 83], "add_chips_map": [1, 79, 81, 83, 176], "overwrite_chips_by_position_label": [1, 79, 81], "insert_chip": [1, 79, 81], "insert_chip_copy_label": [1, 79, 81], "two_coordinates_to_position_label": [1, 79, 81], "position_label_to_two_coordin": [1, 79, 81], "mask_set": [1, 79, 80, 176], "maskset": [1, 79, 80, 82, 83, 176], "export_drc": [1, 79, 80, 82], "used_chip": [1, 79, 82], "export_path": [1, 79, 82, 101, 150, 176], "add_mask_layout": [1, 79, 82, 176], "add_multi_face_mask_layout": [1, 79, 82, 83], "add_chip": [1, 79, 82, 176], "export": [1, 74, 75, 77, 79, 80, 81, 82, 92, 93, 94, 95, 114, 116, 117, 118, 119, 138, 145, 149, 150, 154, 164, 166, 168, 174, 175, 178, 181, 182, 184, 185, 187], "chips_map_from_box_map": [1, 79, 82], "multi_face_mask_layout": [1, 79], "multifacemasklayout": [1, 79, 82, 83], "qubit": [1, 9, 10, 22, 25, 67, 118, 119, 158, 166, 168, 172, 173, 177, 181, 182, 183], "concentric_transmon": [1, 85], "concentrictransmon": [1, 85, 86], "double_pad": [1, 85], "doublepad": [1, 85, 87, 88], "double_pads_splin": [1, 85], "doublepadssplin": [1, 85, 88], "produce_squid": [1, 85, 89, 120, 123, 124], "swissmon": [1, 85, 173, 182, 183], "simul": [1, 25, 33, 35, 36, 37, 42, 47, 55, 72, 77, 86, 87, 89, 90, 130, 153, 160, 164, 166, 167, 168, 171, 174, 177, 179, 180, 183, 187], "ansi": [1, 92, 96, 114, 135, 174, 180, 181, 182, 184], "ansys_export": [1, 92, 96, 97, 181, 183], "export_ansys_json": [1, 92, 96, 97, 98, 183], "export_ansys_bat": [1, 92, 96, 97, 98, 183], "export_ansi": [1, 92, 96, 97, 98, 181, 183, 184], "elmer": [1, 92, 96, 160, 174, 179, 181, 182, 184], "elmer_export": [1, 92, 96, 99, 181, 183], "export_elmer_json": [1, 92, 96, 99, 100, 183], "export_elmer_script": [1, 92, 96, 99, 100, 183], "export_elm": [1, 92, 96, 99, 100, 180, 181, 183, 184], "sonnet": [1, 92, 96, 174, 184], "parser": [1, 92, 96, 105, 140], "apply_templ": [1, 92, 96, 105, 106], "polygon_head": [1, 92, 96, 105, 106], "symmetri": [1, 92, 96, 105, 106, 155], "box": [1, 5, 17, 18, 34, 51, 54, 74, 81, 82, 89, 92, 94, 96, 105, 106, 110, 111, 114, 115, 122, 124, 141, 144, 149, 153, 168, 172, 173, 174, 176, 177, 184, 185], "refplan": [1, 92, 96, 105, 106], "port": [1, 5, 13, 30, 33, 35, 36, 37, 38, 42, 47, 48, 55, 61, 64, 86, 87, 89, 90, 92, 93, 95, 96, 105, 106, 107, 114, 115, 116, 117, 118, 119, 124, 149, 153, 172, 173, 174, 177, 181, 183, 184], "control": [1, 88, 92, 96, 105, 106, 107, 133, 139, 140, 151, 161, 162, 163, 177, 178, 180], "polygon": [1, 56, 62, 63, 92, 96, 105, 106, 107, 108, 110, 114, 139, 155, 172, 177, 182, 185], "via": [1, 5, 24, 92, 96, 105, 106, 129, 178, 180, 182], "sonnet_export": [1, 92, 96, 105, 183], "poly_and_edge_indic": [1, 92, 96, 105, 107], "export_sonnet_son": [1, 92, 96, 105, 107, 183], "export_sonnet": [1, 92, 96, 105, 107, 183, 184], "xsection": [1, 92, 94, 96, 114, 171, 174, 181], "xsection_export": [1, 92, 96, 109, 187], "xsection_cal": [1, 92, 96, 109, 110, 187], "create_xsections_from_simul": [1, 92, 96, 109, 110, 187], "separate_signal_layer_shap": [1, 92, 96, 109, 110], "find_layer_by_nam": [1, 92, 96, 109, 110], "free_layer_slot": [1, 92, 96, 109, 110], "visualise_xsection_cut_on_original_layout": [1, 92, 96, 109, 110], "export_and_run": [1, 92, 96, 179], "export_singular": [1, 92, 96], "remote_export_and_run": [1, 92, 96], "remote_run_onli": [1, 92, 96, 103], "simulation_export": [1, 92, 96, 182, 183], "copy_content_into_directori": [1, 92, 96, 104], "get_post_process_command_lin": [1, 92, 96, 104], "export_simulation_oa": [1, 92, 96, 104, 183], "sweep_simul": [1, 92, 96, 104, 182], "cross_sweep_simul": [1, 92, 96, 104, 182], "util": [1, 56, 64, 92, 96, 165, 166, 174, 177, 182, 183], "export_lay": [1, 92, 96, 108], "find_edge_from_point_in_cel": [1, 92, 96, 108], "find_edge_from_point_in_polygon": [1, 92, 96, 108], "get_enclosing_polygon": [1, 92, 96, 108], "airbridges_sim": [1, 92], "airbridgessim": [1, 92, 93], "cross_section_simul": [1, 92, 110], "crosssectionsimul": [1, 92, 94, 110, 181, 182, 184], "register_cell_layers_as_sim_lay": [1, 92, 94], "get_sim_lay": [1, 92, 94], "set_permitt": [1, 92, 94], "get_paramet": [1, 92, 94, 114], "get_simulation_data": [1, 92, 94, 114], "empty_simul": [1, 92], "emptysimul": [1, 92, 95], "partition_region": [1, 92, 114], "get_list_of_two": [1, 92, 111], "partitionregion": [1, 92, 111, 114], "limit_box": [1, 92, 111], "limit_fac": [1, 92, 111], "as_dict": [1, 92, 112], "internalport": [1, 92, 112, 114, 153, 182], "edgeport": [1, 92, 112, 153, 181, 182], "post_process": [1, 92, 98, 100, 104], "postprocess": [1, 92, 98, 100, 104, 113], "get_command_lin": [1, 92, 113], "get_simulation_layer_by_nam": [1, 92, 114], "from_cel": [1, 92, 93, 95, 114, 116, 117, 118, 119, 182, 183], "face_stack_list_of_list": [1, 92, 114], "ith_valu": [1, 92, 114], "face_z_level": [1, 92, 114], "region_from_lay": [1, 92, 114], "simplified_region": [1, 92, 114], "insert_lay": [1, 92, 114], "insert_stacked_up_lay": [1, 92, 114], "insert_layers_between_fac": [1, 92, 114], "create_simulation_lay": [1, 92, 93, 95, 114, 116, 117, 118, 119], "produce_lay": [1, 92, 114], "ground_grid_region": [1, 92, 114], "produce_waveguide_to_port": [1, 92, 114, 177, 182], "etched_lin": [1, 92, 114], "get_port_data": [1, 92, 114], "delete_inst": [1, 92, 114], "single_element_simul": [1, 92, 182, 183], "get_single_element_sim_class": [1, 92, 115, 153, 182, 183], "single_xmons_full_chip_sim": [1, 92], "singlexmonsfullchipsim": [1, 92, 116], "waveguides_sim": [1, 92], "waveguidessim": [1, 92, 117], "produce_guid": [1, 92, 117], "produce_ground_bump": [1, 92, 117], "xmons_direct_coupling_full_chip_sim": [1, 92], "xmonsdirectcouplingfullchipsim": [1, 92, 118], "produce_launchers_sma8": [1, 92, 118], "xmons_direct_coupling_sim": [1, 92], "xmonsdirectcouplingsim": [1, 92, 119], "test_structur": [1, 166], "junction_test_pad": [1, 120], "junctiontestpad": [1, 13, 89, 120, 123, 124, 125], "junction_test_pads_simpl": [1, 120, 123], "junctiontestpadssimpl": [1, 120, 123, 125], "airbridge_dc": [1, 120], "airbridgedc": [1, 120, 121], "cross_test": [1, 120], "crosstest": [1, 120, 122], "stripes_test": [1, 120], "stripestest": [1, 15, 16, 120, 126], "stripes_test_increasing_width": [1, 120], "stripestestincreasingwidth": [1, 120, 127], "teststructur": [1, 120, 121, 122, 124, 126, 127, 128, 129, 158], "produce_pad": [1, 120, 128], "produce_four_point_pad": [1, 120, 128], "produce_etched_region": [1, 120, 128], "tsv_test_pattern": [1, 120], "tsvtestpattern": [1, 120, 129], "area": [1, 13, 42, 51, 54, 61, 69, 73, 74, 81, 87, 89, 107, 111, 112, 124, 125, 128, 130, 141, 168, 172, 177, 182], "areareceiv": [1, 130, 131], "put": [1, 61, 130, 131, 160, 172, 177], "get_area_and_dens": [1, 130, 131], "count_inst": [1, 130], "count_instances_in_cel": [1, 130, 132], "coupler_lib": [1, 130], "cap_param": [1, 18, 130, 133], "deep_delet": [1, 130], "deep_delete_pcel": [1, 130, 134], "deep_delete_al": [1, 130, 134], "defaults_help": [1, 130], "find_ansys_execut": [1, 130, 135], "depend": [1, 18, 112, 125, 130, 146, 153, 158, 160, 162, 163, 179, 180, 182], "install_kqc_depend": [1, 130, 136], "edit_node_plugin": [1, 130], "editnodeplugin": [1, 130, 137], "create_dialog": [1, 130, 137], "update_node_from_form": [1, 130, 137], "update_form_from_nod": [1, 130, 137], "deselect": [1, 130, 137], "select": [1, 13, 69, 107, 130, 137, 145, 168, 172, 173, 175, 176, 177, 182, 187], "activ": [1, 74, 130, 137, 138, 164, 167, 174, 180, 181], "deactiv": [1, 130, 137], "mouse_click_ev": [1, 130, 137], "mouse_moved_ev": [1, 130, 137], "has_tracking_posit": [1, 130, 137], "tracking_posit": [1, 130, 137], "updat": [1, 36, 114, 130, 137, 158, 162, 167, 171, 172, 175, 181], "editnodepluginfactori": [1, 130, 137], "create_plugin": [1, 130, 137], "export_help": [1, 130, 182, 183], "generate_probepoints_json": [1, 130, 138], "generate_probepoints_from_fil": [1, 130, 138], "create_or_empty_tmp_directori": [1, 130, 138, 183], "get_simulation_directori": [1, 130, 138], "get_active_or_new_layout": [1, 130, 138, 182, 183], "write_commit_reference_fil": [1, 130, 138], "write_export_machine_versions_fil": [1, 130, 138], "open_with_klayout_or_default_appl": [1, 130, 138, 183], "get_klayout_vers": [1, 130, 138], "export_drc_report": [1, 130, 138], "geometry_help": [1, 130], "vector_length_and_direct": [1, 130, 139], "point_shift_along_vector": [1, 130, 139], "get_direct": [1, 130, 139], "get_angl": [1, 130, 139], "get_cell_path_length": [1, 130, 139], "get_object_path_length": [1, 130, 139], "simple_region": [1, 130, 139], "region_with_merged_point": [1, 114, 130, 139], "region_with_merged_polygon": [1, 114, 130, 139], "merge_points_and_match_on_edg": [1, 130, 139], "is_clockwis": [1, 130, 139], "circle_polygon": [1, 130, 139], "arc_point": [1, 130, 139], "bspline_point": [1, 130, 139], "bezier_point": [1, 130, 139], "geometry_json_encod": [1, 130], "geometryjsonencod": [1, 130, 140], "default": [1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 42, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 76, 77, 81, 82, 83, 86, 87, 88, 89, 90, 93, 94, 98, 100, 107, 110, 114, 116, 117, 118, 119, 121, 122, 124, 125, 126, 127, 129, 130, 133, 135, 138, 139, 140, 142, 144, 147, 148, 149, 150, 151, 153, 158, 160, 163, 166, 167, 168, 172, 173, 176, 177, 178, 181, 182, 183, 186, 187], "geometryjsondecod": [1, 130, 140], "encode_python_obj_as_dict": [1, 130, 140], "decode_dict_as_python_obj": [1, 130, 140], "groundgrid": [1, 130], "make_grid": [1, 130, 141], "gui_help": [1, 130], "get_nodes_near_posit": [1, 130, 142], "node_to_text": [1, 130, 142], "node_from_text": [1, 130, 142], "replace_nod": [1, 130, 142], "get_all_node_el": [1, 130, 142], "get_valid_node_el": [1, 130, 142], "import_help": [1, 130], "module_from_fil": [1, 130, 143], "label": [1, 5, 34, 36, 64, 74, 81, 114, 130, 150, 157, 176], "labelorigin": [1, 130, 144], "bottomleft": [1, 130, 144], "bottomright": [1, 130, 144], "topleft": [1, 130, 144], "topright": [1, 130, 144], "produce_label": [1, 130, 144], "layout_to_cod": [1, 130], "convert_cells_to_cod": [1, 130, 145], "get_node_param": [1, 130, 145], "extract_pcell_data_from_view": [1, 130, 145], "restore_pcells_to_view": [1, 130, 145], "library_help": [1, 130, 158, 165, 177], "load_librari": [1, 130, 146], "get_library_path": [1, 130, 146], "delete_all_librari": [1, 130, 146], "delete_librari": [1, 130, 146], "element_by_class_nam": [1, 130, 146], "to_module_nam": [1, 130, 146], "to_library_nam": [1, 130, 146], "log_rout": [1, 130], "route_log": [1, 130, 147], "merg": [1, 5, 61, 114, 130, 139, 157, 158, 177], "merge_lay": [1, 130, 148], "convert_child_instances_to_stat": [1, 130, 148], "netlist_extract": [1, 130], "export_cell_netlist": [1, 82, 130, 149], "extract_net": [1, 130, 149], "extract_circuit": [1, 130, 149], "netlist_graph": [1, 130], "network_as_graph": [1, 130, 150], "draw_graph": [1, 130, 150], "paramet": [1, 3, 4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 42, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 93, 94, 95, 98, 100, 101, 103, 104, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 155, 161, 162, 166, 173, 174, 175, 176, 180, 182, 183, 184, 186, 187], "add_parameters_from": [1, 130, 151, 158, 182], "add_paramet": [1, 130, 151, 158, 182], "pdt": [1, 130, 151, 177], "typedoubl": [1, 130, 151, 177], "typeint": [1, 130, 151], "typelist": [1, 130, 151], "typestr": [1, 130, 151], "typeshap": [1, 130, 151], "typeboolean": [1, 130, 151], "typelay": [1, 130, 151], "typenon": [1, 130, 151], "param": [1, 36, 61, 114, 130, 151, 154, 158, 177], "get_al": [1, 130, 151], "plugin_startup": [1, 130], "register_plugin": [1, 130, 152], "refpoint": [1, 18, 22, 27, 32, 33, 35, 36, 37, 42, 47, 55, 59, 61, 74, 77, 86, 87, 88, 89, 90, 114, 115, 124, 128, 130, 138, 142, 145, 172, 174, 182], "layer": [1, 5, 13, 24, 26, 27, 28, 31, 32, 34, 36, 37, 51, 53, 56, 59, 61, 62, 63, 66, 69, 70, 71, 72, 74, 75, 76, 77, 79, 80, 81, 82, 87, 89, 94, 98, 108, 110, 111, 112, 114, 122, 124, 126, 127, 128, 129, 130, 131, 139, 144, 148, 149, 153, 154, 166, 168, 171, 172, 173, 174, 175, 182, 187], "cell": [1, 5, 15, 16, 30, 33, 35, 36, 37, 42, 44, 47, 51, 54, 55, 58, 61, 62, 68, 73, 74, 80, 81, 82, 86, 87, 89, 90, 92, 93, 94, 95, 108, 110, 114, 115, 116, 117, 118, 119, 124, 130, 131, 132, 133, 134, 138, 139, 142, 144, 145, 146, 148, 149, 153, 154, 158, 164, 172, 173, 175, 176, 177, 182, 183, 185], "tran": [1, 5, 9, 10, 36, 63, 74, 81, 89, 114, 128, 130, 153, 154, 182], "rec_level": [1, 36, 74, 114, 130, 153, 177], "dict": [1, 5, 61, 81, 89, 98, 100, 124, 130, 138, 140, 146, 153, 154, 182], "item": [1, 114, 130, 140, 150, 153, 168], "kei": [1, 5, 22, 36, 77, 81, 82, 83, 98, 114, 118, 130, 133, 138, 140, 145, 146, 148, 149, 153, 154, 160, 172, 178, 180], "valu": [1, 5, 13, 22, 26, 28, 33, 35, 36, 37, 42, 47, 55, 56, 61, 62, 66, 74, 77, 80, 81, 82, 86, 87, 90, 94, 98, 107, 110, 112, 114, 118, 124, 130, 138, 140, 142, 144, 145, 146, 148, 149, 151, 153, 154, 158, 160, 166, 171, 172, 173, 175, 177, 181, 182, 187], "refpointtosimport": [1, 33, 35, 36, 37, 42, 47, 55, 86, 87, 90, 130, 153, 182], "refpointtointernalport": [1, 130, 153], "refpointtoedgeport": [1, 130, 153], "waveguidetosimport": [1, 130, 153, 182], "toward": [1, 61, 114, 130, 153, 182], "side": [1, 3, 5, 6, 17, 18, 28, 33, 35, 36, 37, 42, 47, 55, 59, 60, 64, 81, 86, 87, 90, 110, 114, 115, 128, 130, 145, 153, 155, 158, 176, 177, 182], "use_internal_port": [1, 114, 130, 153, 182], "waveguide_length": [1, 114, 119, 130, 139, 153, 182], "term1": [1, 56, 61, 62, 114, 118, 130, 153], "turn_radiu": [1, 114, 118, 130, 153], "b": [1, 13, 18, 24, 28, 30, 31, 35, 36, 37, 38, 42, 48, 55, 56, 61, 64, 66, 77, 87, 88, 114, 118, 124, 129, 130, 139, 153], "over_etch": [1, 114, 130, 153], "junctionsimport": [1, 130, 153, 182], "other_refpoint": [1, 130, 153], "replace_junct": [1, 130], "junctionentri": [1, 130, 154], "extract_junct": [1, 130, 154], "place_junct": [1, 130, 154], "get_tuned_junction_json": [1, 130, 154], "copy_one_layer_of_cel": [1, 130, 154], "replace_squid": [1, 130, 154], "convert_cells_to_stat": [1, 130, 154], "symmetric_polygon": [1, 130, 177], "polygon_with_hsym": [1, 130, 155], "polygon_with_vsym": [1, 130, 155, 177], "polygon_with_sym": [1, 130, 155], "klayout_view": [1, 164, 166, 175], "klayoutview": [1, 74, 164, 174], "layout_view": [1, 74, 175], "focu": [1, 74, 175], "show": [1, 74, 126, 127, 150, 164, 168, 172, 173, 175, 176, 177, 182, 183], "close": [1, 51, 62, 74, 98, 139, 145, 168, 176], "cell_view": [1, 74, 175], "active_cel": [1, 74, 175], "clear_lay": [1, 74], "add_default_lay": [1, 74], "create_top_cel": [1, 74], "export_layers_bitmap": [1, 74], "export_all_layers_bitmap": [1, 74], "export_pcell_png": [1, 74, 175], "get_pixel": [1, 74], "get_active_cell_view": [1, 74], "get_active_layout": [1, 74], "get_active_cel": [1, 74], "missinguilibraryexcept": [1, 74], "resolve_default_layer_info": [1, 74], "layer_clust": [1, 166], "layerclust": [1, 75], "main_lay": [1, 75], "extra_lay": [1, 75], "all_lay": [1, 75], "pya_resolv": [1, 158, 166, 177, 182], "is_standalone_sess": [1, 84], "klayout_executable_command": [1, 84], "run": [1, 61, 74, 77, 84, 98, 100, 101, 103, 110, 113, 136, 138, 160, 161, 163, 164, 165, 166, 167, 168, 171, 173, 174, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187], "pcell": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 82, 85, 86, 87, 88, 89, 90, 93, 94, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 142, 144, 145, 146, 148, 149, 150, 151, 154, 161, 162, 171, 172, 173, 175, 177, 182, 185], "declar": [2, 3, 5, 6, 7, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 31, 32, 34, 35, 36, 37, 38, 41, 42, 48, 49, 52, 53, 54, 55, 56, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 85, 86, 90, 120, 121, 122, 126, 127, 128, 129], "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 81, 82, 83, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 137, 140, 142, 144, 145, 146, 151, 153, 154, 158, 159, 161, 164, 168, 171, 174, 175, 181, 183, 184], "consist": [2, 15, 16, 24, 34, 61, 62, 63, 77, 79, 82, 86, 87, 88, 125, 138, 140, 159, 166, 172, 180, 184], "thei": [2, 3, 6, 27, 61, 67, 77, 81, 83, 86, 94, 108, 139, 148, 150, 154, 158, 160, 164, 168, 175, 177, 181], "ar": [2, 3, 5, 6, 19, 22, 27, 29, 32, 36, 48, 61, 62, 63, 64, 67, 74, 77, 79, 81, 82, 83, 89, 94, 96, 98, 100, 101, 103, 107, 110, 111, 114, 118, 120, 128, 130, 132, 138, 139, 140, 142, 145, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187], "themselv": 2, "A": [2, 5, 9, 22, 25, 36, 51, 56, 61, 62, 63, 64, 74, 81, 82, 83, 86, 87, 88, 107, 110, 114, 118, 119, 138, 139, 145, 146, 150, 151, 153, 160, 164, 172, 173, 175, 176, 177, 181, 182, 185], "frame": [2, 5, 34, 48, 81, 172], "i": [2, 3, 5, 6, 7, 10, 16, 18, 22, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 40, 42, 47, 48, 54, 55, 56, 59, 60, 61, 62, 63, 64, 66, 68, 73, 74, 77, 81, 82, 83, 84, 86, 87, 88, 89, 90, 93, 94, 95, 98, 101, 107, 108, 110, 111, 113, 114, 115, 116, 117, 118, 119, 125, 126, 127, 128, 133, 136, 138, 139, 140, 141, 142, 144, 145, 146, 148, 149, 150, 151, 153, 154, 156, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187], "alwai": [2, 149, 164, 168, 177, 181], "method": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 31, 32, 33, 35, 36, 37, 38, 41, 42, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 74, 86, 87, 90, 93, 94, 95, 114, 116, 117, 118, 119, 121, 122, 125, 126, 127, 129, 140, 145, 158, 159, 164, 165, 167, 168, 175, 177, 181, 182, 183, 187], "place": [2, 5, 17, 27, 33, 35, 36, 37, 42, 47, 51, 54, 55, 56, 61, 62, 63, 74, 77, 81, 86, 87, 90, 114, 115, 140, 145, 147, 153, 154, 158, 161, 165, 168, 173, 174, 175, 176, 177, 182, 183], "some": [2, 5, 13, 24, 27, 28, 31, 36, 37, 56, 61, 75, 82, 83, 87, 98, 100, 107, 110, 114, 124, 129, 138, 139, 145, 151, 154, 158, 161, 163, 164, 165, 167, 168, 172, 173, 175, 176, 177, 178, 181, 182, 185], "test": [2, 3, 4, 5, 9, 11, 13, 15, 16, 22, 24, 33, 67, 116, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 140, 154, 160, 162, 163, 164, 166, 167, 168, 171, 176, 177, 180, 183], "structur": [2, 5, 27, 67, 112, 120, 121, 124, 125, 128, 129, 150, 154, 164, 165, 166, 168, 174, 176, 181, 185], "after": [2, 13, 27, 61, 62, 69, 70, 77, 81, 87, 98, 100, 104, 110, 114, 115, 124, 151, 160, 163, 168, 171, 173, 175, 176, 177, 180, 183, 187], "ad": [2, 18, 36, 61, 74, 81, 113, 114, 118, 138, 139, 144, 145, 149, 150, 151, 158, 160, 164, 174, 182], "ground": [2, 5, 11, 17, 34, 35, 36, 37, 38, 42, 47, 51, 54, 55, 61, 62, 63, 65, 81, 82, 83, 86, 87, 94, 107, 112, 114, 117, 133, 141, 144, 172, 173, 174, 177, 181, 182], "grid": [2, 5, 17, 34, 36, 54, 61, 62, 63, 65, 81, 82, 83, 114, 128, 141, 144, 145, 172, 173, 174, 177], "which": [2, 5, 6, 7, 10, 16, 18, 22, 27, 33, 35, 36, 37, 42, 47, 55, 61, 62, 63, 74, 75, 77, 79, 81, 82, 83, 85, 86, 87, 90, 92, 93, 94, 95, 103, 104, 107, 110, 111, 114, 115, 116, 117, 118, 119, 120, 125, 126, 127, 128, 129, 130, 132, 133, 138, 139, 140, 141, 142, 144, 145, 146, 148, 153, 154, 158, 160, 161, 163, 164, 165, 171, 172, 175, 176, 177, 178, 180, 181, 182, 183, 184, 186, 187], "avoid": [2, 5, 13, 18, 24, 28, 31, 34, 36, 37, 56, 61, 62, 63, 87, 114, 124, 128, 129, 141, 144, 147, 148, 166, 172, 176, 177], "can": [2, 5, 18, 22, 27, 35, 36, 51, 54, 56, 61, 62, 67, 68, 73, 74, 77, 79, 80, 82, 83, 85, 86, 93, 94, 95, 104, 107, 110, 111, 112, 114, 116, 117, 118, 119, 125, 138, 139, 140, 142, 145, 150, 153, 154, 156, 158, 160, 164, 165, 167, 168, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187], "produc": [2, 5, 9, 13, 18, 22, 30, 34, 44, 51, 56, 61, 62, 63, 64, 68, 73, 81, 89, 110, 112, 114, 116, 118, 124, 125, 128, 133, 142, 144, 165, 176, 177, 180, 182, 183, 185, 187], "document": [2, 79, 80, 82, 92, 120, 158, 159, 162, 164, 165, 167, 168, 171, 172, 175, 176, 177, 185], "gener": [2, 5, 13, 29, 36, 54, 59, 62, 67, 68, 73, 74, 79, 81, 82, 83, 85, 87, 89, 94, 110, 114, 120, 124, 139, 141, 142, 145, 149, 151, 154, 160, 161, 164, 166, 172, 173, 174, 175, 176, 177, 180, 181, 183, 184, 187], "descript": [2, 120, 151, 158, 177, 185], "sourc": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 93, 94, 95, 98, 100, 101, 102, 103, 104, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 162, 164, 165, 167, 170, 171, 181, 182], "base": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 81, 82, 83, 86, 87, 88, 89, 90, 92, 93, 94, 95, 111, 112, 113, 114, 116, 117, 118, 119, 121, 122, 124, 125, 126, 127, 128, 129, 131, 137, 139, 140, 144, 151, 153, 154, 158, 163, 171, 176, 177, 180, 181, 182], "an": [3, 5, 25, 27, 28, 30, 31, 35, 36, 41, 42, 61, 62, 63, 74, 77, 81, 82, 83, 89, 100, 110, 114, 115, 121, 125, 133, 138, 139, 140, 142, 145, 149, 150, 151, 153, 154, 155, 158, 163, 164, 167, 168, 172, 174, 175, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187], "On": [3, 6, 163, 173, 177, 178, 179], "left": [3, 5, 6, 13, 18, 22, 34, 36, 42, 47, 56, 63, 80, 81, 88, 94, 108, 110, 112, 114, 153, 168, 173, 176, 177, 182], "straight": [3, 6, 25, 44, 46, 56, 61, 62, 65, 89, 119, 177], "vertic": [3, 6, 13, 23, 24, 31, 32, 46, 56, 81, 111, 114, 124, 129, 154, 155, 187], "waveguid": [3, 6, 18, 19, 28, 36, 42, 47, 48, 54, 56, 61, 62, 63, 64, 65, 66, 86, 87, 90, 94, 114, 117, 119, 139, 142, 145, 149, 150, 153, 173, 174, 177, 181, 182], "cross": [3, 6, 22, 56, 64, 94, 100, 104, 110, 122, 166, 172, 174, 177, 182, 184], "multipl": [3, 6, 61, 77, 82, 83, 86, 110, 138, 148, 150, 154, 158, 163, 166, 168, 172, 175, 176, 177, 180, 182, 185], "time": [3, 6, 36, 98, 100, 104, 107, 110, 153, 161, 164, 166, 168, 173, 175, 176, 178, 180, 182], "There": [3, 6, 22, 88, 125, 126, 127, 158, 161, 164, 167, 172, 176, 177, 178, 180, 181, 182], "right": [3, 6, 18, 22, 28, 36, 56, 66, 80, 81, 110, 112, 114, 153, 168, 172, 173, 175, 176, 177, 182], "likewis": [3, 6], "do": [3, 6, 36, 61, 77, 114, 145, 159, 160, 163, 164, 165, 173, 175, 176, 177, 179, 180, 181, 182, 183], "ani": [3, 6, 18, 61, 62, 68, 73, 74, 82, 83, 93, 94, 95, 114, 115, 116, 117, 118, 119, 125, 142, 146, 152, 157, 158, 163, 164, 168, 169, 172, 176, 177, 180, 181, 182, 183, 184], "point": [3, 4, 5, 6, 13, 24, 28, 31, 32, 35, 36, 37, 38, 54, 56, 61, 62, 63, 74, 81, 86, 87, 88, 108, 110, 114, 118, 119, 121, 124, 129, 138, 139, 145, 148, 150, 153, 155, 161, 165, 166, 172, 174, 175, 177, 180, 182, 185], "In": [3, 42, 61, 74, 77, 82, 93, 95, 110, 114, 116, 117, 118, 119, 139, 158, 160, 163, 164, 168, 171, 172, 173, 175, 176, 177, 181, 182, 183], "center": [3, 5, 13, 17, 18, 22, 24, 28, 31, 32, 35, 36, 37, 40, 42, 47, 56, 59, 60, 61, 62, 63, 64, 71, 72, 81, 86, 87, 88, 90, 112, 114, 124, 128, 129, 139, 149, 153, 173, 176, 182], "arrai": [3, 5, 24, 81, 82, 125, 140, 185], "mechan": 3, "differ": [3, 5, 6, 13, 15, 16, 27, 35, 36, 42, 51, 56, 81, 82, 83, 94, 98, 110, 114, 124, 138, 149, 154, 158, 163, 164, 165, 166, 171, 172, 176, 177, 180, 181, 182, 183], "length": [3, 5, 6, 9, 10, 12, 13, 15, 16, 17, 18, 22, 23, 25, 28, 30, 31, 33, 34, 35, 37, 38, 47, 48, 54, 55, 56, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 81, 87, 89, 90, 98, 106, 110, 112, 114, 117, 118, 119, 122, 124, 126, 127, 133, 139, 141, 142, 145, 148, 153, 172, 173, 177, 181, 182], "width": [3, 4, 5, 13, 17, 18, 19, 24, 25, 28, 30, 31, 33, 34, 35, 36, 37, 38, 42, 44, 46, 47, 48, 49, 55, 56, 59, 61, 62, 64, 68, 69, 70, 74, 81, 86, 87, 89, 90, 110, 112, 114, 118, 119, 121, 122, 124, 126, 127, 128, 129, 153, 177, 182], "child": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 28, 31, 32, 33, 35, 36, 37, 38, 41, 42, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 60, 62, 63, 64, 65, 66, 69, 70, 71, 72, 82, 86, 87, 90, 121, 122, 125, 126, 127, 129, 132, 142, 145, 148, 177, 182], "re": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 28, 31, 32, 33, 35, 36, 37, 38, 41, 42, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 60, 62, 63, 64, 65, 66, 69, 70, 71, 72, 86, 87, 90, 106, 112, 121, 122, 125, 126, 127, 129, 145, 151, 158, 163, 175, 180], "defin": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 28, 31, 32, 33, 35, 36, 37, 38, 41, 42, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 77, 86, 87, 88, 89, 90, 94, 98, 110, 114, 121, 122, 125, 126, 127, 128, 129, 138, 140, 147, 149, 151, 154, 158, 165, 166, 173, 174, 176, 178, 180, 181, 182, 187], "thi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 80, 81, 82, 83, 84, 86, 87, 90, 92, 93, 94, 95, 98, 100, 110, 111, 112, 114, 116, 117, 118, 119, 121, 122, 124, 125, 126, 127, 129, 131, 136, 137, 139, 140, 142, 145, 146, 148, 149, 150, 151, 153, 154, 158, 160, 161, 163, 164, 165, 167, 168, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183], "int": [3, 4, 5, 6, 12, 13, 17, 19, 23, 24, 28, 31, 33, 34, 36, 37, 38, 42, 51, 53, 54, 56, 61, 62, 63, 81, 86, 87, 88, 93, 100, 103, 106, 108, 110, 112, 114, 117, 121, 122, 124, 126, 127, 129, 139, 140, 142], "number": [3, 4, 5, 6, 13, 17, 18, 19, 21, 22, 24, 28, 31, 33, 34, 36, 37, 38, 42, 51, 53, 54, 55, 56, 61, 63, 64, 77, 79, 82, 86, 87, 88, 93, 98, 100, 107, 110, 111, 112, 114, 117, 121, 122, 124, 126, 127, 129, 132, 133, 138, 139, 140, 141, 150, 154, 157, 177, 180, 181, 182], "pair": [3, 6, 13, 53, 124, 140, 142, 145, 153, 171, 172], "10": [3, 5, 13, 17, 18, 22, 24, 25, 28, 31, 33, 34, 36, 37, 47, 51, 55, 56, 61, 64, 66, 86, 87, 90, 98, 114, 118, 122, 124, 129, 139, 141, 142, 156, 163, 164, 167, 180, 181, 182], "b_number": 3, "one": [3, 12, 18, 22, 23, 56, 61, 63, 77, 79, 82, 83, 86, 87, 88, 94, 98, 100, 104, 110, 114, 138, 139, 140, 145, 147, 148, 149, 151, 152, 153, 157, 158, 160, 163, 167, 172, 174, 175, 177, 180, 181, 182, 183, 184], "5": [3, 13, 17, 18, 22, 24, 28, 31, 36, 37, 38, 55, 56, 61, 70, 71, 86, 87, 90, 93, 98, 100, 110, 114, 117, 124, 129, 141, 151, 163, 164, 168, 180, 181], "full": [4, 5, 63, 74, 77, 84, 111, 139, 150, 164, 166, 167, 168, 172, 177, 179, 180, 182, 185], "4": [4, 5, 13, 17, 18, 22, 82, 86, 110, 114, 122, 124, 125, 139, 144, 151, 167, 168, 182], "dc": [4, 5, 7, 8, 41, 49, 121], "n_step": 4, "increment": [4, 5, 13, 61, 127, 142, 154], "step": [4, 13, 15, 16, 61, 124, 139, 141, 154, 163, 167, 168, 173, 175, 176, 178], "1": [4, 5, 6, 7, 10, 13, 16, 17, 18, 22, 25, 27, 28, 35, 36, 37, 42, 54, 55, 56, 61, 66, 69, 70, 82, 86, 87, 98, 100, 106, 110, 111, 114, 119, 124, 126, 127, 131, 139, 144, 145, 150, 151, 168, 173, 176, 177, 178, 180, 181, 182, 187], "test_width": 4, "doubl": [4, 5, 6, 13, 17, 18, 19, 24, 25, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 42, 44, 46, 47, 48, 49, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 86, 87, 89, 90, 94, 114, 117, 118, 119, 121, 122, 124, 126, 127, 129, 155, 172, 173, 175, 181, 186], "singl": [4, 5, 6, 10, 13, 18, 22, 25, 42, 55, 56, 61, 68, 70, 80, 82, 87, 89, 98, 100, 104, 114, 115, 119, 124, 145, 146, 151, 165, 168, 174, 176, 177, 178, 180, 184, 185], "2000": [4, 18, 121, 177], "unit": [4, 5, 6, 9, 10, 13, 17, 18, 19, 24, 25, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 42, 44, 46, 47, 48, 49, 54, 55, 56, 58, 59, 61, 62, 63, 64, 66, 68, 69, 70, 71, 72, 73, 86, 87, 89, 90, 94, 98, 100, 110, 111, 112, 114, 117, 118, 119, 121, 122, 124, 126, 127, 129, 138, 139, 141, 158, 162, 166, 177, 181], "\u03bcm": [4, 5, 6, 9, 10, 13, 17, 18, 19, 24, 25, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 42, 44, 46, 47, 48, 49, 54, 55, 56, 58, 59, 61, 62, 63, 64, 66, 68, 69, 70, 73, 86, 87, 89, 90, 114, 117, 118, 119, 121, 122, 124, 126, 127, 129, 153, 177], "pixel": [5, 7, 74, 139, 185], "corner": [5, 7, 13, 34, 36, 37, 38, 51, 61, 62, 63, 144, 172, 173, 177], "dice": [5, 7, 34, 81], "edg": [5, 7, 12, 18, 19, 23, 34, 35, 51, 56, 61, 62, 71, 72, 81, 86, 87, 88, 107, 108, 110, 111, 112, 114, 117, 118, 128, 139, 141, 153, 165, 172, 182], "option": [5, 22, 31, 36, 56, 61, 81, 82, 83, 90, 98, 103, 107, 112, 114, 125, 133, 145, 149, 160, 165, 172, 173, 176, 177, 178, 180, 183, 187], "all": [5, 11, 27, 30, 33, 35, 36, 37, 42, 47, 55, 59, 61, 62, 64, 74, 80, 81, 82, 83, 86, 87, 90, 94, 100, 101, 104, 110, 114, 131, 139, 140, 142, 145, 146, 148, 151, 154, 158, 159, 160, 164, 165, 168, 171, 172, 173, 175, 176, 177, 179, 180, 181, 182, 183], "contain": [5, 21, 22, 27, 33, 35, 36, 37, 42, 47, 55, 61, 67, 74, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 92, 94, 101, 103, 104, 110, 114, 115, 122, 126, 127, 129, 131, 138, 140, 142, 144, 148, 149, 150, 153, 154, 158, 161, 162, 163, 165, 166, 171, 172, 175, 176, 177, 180, 182, 183, 185, 187], "connector": [5, 18, 36, 39, 40, 41, 42, 56, 59, 60, 61, 172], "between": [5, 6, 9, 10, 12, 13, 17, 18, 22, 23, 24, 28, 31, 33, 34, 36, 37, 38, 40, 42, 55, 56, 59, 60, 61, 62, 77, 87, 90, 110, 114, 119, 122, 124, 126, 127, 128, 129, 131, 139, 141, 149, 166, 172, 181, 182], "librari": [5, 27, 30, 36, 44, 51, 58, 61, 68, 74, 87, 88, 89, 90, 124, 128, 142, 146, 162, 163, 164, 166, 167, 168, 171, 172, 173, 174, 185, 186], "superconduct": [5, 36, 110, 128, 166], "quantum": [5, 27, 36, 67, 128, 166, 185], "circuit": [5, 27, 36, 128, 149, 166, 177, 185], "implement": [5, 13, 27, 30, 33, 35, 36, 37, 38, 42, 44, 47, 51, 54, 55, 61, 62, 63, 68, 86, 87, 89, 90, 94, 114, 124, 138, 139, 140, 145, 153, 157, 177, 178, 180, 182, 185], "static": [5, 36, 53, 61, 62, 63, 74, 81, 82, 114, 148, 154, 172, 173], "chip_cel": [5, 80, 81], "return": [5, 33, 35, 36, 37, 42, 47, 51, 55, 56, 61, 62, 63, 64, 74, 75, 81, 82, 84, 86, 87, 89, 90, 94, 98, 100, 101, 104, 107, 108, 110, 111, 112, 113, 114, 115, 118, 124, 131, 132, 133, 135, 138, 139, 140, 141, 142, 143, 145, 146, 150, 151, 153, 154, 155, 175, 176, 177, 182], "dictionari": [5, 22, 36, 56, 64, 77, 81, 82, 83, 94, 98, 112, 114, 118, 133, 140, 146, 148, 149, 150, 151, 153, 177, 182], "assign": [5, 172, 177], "port_id": 5, "launcher_id": 5, "object": [5, 25, 33, 35, 36, 37, 42, 44, 47, 51, 55, 61, 74, 75, 77, 80, 81, 82, 83, 86, 87, 89, 90, 92, 94, 96, 98, 100, 104, 110, 111, 112, 113, 114, 115, 119, 131, 137, 138, 139, 140, 142, 148, 149, 151, 153, 154, 158, 164, 166, 172, 173, 174, 175, 176, 177, 180, 181, 183, 184, 185, 186, 187], "junction_typ": [5, 9, 10, 13, 22, 25, 68, 69, 70, 71, 72, 73, 87, 89, 119, 124, 154, 182], "pad": [5, 9, 13, 28, 30, 31, 32, 33, 35, 37, 48, 49, 56, 69, 70, 86, 87, 90, 121, 123, 124, 125, 128, 177, 182], "string": [5, 6, 7, 9, 10, 13, 14, 15, 16, 18, 21, 22, 23, 24, 25, 28, 30, 31, 32, 33, 34, 36, 37, 42, 44, 45, 46, 56, 58, 59, 60, 61, 64, 68, 69, 70, 71, 72, 81, 82, 87, 89, 94, 98, 101, 103, 104, 113, 114, 115, 117, 119, 124, 125, 129, 133, 138, 140, 142, 145, 146, 147, 149, 150, 153, 176, 177], "type": [5, 9, 10, 13, 14, 15, 16, 17, 18, 22, 24, 25, 26, 28, 30, 31, 32, 34, 36, 42, 44, 45, 46, 51, 56, 58, 59, 60, 61, 64, 68, 69, 70, 71, 72, 77, 82, 84, 87, 89, 90, 107, 110, 112, 114, 115, 116, 119, 124, 125, 129, 131, 132, 133, 138, 139, 140, 142, 145, 149, 151, 154, 165, 172, 174, 179, 181, 182, 187], "us": [5, 9, 11, 18, 22, 25, 27, 28, 33, 34, 35, 36, 37, 42, 47, 48, 51, 54, 55, 56, 61, 62, 64, 66, 68, 73, 74, 77, 80, 81, 82, 83, 84, 86, 87, 89, 90, 93, 94, 95, 96, 98, 100, 103, 104, 107, 110, 111, 112, 114, 116, 117, 118, 119, 120, 124, 128, 133, 138, 139, 140, 141, 142, 145, 146, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 173, 174, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187], "optic": [5, 15, 16, 122, 126, 127, 166, 185], "lithographi": [5, 15, 16, 114, 122, 126, 127, 185], "call": [5, 36, 55, 61, 82, 93, 94, 95, 104, 110, 111, 114, 116, 117, 118, 119, 131, 140, 145, 146, 148, 149, 158, 165, 168, 174, 175, 176, 177, 179, 180, 181, 182, 183, 185], "overrid": [5, 13, 81, 83, 93, 94, 95, 112, 114, 116, 117, 118, 119, 124, 158, 160, 178], "set": [5, 18, 36, 56, 61, 74, 79, 80, 82, 83, 94, 98, 100, 107, 110, 112, 114, 118, 138, 153, 157, 158, 160, 163, 164, 165, 166, 172, 173, 177, 178, 180, 181, 182, 183], "given": [5, 33, 35, 36, 37, 42, 47, 54, 55, 56, 61, 62, 74, 77, 80, 82, 86, 87, 89, 90, 94, 98, 110, 111, 112, 113, 114, 115, 122, 124, 125, 126, 127, 129, 138, 139, 140, 143, 144, 146, 148, 151, 153, 154, 158, 160, 176, 177, 180, 181, 182, 184], "pya": [5, 36, 51, 61, 77, 81, 82, 84, 89, 110, 111, 114, 128, 139, 140, 142, 149, 151, 153, 155, 162, 176, 177, 182], "dbox": [5, 74, 89, 110, 111, 114, 176, 177, 182], "within": [5, 33, 35, 36, 37, 42, 47, 55, 61, 86, 87, 90, 125, 154, 164, 165, 184, 186], "id": [5, 6, 7, 10, 13, 16, 18, 24, 28, 31, 36, 37, 56, 61, 74, 77, 82, 83, 87, 114, 117, 124, 129, 138, 139, 150, 159, 164, 174, 175, 176, 186], "where": [5, 18, 22, 33, 35, 36, 37, 42, 47, 55, 56, 61, 62, 63, 68, 73, 81, 82, 83, 86, 87, 90, 94, 98, 100, 101, 104, 107, 110, 111, 113, 114, 118, 138, 142, 144, 145, 148, 149, 153, 154, 158, 163, 167, 172, 175, 176, 177, 178, 180, 181, 182, 184], "frame_paramet": 5, "r0": [5, 36, 114, 128], "dtran": [5, 51, 63, 81, 115, 155, 177, 182], "toler": [5, 62, 108, 114, 139, 148], "004": [5, 114, 148], "base_metal_gap": [5, 77, 148, 177], "combin": [5, 36, 94, 114, 148, 164, 166, 182], "three": [5, 67, 114, 148, 167, 175, 176, 180, 182], "subtract": [5, 51, 114, 128, 148], "insert": [5, 27, 34, 36, 56, 61, 74, 81, 89, 114, 124, 128, 140, 145, 148, 153, 164, 172, 174, 182], "oper": [5, 36, 61, 138, 148, 163, 167, 172, 180], "base_metal_gap_wo_grid": [5, 89, 122, 124, 126, 127, 148, 149, 168, 172, 177], "base_metal_addit": [5, 148, 177], "ground_grid": [5, 148, 177], "info": [5, 103, 107, 114, 147, 148, 160, 180], "gap": [5, 13, 17, 18, 19, 22, 24, 28, 31, 33, 34, 35, 36, 37, 38, 42, 44, 46, 47, 48, 55, 56, 61, 62, 63, 64, 69, 70, 86, 87, 90, 111, 114, 124, 128, 129, 133, 139, 148, 153, 177, 182], "ignor": [5, 82, 114, 139, 148, 153, 163, 180], "while": [5, 22, 36, 77, 148, 149, 160, 165, 168, 180], "\u00b5m": [5, 34, 56, 61, 71, 72, 86, 87, 89, 107, 114, 148], "possibli": [5, 51, 154, 163, 168, 176, 177], "befor": [5, 36, 61, 62, 74, 82, 111, 114, 142, 152, 163, 172, 183], "get": [5, 61, 74, 94, 110, 131, 140, 149, 151, 158, 160, 161, 163, 164, 165, 166, 167, 175, 178], "specifi": [5, 30, 31, 32, 36, 48, 61, 74, 81, 82, 83, 94, 110, 112, 114, 138, 139, 140, 142, 143, 147, 149, 150, 151, 154, 160, 161, 163, 164, 171, 176, 178, 182, 183], "correctli": [5, 36, 62, 81, 172, 177], "resolv": [5, 81, 162, 177], "integ": [5, 6, 7, 10, 16, 18, 81, 112, 114, 139, 140, 182], "filter_layer_list": 5, "transform": [5, 36, 51, 63, 74, 81, 89, 114, 115, 124, 128, 139, 153, 177], "filter_region": 5, "tupl": [5, 22, 36, 61, 62, 63, 74, 81, 82, 101, 110, 114, 118, 131, 138, 140, 142, 145, 151], "layer_nam": [5, 36, 74, 80, 94, 110, 114], "distanc": [5, 6, 17, 18, 24, 28, 34, 42, 61, 62, 64, 86, 87, 114, 118, 119, 122, 128, 129, 139, 142], "filter": [5, 103, 165], "region": [5, 36, 37, 51, 61, 81, 110, 111, 114, 128, 139, 141], "element_cel": 5, "shape_lay": 5, "locat": [5, 36, 51, 61, 74, 77, 81, 98, 100, 107, 112, 114, 118, 135, 144, 145, 150, 153, 154, 163, 164, 165, 167, 168, 172, 173, 175, 181, 182, 183], "rotat": [5, 36, 42, 61, 74, 81, 89, 114, 176, 177], "repeat": [5, 113], "list": [5, 6, 7, 9, 10, 13, 16, 17, 18, 22, 24, 25, 27, 28, 31, 33, 34, 35, 36, 37, 42, 47, 51, 54, 55, 56, 61, 62, 63, 64, 74, 75, 79, 81, 82, 83, 86, 87, 88, 90, 93, 95, 98, 100, 101, 103, 104, 107, 108, 110, 111, 112, 113, 114, 115, 117, 118, 119, 124, 129, 131, 138, 139, 140, 142, 144, 145, 146, 148, 149, 150, 151, 153, 154, 155, 160, 168, 173, 177, 181, 182, 183, 184], "dpoint": [5, 36, 61, 62, 74, 81, 89, 108, 110, 112, 114, 128, 138, 139, 142, 144, 149, 153, 176, 177, 182, 187], "degre": [5, 35, 42, 61, 64, 81, 86, 89, 139, 176, 177], "bump_box": 5, "should": [5, 30, 33, 35, 36, 37, 42, 47, 55, 56, 61, 62, 74, 75, 77, 86, 87, 90, 93, 94, 95, 110, 111, 114, 115, 116, 117, 118, 119, 136, 138, 140, 149, 151, 153, 154, 158, 159, 160, 161, 163, 164, 165, 167, 168, 172, 173, 175, 176, 177, 182, 186], "fill": [5, 94, 107, 157, 168, 172, 173, 177], "bump": [5, 31, 40, 42, 56, 61, 114, 117, 157, 182], "coordin": [5, 36, 54, 61, 63, 74, 81, 87, 100, 110, 114, 128, 150, 153, 176], "mai": [5, 27, 36, 61, 74, 81, 82, 94, 112, 114, 146, 148, 149, 150, 154, 158, 160, 161, 163, 164, 165, 168, 171, 172, 173, 175, 176, 177, 179, 180], "post": [5, 36, 104, 110, 113, 181, 184], "sampleholder_typ": [5, 14, 177], "launcher_assign": 5, "none": [5, 25, 30, 34, 36, 44, 51, 58, 61, 68, 74, 80, 81, 82, 83, 84, 89, 94, 98, 100, 101, 103, 104, 108, 110, 111, 112, 113, 114, 115, 118, 119, 124, 128, 131, 133, 138, 139, 140, 145, 146, 149, 150, 151, 153, 154, 180, 182], "enabl": [5, 55, 61, 98, 111, 114, 118, 147, 166, 172, 173, 177, 181], "typic": [5, 13, 24, 28, 31, 36, 37, 56, 61, 67, 87, 114, 124, 129, 133, 146, 149, 177, 182, 183, 184], "sampl": [5, 8, 17, 88, 118, 139], "holder": [5, 8, 17, 118], "size": [5, 28, 35, 37, 42, 55, 61, 66, 74, 81, 82, 86, 100, 112, 114, 139, 144, 150, 172, 176, 177], "self": [5, 36, 56, 61, 64, 68, 73, 81, 82, 89, 93, 94, 95, 114, 116, 117, 118, 119, 140, 159, 171, 177, 180, 182], "accordingli": [5, 36, 177], "wrapper": [5, 74, 118, 158], "around": [5, 18, 28, 34, 35, 36, 37, 51, 62, 63, 74, 81, 114, 138, 139, 144, 158, 166, 171, 172, 173, 176, 182], "configur": [5, 13, 19, 26, 42, 74, 76, 77, 81, 124, 125, 158, 165, 174], "mean": [5, 28, 35, 37, 42, 54, 55, 56, 61, 62, 66, 77, 110, 111, 114, 157, 158, 176, 177, 182], "index": [5, 18, 36, 61, 62, 63, 77, 108, 112, 114, 142, 153, 154, 166, 177], "head": [5, 47, 118], "from": [5, 13, 18, 19, 22, 28, 30, 33, 34, 36, 48, 51, 56, 61, 62, 63, 64, 67, 69, 70, 74, 77, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 98, 100, 103, 104, 108, 110, 112, 114, 116, 117, 118, 119, 124, 128, 131, 132, 135, 138, 139, 142, 143, 144, 146, 147, 149, 151, 153, 154, 157, 158, 160, 161, 163, 164, 166, 167, 168, 171, 172, 173, 174, 175, 176, 178, 180, 181, 182, 184, 185, 186, 187], "n": [5, 13, 24, 28, 31, 36, 37, 56, 61, 63, 86, 87, 106, 114, 124, 129, 139, 140, 149, 165, 177, 180, 181], "launcher_typ": [5, 177], "launcher_width": [5, 19, 177], "launcher_gap": [5, 19, 177], "launcher_ind": [5, 19, 177], "pad_pitch": [5, 177], "port_id_remap": 5, "launcher_frame_gap": [5, 48], "chip_box": [5, 177], "chang": [5, 33, 35, 36, 37, 42, 47, 55, 61, 86, 87, 90, 115, 151, 154, 157, 158, 160, 164, 165, 168, 172, 173, 175, 177, 178, 182, 183, 186, 187], "equal": [5, 111, 139, 145, 150, 181], "distribut": [5, 61, 83], "overridden": [5, 93, 94, 95, 114, 116, 117, 118, 119], "desir": [5, 36, 61, 62, 89, 144, 164, 172, 176, 178, 181, 182], "per": [5, 37, 55, 61, 64, 125, 158, 164, 180, 181], "disabl": [5, 13, 36, 69, 74, 87, 111, 114, 124, 153, 172, 173, 175], "argument": [5, 33, 35, 36, 37, 42, 47, 51, 55, 61, 74, 82, 83, 86, 87, 89, 90, 93, 94, 95, 101, 103, 110, 113, 114, 115, 116, 117, 118, 119, 124, 142, 151, 160, 176, 177, 182, 183, 184], "If": [5, 36, 61, 64, 74, 83, 93, 94, 95, 98, 103, 110, 111, 114, 115, 116, 117, 118, 119, 128, 138, 139, 140, 145, 146, 147, 149, 150, 153, 154, 156, 159, 160, 161, 163, 164, 165, 167, 168, 169, 172, 175, 176, 177, 180, 182, 185, 186, 187], "neither": [5, 74], "rf": [5, 42, 165, 177], "most": [5, 108, 140, 142, 153, 158, 164, 167, 168, 171, 172, 173, 175, 177, 180, 182, 185], "top": [5, 6, 18, 32, 40, 56, 74, 77, 81, 93, 94, 95, 110, 111, 114, 116, 117, 118, 119, 138, 145, 153, 154, 158, 164, 172, 173, 175, 176, 177, 182, 185], "clockwis": [5, 13, 18, 34, 56, 81, 108, 139, 176], "order": [5, 18, 22, 56, 61, 62, 94, 100, 108, 110, 114, 139, 140, 158, 160, 172, 181, 182], "x": [5, 33, 54, 61, 62, 81, 86, 89, 100, 108, 110, 128, 138, 142, 149, 150, 161, 167, 172, 174, 176, 177, 180, 181, 182, 183], "y": [5, 13, 54, 61, 81, 89, 100, 106, 108, 110, 124, 128, 138, 142, 149, 150, 161, 176, 181, 182, 183], "your": [5, 51, 94, 98, 100, 112, 114, 156, 157, 159, 160, 163, 164, 165, 166, 167, 168, 177, 178, 183], "For": [5, 18, 22, 27, 36, 61, 77, 81, 89, 114, 138, 140, 142, 145, 146, 150, 151, 152, 154, 158, 160, 164, 165, 167, 168, 172, 173, 175, 177, 180, 181, 182, 183], "exampl": [5, 27, 36, 61, 74, 75, 77, 82, 114, 138, 140, 146, 150, 154, 158, 160, 163, 164, 165, 167, 168, 172, 174, 176, 178, 180, 181, 182, 183, 187], "flip": [5, 6, 16, 18, 36, 39, 40, 42, 53, 61, 117, 138, 172, 176, 177, 182], "": [5, 12, 23, 33, 35, 36, 37, 42, 47, 48, 55, 61, 74, 82, 84, 86, 87, 89, 90, 108, 115, 124, 138, 139, 145, 149, 151, 153, 154, 158, 161, 163, 164, 167, 168, 171, 172, 174, 176, 177, 178, 184, 186], "axi": [5, 13, 23, 62, 86, 89, 100, 124, 138, 154, 155], "rang": [5, 55, 140], "delta_x": 5, "100": [5, 13, 17, 24, 28, 31, 34, 36, 37, 42, 56, 58, 61, 62, 73, 87, 88, 89, 106, 114, 117, 119, 122, 124, 126, 127, 129, 139, 173, 177, 182, 183], "delta_i": 5, "x0": 5, "y0": 5, "float": [5, 61, 81, 100, 106, 108, 110, 112, 114, 131, 140, 142, 181, 182], "separ": [5, 13, 36, 69, 70, 74, 82, 87, 88, 94, 110, 114, 124, 140, 142, 145, 146, 148, 163, 165, 167, 168, 172, 173, 177, 178, 182, 183], "along": [5, 56, 100, 154, 187], "dimens": [5, 19, 74, 111, 114, 161, 181, 182], "displac": [5, 177], "tsv_box": 5, "boolean": [5, 9, 10, 13, 17, 20, 22, 24, 28, 31, 33, 34, 36, 37, 42, 48, 51, 53, 54, 56, 61, 62, 63, 64, 65, 66, 69, 70, 74, 81, 82, 87, 89, 114, 116, 117, 118, 124, 128, 129, 147], "make": [5, 27, 40, 81, 82, 83, 84, 98, 100, 114, 151, 157, 158, 160, 161, 163, 164, 165, 166, 168, 172, 173, 175, 176, 177, 178, 182, 183, 187], "plane": [5, 35, 37, 38, 51, 86, 114, 172, 173, 176, 177], "fals": [5, 13, 17, 18, 20, 24, 28, 31, 33, 34, 36, 37, 42, 48, 51, 53, 54, 56, 61, 62, 63, 64, 65, 66, 69, 70, 74, 80, 81, 82, 87, 89, 94, 98, 100, 101, 103, 106, 107, 112, 113, 114, 116, 117, 124, 129, 139, 140, 144, 145, 146, 150, 153, 154, 176, 177, 180, 182], "merge_base_metal_gap": 5, "a_cap": 5, "conductor": [5, 13, 17, 18, 24, 28, 31, 36, 37, 42, 56, 61, 62, 64, 86, 87, 114, 124, 129, 153], "cap": [5, 18], "b_cap": 5, "with_gnd_tsv": 5, "through": [5, 24, 55, 56, 62, 82, 83, 129, 139, 160, 161, 175, 182], "silicon": [5, 24, 114, 129, 177, 182, 185], "with_face1_gnd_tsv": 5, "tsv_grid_spac": 5, "space": [5, 12, 13, 15, 16, 18, 23, 25, 56, 61, 94, 117, 118, 119, 122, 124, 126, 127, 142, 144, 146, 164], "300": [5, 6, 47, 48, 56, 86, 114], "edge_from_tsv": 5, "clearanc": [5, 51, 61, 81], "550": [5, 114], "tsv_edge_to_tsv_edge_separ": 5, "exist": [5, 74, 81, 93, 94, 95, 110, 114, 116, 117, 118, 119, 138, 139, 142, 145, 146, 150, 154, 158, 163, 167, 168, 172, 177, 182, 183], "250": [5, 86, 88], "tsv_edge_to_nearest_el": 5, "with_gnd_bump": 5, "indium": [5, 42, 114, 182], "bump_grid_spac": 5, "120": [5, 86, 90, 157, 159], "edge_from_bump": 5, "bump_edge_to_bump_edge_separ": 5, "95": 5, "frames_en": [5, 6, 7, 10, 16, 18], "drawn": [5, 6, 7, 10, 16, 18, 168, 182, 185], "frames_marker_dist": 5, "each": [5, 13, 17, 22, 25, 34, 35, 36, 56, 61, 62, 63, 64, 74, 77, 79, 80, 81, 82, 83, 86, 88, 90, 94, 98, 100, 110, 114, 119, 125, 128, 138, 139, 142, 145, 146, 148, 149, 150, 154, 158, 165, 168, 172, 175, 176, 177, 178, 180, 181, 182, 183, 184, 187], "1500": [5, 34], "1000": [5, 17, 47, 56, 74, 77, 114, 177], "frames_diagonal_squar": 5, "diagon": [5, 34, 51, 181], "squar": [5, 12, 23, 34, 37, 51, 81, 82, 128, 145, 164, 168, 177], "2": [5, 13, 17, 18, 22, 24, 25, 32, 33, 37, 38, 44, 55, 61, 69, 73, 81, 87, 89, 98, 100, 110, 114, 119, 124, 125, 129, 139, 144, 151, 163, 166, 177, 178, 180, 181, 182], "frames_mirror": 5, "mirror": [5, 9, 10, 13, 18, 80, 81, 89, 124, 144, 154, 155, 176], "true": [5, 9, 10, 13, 17, 18, 22, 28, 31, 36, 56, 61, 62, 69, 70, 74, 81, 82, 83, 87, 94, 98, 101, 107, 114, 116, 117, 118, 124, 132, 138, 139, 140, 142, 145, 146, 147, 148, 150, 151, 153, 158, 173, 175, 176, 177, 180, 181, 182], "frames_dice_width": 5, "street": 5, "200": [5, 13, 18, 24, 34, 56, 61, 90, 129, 177, 187], "140": 5, "face_box": 5, "8500": 5, "dice_grid_margin": [5, 34], "margin": [5, 13, 18, 24, 28, 31, 34, 36, 37, 56, 58, 61, 66, 69, 70, 81, 87, 114, 124, 129, 144, 177, 182, 183], "name_mask": [5, 34], "m000": [5, 34], "name_chip": [5, 7, 9, 10, 21, 34], "ctest": [5, 34], "name_copi": [5, 34, 81], "copi": [5, 34, 36, 61, 81, 104, 145, 155, 158, 177, 178, 183, 184], "name_brand": [5, 34], "brand": [5, 34], "marker_typ": [5, 13, 34, 51], "lower": [5, 13, 22, 34, 111, 168, 181, 182], "standard": [5, 13, 24, 25, 34, 44, 45, 51, 52, 58, 60, 61, 89, 118, 119, 129, 139, 142, 147, 162, 168], "chip_dicing_in_base_met": [5, 34], "line": [5, 6, 9, 17, 18, 34, 35, 47, 62, 82, 87, 88, 104, 108, 113, 114, 126, 127, 129, 139, 142, 145, 157, 161, 163, 164, 172, 173, 174, 175, 176, 177, 183, 184, 185, 186, 187], "metal": [5, 11, 13, 24, 28, 31, 34, 36, 37, 40, 48, 56, 61, 62, 63, 65, 66, 69, 70, 87, 90, 94, 110, 111, 114, 117, 124, 128, 129, 177, 181, 182], "addit": [5, 13, 28, 34, 36, 48, 61, 62, 63, 65, 66, 69, 70, 77, 81, 87, 93, 95, 110, 113, 114, 116, 117, 118, 119, 124, 157, 160, 172, 176, 177, 181], "bound": [5, 34, 54, 61, 81, 89, 111, 114, 124, 141, 144, 149, 172], "10000": [5, 17, 34, 94, 114, 176], "connector_typ": [5, 42, 61], "coax": [5, 42, 61], "choic": [5, 6, 10, 13, 14, 15, 16, 17, 18, 22, 24, 25, 28, 30, 31, 32, 33, 42, 44, 45, 46, 56, 58, 59, 60, 61, 64, 68, 69, 70, 71, 72, 87, 89, 98, 119, 124, 125, 129, 151, 158, 164, 181], "gsg": [5, 42, 61], "tsv_type": [5, 24, 58, 59, 60, 129], "ellips": [5, 24, 58, 59, 129], "bottom": [6, 32, 40, 56, 71, 72, 77, 81, 110, 111, 114, 153, 158, 173, 176, 177, 182], "transmiss": [6, 17, 62, 129], "3": [6, 17, 18, 22, 25, 33, 37, 38, 46, 53, 63, 81, 86, 90, 100, 110, 114, 119, 139, 144, 151, 160, 163, 164, 168, 181, 182], "crossing_length": 6, "400": [6, 56, 86, 114, 177], "cross_talk_dist": 6, "meander_fac": 6, "two": [6, 9, 34, 35, 37, 38, 40, 42, 54, 59, 60, 61, 69, 81, 86, 87, 88, 89, 110, 111, 114, 128, 138, 139, 142, 149, 153, 158, 171, 172, 176, 177, 180, 181, 182, 183, 187], "daisi": 7, "woven": 7, "includ": [7, 9, 10, 13, 17, 24, 27, 28, 31, 36, 37, 56, 61, 67, 69, 70, 80, 82, 83, 87, 89, 94, 98, 100, 110, 114, 116, 124, 129, 138, 139, 140, 145, 154, 156, 160, 161, 163, 166, 167, 171, 172, 176, 177, 181, 187], "text": [7, 34, 36, 61, 77, 81, 110, 112, 114, 126, 127, 142, 144, 153, 164, 173, 177], "manual": [7, 29, 56, 61, 67, 68, 73, 77, 82, 85, 98, 112, 136, 138, 160, 162, 166, 168, 176, 181, 182, 183, 185], "pattern": [7, 56, 166], "No": [7, 71, 167], "input": [7, 18, 42, 56, 61, 110, 139, 142, 180, 182, 187], "demonstr": [9, 10, 165, 172, 173, 187], "four": [9, 22, 42, 51, 88, 121, 128, 139, 144, 149, 176], "readout": [9, 10, 22, 87, 88], "reson": [9, 10, 17, 18, 22, 47, 56, 116, 172, 181], "probe": [9, 128, 138], "charg": [9, 173], "qubit_a_nr": [9, 10], "qubit_b_nr": [9, 10], "port_nr": [9, 114, 182], "qubit_nr": [9, 10], "cap_finger_nr": [9, 10], "probeline_nam": [9, 10], "readout_res_length": [9, 10, 22, 176], "5000": [9, 10, 22, 56, 118, 176, 177], "5100": [9, 10, 22], "5200": [9, 10, 22], "5300": [9, 10, 22], "include_coupl": [9, 10, 176], "coupler": [9, 10, 17, 18, 22, 25, 33, 35, 37, 86, 87, 88, 90, 114, 119, 133, 173, 182], "3d": [10, 27, 114, 172, 177, 182], "integr": [10, 27, 98, 100, 171, 172, 174, 177, 184], "multi": [10, 28, 30, 31, 56, 61, 64, 77, 82, 83, 114, 165, 166, 174, 177], "featur": [10, 36, 61, 140, 164, 165, 166, 167, 168, 173, 174, 175, 176, 177, 184], "dt": 10, "almost": [11, 149, 177], "remov": [11, 33, 51, 81, 82, 114, 117, 138, 139, 145, 146, 147, 151, 154, 161, 163, 166, 177], "ebl": [11, 75, 166, 176], "edge_len": [12, 23], "80": [12, 13, 23, 35, 64, 86, 88], "inter_spac": [12, 23], "20": [12, 17, 18, 23, 28, 30, 35, 37, 38, 66, 86, 87, 88, 89, 126, 127, 160, 163, 167, 180, 182], "pad_width": [13, 70, 87, 124, 128], "500": [13, 18, 24, 33, 47, 49, 56, 61, 87, 121, 124, 129, 177, 182], "junctions_horizont": [13, 124], "horizont": [13, 17, 22, 24, 56, 70, 81, 87, 124, 128, 129, 155], "small_loop_area": 13, "small": [13, 21, 62, 157, 177, 180], "loop": [13, 69, 73, 87, 89, 124], "large_loop_area": 13, "larg": [13, 165, 180], "130": [13, 177], "junction_width_smal": 13, "finger": [13, 17, 18, 22, 33, 37, 38, 55, 69, 70, 87, 90, 124, 133], "15": [13, 86, 122, 182], "junction_width_larg": 13, "08": [13, 119], "junction_width_step_increment_smal": 13, "01": [13, 100, 108, 114], "junction_width_step_increment_larg": 13, "03": 13, "pads_loop": 13, "central": [13, 176], "6": [13, 17, 18, 22, 24, 28, 31, 36, 37, 47, 56, 61, 64, 70, 86, 87, 114, 124, 129, 139, 151, 163, 164], "turn": [13, 18, 24, 28, 31, 33, 35, 36, 37, 42, 47, 55, 56, 61, 86, 87, 90, 114, 119, 124, 129, 153, 158, 172, 177], "64": [13, 24, 28, 31, 36, 37, 56, 61, 87, 114, 124, 129, 139, 167], "r": [13, 24, 28, 31, 36, 37, 42, 56, 61, 62, 63, 87, 114, 124, 129, 139, 140, 153, 160, 163, 177, 186], "radiu": [13, 24, 28, 31, 35, 36, 37, 38, 54, 56, 61, 62, 63, 70, 81, 86, 87, 90, 114, 124, 129, 139, 153, 177], "protect": [13, 24, 28, 31, 36, 37, 56, 61, 66, 87, 114, 124, 129], "1t1": [13, 24, 28, 31, 36, 37, 56, 61, 77, 81, 82, 87, 114, 117, 124, 129, 138, 168, 172, 176, 177, 182], "2b1": [13, 24, 28, 31, 36, 37, 56, 61, 77, 81, 87, 114, 124, 129, 176, 177, 182], "1b1": [13, 24, 28, 31, 36, 37, 56, 61, 87, 114, 124, 129], "2t1": [13, 24, 28, 31, 36, 37, 56, 61, 77, 81, 87, 114, 124, 129, 177], "display_nam": [13, 24, 28, 31, 36, 37, 56, 61, 87, 114, 124, 129], "displai": [13, 24, 28, 31, 36, 37, 56, 61, 74, 87, 114, 124, 129, 163, 172, 175, 176], "gui": [13, 24, 27, 28, 31, 36, 37, 54, 56, 61, 62, 74, 77, 87, 101, 103, 114, 124, 129, 138, 142, 145, 158, 163, 164, 166, 168, 171, 173, 174, 175, 177, 179, 182, 184, 185, 186], "protect_opposite_fac": [13, 24, 28, 31, 36, 37, 56, 61, 87, 114, 124, 129], "appli": [13, 24, 28, 31, 36, 37, 56, 61, 63, 74, 81, 82, 83, 87, 111, 114, 115, 124, 128, 129, 158, 172, 182], "onli": [13, 24, 28, 31, 33, 35, 36, 37, 42, 47, 55, 56, 61, 62, 68, 81, 82, 83, 86, 87, 89, 90, 94, 101, 111, 114, 120, 124, 125, 129, 132, 136, 140, 142, 145, 148, 151, 152, 153, 154, 158, 160, 163, 164, 165, 167, 168, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 187], "signal": [13, 24, 28, 31, 36, 37, 42, 56, 61, 87, 94, 110, 112, 114, 124, 129, 153, 172, 181, 182], "carri": [13, 24, 28, 31, 36, 37, 56, 61, 87, 114, 124, 129], "opposing_face_id_group": [13, 24, 28, 31, 36, 37, 56, 61, 87, 114, 124, 129], "oppos": [13, 24, 28, 31, 36, 37, 56, 61, 87, 114, 124, 129, 182], "group": [13, 24, 28, 31, 36, 37, 56, 61, 67, 77, 87, 106, 107, 114, 124, 129, 138, 141, 168, 172, 177], "etch_opposite_fac": [13, 24, 28, 31, 36, 37, 56, 61, 87, 114, 124, 129], "etch": [13, 18, 24, 28, 31, 36, 37, 56, 61, 77, 87, 110, 111, 114, 124, 129], "opposit": [13, 18, 24, 28, 31, 36, 37, 56, 61, 87, 114, 117, 124, 129, 182], "too": [13, 24, 28, 31, 36, 37, 48, 56, 61, 62, 63, 65, 66, 87, 114, 124, 129, 149, 151, 163, 164, 165], "etch_opposite_face_margin": [13, 18, 24, 28, 31, 36, 37, 56, 61, 87, 114, 124, 129], "area_height": [13, 124], "height": [13, 18, 33, 70, 74, 81, 87, 111, 112, 114, 121, 124, 128, 144, 182], "1900": [13, 124], "area_width": [13, 124], "1300": [13, 18, 124], "pad_spac": [13, 124], "only_pad": [13, 124], "pad_configur": [13, 124], "junction_width_step": [13, 124], "automat": [13, 38, 54, 56, 61, 69, 74, 79, 81, 84, 98, 124, 145, 158, 160, 161, 163, 164, 167, 168, 171, 172, 175, 176, 177, 178, 180], "junction_width": [13, 68, 87, 89, 124], "junction_test_pads_typ": [13, 124, 125], "junction_test_pads_paramet": [13, 124], "extra": [13, 18, 28, 32, 44, 61, 62, 64, 68, 81, 87, 89, 107, 124, 144, 145, 154, 167], "_junction_test_pads_paramet": [13, 124], "previou": [13, 44, 61, 68, 87, 89, 124, 139, 145, 163, 164, 172, 175, 176, 177], "state": [13, 44, 68, 87, 89, 124, 178, 180], "_paramet": [13, 36, 44, 68, 87, 89, 124], "mirror_squid": [13, 89, 124], "its": [13, 36, 56, 61, 62, 81, 89, 94, 114, 124, 138, 139, 140, 154, 158, 160, 163, 172, 176, 177, 178], "junction_paramet": [13, 68, 87, 89, 124], "_junction_paramet": [13, 68, 87, 89, 124], "finger_overshoot": [13, 69, 70, 87, 124], "include_base_metal_gap": [13, 69, 70, 87, 124], "shadow_margin": [13, 69, 70, 87, 124], "shadow": [13, 69, 70, 87, 124], "compact_geometri": [13, 69, 87, 124], "compact": [13, 69, 87, 124, 140], "geometri": [13, 33, 35, 36, 37, 42, 47, 51, 55, 59, 60, 69, 86, 87, 89, 90, 93, 94, 95, 110, 111, 114, 116, 117, 118, 119, 124, 149, 154, 157, 166, 168, 172, 174, 175, 177, 181, 184, 185, 187], "separate_junct": [13, 69, 70, 87, 124], "offset_compens": [13, 69, 70, 87, 124], "lead": [13, 37, 55, 69, 70, 87, 124, 153, 180, 182], "offset": [13, 61, 69, 70, 81, 87, 90, 124], "mirror_offset": [13, 69, 70, 87, 124], "move": [13, 54, 61, 69, 70, 87, 89, 124, 139, 160, 168, 172, 173], "finger_overlap": [13, 69, 70, 87, 124], "insid": [13, 35, 55, 56, 61, 69, 70, 87, 94, 98, 110, 112, 114, 124, 140, 153, 168, 172, 175, 176, 177, 182, 185], "single_junct": [13, 69, 87, 124], "second": [13, 31, 36, 42, 69, 87, 103, 110, 114, 124, 139, 177, 178, 180], "predefin": [14, 62, 172], "sma8": [14, 17, 118, 177], "ard24": [14, 17], "dc24": 14, "num_strip": [15, 16, 126, 127], "min_width": [15, 16], "max_width": [15, 16], "stripe_test": [15, 16], "stripe_test_increasing_width": [15, 16], "architectur": [16, 162, 166, 177], "res_length": [17, 18], "physic": [17, 18, 28, 35, 37, 42, 55, 61, 66, 98, 100, 150, 180, 185, 187], "5434": [17, 18], "5429": [17, 18], "5374": [17, 18], "5412": [17, 18], "5493": [17, 18], "5589": [17, 18], "n_finger": [17, 18, 22], "planar": [17, 18, 94], "capacitor": [17, 18, 33, 35, 37, 38, 55, 61, 133, 149, 172, 177], "l_finger": [17, 18, 22], "23": [17, 18, 22], "9": [17, 18, 22, 163, 176, 177], "14": [17, 18, 22, 24], "21": [17, 18, 22], "28": [17, 18, 152, 160, 164, 167], "type_coupl": [17, 18, 22], "interdigit": [17, 18, 22, 133], "n_ab": [17, 121], "res_term": 17, "termin": [17, 56, 61, 62, 63, 103, 114, 117, 153, 163, 164, 176, 178, 181, 182], "galvan": [17, 40], "res_beg": 17, "begin": [17, 56, 63, 127, 176, 178], "res_a": [17, 18, 47], "res_b": [17, 18, 47], "12": [17, 18, 28, 66, 70, 87, 90, 98, 163, 164, 167, 181], "tl_airbridg": 17, "res_airbridge_typ": 17, "rectangular": [17, 28, 30, 32, 48, 56, 61, 62, 63, 64, 81, 90, 176], "sample_holder_typ": 17, "marker_safeti": 17, "first": [17, 22, 36, 42, 56, 61, 62, 74, 77, 87, 110, 113, 114, 139, 151, 153, 158, 161, 163, 164, 166, 172, 174, 176, 177, 179, 180, 182], "curv": [17, 62, 63, 139], "feedline_bend_dist": 17, "feedlin": [17, 22, 35, 37], "bend": [17, 54, 61, 62, 182], "resonators_both_sid": 17, "both": [17, 18, 28, 29, 31, 36, 61, 68, 73, 84, 114, 153, 158, 161, 163, 165, 176, 180, 182, 183], "max_res_len": 17, "exceed": 17, "becom": [17, 61, 77, 113, 175, 182], "1e": [17, 110, 119], "30": [17, 24, 58, 59, 65, 86, 98, 121, 129, 177, 181], "ground_grid_in_trac": [17, 54, 61, 62, 63, 65], "trace": [17, 28, 47, 48, 61, 62, 63, 65, 66], "border": [17, 114], "preliminari": 18, "resonator_typ": 18, "connector_dist": [18, 56], "extra_resonator_avoid": 18, "extra_resonator_etch": 18, "spiral": [18, 56, 172], "attach": [18, 81, 146, 176], "pl_": 18, "_t_port_c": 18, "identifi": [18, 82, 149, 150, 157, 176, 177, 178], "long": [18, 157, 164, 177, 180, 181, 182], "same": [18, 22, 35, 36, 37, 54, 61, 74, 81, 82, 83, 94, 110, 114, 139, 145, 148, 149, 150, 151, 154, 158, 163, 164, 165, 168, 172, 175, 176, 177, 178, 180, 182], "wai": [18, 21, 36, 61, 82, 83, 108, 110, 153, 158, 163, 164, 166, 167, 168, 171, 172, 176, 177, 182, 183], "direct": [18, 21, 31, 32, 36, 48, 61, 62, 81, 89, 111, 114, 118, 132, 139, 142, 153, 172, 177, 182], "_corner": [18, 153], "cpw": [18, 24, 129], "exclud": [18, 151], "finger_control": [18, 55], "solid": [18, 181], "twofac": 18, "ground_grid_avoid": [18, 36, 89, 177], "counter": [18, 56, 139], "resonator_fac": 18, "2100": 18, "2900": 18, "3700": 18, "4500": 18, "spiral_box_height": 18, "spiral_box_width": 18, "x_indent": 18, "indent": [18, 19, 140], "800": [18, 56], "cap_res_dist": 18, "waveguide_indent": 18, "At": [18, 173], "bridge_spac": [18, 56], "parametr": [19, 166, 172], "connect": [19, 21, 22, 37, 42, 48, 49, 56, 62, 86, 107, 112, 114, 125, 128, 145, 172, 173, 177, 182], "pairwis": 19, "coplanar": [19, 42, 61, 62, 63, 65, 66, 150, 172, 177, 181], "n_launcher": 19, "40": [19, 31, 35, 40, 42, 56, 61], "launcher_pitch": 19, "pitch": [19, 24, 129], "635": 19, "160": [19, 173], "96": 19, "520": 19, "tunabl": 20, "veri": [21, 62, 74, 172, 175, 177, 182, 183], "coupl": [22, 47, 173, 181], "half": [22, 88, 177], "abov": [22, 56, 114, 163, 164, 165, 168, 172, 173, 175, 180, 181, 183, 184], "below": [22, 28, 56, 111, 114, 132, 145, 154, 156, 163, 171, 175, 176, 177, 178, 180, 181, 182, 184], "chargelin": [22, 90], "whose": [22, 145, 148], "upper": [22, 111, 182], "six": 22, "5400": [22, 176], "5500": [22, 176], "use_test_reson": [22, 116], "test_res_length": 22, "5600": [22, 176], "5800": 22, "metrologi": 24, "segment": [24, 56, 61, 62, 63, 65, 66, 114, 172], "crossect": 24, "analysi": [24, 98, 100, 107, 181], "array_form": 24, "array_layout": 24, "metrology_pitch": 24, "50": [24, 34, 87, 106, 112, 145, 153], "cpw_distanc": [24, 129], "placehold": [24, 129, 176], "hor_dist": [24, 129], "ver_dist": [24, 129], "tsv_diamet": [24, 58, 129], "diamet": [24, 31, 40, 56, 58, 61, 129], "tsv_margin": [24, 58, 129], "tsv_elliptical_width": [24, 59, 129], "ellipt": [24, 59, 129], "pos_start": [25, 118], "end_i": [25, 118], "c_kappa_l_fing": 25, "dedic": [25, 110, 119, 182, 184], "function": [25, 30, 36, 44, 55, 56, 61, 64, 68, 73, 77, 80, 82, 84, 89, 92, 94, 110, 111, 114, 115, 118, 119, 131, 133, 136, 139, 140, 142, 148, 149, 151, 154, 157, 158, 159, 165, 174, 176, 177, 180, 181, 182, 184], "also": [25, 27, 36, 48, 54, 61, 62, 63, 65, 74, 81, 82, 83, 84, 85, 89, 90, 100, 114, 119, 124, 126, 127, 128, 132, 138, 139, 140, 145, 146, 147, 149, 151, 154, 158, 160, 161, 163, 164, 165, 166, 167, 168, 171, 172, 175, 176, 177, 178, 180, 181, 182, 184, 186], "assum": [25, 62, 63, 74, 82, 114, 119, 167, 173, 181, 182], "follow": [25, 56, 61, 62, 74, 77, 79, 80, 93, 94, 95, 114, 116, 117, 118, 119, 139, 140, 145, 146, 150, 156, 157, 158, 159, 160, 163, 165, 167, 168, 172, 175, 176, 177, 178, 180, 181, 182, 183, 184, 187], "attribut": [25, 36, 80, 112, 119, 151, 158, 159], "arm_width_a": [25, 118, 119], "arm_width_b": [25, 118, 119], "qubit_spac": [25, 118, 119], "fluxline_typ": [25, 44, 45, 46, 89, 119, 182], "rr_cpl_width": [25, 119], "arm": [25, 37, 89, 90, 118, 119, 122, 124, 177], "24": [25, 90, 118, 119], "rr": [25, 119], "qb": [25, 119], "um": [25, 90, 112, 114, 119, 144, 150], "file": [26, 36, 67, 74, 75, 77, 79, 80, 81, 82, 98, 100, 101, 104, 107, 110, 113, 114, 138, 143, 145, 147, 149, 150, 154, 156, 158, 160, 161, 164, 165, 166, 168, 172, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186], "thing": [26, 79, 158, 168, 177, 180], "path": [26, 56, 61, 62, 74, 80, 84, 98, 100, 101, 104, 107, 110, 113, 118, 138, 139, 143, 146, 149, 150, 160, 163, 164, 165, 167, 171, 172, 177, 178, 179, 180, 183, 187], "sub": [26, 36, 61, 62, 69, 81, 89, 111, 114, 154, 158, 172, 176], "repres": [27, 61, 62, 63, 68, 73, 74, 79, 81, 82, 83, 110, 166, 175, 182], "form": [27, 61, 94, 108, 114, 145, 157, 158], "being": [27, 77, 177], "pcelldeclarationhelp": [27, 36, 158], "load": [27, 67, 82, 85, 87, 88, 90, 143, 146, 150, 154, 158, 175, 176, 177], "klayout": [27, 61, 62, 74, 77, 84, 110, 114, 136, 138, 145, 146, 147, 149, 152, 158, 160, 161, 162, 163, 166, 168, 171, 172, 173, 174, 176, 177, 179, 182, 184, 185, 186], "code": [27, 29, 33, 35, 36, 37, 42, 47, 54, 55, 61, 62, 67, 68, 73, 74, 85, 86, 87, 89, 90, 94, 124, 140, 145, 154, 157, 158, 160, 162, 163, 164, 165, 166, 167, 168, 171, 174, 175, 182, 183, 185, 186], "share": [27, 89, 114, 139, 180], "them": [27, 94, 98, 149, 158, 163, 164, 165, 168, 171, 172, 176, 177, 182], "have": [27, 30, 33, 35, 36, 37, 42, 47, 51, 55, 61, 62, 74, 77, 81, 82, 83, 85, 86, 87, 90, 98, 110, 114, 138, 139, 145, 146, 149, 151, 154, 158, 160, 161, 163, 164, 165, 168, 169, 172, 173, 175, 176, 177, 178, 179, 181, 182], "easi": [27, 163, 165, 166], "support": [27, 35, 61, 74, 96, 107, 138, 140, 164, 166, 172, 177, 178, 180, 181, 182, 184, 187], "concept": [27, 172, 175, 177, 182], "belong": [27, 77, 149, 177], "certain": [27, 33, 35, 36, 37, 42, 47, 55, 75, 81, 82, 86, 87, 90, 114, 163, 164, 165, 177, 182], "determin": [27, 36, 51, 61, 62, 81, 82, 98, 100, 114, 128, 145, 147, 153, 154, 176, 177, 178, 181, 182], "actual": [27, 30, 44, 61, 62, 63, 68, 73, 81, 82, 89, 96, 160, 164, 168, 175, 176, 177, 182, 187], "refer": [27, 34, 35, 36, 37, 38, 74, 77, 80, 86, 114, 138, 139, 140, 153, 156, 158, 163, 164, 165, 172, 175, 177, 183], "taper": [28, 38, 48, 61, 66, 87], "end": [28, 31, 54, 56, 61, 62, 63, 98, 100, 103, 111, 114, 117, 153, 154, 160, 161, 172, 175, 176, 181, 182], "bridge_gap_width": 28, "with_side_airbridg": 28, "With": [28, 77, 158, 172, 176], "with_right_waveguid": 28, "gap_between_bridg": 28, "inner": [28, 86, 114, 182], "adjac": [28, 61, 114, 139, 141], "bridg": [28, 30, 31, 32, 54, 56, 61, 64, 93, 177], "waveguide_extra": 28, "taper_length": [28, 38, 61, 66], "31": [28, 66, 140], "41592653589793": [28, 66], "m2": [28, 66], "a2": [28, 35, 36, 37, 42, 55, 61, 64, 66], "non": [28, 35, 37, 42, 54, 55, 56, 61, 66, 110, 114, 139, 140, 157, 181, 182], "b2": [28, 35, 36, 37, 42, 55, 61, 64, 66], "add_met": [28, 48, 61, 62, 63, 65, 66], "add": [28, 31, 36, 48, 54, 59, 61, 62, 63, 65, 66, 74, 81, 82, 93, 95, 107, 110, 114, 116, 117, 118, 119, 128, 151, 158, 160, 168, 173, 176, 177, 178, 182, 183], "airbridge_typ": [28, 30, 31, 32, 56, 61, 64], "bridge_width": [28, 30, 31, 56], "pad_length": [28, 30, 31, 56], "22": [28, 70, 87, 163], "bridge_length": [28, 30, 56, 177], "60": [28, 38, 86], "without": [30, 44, 56, 61, 68, 73, 74, 81, 84, 89, 108, 114, 125, 163, 164, 165, 168, 172, 176, 177, 178, 180, 182, 186], "subclass": [30, 33, 35, 36, 37, 42, 47, 51, 55, 61, 82, 83, 86, 87, 89, 90, 94, 114, 140, 151, 174, 181, 183, 184], "otherwis": [30, 31, 32, 36, 61, 62, 74, 93, 95, 101, 111, 114, 115, 116, 117, 118, 119, 140, 146, 154, 163, 167, 172, 182], "user": [30, 31, 32, 36, 59, 61, 74, 82, 89, 103, 157, 160, 161, 163, 164, 166, 167, 171, 176, 177, 178, 180, 182], "classmethod": [30, 33, 35, 36, 37, 42, 44, 47, 51, 53, 55, 58, 61, 68, 86, 87, 90, 94, 114, 124, 151, 158, 182], "18": [30, 44, 163, 167], "44": [30, 56, 177], "equival": [31, 61, 140], "origin": [31, 32, 36, 40, 59, 60, 63, 64, 71, 72, 74, 81, 110, 114, 139, 144, 177], "geometr": [31, 32, 40, 59, 60, 139, 166], "include_bump": [31, 56], "ubm_diamet": [31, 40, 56, 61], "under": [31, 36, 40, 56, 61, 74, 82, 114, 146, 160, 163, 168, 171, 172, 175, 177], "bump_diamet": [31, 40, 56, 61], "25": [31, 40, 56, 61, 182], "part": [32, 47, 48, 56, 82, 89, 90, 111, 112, 114, 124, 139, 164, 172, 173, 175, 176, 177, 180], "port_a": [32, 36, 61], "port_b": [32, 36, 61, 177], "closest": [32, 34, 108, 114, 128, 138, 145, 182], "pad_extra": 32, "capacit": [33, 55, 87, 88, 98, 100, 112, 119, 153, 174, 180, 182, 184], "fem": [33, 180], "comput": [33, 67, 107, 139, 178, 180, 181], "when": [33, 35, 36, 37, 42, 47, 55, 61, 62, 74, 81, 86, 87, 90, 98, 103, 110, 111, 114, 138, 145, 153, 154, 157, 158, 160, 161, 164, 167, 172, 175, 176, 177, 178, 180, 182, 185], "best": [33, 35, 36, 37, 42, 47, 55, 86, 87, 90, 164, 177], "practic": [33, 35, 36, 37, 42, 47, 55, 61, 86, 87, 90, 158, 171, 182], "effect": [33, 35, 36, 37, 42, 47, 55, 86, 87, 90, 115, 118, 144, 165, 181], "serv": [33, 35, 36, 37, 42, 47, 55, 86, 87, 90], "deriv": [33, 35, 36, 37, 42, 47, 55, 61, 86, 87, 90, 132, 139, 158, 177], "noth": [33, 35, 36, 37, 42, 47, 55, 86, 87, 90, 151, 175], "els": [33, 35, 36, 37, 42, 47, 55, 86, 87, 90, 140], "cl": [33, 35, 36, 37, 42, 47, 51, 55, 86, 87, 90, 94, 114, 133, 151, 182], "you": [33, 35, 36, 37, 42, 47, 51, 55, 56, 74, 86, 87, 90, 98, 100, 110, 140, 145, 156, 158, 159, 160, 161, 163, 164, 165, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 181, 182, 183, 185, 186, 187], "need": [33, 35, 36, 37, 42, 47, 51, 55, 56, 61, 62, 75, 77, 84, 86, 87, 90, 92, 94, 113, 136, 138, 139, 150, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187], "decid": [33, 35, 36, 37, 42, 47, 55, 86, 87, 90, 182], "x_coupler_length": 33, "x_coupler_height": 33, "x_coupler_vari": 33, "variant": [33, 45, 46, 79, 82, 176], "either": [33, 36, 56, 67, 68, 73, 74, 77, 82, 83, 85, 114, 125, 139, 153, 172, 177, 182, 184], "remove_capacitor": 33, "finger_numb": [33, 37, 38], "finger_width": [33, 37, 38, 55], "finger_gap": [33, 37, 38, 55], "finger_gap_end": [33, 37], "marker_dist": 34, "diagonal_squar": [34, 51], "use_face_prefix": 34, "prefix": [34, 36, 74, 80, 100, 110, 113, 114, 128, 164, 165, 177], "chip_dicing_width": 34, "chip_dicing_line_length": 34, "chip_dicing_gap_length": 34, "dash": [34, 172], "circular": [35, 60, 81, 140], "outer": [35, 48, 81, 86, 128], "semi": 35, "island": [35, 86, 87, 88, 89, 90, 181, 182], "fix": [35, 37, 55, 61, 114, 165, 167], "imped": [35, 86, 112], "r_inner": [35, 86], "r_outer": [35, 86], "extern": [35, 86, 166, 171, 174, 177, 182, 183], "swept_angl": 35, "cover": [35, 51, 81, 111, 114, 133, 141, 153, 165, 172, 176, 181], "180": [35, 42, 61, 64, 86], "outer_island_width": [35, 86], "ground_gap": [35, 55, 86, 87], "fixed_length": [35, 37, 55], "auto": [35, 37, 55, 177], "cell_transf": [36, 114], "extract": [36, 145, 149, 153, 154], "specif": [36, 51, 61, 68, 73, 74, 79, 80, 81, 82, 94, 114, 140, 153, 156, 158, 160, 163, 164, 167, 168, 172, 175, 177, 182, 183, 184], "convert": [36, 61, 81, 114, 140, 142, 145, 146, 148, 149, 153, 154, 171, 173, 174], "target": [36, 61, 131, 153, 163, 167], "system": [36, 77, 138, 153, 160, 163, 167, 168, 174, 180, 183], "recurs": [36, 74, 114, 140, 148, 153], "level": [36, 74, 111, 114, 138, 140, 145, 153, 157, 158, 164, 165, 171, 172, 175, 177, 180, 187], "look": [36, 74, 113, 114, 146, 153, 163, 166, 177], "subcel": [36, 61, 74, 89, 114, 124, 153, 177], "behav": 36, "like": [36, 61, 68, 73, 82, 140, 151, 158, 160, 161, 163, 164, 165, 168, 172, 176, 177, 180, 181], "target_cel": 36, "label_tran": [36, 74, 114], "note": [36, 56, 61, 74, 81, 82, 142, 152, 158, 160, 163, 164, 165, 166, 172, 176, 177, 178, 180, 186], "To": [36, 82, 83, 84, 98, 100, 118, 140, 160, 161, 163, 164, 167, 168, 172, 175, 176, 177, 180, 181, 182, 186, 187], "inherit": [36, 158, 177, 182], "It": [36, 61, 62, 74, 81, 82, 83, 84, 89, 114, 124, 140, 158, 160, 163, 164, 165, 166, 167, 168, 172, 173, 177, 179, 180, 182, 183], "directli": [36, 61, 74, 114, 165, 171, 172, 176, 177, 180], "take": [36, 74, 94, 110, 114, 115, 140, 151, 153, 163, 172, 173, 180, 181, 183, 184, 187], "provid": [36, 74, 83, 92, 114, 140, 160, 172, 175, 181, 182, 187], "keyword": [36, 51, 61, 74, 82, 83, 93, 94, 95, 114, 116, 117, 118, 119, 182], "placement": [36, 51, 74, 81, 114, 118, 154, 161], "parent": [36, 74, 114, 118, 154, 158], "allow": [36, 61, 62, 74, 81, 89, 98, 100, 114, 124, 140, 158, 164, 166, 168, 172, 180, 181, 186], "possibl": [36, 51, 56, 61, 62, 74, 82, 89, 114, 125, 151, 158, 160, 163, 164, 167, 168, 172, 177, 178, 180, 181, 183, 185], "instanc": [36, 51, 61, 74, 82, 83, 114, 132, 133, 137, 142, 145, 148, 149, 150, 154, 158, 163, 164, 172, 173, 175, 177, 181, 182, 183, 184, 185], "properti": [36, 59, 74, 81, 83, 94, 114, 150, 151, 154, 158, 171, 172, 173, 175, 177], "rel": [36, 74, 89, 98, 100, 114, 124, 144, 146, 153, 158, 177, 181], "dvector": [36, 74, 81, 89, 114, 139], "must": [36, 61, 62, 74, 111, 114, 139, 142, 152, 153, 154, 163, 164, 168, 175, 177, 180, 181, 182, 183, 186], "default_fac": [36, 77, 177], "doe": [36, 61, 145, 160, 163, 168, 172, 180, 184, 187], "necessarili": [36, 62], "subtyp": 36, "abstract": [36, 94, 114, 158], "care": [36, 139, 163, 165], "str": [36, 61, 81, 100, 102, 103, 106, 110, 112, 114, 115, 131, 138, 140, 142, 145, 146, 151, 154], "indic": [36, 77, 114, 153, 163, 177, 181, 182], "refpoint_transform": 36, "conveni": [36, 61, 81, 84, 114, 179, 182], "new": [36, 74, 93, 94, 95, 104, 114, 116, 117, 118, 119, 131, 137, 138, 142, 145, 146, 151, 154, 157, 158, 163, 164, 165, 168, 172, 173, 174, 176], "present": [36, 114, 154, 160, 164], "avail": [36, 74, 89, 100, 110, 114, 158, 168, 172, 177, 180, 181, 183, 187], "give": [36, 114, 163, 167, 168, 177, 181], "current": [36, 74, 84, 96, 107, 114, 138, 172, 174, 176, 177, 178, 182], "po": [36, 118, 128], "well": [36, 108, 139, 154, 176, 182, 187], "netlist": [36, 82, 149, 150, 171, 176], "Will": [36, 110], "decor": [36, 151, 158, 182], "annot": [36, 59, 62, 63, 77, 161, 171, 177], "evalu": 36, "replac": [36, 81, 82, 142, 154, 163, 176, 183], "mark": [36, 77, 175], "go": [36, 74, 114, 156, 160, 161, 173, 175, 177, 182, 186], "_to_": 36, "cell_inst": 36, "new_nam": 36, "definit": [36, 114, 158, 166, 168, 176, 177, 178, 180, 185], "expos": [36, 61, 84, 175], "renam": 36, "nopar": [36, 94, 114], "abstract_class": [36, 94, 114], "ancestor": [36, 94, 114, 158], "up": [36, 94, 98, 100, 112, 114, 141, 146, 152, 153, 158, 163, 164, 165, 166, 172, 175, 177, 180, 181, 182, 184], "draw": [36, 59, 61, 150, 164, 166, 168, 171, 177, 182, 183], "error_msg": 36, "error": [36, 98, 100, 107, 147, 160, 163, 166, 167, 168, 172, 175, 177], "rais": [36, 61, 140, 142, 154, 175], "valueerror": [36, 61, 140, 142], "messag": [36, 74, 157, 167, 168], "pure": [36, 181], "doesn": [36, 94, 114, 172, 182], "t": [36, 42, 61, 64, 77, 94, 114, 140, 158, 160, 163, 164, 167, 172, 177, 180, 182], "dpolygon": [36, 111, 155, 177], "etc": [36, 61, 77, 110, 114, 149, 154, 158, 163, 167, 168, 177, 185], "primari": [36, 163, 181], "abc": 36, "syncronis": 36, "json": [36, 80, 98, 100, 104, 110, 113, 138, 140, 149, 150, 154, 180, 181, 183, 187], "represent": [36, 61, 81, 139, 140, 180], "sever": [36, 61, 74, 140, 158, 163, 168, 172, 176, 177, 182, 183, 184], "editor": [36, 84, 163, 164, 167, 168, 171, 173, 175, 176, 177, 183, 186, 187], "particularli": [36, 151], "figur": [36, 150, 182], "out": [36, 74, 103, 114, 145, 153, 163, 164, 167, 176, 177, 178, 181], "fluxline_width": [36, 44, 46], "fluxline_paramet": [36, 44, 89], "Or": [36, 82, 84], "consid": [36, 62, 81, 94, 110, 139, 142, 181, 182], "descend": [36, 148, 158], "common": [36, 51, 92, 164, 166, 167, 175, 183], "respect": [36, 61, 111, 112, 114, 122, 144, 155, 182], "adjust": [36, 38, 61, 172], "_port": 36, "orient": [36, 61, 154], "output_rot": [36, 42, 61], "x_max": 37, "y_max": 37, "x_end": 37, "y_left": 37, "y_right": 37, "ground_pad": 37, "ground_gap_ratio": 37, "ratio": [37, 38, 48, 74, 174, 184], "finger_length": [37, 38], "corner_r": [37, 38], "maintain": [38, 157, 167], "match": [40, 82, 83, 168, 178, 183], "contact": [40, 138], "over": [40, 61, 83, 98, 100, 114, 151, 160, 163, 175, 181, 182], "inter": [41, 42], "output": [42, 61, 100, 110, 131, 140, 142, 147, 160, 164, 171, 177, 178, 180, 181, 183, 184, 187], "chosen": [42, 54, 56, 74, 172, 178, 180], "about": [42, 75, 158, 163, 166, 167, 171, 175, 177, 187], "transmit": [42, 118], "surround": [42, 51, 154], "inter_bump_dist": [42, 61], "w": [42, 56, 61, 62, 118], "connector_a": [42, 61], "connector_b": [42, 61], "round_connector": [42, 61], "round": [42, 61, 70, 87, 90, 114, 177], "n_center_bump": [42, 61], "seri": [42, 61, 88, 93, 183], "fluxline_gap_width": [44, 46], "_fluxline_paramet": [44, 89], "hanger": 47, "coupling_length": 47, "head_length": 47, "resonator_length": 47, "total": [47, 54, 61, 71, 72, 89, 100, 114, 121, 131, 139, 180, 181], "ground_width": 47, "middl": [47, 61, 115, 176, 182], "wirebond": [48, 49], "west": [48, 90, 138], "east": [48, 90, 138], "scale": [48, 81], "a_launch": 48, "b_launcher": 48, "l": [48, 65, 159], "240": 48, "144": 48, "cell_mark": [51, 53], "kwarg": [51, 53, 56, 61, 64, 74, 81, 82, 83, 93, 94, 95, 114, 116, 117, 118, 119, 131, 133, 140, 146, 151], "wafer": [51, 81, 83, 176, 177, 185], "By": [51, 54, 81, 82, 83, 89, 140, 147, 157, 175, 176, 177, 178, 180, 185], "own": [51, 90, 110, 138, 160, 163, 166, 168, 177], "wish": [51, 163, 176], "custom": [51, 61, 77, 86, 110, 140, 161, 166, 180], "hous": 51, "encod": [51, 140], "prefer": [51, 136, 158, 161, 164, 173, 179, 180, 185], "inst": [51, 53, 132], "extend": [51, 61, 62, 114, 153, 166, 176, 177], "box_margin": 51, "window": [51, 53, 74, 138, 139, 160, 162, 164, 167, 168, 172, 173, 175, 176, 179, 183, 186], "flyover": [51, 53], "arm_length": [53, 89, 90, 124, 177, 182], "arm_width": [53, 90, 177], "ubm": 53, "arrow_numb": 53, "arrow": [53, 175], "tool": [54, 62, 94, 100, 114, 149, 164, 165, 166, 168, 172, 173, 174, 181, 182, 183, 186], "altern": [54, 56, 61, 62, 82, 103, 114, 149, 154, 163, 180, 181, 183], "shown": [54, 74, 101, 110, 149, 150, 158, 172, 175, 180], "latter": [54, 61, 82, 160], "cannot": [54, 61, 142, 177, 178], "edit": [54, 61, 62, 142, 164, 168, 171, 173, 174, 177, 186], "minim": [54, 61], "taken": [54, 62, 63, 88, 110, 114, 139, 145, 158, 171, 182], "underli": [54, 177], "equidist": 54, "n_bridg": [54, 61, 93], "600": 54, "3000": [54, 177], "smooth": [55, 133], "continu": [55, 56, 61, 62, 139, 165], "numer": 55, "optim": 55, "achiev": [55, 61, 89], "growth": 55, "relat": [55, 77, 166, 169, 177], "input_path": 56, "goe": [56, 61, 139], "last": [56, 61, 62, 77, 113, 114, 139, 176, 177], "poly_path": 56, "unless": [56, 163, 164, 167, 176], "alreadi": [56, 74, 98, 103, 110, 163, 164, 173, 176, 177], "longer": [56, 148, 151, 172], "than": [56, 61, 74, 77, 81, 114, 139, 145, 147, 149, 158, 166, 175, 177, 180, 181], "vertex": 56, "parallel": [56, 82, 117, 163, 176, 180], "polygon_path": 56, "want": [56, 81, 145, 154, 161, 163, 164, 165, 172, 175, 176, 177, 179, 180, 182, 183, 187], "choos": [56, 82, 89, 124, 164, 167, 168, 172, 173, 175, 176, 177, 178, 180, 187], "attempt": [56, 140, 149, 163], "find": [56, 84, 108, 135, 142, 146, 158, 164, 165, 167, 177], "largest": [56, 139], "zero": [56, 110, 114, 182], "independ": [56, 163, 164, 180], "n_bridges_pattern": 56, "neg": [56, 114, 140], "so": [56, 61, 82, 93, 94, 95, 110, 114, 116, 117, 118, 119, 138, 139, 153, 154, 158, 160, 163, 164, 165, 168, 172, 175, 177, 181, 183, 186], "above_spac": 56, "below_spac": 56, "right_spac": 56, "x_space": 56, "y_space": 56, "bridges_left": 56, "bridges_bottom": 56, "bridges_right": 56, "bridges_top": 56, "easili": [56, 64, 107, 133, 165, 166, 177], "old": [56, 64, 146, 147, 154, 176], "spiralresonatorrectangl": 56, "bx": [56, 61, 62], "ex": [56, 61, 62, 167], "auto_spac": 56, "manual_spac": 56, "term2": [56, 61, 62, 118], "substrat": [59, 60, 110, 111, 114, 177, 182], "e": [60, 61, 64, 81, 89, 115, 118, 140, 149, 154, 158, 160, 164, 177, 178, 179, 180, 181], "composit": [61, 158, 172, 174], "suppli": [61, 62, 83, 93, 95, 114, 116, 117, 118, 119, 138, 182], "serial": [61, 140], "from_seri": 61, "ast": [61, 142], "literal_ev": [61, 142], "node_object": 61, "node_obj": 61, "element_nam": 61, "human": [61, 166, 171], "readabl": [61, 171], "storag": [61, 172], "conform": [61, 107], "format": [61, 138, 145, 156, 180, 181, 183, 184], "class_str": 61, "parameter_dict": 61, "__str__": 61, "omit": [61, 176, 177, 182], "made": [61, 89, 148, 149, 150, 182], "perspect": 61, "rout": [61, 147, 172, 177], "As": [61, 168, 172, 175, 176, 177], "bonu": 61, "arbitrari": [61, 62, 140, 177], "next": [61, 111, 126, 127, 139, 163, 168, 172, 175, 182], "waypoint": [61, 62], "except": [61, 62, 74, 82, 140, 142, 149, 151, 154, 158, 172, 175], "collinear": 61, "back": [61, 177, 178], "pass": [61, 74, 82, 83, 93, 94, 95, 101, 114, 116, 117, 118, 119, 139, 140, 145, 146, 150, 158, 177, 182], "ab_across": 61, "across": [61, 112, 182], "evenli": 61, "preced": 61, "calcul": [61, 81, 89, 98, 100, 112, 124, 172, 177, 181], "ab_to_ab_spac": 61, "ab_to_node_clear": 61, "former": 61, "densiti": [61, 81, 131, 172], "fact": 61, "instead": [61, 64, 74, 82, 140, 142, 145, 158, 160, 163, 164, 168, 172, 177, 178, 180, 181, 182], "normal": [61, 112, 158, 160, 177], "those": [61, 140, 164, 172, 176, 178], "correct": [61, 84, 142, 158, 163, 167, 168, 177, 178], "compar": [61, 62, 140, 171, 177], "notabl": 61, "detail": [61, 92, 160, 163, 164, 168, 175, 177, 181, 183, 184], "everi": [61, 62, 113, 140, 154, 158, 161, 164, 172, 185], "done": [61, 163, 164, 165, 172, 177, 179, 180, 181, 186], "segment_length": 61, "individu": [61, 81, 82, 83, 100, 110, 114, 157, 164, 172, 182], "regular": [61, 167, 176, 182, 183], "test_waveguide_composit": [61, 175], "lym": [61, 154, 172, 175, 183], "script": [61, 74, 98, 100, 101, 103, 104, 113, 138, 154, 160, 161, 163, 164, 168, 171, 172, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187], "were": [61, 145, 154, 163], "explicitli": [61, 138, 167, 180], "implicitli": 61, "node_index": [61, 137, 142], "_created_": 61, "associ": [61, 74, 150, 175], "particular": [61, 168, 175, 177], "subscel": 61, "appear": [61, 168, 172, 173, 175, 185], "retriev": 61, "itself": [61, 163, 164, 168, 177, 181], "count": [61, 114, 132, 182], "consecut": [61, 141], "special": [61, 139, 172], "consequ": [61, 88, 149], "accumul": 61, "oni": 61, "report": [61, 82, 165], "route_funct": 61, "initial_guess": 61, "waveguide_param": 61, "lambda": 61, "f": [61, 64, 110, 112, 119, 160, 175], "more": [61, 77, 79, 82, 98, 100, 107, 110, 114, 149, 157, 158, 159, 160, 163, 164, 166, 168, 171, 172, 175, 176, 177, 180, 181, 182, 183, 184, 186], "compon": [61, 149], "tune": [61, 89, 154, 182], "weight": 61, "initi": [61, 74, 93, 94, 95, 114, 116, 117, 118, 119, 145, 153, 164, 175, 176], "reason": [61, 158, 177], "interfac": [61, 110, 114, 168, 181, 182], "snap": [61, 145], "behavior": [61, 74, 140], "unmodifi": 61, "requir": [61, 74, 145, 158, 159, 162, 163, 165, 167, 168, 172, 176, 180, 182, 183, 184, 187], "chain": 61, "iter": [61, 62, 98, 100, 140, 181], "approri": 61, "target_len": 61, "point_a": 61, "point_a_corn": 61, "point_b": 61, "point_b_corn": 61, "endpoint": [61, 62, 110, 139, 149], "enable_gui_edit": [61, 142], "gui_path": 61, "gui_path_shadow": 61, "hidden": [61, 77, 151, 158, 177], "detect": [61, 172], "tight_rout": 61, "tight": 61, "airbridge_param": 61, "radio": 62, "bent": 62, "open": [62, 87, 88, 138, 161, 163, 167, 168, 170, 172, 173, 174, 175, 176, 180, 181, 186, 187], "dpath": [62, 177], "partial": [62, 172, 173], "case": [62, 77, 82, 84, 110, 114, 138, 148, 154, 161, 163, 165, 167, 168, 171, 172, 175, 176, 177, 178, 181, 182], "guid": [62, 82, 117, 159, 160, 166, 168, 172, 182], "visibl": [62, 74, 163, 167, 168, 172, 175, 176, 177], "graphic": [62, 81, 139, 168], "due": [62, 158, 167, 187], "precis": [62, 110, 114, 166, 181], "arithmet": 62, "corner_safety_overlap": 62, "point1": 62, "point2": 62, "point3": 62, "data": [62, 77, 81, 92, 94, 110, 112, 113, 114, 145, 150, 154, 175, 177, 181, 183, 184], "v1": 62, "v2": 62, "alpha1": 62, "alpha2": 62, "corner_po": 62, "vector": [62, 139], "elem": [62, 63], "point_1": 62, "point_2": 62, "term_len": [62, 63], "face_index": [62, 63], "One": [62, 114, 144, 149, 172, 182], "waveguide_cel": 62, "annotation_lay": 62, "enough": [62, 145], "neighbor": [62, 172], "begin_shapes_rec": 62, "we": [62, 77, 81, 114, 149, 153, 154, 157, 158, 159, 164, 167, 168, 172, 175, 176, 177, 180, 182, 183, 185], "unsign": [62, 139], "maximum": [62, 74, 98, 100, 180, 181], "tline": 62, "amount": [62, 114, 139, 178, 180], "ensur": [62, 140, 158], "overlap": [62, 114, 139, 141, 149, 177], "001": [62, 100], "stop": [63, 98, 100, 139, 163, 175, 181], "radian": [63, 139], "circl": [63, 139, 175], "left_gap_inn": 63, "left_gap_out": 63, "right_gap_inn": 63, "right_gap_out": 63, "left_protect": 63, "right_protect": 63, "alpha": 63, "would": [63, 84, 140, 142, 149, 164, 165, 172, 177], "rad": 63, "141592653589793": 63, "multiwai": 64, "splitter": 64, "letter": [64, 77, 103, 146, 168], "length_extra": 64, "length_extra_sid": 64, "waveguidecoplanartcross": 64, "measur": [64, 86, 114, 121, 175, 187], "11": [64, 114, 163], "270": 64, "use_airbridg": 64, "centr": [64, 86], "bridge_dist": 64, "a_list": 64, "b_list": 64, "port_nam": 64, "c": [64, 82, 118, 158], "d": [64, 82, 114, 140, 163, 176, 180], "g": [64, 81, 140, 154, 177], "h": [64, 112, 119], "j": [64, 181], "design": [67, 68, 73, 80, 82, 85, 89, 154, 161, 166, 171, 172, 175, 181, 184, 185], "packag": [67, 84, 92, 157, 160, 163, 164, 166, 171, 177, 178, 179, 181, 185, 187], "oasi": [67, 104, 108], "devic": [67, 89, 124, 177], "research": 67, "qcd1": 67, "qcd2": 67, "qcd3": 67, "thu": [68, 73, 164, 181], "junctionnam": 68, "02": [68, 87, 89, 124], "style": [69, 70, 157, 162, 166, 177], "distinct": [69, 167, 172], "top_pad_lay": 69, "bp_height": 69, "bp_gap_x": 69, "tp_height": 69, "tp_width": 69, "big_loop_height": 69, "junction_shapes_bottom": 69, "rounding_param": 69, "shadow_shap": 69, "junction_shapes_top": 69, "include_base_metal_addit": [70, 87], "pad_height": [70, 87, 121, 128], "pad_to_pad_separ": [70, 87], "x_offset": [70, 87], "pad_rounding_radiu": [70, 87], "junction_total_length": [71, 72, 89, 114], "26": [71, 163, 167], "33": [72, 89, 114], "squidnam": 73, "loop_area": [73, 87, 89, 124], "background_color": 74, "ffffff": 74, "helper": [74, 83, 114, 130, 139, 146, 153, 164, 177, 182], "render": 74, "environ": [74, 107, 160, 163, 164, 167, 178, 180, 184, 185, 187], "layoutview": [74, 175], "cellview": [74, 175], "view": [74, 77, 82, 137, 145, 152, 164, 165, 168, 172, 175, 177, 180, 183, 186], "imag": [74, 79, 150, 160, 161, 164, 166, 174, 175, 176, 178, 180, 181, 182], "tab": [74, 140, 172, 173, 175, 176], "standalon": [74, 84, 138, 158, 162, 163, 166, 167, 176, 179], "python": [74, 84, 113, 140, 142, 143, 145, 158, 159, 160, 162, 164, 166, 168, 171, 174, 175, 176, 178, 179, 180, 181, 183, 186, 187], "mode": [74, 136, 164, 168, 173, 180, 186], "keep": [74, 158, 164, 172, 176], "scope": [74, 164], "macro": [74, 145, 154, 163, 166, 167, 168, 171, 172, 174, 176, 177, 183, 185, 186], "applic": [74, 138, 139, 173, 174, 186], "command": [74, 82, 84, 104, 113, 145, 159, 160, 161, 163, 164, 165, 174, 175, 177, 178, 180, 186], "act": [74, 112], "onc": [74, 100, 111, 136, 153, 158, 164, 168, 172, 173, 175, 176, 177, 178, 180, 182, 183, 187], "png": [74, 161], "jupyt": [74, 162], "notebook": [74, 162], "inlin": [74, 172], "wrap": [74, 75], "whether": [74, 87, 89, 98, 112, 113, 124, 138, 160, 179, 181], "background": [74, 178], "color": [74, 177, 182], "html": [74, 77, 160, 161, 167], "white": 74, "fit": [74, 175, 177], "zoom": [74, 172, 173, 175], "main": [74, 81, 100, 149, 160, 168, 171, 172, 175, 176, 177, 184, 185], "ipython": 74, "bold": [74, 172, 175], "clear": 74, "popul": [74, 81, 82, 145], "top_cell_nam": 74, "filenam": [74, 80, 108, 147, 149], "layers_set": 74, "directori": [74, 80, 103, 104, 138, 158, 160, 161, 163, 164, 165, 166, 167, 171, 175, 176, 177, 178, 183, 187], "max_siz": 74, "bigger": 74, "pixelbuff": 74, "whole": [74, 117, 173], "hierarchi": [74, 81, 82, 132, 145, 154, 158, 165, 172, 174, 175, 176], "correspondingli": 74, "viewport": 74, "aspect": [74, 89], "Not": [74, 114, 153, 162], "deprec": [74, 81, 154], "miss": [74, 136, 154, 165, 175], "ui": 74, "layerinfo": [74, 77, 110, 131, 148, 177], "default_lay": [74, 77, 171, 177], "valid": [74, 142, 159, 181], "cluster": [75, 178, 180], "process": [75, 77, 82, 93, 95, 98, 104, 110, 113, 114, 116, 117, 118, 119, 153, 163, 166, 168, 171, 174, 176, 177, 180, 181, 184], "inform": [75, 82, 110, 114, 156, 158, 168, 171, 172, 176, 177, 181, 182, 183, 187], "togeth": [75, 139, 151, 163, 182], "220": 77, "reserv": [77, 94], "127": [77, 177], "128": [77, 177], "255": [77, 177], "work": [77, 158, 160, 163, 164, 167, 168, 172, 175, 176, 177, 179, 182, 185, 187], "anoth": [77, 87, 88, 90, 140, 153, 154, 158, 163, 172, 177], "stack": [77, 114, 174, 175, 184], "bond": 77, "denot": [77, 176, 177], "manufactur": 77, "necessari": [77, 98, 154, 164, 179, 180], "deposit": [77, 110], "auxiliari": [77, 176], "field": [77, 94, 114, 142, 153, 178], "229": 77, "organis": 77, "accord": [77, 81, 110, 154, 161, 164], "www": [77, 107, 167, 180, 183], "de": [77, 112, 167], "doc": [77, 98, 151, 160, 161, 164, 171, 181, 182], "qt5": 77, "layer_sourc": 77, "flat": [77, 81, 158], "map": [77, 81, 82, 83, 149, 174, 182], "subset": 77, "minor": [77, 157], "twist": 77, "1t1_base_metal_gap": 77, "invert": [77, 80], "skip_extra": 80, "bitmap": [80, 82], "oa": [80, 81, 82, 110, 138, 154, 171, 176, 180, 183, 187], "gd": [80, 98, 100, 114, 138, 154, 171, 176, 180], "chip_nam": [80, 81], "chip_dir": 80, "alt_netlist": [80, 82, 149], "export_dir": 80, "subdirectori": [80, 168, 171], "modifi": [80, 81, 87, 88, 110, 114, 139, 164, 166, 167, 168, 174, 175, 177, 178], "mask_document": 80, "md": 80, "spec_lay": 80, "mask_graphical_rep": 80, "postfix": [81, 149, 165], "creation": [81, 153, 180], "2d": [81, 82, 138], "exact": [81, 172, 175], "minimum": [81, 98, 100, 139, 164, 181], "violat": 81, "conflict": 81, "never": 81, "factor": [81, 146], "coverag": [81, 165], "uniqu": [81, 138, 145, 149, 150, 177, 178, 184], "position_label": 81, "outsid": [81, 88, 164, 177], "dure": [81, 140, 164], "calcualt": 81, "k": [81, 149], "rigtht": 81, "90": [81, 176, 177], "what": [81, 107, 159, 175, 177, 182], "translat": [81, 89, 167], "chips_dict": 81, "overwrit": [81, 89, 160, 163, 180], "ones": [81, 146, 163, 164], "_": [81, 100, 137, 177, 182], "bbox": [81, 131], "labels_cel": 81, "row": [81, 94, 181], "column": [81, 94, 181], "c03": 81, "posixpath": [82, 110], "__w": [82, 110], "tmp": [82, 103, 160, 164, 171, 177, 178, 180, 183], "These": [82, 83, 96, 145, 158, 161, 171, 175, 176, 177, 183], "Then": [82, 154, 163, 172, 173], "entir": [82, 132, 160, 175], "switch": [82, 186], "debug": [82, 114, 147, 175, 176, 186], "limit": [82, 111, 154, 160, 167, 181, 182, 183], "concurr": 82, "cpu": [82, 165], "resourc": [82, 178, 180], "manag": [82, 137, 160, 163, 167, 168, 175, 178, 180, 187], "purpos": [82, 114, 120, 158, 164, 172, 182], "drc": [82, 138, 171, 172], "similar": [82, 153, 175, 180, 181, 182, 183], "folder": [82, 98, 100, 103, 104, 113, 160, 161, 163, 164, 165, 171, 176, 177, 178, 179, 180, 181, 183, 184, 187], "tmp_path": [82, 138, 176], "mask_layout_typ": [82, 83], "extra_face_param": [82, 83], "ident": [82, 83, 149, 150, 154, 158], "overwritten": 82, "extra_kwarg": 82, "variant_nam": 82, "complex": [82, 166, 167, 172, 181], "polymorph": 82, "here": [82, 147, 162, 168, 172, 177, 180, 185], "rest": 82, "quick_demo": [82, 164, 176], "py": [82, 98, 100, 103, 158, 160, 161, 163, 164, 165, 176, 177, 178, 179, 180, 181, 183, 187], "further": [82, 160, 168, 176, 177, 182], "qdg": 82, "o": [82, 84, 140, 163, 164, 167], "cpu_count": 82, "whichev": 82, "smaller": [82, 114, 139], "remove_guiding_shap": 82, "box_map": 82, "mask_map": 82, "nxn": 82, "mxm": 82, "mnxmn": 82, "usual": [83, 110, 112, 149, 163, 168, 175, 176, 177, 179, 180, 182], "instanti": [83, 153, 158, 164, 182], "extra_param": 83, "modul": [84, 139, 143, 146, 158, 159, 164, 165, 166, 167, 168, 171, 177, 179], "import": [84, 98, 145, 146, 150, 158, 160, 161, 164, 165, 167, 168, 171, 172, 175, 176, 177, 182, 183], "api": [84, 151, 157, 161, 164, 166, 168, 172, 173, 175, 177, 180, 181, 182, 183, 185], "usag": [84, 146, 162, 163, 166, 167, 168, 172, 174, 175, 176, 179, 180, 181, 182, 183], "db": [84, 158], "execut": [84, 98, 100, 104, 113, 135, 160, 165, 167, 175, 176, 180, 183, 184], "session": 84, "found": [84, 135, 138, 156, 160, 171, 177, 180, 181, 187], "concentr": 86, "transmon": 86, "josephson": 86, "drivelin": [86, 87, 88], "drive": [86, 87, 118], "squid_angl": 86, "angular": 86, "couplers_r": 86, "290": 86, "couplers_a": 86, "couplers_b": 86, "32": 86, "couplers_angl": 86, "0deg": 86, "340": 86, "210": 86, "couplers_width": 86, "radial": 86, "couplers_arc_amplitud": 86, "extens": [86, 112, 114, 161, 178, 181], "35": 86, "45": [86, 114], "drive_angl": 86, "drive_dist": 86, "rectangl": [87, 88, 110, 158, 172], "shunt": [87, 88], "north": [87, 88, 90], "join": [87, 88], "700": 87, "ground_gap_r": 87, "coupler_ext": 87, "150": [87, 90, 177], "coupler_r": 87, "coupler_a": 87, "coupler_offset": 87, "squid_offset": 87, "island1_ext": 87, "island1_r": 87, "island2_ext": 87, "island2_r": 87, "drive_posit": 87, "450": 87, "island1_taper_width": 87, "island1_taper_junction_width": 87, "island2_taper_width": 87, "island2_taper_junction_width": 87, "island_island_gap": 87, "70": 87, "with_squid": 87, "spline": [88, 139], "construct": [88, 104, 139, 154, 176, 182], "island_splin": 88, "island_spline_sampl": 88, "collect": [89, 138, 172, 177], "routin": 89, "beam": 89, "customari": 89, "probepoint": [89, 138], "simpli": [89, 140, 160, 164, 182], "appropri": [89, 153, 157, 158, 177], "probe_ground": 89, "probe_island": 89, "probe_island_1": 89, "probe_island_2": 89, "transf": [89, 124], "only_arm": [89, 124], "base_metal_gap_for_ebl": [89, 124], "right_sid": [89, 124], "help": [89, 124, 165, 166, 172, 175], "dcplxtran": [89, 124, 154], "rot": 89, "flux": [89, 118], "flux_corn": 89, "origin_fluxlin": 89, "origin_squid": 89, "port_common": 89, "howev": [89, 114, 164, 168, 172, 176, 177, 180], "might": [89, 98, 100, 160, 163, 167, 168, 180], "tweak": 89, "south": 90, "gap_width": [90, 182], "wne": 90, "cpl_width": [90, 119], "cpl_length": 90, "cpl_gap": 90, "102": 90, "port_width": 90, "cl_offset": 90, "island_r": 90, "pars": [93, 94, 95, 114, 116, 117, 118, 119, 142], "readi": [93, 95, 114, 116, 117, 118, 119], "co": 94, "intend": [94, 114, 182, 187], "materi": [94, 110, 114, 180, 181], "don": [94, 158, 163, 164, 167], "obei": 94, "vacuum": [94, 110, 111, 114, 182], "word": [94, 146, 168], "result": [94, 128, 138, 139, 140, 164, 178, 180, 181, 184], "matric": [94, 98, 181], "introduc": [94, 110, 114, 182], "dielectr": [94, 114, 182], "permitt": [94, 110, 114], "regist": [94, 152, 158, 170], "reset": 94, "intern": [94, 114, 153, 172, 181, 182, 183], "relev": [94, 114, 153, 181, 182], "london_penetration_depth": [94, 110], "london": [94, 110, 181], "penetr": [94, 110, 181], "depth": [94, 110, 181], "m": [94, 114, 164, 180], "xsection_source_class": 94, "schema": [94, 154], "boundari": [94, 100, 114, 181], "extra_json_data": [94, 114], "store": [94, 114, 131, 154, 176, 181, 182], "virtual": [94, 114, 164], "program": [96, 166, 173, 175, 179], "hfss": [96, 98, 181, 182, 184], "q3d": [96, 98, 181, 182, 184], "ansys_tool": [98, 181], "frequency_unit": [98, 181], "ghz": [98, 100, 181], "frequenc": [98, 100, 180, 181], "max_delta_": [98, 100, 181], "percent_error": [98, 100, 181], "percent_refin": [98, 181], "maximum_pass": [98, 100, 181], "minimum_pass": [98, 100, 181], "minimum_converged_pass": [98, 181], "sweep_en": [98, 181], "sweep_start": [98, 181], "sweep_end": [98, 181], "sweep_count": [98, 181], "101": [98, 181], "sweep_typ": [98, 100, 181], "interpol": [98, 181], "max_delta_f": [98, 181], "n_mode": [98, 181], "mesh_siz": [98, 100], "simulation_flag": [98, 181], "ansys_project_templ": 98, "integrate_energi": [98, 100, 181], "hfss_capacitance_export": [98, 181], "write": [98, 100, 104, 107, 138, 158, 160, 161, 163, 164, 165, 167, 177, 180, 182, 186, 187], "extractor": [98, 181, 184], "mesh": [98, 100, 107, 180, 181], "refin": [98, 181], "multifrequ": [98, 100, 181], "criterion": [98, 100, 181], "percentag": [98, 181], "how": [98, 114, 154, 158, 164, 167, 168, 172, 177, 178, 181, 182], "mani": [98, 114, 156, 166, 171, 172, 176, 177, 180, 181, 182], "meet": [98, 172, 181], "sweep": [98, 104, 107, 110, 154, 174, 180, 181, 184], "lowest": [98, 114, 181, 182], "highest": [98, 114, 181], "discret": [98, 181], "fast": [98, 157, 181], "eigenfrequ": [98, 181], "eigenmod": [98, 174, 184], "solv": [98, 181], "pyepr": [98, 174, 184], "maxim": 98, "templat": [98, 161, 166], "energi": [98, 100, 174, 184], "save": [98, 113, 154, 168, 177, 178, 181, 182], "json_filenam": [98, 100, 104, 113], "file_prefix": [98, 100, 104], "exit_after_run": 98, "execution_script": [98, 100], "import_and_simul": 98, "use_rel_path": 98, "batch": [98, 113, 183], "bat": [98, 104, 183], "electron": [98, 135, 181, 183, 184], "desktop": [98, 180, 181, 183, 184], "script_fold": [98, 100], "import_script": 98, "skip_error": [98, 100], "skip": [98, 100, 140], "caus": [98, 100, 115, 139, 140, 163], "carefulli": [98, 100, 157, 182], "sens": [98, 100, 173, 175], "wast": [98, 100], "bad": [98, 100], "linear_system_method": 100, "bicgstab": 100, "p_element_ord": 100, "frequency_batch": 100, "explicit": 100, "boundary_condit": 100, "workflow": [100, 107, 160, 166, 168, 172, 174, 175, 180, 184], "005": 100, "max_error_scal": 100, "max_outlier_fract": 100, "is_axisymmetr": 100, "wave_equ": [100, 181], "mg": 100, "polynomi": [100, 139], "p": [100, 137], "condit": [100, 181], "adapt": [100, 182], "fraction": 100, "outlier": 100, "bool": [100, 101, 103, 106, 112, 114, 138, 139, 148], "symmetr": 100, "big": [100, 176], "n_simul": 100, "launch": [100, 176, 177, 186], "sequenc": [100, 127, 139], "script_fil": 100, "model": [100, 112, 114, 164, 180, 181, 182], "export_script": 101, "quiet": [101, 103], "export_onli": 101, "arg": [101, 103, 131, 138, 140, 160], "dialog": [101, 168, 172, 179], "describ": [101, 114, 133, 139, 145, 159, 164, 172, 177, 179, 181, 182, 184], "remote_host": 102, "singularity_remote_path": 102, "ssh_login": 103, "kqc_remote_tmp_path": [103, 178], "detach_simul": 103, "poll_interv": 103, "export_path_basenam": 103, "local": [103, 157, 160, 161, 164, 168, 173, 175, 178], "remot": [103, 174, 180, 184], "host": [103, 162, 178, 180], "froce": 103, "q": [103, 164, 173, 179], "ssh": [103, 178], "login": 103, "hostnam": 103, "detach": [103, 178], "wait": 103, "finish": [103, 173, 178, 180], "poll": [103, 178], "interv": [103, 178], "export_tmp_dir": 103, "could": [103, 107, 140, 157, 159, 160, 177, 180, 182], "consol": [103, 147, 167, 176, 179], "source_path": 104, "content": [104, 138, 166, 168, 180], "sh": [104, 160, 178, 180, 183], "sim_class": [104, 182, 183], "sim_paramet": [104, 182], "vari": [104, 177, 180, 182], "filename_templ": 106, "filename_output": 106, "rule": [106, 114, 161, 171], "nvertic": 106, "debugid": 106, "ilevel": 106, "mtype": 106, "filltyp": 106, "xmin": 106, "ymin": 106, "xmax": 106, "ymax": 106, "conmax": 106, "edge_mesh": 106, "sym": 106, "xwidth": 106, "8000": 106, "ywidth": 106, "xcell": 106, "ycell": 106, "materials_typ": 106, "si": 106, "bt": 106, "port_ipoli": 106, "portnum": 106, "ipolygon": 106, "ivertex": 106, "port_typ": 106, "std": 106, "xcord": 106, "ycord": 106, "resist": [106, 112, 153], "react": 106, "induct": [106, 112, 119, 153, 181], "capac": 106, "control_typ": 106, "v": [106, 157], "dbu": [106, 107, 108, 110, 111, 131], "fill_typ": [106, 107], "poli": 106, "detailed_reson": 107, "lower_accuraci": 107, "ab": 107, "staircas": 107, "simulation_safeti": 107, "son": [107, 183], "sonnetsoftwar": 107, "download": [107, 160, 164, 167], "techdoc": 107, "enhanced_resonance_detection_featur": 107, "pdf": 107, "fine": [107, 151], "coars": 107, "faster": [107, 154], "less": [107, 158], "accur": 107, "good": [107, 176], "everyth": [107, 167, 168, 172, 177], "output_format": [108, 145], "intersect": 108, "input_oa": 110, "output_oa": 110, "cut1": 110, "cut2": 110, "process_path": 110, "kqc_process": [110, 187], "parameters_path": 110, "plugin": [110, 137, 152, 159, 187], "down": [110, 112, 114, 172, 173, 175, 177], "cut": [110, 187], "output_path": 110, "pathlib": 110, "pyacor": 110, "post_processing_funct": 110, "callabl": [110, 115], "oxidise_layers_funct": 110, "_oxidise_lay": 110, "ma_permitt": 110, "ms_permitt": 110, "sa_permitt": 110, "ma_thick": 110, "ms_thick": 110, "sa_thick": 110, "vertical_cul": 110, "mer_box": 110, "magnification_ord": 110, "p1": [110, 114, 187], "p2": [110, 114, 187], "perform": [110, 160, 164, 180, 181], "oxid": 110, "expect": [110, 157], "signatur": 110, "pyhint": 110, "air": 110, "thick": [110, 114, 182], "cull": 110, "retain": 110, "_mer": 110, "suffix": [110, 111, 138, 150], "increas": [110, 127, 160, 180], "magnif": [110, 172], "accomod": 110, "spacial": 110, "10x": 110, "100x": 110, "thin": [110, 114, 182], "sort_kei": [110, 140], "sort": [110, 140], "pick": 110, "tie": 110, "break": [110, 157, 160], "slot": 110, "cut_label": 110, "width_ratio": 110, "visualis": 110, "request": [110, 147, 154, 160, 178, 180], "xsection_cut": 110, "_1": 110, "_2": 110, "recommend": [110, 167, 172, 176, 180, 181], "differenti": 110, "multipli": 110, "dim": 111, "term": [111, 114, 165, 181, 182], "scalar": [111, 114], "z": [111, 114, 160, 186], "vertical_dimens": 111, "metal_edge_dimens": 111, "partit": [111, 114, 180], "domain": [111, 114, 182], "expans": [111, 114, 139, 153], "later": [111, 129, 154, 165, 168, 177], "databas": [111, 139, 141, 185], "sign": 111, "metal_region": [111, 128], "etch_region": 111, "awai": [111, 139, 142, 177], "reactanc": [112, 153], "renorm": [112, 181], "excit": [112, 181], "potenti": [112, 177], "ideal": 112, "rlc": [112, 181], "lump": [112, 114, 181, 182], "real": 112, "ohm": 112, "omega": 112, "imaginari": 112, "henri": 112, "farad": 112, "epr": [112, 181], "signal_loc": [112, 181, 182], "ground_loc": [112, 181, 182], "signal_lay": [112, 153], "deembed_len": [112, 153, 181], "embed": [112, 163], "micron": 112, "port_siz": [112, 114], "repeat_for_each": 113, "data_file_prefix": 113, "basic": [114, 163, 171, 172, 173, 174, 175, 185], "built": [114, 160, 161, 168, 172, 177, 182, 186], "principl": [114, 142], "imagin": [114, 182], "surfac": [114, 181, 182], "touch": [114, 177], "face_stack": [114, 182], "lower_box_height": [114, 182], "account": [114, 144, 145, 158, 178, 180, 182], "pile": [114, 182], "That": [114, 181, 182], "leav": [114, 182], "substrate_height": [114, 182], "chip_dist": [114, 182], "metal_height": [114, 182], "infinit": [114, 140, 182], "sheet": [114, 182], "insul": 114, "dielectric_height": [114, 182], "grid_siz": [114, 141], "expand": [114, 139], "resolut": 114, "forc": [114, 163, 181], "list_or_const": 114, "constant": [114, 158, 181], "ordin": 114, "short": [114, 172, 185], "duplic": [114, 139, 148, 163], "ascend": 114, "simplifi": 114, "polygon_toler": 114, "shrink": 114, "closer": [114, 139, 145], "minimum_point_spac": 114, "z0": 114, "z1": 114, "split": [114, 139], "opp_i": 114, "__init__": 114, "hole": [114, 141], "larger": [114, 180], "mention": [114, 160], "subtract_kei": 114, "engin": 114, "infer": [114, 138, 154], "brought": [114, 153], "signal_edg": 114, "ground_edg": 114, "gds_file": 114, "material_dict": 114, "delet": [114, 146, 148, 168, 172], "access": [114, 167, 172, 174], "append": [114, 139, 147, 149, 150, 182], "ground_grid_box": 114, "use_port": 114, "off": [114, 175], "wave": [114, 182], "upper_box_height": 114, "fixed_level_stackup": 114, "375": 114, "substrate_box": 114, "correspondingsubstr": 114, "fulli": [114, 164, 181], "substrate_materi": 114, "electromagnet": 114, "dielectric_loss_tang": 114, "8": [114, 150, 151, 158, 160, 163, 164], "ground_metal_height": 114, "affect": [114, 157, 166, 180], "signal_metal_height": 114, "airbridge_height": 114, "dielectric_materi": 114, "stub": [114, 119], "vertical_over_etch": 114, "hollow_tsv": 114, "hollow": 114, "constructor": [114, 140, 182], "tls_layer_thick": 114, "tl": [114, 181], "ma": 114, "sa": 114, "tls_layer_materi": 114, "tls_sheet_approxim": 114, "approxim": 114, "element_class": 115, "ignore_port": [115, 182], "transformation_from_cent": 115, "formul": 115, "xs1": 116, "xs2": 116, "cpw_length": 117, "n_guid": 117, "guide_face_id": 117, "add_bump": 117, "port_termination_end": 117, "use_edge_port": 117, "etch_whole_opposite_fac": 117, "qubit_cel": 118, "center_x": 118, "center_i": 118, "wn": [118, 177], "en": 118, "sw": [118, 138], "se": [118, 138], "nw": [118, 138], "ne": [118, 138], "enable_flux_lin": 118, "enable_drive_lin": 118, "enable_transmission_lin": 118, "66": 119, "junction_induct": 119, "35e": 119, "junction_capacit": 119, "16": [119, 177], "num_cross": 122, "cross_width": 122, "cross_length": 122, "cross_spac": 122, "cross_box_dist": 122, "stripe_width": 126, "stripe_length": [126, 127], "stripe_spac": [126, 127], "min_stripe_width": 127, "stripe_step": 127, "widen": 127, "pads_region": 128, "pad_spacing_x": 128, "pad_spacing_i": 128, "connect_pad": 128, "refpoint_prefix": 128, "refpoint_dist": 128, "resembl": 129, "fenc": 129, "profil": [129, 178], "tsv_array_form": 129, "tileoutputreceiv": 131, "handl": [131, 158, 172, 177, 180, 184], "tilingprocessor": 131, "brief": [131, 137], "ix": 131, "ii": 131, "tile": 131, "obj": [131, 139], "clip": 131, "layer_info": 131, "rho": 131, "frac": 131, "pcell_class": 132, "isinst": 132, "pcell_declar": 132, "coupler_typ": 133, "element_kei": 133, "useless": 133, "accept": [133, 142, 157, 181], "latest": [135, 160, 164, 167, 183], "instal": [135, 136, 160, 162, 166, 171, 173, 177, 179, 180, 183, 184, 186, 187], "check": [136, 140, 163, 164, 167, 171, 177, 181, 186], "upgrad": [136, 163, 166], "stand": [136, 171, 184], "alon": [136, 171, 184], "pip": [136, 163, 164, 167, 179, 180, 183], "sync": [136, 164, 180], "venv": [136, 163, 164], "startup": [136, 142], "button": [137, 173, 175], "prio": 137, "__": 137, "pluginfactori": 137, "flip_fac": 138, "default_probe_typ": 138, "default_probe_suffix": 138, "millimet": 138, "tell": 138, "site": [138, 163, 167], "entri": [138, 154, 168, 176], "cell_fil": 138, "dir_nam": 138, "tri": [138, 160], "write_versions_fil": 138, "commit_refer": [138, 180], "git": [138, 157, 162, 163, 164, 167, 171], "revis": [138, 185], "written": [138, 183], "export_machine_vers": 138, "filepath": 138, "maco": [138, 162, 167, 173], "linux": [138, 160, 162, 164, 167, 173, 176, 180, 183], "drc_script": 138, "lydrc": 138, "name_drc_report": 138, "lyrdb": 138, "1t1_waveguide_path": 139, "2b1_waveguide_path": 139, "sum": 139, "children": 139, "objectinstpath": 139, "outward": 139, "whenev": [139, 157, 175], "elimin": [139, 140], "simple_polygon": 139, "polygon_point": 139, "counterclockwis": 139, "283185307179586": 139, "pi": 139, "control_point": 139, "sample_point": 139, "startpoint": 139, "uniformli": 139, "cubic": 139, "subsequ": 139, "slide": 139, "unlik": 139, "bezier": 139, "guarante": [139, 140, 168], "kaihuai": 139, "qin": 139, "matrix": [139, 174, 180, 184], "proceed": 139, "pacif": 139, "98": 139, "sixth": 139, "confer": 139, "singapor": 139, "1998": 139, "pp": 139, "37": 139, "43": [139, 158], "doi": [139, 156], "1109": 139, "pccga": 139, "731996": 139, "least": [139, 142, 154, 167, 172, 175, 177], "uniform": [139, 182], "prepend": 139, "tangent": 139, "third": [139, 180], "fourth": 139, "skipkei": 140, "ensure_ascii": 140, "check_circular": 140, "allow_nan": 140, "jsonencod": 140, "sensibl": 140, "typeerror": 140, "incom": 140, "ascii": 140, "charact": [140, 144, 157], "escap": 140, "prevent": 140, "overflowerror": 140, "nan": 140, "infin": 140, "compliant": 140, "javascript": 140, "decod": 140, "regress": 140, "dai": 140, "basi": [140, 158, 182], "member": 140, "pretti": 140, "print": [140, 145, 146, 147, 176], "newlin": 140, "item_separ": 140, "key_separ": 140, "whitespac": 140, "serializ": 140, "def": [140, 177, 182], "try": [140, 164, 167], "let": [140, 164, 177], "jsondecod": 140, "object_hook": 140, "rpc": 140, "hint": 140, "object_pairs_hook": 140, "prioriti": [140, 172], "parse_float": 140, "num_str": 140, "datatyp": 140, "decim": 140, "parse_int": 140, "parse_const": 140, "invalid": 140, "encount": [140, 160], "strict": [140, 158], "context": [140, 154], "parseabl": 140, "boundbox": 141, "avoid_region": 141, "grid_step": 141, "group_n": 141, "speed": [141, 153, 165, 180], "box_siz": 142, "require_gui_editing_en": 142, "search": [142, 166], "captur": 142, "invers": 142, "treat": [142, 149, 158], "strip": 142, "liter": 142, "namespac": [142, 151], "comma": [142, 145], "multilin": 142, "waveguide_inst": 142, "usabl": 142, "x_corner": 142, "slow": [142, 175, 176], "clumsi": 142, "curat": 142, "node_editor_valid_el": 142, "kept": 142, "file_path": 143, "enum": 144, "origin_offset": 144, "layer_protect": 144, "350": 144, "print_waveguides_as_composit": 145, "add_instance_nam": 145, "refpoint_snap": 145, "grid_snap": 145, "include_import": 145, "use_create_with_refpoint": 145, "create_cod": 145, "past": 145, "statement": [145, 168], "node_param": 145, "complet": [145, 161, 164, 168, 177, 180], "flush": 146, "src_path": 146, "memori": [146, 160, 180], "_kqc_librari": 146, "class_nam": 146, "pascalcas": [146, 158], "lowercas": [146, 168], "module_nam": 146, "_to_module_nam": 146, "titl": [146, 156], "qualiti": 146, "lowest_visible_level": 147, "remove_old_handl": 147, "stdout": 147, "log": [147, 176], "logfil": 147, "monitor": 147, "handler": 147, "root": [147, 160, 165, 171, 177], "logger": 147, "warn": [147, 163], "critic": 147, "cell_list": 148, "layer_1": 148, "layer_2": 148, "layer_merg": 148, "only_el": 148, "prune": 148, "contrast": 148, "convert_to_stat": 148, "anywher": [148, 168], "net": 149, "subcircuit": [149, 150], "terminologi": [149, 166, 174], "eda": 149, "resistor": 149, "pin": [149, 164], "wire": 149, "conceptu": 149, "analog": 149, "exactli": 149, "subcircuit_id": [149, 150], "unconnect": 149, "cell_nam": [149, 150], "subcircuit_loc": 149, "_pya_typ": 149, "subcircuit_origin": 149, "breakdown": 149, "regadless": 149, "absolut": [149, 164, 177], "cell_map": 149, "internal_cel": 149, "network": 150, "networkx": 150, "graph": [150, 158, 171], "cell_typ": 150, "instance_nam": 150, "obtain": [150, 182], "with_label": 150, "with_posit": 150, "figsiz": 150, "spring": 150, "matplotlib": 150, "interact": [150, 174], "plot": 150, "param_nam": [151, 161], "param_with_default_valu": 151, "wildcard": 151, "simplic": [151, 158], "grain": 151, "pcellparameterdeclar": 151, "data_typ": 151, "plain": [151, 158, 168], "docstr": [151, 159, 161, 172], "sphinx": [151, 161], "owner": 151, "registr": [152, 177], "happen": 152, "demand": 153, "builder": [153, 182], "ground_refpoint": 153, "port_squid_a": [153, 182], "port_squid_b": [153, 182], "separate_island_internal_port": 153, "commonli": [153, 177], "export_tuned_junct": 154, "class_typ": 154, "parent_nam": 154, "tuned_junction_paramet": 154, "qb1": 154, "testarray_nw": 154, "squid_0": 154, "squid_3": 154, "testarrai": 154, "even": [154, 158, 160, 164, 175], "jsonabl": 154, "exhaust": 154, "read": [154, 160, 167, 168, 172, 177], "write_path": 154, "layer_str": 154, "visual": [154, 164, 177, 180], "again": [154, 160, 163, 175, 176], "parameter_nam": 154, "parameter_start": 154, "parameter_step": 154, "parameter_end": 154, "swept": 154, "squid_index": 154, "mirror_tran": 155, "project": [156, 158, 165, 167, 178, 180], "public": [156, 157, 160, 165], "citat": 156, "bib": 156, "zenodo": 156, "click": [156, 166, 168, 172, 174, 175, 176, 177, 186], "badg": 156, "softwar": [156, 160, 170, 180, 183], "cucurachi": 156, "daniel": 156, "guthri": 156, "andrew": 156, "inel": 156, "sinan": 156, "janzs\u00f3": 156, "d\u00e1vid": 156, "jenei": 156, "m\u00e1t\u00e9": 156, "juliusson": 156, "kristinn": 156, "kotilahti": 156, "jann": 156, "landra": 156, "alessandro": 156, "ockeloen": 156, "korppi": 156, "caspar": 156, "r\u00e4bin\u00e4": 156, "jukka": 156, "savola": [156, 181], "niko": 156, "smirnov": 156, "pavel": 156, "takala": 156, "eeli": 156, "month": 156, "jun": 156, "year": 156, "2021": 156, "publish": [156, 160], "5281": 156, "4944796": 156, "url": 156, "welcom": 157, "commun": [157, 180], "contributor": 157, "licens": [157, 181], "agreement": 157, "websit": [157, 160], "review": 157, "approv": 157, "pr": 157, "forward": [157, 180], "strategi": 157, "linear": 157, "histori": 157, "pleas": [157, 165, 169, 170, 180, 181, 182, 183], "organ": [157, 165, 175, 177], "commit": [157, 164], "meaning": [157, 177], "black": [157, 158, 159], "permit": [157, 177], "pep": [157, 158], "440": 157, "scheme": 157, "miniv": 157, "major": 157, "micro": 157, "offici": 157, "releas": [157, 160, 166], "salt": [157, 163, 164, 166, 167, 171, 177, 187], "incompat": 157, "backward": [157, 164, 187], "seriou": 157, "cosmet": 157, "explain": [158, 159, 163, 164, 172, 175, 177, 183], "diagram": 158, "oval": 158, "concret": 158, "leaf": 158, "green": [158, 175, 182], "natur": 158, "ever": 158, "live": 158, "create_cel": 158, "properli": [158, 163, 165, 168], "variabl": [158, 160, 164, 171, 175, 177, 178, 180, 181], "descriptor": 158, "hierarch": 158, "transpar": 158, "caller": 158, "default_parameter_valu": 158, "technic": [158, 177, 181], "intent": 158, "otherclass": 158, "param_a": 158, "param_b": 158, "myclass": 158, "just": [158, 160, 163, 164, 168, 177, 182], "param_c": 158, "42": 158, "param_d": 158, "41": 158, "syntax": [158, 177, 182], "bit": [158, 167, 173, 177], "revers": 158, "why": [158, 159], "bodi": 158, "divid": [158, 171, 177, 180], "kqc_library_nam": 158, "downstream": 158, "discov": 158, "convent": [158, 165, 167, 177], "comment": [159, 172, 175, 177], "someth": [159, 180], "feel": 159, "probabl": [159, 167], "rewritten": 159, "clearli": 159, "builtin": 159, "googl": 159, "dockerfil": 160, "addition": [160, 180, 182], "kl_file": 160, "md5": 160, "hash": [160, 164], "kl_hash": 160, "klayout_0": 160, "1_amd64": 160, "deb": 160, "15a26f74cf396d8a10b7985ed70ab135": 160, "ubuntu": [160, 163, 167], "quickli": 160, "m00x": 160, "volum": 160, "pwd": 160, "ghcr": 160, "io": [160, 187], "mount": 160, "run_script": 160, "nc": 160, "rx": [160, 177], "cours": [160, 177], "wd": 160, "older": [160, 164, 173, 187], "hyperv": 160, "backend": 160, "ram": 160, "1gb": 160, "runtim": 160, "entrypoint": 160, "push": [160, 178], "branch": [160, 168, 175], "pipelin": [160, 165], "pull": [160, 163], "registri": 160, "sylab": 160, "quick_start": 160, "better": [160, 165, 182], "hpc": 160, "tutori": [160, 166, 168, 174, 175], "libexec": 160, "kqclib": [160, 180], "repo": [160, 164], "ora": 160, "pem": 160, "rsa": 160, "encrypt": 160, "successfulli": [160, 163, 164, 186], "home": [160, 176], "singularity_priv": 160, "privat": [160, 165], "now": [160, 168, 175, 177], "create_link": 160, "among": [160, 166], "elmersolv": [160, 180], "elmersolver_mpi": 160, "elmergrid": [160, 180], "paraview": [160, 179, 180, 183], "symbol": [160, 163, 171, 175, 177, 178, 180], "link": [160, 163, 164, 168, 171, 175, 177, 178, 180], "rememb": [160, 163, 164, 172], "bin": [160, 178], "prepar": [160, 180], "klayout_packag": [160, 163, 164, 171, 175, 177, 178, 179, 180, 181, 183, 187], "And": [160, 177], "waveguides_sim_compar": [160, 164, 179, 180], "sure": [160, 163, 165, 168, 172, 175, 177, 178, 183, 187], "ride": 160, "python_execut": [160, 180], "subsystem": 160, "wsl": 160, "problem": [160, 163, 167, 168, 169, 181], "stuck": 160, "workload": [160, 178, 180], "simple_workload_manag": 160, "subfold": [160, 177], "kqc_tmp_path": [160, 164], "waveguides_sim_elm": [160, 180], "affor": 160, "gmsh": [160, 174, 178, 179, 183, 184], "rst": 161, "rebuild": 161, "clean": 161, "apidoc": 161, "sphinxext": 161, "make_pcell_imag": 161, "pcell_imag": 161, "markers_for_png": 161, "x_2": 161, "y_2": 161, "ruler": [161, 187], "illustr": [161, 172, 182], "satisfactori": 161, "x2": 161, "y2": 161, "setup": [162, 164, 166, 167, 168, 172, 173, 177, 178, 184, 186, 187], "prerequisit": 162, "unlink": 162, "secondari": [162, 187], "secur": [162, 180], "reproduc": 162, "pypi": [162, 171], "cli": 162, "docker": 162, "ci": [162, 165, 171], "singular": [162, 171, 178, 180], "contribut": [162, 166], "But": 163, "04": [163, 167], "lt": [163, 167], "7": [163, 164, 187], "clone": [163, 164], "quick": [163, 177], "bewar": 163, "cd": [163, 164, 165], "python3": 163, "setup_within_klayout": 163, "virtualenv": 163, "libpython": 163, "dll": 163, "known": [163, 166, 168], "issu": [163, 166, 168, 169, 187], "solut": [163, 168, 181], "downgrad": [163, 168], "similarli": [163, 165, 182, 183], "didn": 163, "xyz": 163, "reinstal": [163, 168], "realli": [163, 176], "simultan": 163, "kqc_2nd": 163, "know": [163, 167, 173], "klayout_hom": 163, "klayout_alt": 163, "mix": 163, "symlink": 163, "subsect": 163, "ln": 163, "path_to_kqcircuit": 163, "kqcircuits_script": [163, 171, 175, 176, 177], "requirements_within_klayout_unix": 163, "txt": [163, 164, 180], "pip3": 163, "becaus": [163, 175, 176], "prompt": [163, 164], "administr": 163, "privileg": 163, "homepath": [163, 167], "mklink": 163, "powershel": 163, "requirements_within_klayout_window": 163, "appdata": [163, 167, 179], "roam": 163, "lib": 163, "numpi": 163, "compil": [163, 164, 178], "shouldn": 163, "debugg": [164, 174], "autom": [164, 166, 184, 187], "suitabl": [164, 167, 181, 182], "viewer": [164, 173, 183], "compat": [164, 187], "safe": 164, "yet": [164, 172, 187], "bracket": 164, "ll": 164, "pytest": [164, 165, 171], "win": 164, "mac": [164, 176], "suppos": [164, 176, 182], "prefixless": 164, "platform": 164, "dep": 164, "core": [164, 165, 180], "upload": 164, "kqc_root_path": 164, "double_pads_sim": [164, 181], "elsewher": [164, 176], "ipynb": [164, 181], "tofu": 164, "rare": [164, 177], "verifi": [164, 176], "legitim": 164, "constraint": 164, "improv": [164, 165, 167, 187], "tox": 165, "pylint": 165, "lint": 165, "ini": 165, "framework": [165, 166, 181, 184], "num": 165, "reflect": 165, "propos": 165, "test_load_librari": 165, "test_invalid_nam": 165, "approach": [165, 168, 180, 182], "u": [165, 177], "our": [165, 168, 177], "understand": [165, 175], "unfortun": 165, "repetit": 165, "consider": 165, "cov": 165, "comprehens": 165, "happi": 165, "failur": 165, "bug": [165, 175], "fail": 165, "prior": 165, "wil": 165, "reintroduc": 165, "conftest": 165, "reduc": [166, 181], "effort": 166, "processor": 166, "instantli": 166, "exchang": 166, "dimension": [166, 181, 182], "qpu": 166, "assembl": 166, "fabric": 166, "miscellan": [166, 174, 177], "trademark": 166, "page": [166, 177, 187], "simplest": [167, 182], "instant": 167, "slightli": 167, "rather": 167, "power": [167, 173], "yourself": 167, "instruct": [167, 172], "bugfix": 167, "stabil": 167, "27": [167, 173], "13": 167, "documet": 167, "talk": 167, "mental": 167, "klayout_app": 167, "bigsur": 167, "setuptool": 167, "_distutils_hack": 167, "v52": 167, "v57": 167, "sometim": [167, 175], "dir": 167, "__path__": 167, "easiest": [168, 177], "migrat": 168, "uninstal": 168, "recent": 168, "menu": [168, 173, 174, 175, 177, 185], "panel": [168, 172, 173, 174, 177], "drag": [168, 172, 173, 175, 186], "press": [168, 172, 173, 175], "f2": [168, 172, 173], "underscor": 168, "restart": [168, 172, 173, 175, 186], "f5": [168, 175, 176], "my": 168, "my_el": 168, "myelement": [168, 177], "capit": 168, "ctrl": 168, "reload": [168, 172, 174, 177], "drop": [168, 172, 173, 186], "canva": 168, "my_packag": 168, "safest": 168, "quirk": 168, "broken": 168, "earlier": 168, "reloc": 168, "behind": 168, "tqdm": 168, "question": 169, "idea": 169, "discuss": 169, "polici": 170, "high": [171, 187], "pictur": 171, "console_script": 171, "mainli": [171, 177, 182], "meant": [171, 177], "variou": 171, "check_layer_prop": 171, "against": 171, "create_element_from_path": [171, 177], "gdiff": 171, "netlist_as_graph": 171, "oas2dxf": 171, "dxf": 171, "mostli": [172, 177], "highlight": 172, "navig": [172, 173], "shift": [172, 173, 175, 176], "block": [172, 177], "toolbox": 172, "toolbar": [172, 173], "evok": 172, "anim": 172, "bring": 172, "few": [172, 180], "situat": 172, "accid": 172, "confirm": 172, "del": 172, "video": 172, "flexibl": [172, 182], "advanc": [172, 175], "enter": 172, "export_cells_as_cod": 172, "nearbi": 172, "hardcod": [172, 177], "nice": 172, "x_port_a": 172, "x_port_a_corn": 172, "anywai": [172, 177], "unhid": [172, 173], "1t1_ground_grid": 172, "arrang": 172, "minut": 172, "anyth": 172, "moment": 173, "quit": 173, "shortcut": 173, "ok": 173, "chiplibrari": 173, "mous": 173, "scroll": [173, 187], "littl": 173, "esc": 173, "hotkei": 174, "introduct": 174, "samplehold": 174, "particip": [174, 184], "demo_placing_a_pcel": 175, "plai": 175, "exclam": 175, "often": [175, 177], "task": [175, 180, 186], "toggl": 175, "icon": 175, "breakpoint": 175, "red": 175, "f9": 175, "stage": 175, "pop": 175, "cancel": 175, "asterisk": 175, "caught": 175, "unrespons": 175, "heavi": 175, "though": 175, "abl": 175, "demo_pya_bas": 175, "test_wgc_airbridg": 175, "learn": 175, "photomask": 176, "product": 176, "effici": [176, 180], "observ": 176, "multiprocess": 176, "test_mask": 176, "de1": 176, "roughli": 176, "logging_setup": 176, "spcifi": 176, "de2": 176, "5700": 176, "dt1": 176, "qf1": 176, "my_chip": 176, "mcf": 176, "notic": 176, "proper": 176, "complic": [176, 180, 186], "mdemo": 176, "ch2": 176, "45000": 176, "30000": 176, "ch1": 176, "sx1": 176, "jt1": 176, "ac1": 176, "st1": 176, "jt2": 176, "65000": 176, "interest": 176, "fragment": 176, "fragmet": 176, "centerd": 176, "still": 176, "exploit": 176, "tip": 177, "trick": 177, "unlock": 177, "myelement2": 177, "offer": [177, 181], "nicer": 177, "kind": 177, "myqubit": 177, "my_qubit": 177, "rubi": [177, 187], "hide": 177, "simplecross": 177, "hold": 177, "len1": 177, "len2": 177, "cross_poli": 177, "simple_cross": 177, "scratch": 177, "especi": 177, "explan": [177, 178], "newchip1": 177, "default_samplehold": 177, "half_width": 177, "cross_cel": 177, "new_chip1": 177, "rf16": 177, "12000": 177, "refpoint_nam": 177, "cap_refpoint": 177, "wn_port": 177, "wn_port_corn": 177, "port_b_corn": 177, "evolv": 177, "perhap": 177, "come": 177, "someel": 177, "refpoint_of_some_el": 177, "existing_ref": 177, "everywher": 177, "something_port": 177, "something_port_corn": 177, "wherev": 177, "logic": [177, 181], "hard": 177, "tree": 177, "strictli": 177, "aptli": 177, "wo": 177, "laid": 177, "encompass": 177, "plu": 177, "groud": 177, "formula": 177, "intuit": 177, "2nd": 177, "indium_bump": 177, "swap": 177, "layer_config_path": 177, "simpler": 177, "x_base_metal_gap_wo_grid": 177, "x_ground_grid_avoid": 177, "133": 177, "x_port": 177, "154": 177, "x_new_lay": 177, "999": 177, "new_lay": 177, "900": 177, "although": 177, "newli": 177, "default_layer_prop": 177, "rm": 177, "rd": 177, "element_path": 177, "incorpor": 177, "pycharm": 177, "studio": 177, "vim": 177, "neovim": 177, "slurm": [178, 180], "password": 178, "openmpi": 178, "install_softwar": 178, "mpi": [178, 180], "machin": [178, 180], "send": 178, "singularity_path": 178, "bash": 178, "sbatch_paramet": [178, 180], "kqc_remote_account": [178, 180], "sim_1": 178, "sim_2": 178, "sim_n": 178, "basenam": 178, "job": 178, "sim_i_tmp_fold": 178, "nohup_runid": 178, "runid": 178, "watch": 178, "cat": 178, "shell": [179, 180], "liner": 179, "initialis": 179, "binari": 179, "admin": 179, "priviledg": 179, "elmer_help": 180, "gmsh_helper": 180, "sif": 180, "capacitancematrix": 180, "electric_potenti": 180, "pvsm": 180, "waveguides_n_guides_1": 180, "waveguides_n_guides_2": 180, "solver": [180, 181, 183], "n_worker": 180, "elmer_n_process": 180, "thread": 180, "openmp": 180, "elmer_n_thread": 180, "benefici": 180, "relationship": 180, "independentprocess": 180, "parallelizationsecond": 180, "ofparallel": 180, "poor": 180, "sequenti": 180, "worker": 180, "floor": 180, "run_gmsh_gui": 180, "run_elmergrid": 180, "run_elm": 180, "run_paraview": 180, "omp": 180, "gmsh_n_thread": 180, "bsd": 180, "benefit": 180, "multithread": 180, "sbatch": 180, "max_threads_per_nod": 180, "max": 180, "elmer_mem": 180, "64g": 180, "elmer_tim": 180, "00": 180, "gmsh_mem": 180, "alloc": 180, "gmsh_time": 180, "project_0": 180, "bill": 180, "simulation_mesh": 180, "afterok": 180, "sent": 180, "queue": 180, "elmerfem": [180, 183], "elmercsc": [180, 183], "org": [180, 183], "suffic": 180, "scatter": 181, "snp": 181, "touchston": 181, "s1p": 181, "s2p": 181, "s3p": 181, "forth": 181, "emploi": 181, "export_paramet": [181, 183], "consult": [181, 182], "estim": 181, "mutual": 181, "c_i_j": 181, "c_i_i": 181, "lifetim": 181, "eig": 181, "eigenvalu": 181, "_energi": 181, "cv": 181, "export_epr": 181, "post_process_script": 181, "_epr": 181, "csv": 181, "accuraci": 181, "cpw_cross_section_sim": 181, "waveguides_sim_xsect": [181, 187], "xmons_direct_coupling_pyepr": 181, "pyepr_exampl": 181, "t_1": 181, "intermediate_processing_command": 181, "t1_estim": 181, "queu": 181, "electr": 181, "lossi": 181, "coher": 181, "master": 181, "thesi": 181, "2023": 181, "focus": 182, "distinguish": 182, "pre": 182, "snippet": 182, "refp": 182, "mandatori": [182, 183], "100um": 182, "port_2": 182, "port_2_corn": 182, "port_3": 182, "port_3_corn": 182, "multipurpos": 182, "airbridge_flyov": 182, "joint": 182, "parameter": [182, 183], "purpl": 182, "troubl": 182, "dynam": 182, "port_cplr0": 182, "port_cplr1": 182, "port_cplr2": 182, "revert": 182, "essenti": 182, "swissmonsimul": 182, "port_cplr0_corn": 182, "port_cplr1_corn": 182, "port_cplr2_corn": 182, "squid_port_squid_a": 182, "squid_port_squid_b": 182, "portion": 182, "variat": 182, "procedur": 182, "eas": 182, "arm_length_500": 182, "gap_sweep": 182, "ansys_execut": 183, "swissmon_simulation_output": 183, "dir_path": 183, "copy_ansys_scripts_to_directori": 183, "ironpython": 183, "gdsii": 183, "meta": 183, "occurr": 183, "copy_elmer_scripts_to_directori": 183, "incomplet": 183, "manner": 183, "dev": 183, "henc": 183, "abil": 184, "until": 184, "guidanc": 184, "summari": 185, "parameteriz": 185, "primit": 185, "emb": 185, "experiment": 185, "onto": 185, "archiv": 185, "traceabl": 185, "thought": 185, "manipul": 186, "interpret": 186, "browser": 186, "low": 187, "immedi": 187, "mitig": 187, "xsection_script": 187, "rb": 187, "pt": 187, "lightweight": 187, "klayoutmatthia": 187, "docintro": 187, "docrefer": 187, "docgrow": 187, "docetch": 187}, "objects": {"": [[1, 0, 0, "-", "kqcircuits"]], "kqcircuits": [[2, 0, 0, "-", "chips"], [26, 0, 0, "-", "defaults"], [27, 0, 0, "-", "elements"], [67, 0, 0, "-", "junctions"], [74, 0, 0, "-", "klayout_view"], [75, 0, 0, "-", "layer_cluster"], [76, 0, 0, "-", "layer_config"], [79, 0, 0, "-", "masks"], [84, 0, 0, "-", "pya_resolver"], [85, 0, 0, "-", "qubits"], [91, 0, 0, "-", "run"], [92, 0, 0, "-", "simulations"], [120, 0, 0, "-", "test_structures"], [130, 0, 0, "-", "util"]], "kqcircuits.chips": [[3, 0, 0, "-", "airbridge_crossings"], [4, 0, 0, "-", "airbridge_dc_test"], [5, 0, 0, "-", "chip"], [6, 0, 0, "-", "crossing_twoface"], [7, 0, 0, "-", "daisy_woven"], [8, 0, 0, "-", "dc_test"], [9, 0, 0, "-", "demo"], [10, 0, 0, "-", "demo_twoface"], [11, 0, 0, "-", "empty"], [12, 0, 0, "-", "junction_test"], [13, 0, 0, "-", "junction_test2"], [14, 0, 0, "-", "launchers"], [15, 0, 0, "-", "lithography_test"], [16, 0, 0, "-", "lithography_test_twoface"], [17, 0, 0, "-", "quality_factor"], [18, 0, 0, "-", "quality_factor_twoface"], [19, 0, 0, "-", "sample_holder_test"], [20, 0, 0, "-", "shaping"], [21, 0, 0, "-", "simple"], [22, 0, 0, "-", "single_xmons"], [23, 0, 0, "-", "stripes"], [24, 0, 0, "-", "tsv_test"], [25, 0, 0, "-", "xmons_direct_coupling"]], "kqcircuits.chips.airbridge_crossings": [[3, 1, 1, "", "AirbridgeCrossings"]], "kqcircuits.chips.airbridge_crossings.AirbridgeCrossings": [[3, 2, 1, "", "build"]], "kqcircuits.chips.airbridge_dc_test": [[4, 1, 1, "", "AirbridgeDcTest"]], "kqcircuits.chips.airbridge_dc_test.AirbridgeDcTest": [[4, 2, 1, "", "build"]], "kqcircuits.chips.chip": [[5, 1, 1, "", "Chip"]], "kqcircuits.chips.chip.Chip": [[5, 3, 1, "", "LIBRARY_DESCRIPTION"], [5, 3, 1, "", "LIBRARY_NAME"], [5, 3, 1, "", "LIBRARY_PATH"], [5, 2, 1, "", "can_create_from_shape_impl"], [5, 2, 1, "", "display_text_impl"], [5, 2, 1, "", "get_box"], [5, 2, 1, "", "get_filter_regions"], [5, 2, 1, "", "get_ground_bump_locations"], [5, 2, 1, "", "get_ground_tsv_locations"], [5, 2, 1, "", "get_launcher_assignments"], [5, 2, 1, "", "insert_filtered_elements"], [5, 2, 1, "", "make_grid_locations"], [5, 2, 1, "", "merge_layout_layers"], [5, 2, 1, "", "merge_layout_layers_on_face"], [5, 2, 1, "", "parameters_from_shape_impl"], [5, 2, 1, "", "post_build"], [5, 2, 1, "", "produce_frame"], [5, 2, 1, "", "produce_ground_grid"], [5, 2, 1, "", "produce_ground_on_face_grid"], [5, 2, 1, "", "produce_junction_tests"], [5, 2, 1, "", "produce_launchers"], [5, 2, 1, "", "produce_n_launchers"], [5, 2, 1, "", "produce_opt_lit_tests"], [5, 2, 1, "", "produce_structures"], [5, 2, 1, "", "transformation_from_shape_impl"]], "kqcircuits.chips.crossing_twoface": [[6, 1, 1, "", "CrossingTwoface"]], "kqcircuits.chips.crossing_twoface.CrossingTwoface": [[6, 2, 1, "", "build"]], "kqcircuits.chips.daisy_woven": [[7, 1, 1, "", "DaisyWoven"]], "kqcircuits.chips.daisy_woven.DaisyWoven": [[7, 2, 1, "", "build"]], "kqcircuits.chips.dc_test": [[8, 1, 1, "", "DcTest"]], "kqcircuits.chips.dc_test.DcTest": [[8, 2, 1, "", "build"]], "kqcircuits.chips.demo": [[9, 1, 1, "", "Demo"]], "kqcircuits.chips.demo.Demo": [[9, 2, 1, "", "build"], [9, 2, 1, "", "produce_control_lines"], [9, 2, 1, "", "produce_coupler"], [9, 2, 1, "", "produce_couplers"], [9, 2, 1, "", "produce_driveline"], [9, 2, 1, "", "produce_fluxline"], [9, 2, 1, "", "produce_junction_tests"], [9, 2, 1, "", "produce_probeline"], [9, 2, 1, "", "produce_probelines"], [9, 2, 1, "", "produce_qubit"], [9, 2, 1, "", "produce_qubits"], [9, 2, 1, "", "produce_readout_structure"], [9, 2, 1, "", "produce_readout_structures"]], "kqcircuits.chips.demo_twoface": [[10, 1, 1, "", "DemoTwoface"]], "kqcircuits.chips.demo_twoface.DemoTwoface": [[10, 2, 1, "", "build"], [10, 2, 1, "", "produce_control_lines"], [10, 2, 1, "", "produce_coupler"], [10, 2, 1, "", "produce_couplers"], [10, 2, 1, "", "produce_driveline"], [10, 2, 1, "", "produce_fluxline"], [10, 2, 1, "", "produce_probeline"], [10, 2, 1, "", "produce_probelines"], [10, 2, 1, "", "produce_qubit"], [10, 2, 1, "", "produce_qubits"], [10, 2, 1, "", "produce_readout_structure"], [10, 2, 1, "", "produce_readout_structures"]], "kqcircuits.chips.empty": [[11, 1, 1, "", "Empty"]], "kqcircuits.chips.empty.Empty": [[11, 2, 1, "", "build"], [11, 2, 1, "", "make_empty_area"]], "kqcircuits.chips.junction_test": [[12, 1, 1, "", "JunctionTest"]], "kqcircuits.chips.junction_test.JunctionTest": [[12, 2, 1, "", "build"]], "kqcircuits.chips.junction_test2": [[13, 1, 1, "", "JunctionTest2"]], "kqcircuits.chips.junction_test2.JunctionTest2": [[13, 2, 1, "", "build"], [13, 2, 1, "", "coerce_parameters_impl"]], "kqcircuits.chips.launchers": [[14, 1, 1, "", "Launchers"]], "kqcircuits.chips.launchers.Launchers": [[14, 2, 1, "", "build"]], "kqcircuits.chips.lithography_test": [[15, 1, 1, "", "LithographyTest"]], "kqcircuits.chips.lithography_test.LithographyTest": [[15, 2, 1, "", "build"], [15, 2, 1, "", "create_pattern"]], "kqcircuits.chips.lithography_test_twoface": [[16, 1, 1, "", "LithographyTestTwoface"]], "kqcircuits.chips.lithography_test_twoface.LithographyTestTwoface": [[16, 2, 1, "", "build"], [16, 2, 1, "", "create_pattern"]], "kqcircuits.chips.quality_factor": [[17, 1, 1, "", "QualityFactor"]], "kqcircuits.chips.quality_factor.QualityFactor": [[17, 2, 1, "", "build"]], "kqcircuits.chips.quality_factor_twoface": [[18, 1, 1, "", "QualityFactorTwoface"]], "kqcircuits.chips.quality_factor_twoface.QualityFactorTwoface": [[18, 2, 1, "", "build"], [18, 2, 1, "", "produce_resonator"]], "kqcircuits.chips.sample_holder_test": [[19, 1, 1, "", "SampleHolderTest"]], "kqcircuits.chips.sample_holder_test.SampleHolderTest": [[19, 2, 1, "", "build"]], "kqcircuits.chips.shaping": [[20, 1, 1, "", "Shaping"]], "kqcircuits.chips.shaping.Shaping": [[20, 2, 1, "", "build"]], "kqcircuits.chips.simple": [[21, 1, 1, "", "Simple"]], "kqcircuits.chips.simple.Simple": [[21, 2, 1, "", "build"]], "kqcircuits.chips.single_xmons": [[22, 1, 1, "", "SingleXmons"]], "kqcircuits.chips.single_xmons.SingleXmons": [[22, 2, 1, "", "build"], [22, 3, 1, "", "launchers"], [22, 3, 1, "", "qubits_refpoints"]], "kqcircuits.chips.stripes": [[23, 1, 1, "", "Stripes"]], "kqcircuits.chips.stripes.Stripes": [[23, 2, 1, "", "build"]], "kqcircuits.chips.tsv_test": [[24, 1, 1, "", "TsvTest"]], "kqcircuits.chips.tsv_test.TsvTest": [[24, 2, 1, "", "build"], [24, 2, 1, "", "create_xsection"]], "kqcircuits.chips.xmons_direct_coupling": [[25, 1, 1, "", "XMonsDirectCoupling"]], "kqcircuits.chips.xmons_direct_coupling.XMonsDirectCoupling": [[25, 2, 1, "", "build"], [25, 2, 1, "", "produce_qubits"], [25, 2, 1, "", "produce_readout_resonator"]], "kqcircuits.elements": [[28, 0, 0, "-", "airbridge_connection"], [29, 0, 0, "-", "airbridges"], [33, 0, 0, "-", "capacitive_x_coupler"], [34, 0, 0, "-", "chip_frame"], [35, 0, 0, "-", "circular_capacitor"], [36, 0, 0, "-", "element"], [37, 0, 0, "-", "finger_capacitor_square"], [38, 0, 0, "-", "finger_capacitor_taper"], [39, 0, 0, "-", "flip_chip_connectors"], [43, 0, 0, "-", "fluxlines"], [47, 0, 0, "-", "hanger_resonator"], [48, 0, 0, "-", "launcher"], [49, 0, 0, "-", "launcher_dc"], [50, 0, 0, "-", "markers"], [54, 0, 0, "-", "meander"], [55, 0, 0, "-", "smooth_capacitor"], [56, 0, 0, "-", "spiral_resonator_polygon"], [57, 0, 0, "-", "tsvs"], [61, 0, 0, "-", "waveguide_composite"], [62, 0, 0, "-", "waveguide_coplanar"], [63, 0, 0, "-", "waveguide_coplanar_curved"], [64, 0, 0, "-", "waveguide_coplanar_splitter"], [65, 0, 0, "-", "waveguide_coplanar_straight"], [66, 0, 0, "-", "waveguide_coplanar_taper"]], "kqcircuits.elements.airbridge_connection": [[28, 1, 1, "", "AirbridgeConnection"]], "kqcircuits.elements.airbridge_connection.AirbridgeConnection": [[28, 2, 1, "", "build"]], "kqcircuits.elements.airbridges": [[30, 0, 0, "-", "airbridge"], [31, 0, 0, "-", "airbridge_multi_face"], [32, 0, 0, "-", "airbridge_rectangular"]], "kqcircuits.elements.airbridges.airbridge": [[30, 1, 1, "", "Airbridge"]], "kqcircuits.elements.airbridges.airbridge.Airbridge": [[30, 2, 1, "", "create"], [30, 3, 1, "", "default_type"], [30, 2, 1, "", "transformation_from_shape_impl"]], "kqcircuits.elements.airbridges.airbridge_multi_face": [[31, 1, 1, "", "AirbridgeMultiFace"]], "kqcircuits.elements.airbridges.airbridge_multi_face.AirbridgeMultiFace": [[31, 2, 1, "", "build"], [31, 3, 1, "", "default_type"]], "kqcircuits.elements.airbridges.airbridge_rectangular": [[32, 1, 1, "", "AirbridgeRectangular"]], "kqcircuits.elements.airbridges.airbridge_rectangular.AirbridgeRectangular": [[32, 2, 1, "", "build"], [32, 3, 1, "", "default_type"]], "kqcircuits.elements.capacitive_x_coupler": [[33, 1, 1, "", "CapacitiveXCoupler"]], "kqcircuits.elements.capacitive_x_coupler.CapacitiveXCoupler": [[33, 2, 1, "", "build"], [33, 2, 1, "", "get_sim_ports"]], "kqcircuits.elements.chip_frame": [[34, 1, 1, "", "ChipFrame"]], "kqcircuits.elements.chip_frame.ChipFrame": [[34, 2, 1, "", "build"]], "kqcircuits.elements.circular_capacitor": [[35, 1, 1, "", "CircularCapacitor"]], "kqcircuits.elements.circular_capacitor.CircularCapacitor": [[35, 2, 1, "", "build"], [35, 2, 1, "", "get_sim_ports"]], "kqcircuits.elements.element": [[36, 1, 1, "", "Element"], [36, 4, 1, "", "get_refpoints"], [36, 4, 1, "", "insert_cell_into"], [36, 4, 1, "", "resolve_face"]], "kqcircuits.elements.element.Element": [[36, 3, 1, "", "LIBRARY_DESCRIPTION"], [36, 3, 1, "", "LIBRARY_NAME"], [36, 3, 1, "", "LIBRARY_PATH"], [36, 2, 1, "", "add_element"], [36, 2, 1, "", "add_port"], [36, 2, 1, "", "add_protection"], [36, 2, 1, "", "build"], [36, 2, 1, "", "copy_port"], [36, 2, 1, "", "create"], [36, 2, 1, "", "create_cell_from_shape"], [36, 2, 1, "", "create_subtype"], [36, 2, 1, "", "create_with_refpoints"], [36, 2, 1, "", "display_text_impl"], [36, 2, 1, "", "face"], [36, 2, 1, "", "face_changer_waveguides"], [36, 2, 1, "", "get_layer"], [36, 2, 1, "", "get_refpoints"], [36, 2, 1, "", "get_schema"], [36, 2, 1, "", "get_sim_ports"], [36, 2, 1, "", "insert_cell"], [36, 2, 1, "", "left_and_right_waveguides"], [36, 2, 1, "", "pcell_params_by_name"], [36, 2, 1, "", "post_build"], [36, 2, 1, "", "produce_impl"], [36, 2, 1, "", "raise_error_on_cell"], [36, 2, 1, "", "sync_parameters"]], "kqcircuits.elements.finger_capacitor_square": [[37, 1, 1, "", "FingerCapacitorSquare"]], "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare": [[37, 2, 1, "", "add_waveguides"], [37, 2, 1, "", "build"], [37, 2, 1, "", "can_create_from_shape_impl"], [37, 2, 1, "", "cut_region"], [37, 2, 1, "", "finger_area_length"], [37, 2, 1, "", "finger_area_width"], [37, 2, 1, "", "get_ground_region"], [37, 2, 1, "", "get_sim_ports"]], "kqcircuits.elements.finger_capacitor_taper": [[38, 1, 1, "", "FingerCapacitorTaper"]], "kqcircuits.elements.finger_capacitor_taper.FingerCapacitorTaper": [[38, 2, 1, "", "build"], [38, 2, 1, "", "can_create_from_shape_impl"]], "kqcircuits.elements.flip_chip_connectors": [[40, 0, 0, "-", "flip_chip_connector"], [41, 0, 0, "-", "flip_chip_connector_dc"], [42, 0, 0, "-", "flip_chip_connector_rf"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector": [[40, 1, 1, "", "FlipChipConnector"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector.FlipChipConnector": [[40, 2, 1, "", "create_bump_connector"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc": [[41, 1, 1, "", "FlipChipConnectorDc"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc.FlipChipConnectorDc": [[41, 2, 1, "", "build"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf": [[42, 1, 1, "", "FlipChipConnectorRf"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf.FlipChipConnectorRf": [[42, 2, 1, "", "build"], [42, 2, 1, "", "get_sim_ports"]], "kqcircuits.elements.fluxlines": [[44, 0, 0, "-", "fluxline"], [45, 0, 0, "-", "fluxline_standard"], [46, 0, 0, "-", "fluxline_straight"]], "kqcircuits.elements.fluxlines.fluxline": [[44, 1, 1, "", "Fluxline"]], "kqcircuits.elements.fluxlines.fluxline.Fluxline": [[44, 2, 1, "", "coerce_parameters_impl"], [44, 2, 1, "", "create"], [44, 3, 1, "", "default_type"]], "kqcircuits.elements.fluxlines.fluxline_standard": [[45, 1, 1, "", "FluxlineStandard"]], "kqcircuits.elements.fluxlines.fluxline_standard.FluxlineStandard": [[45, 2, 1, "", "build"]], "kqcircuits.elements.fluxlines.fluxline_straight": [[46, 1, 1, "", "FluxlineStraight"]], "kqcircuits.elements.fluxlines.fluxline_straight.FluxlineStraight": [[46, 2, 1, "", "build"]], "kqcircuits.elements.hanger_resonator": [[47, 1, 1, "", "HangerResonator"]], "kqcircuits.elements.hanger_resonator.HangerResonator": [[47, 2, 1, "", "build"], [47, 2, 1, "", "get_sim_ports"]], "kqcircuits.elements.launcher": [[48, 1, 1, "", "Launcher"]], "kqcircuits.elements.launcher.Launcher": [[48, 2, 1, "", "build"]], "kqcircuits.elements.launcher_dc": [[49, 1, 1, "", "LauncherDC"]], "kqcircuits.elements.launcher_dc.LauncherDC": [[49, 2, 1, "", "build"]], "kqcircuits.elements.markers": [[51, 0, 0, "-", "marker"], [52, 0, 0, "-", "marker_standard"], [53, 0, 0, "-", "mask_marker_fc"]], "kqcircuits.elements.markers.marker": [[51, 1, 1, "", "Marker"]], "kqcircuits.elements.markers.marker.Marker": [[51, 2, 1, "", "create"], [51, 3, 1, "", "default_type"], [51, 2, 1, "", "get_marker_locations"], [51, 2, 1, "", "get_marker_region"], [51, 2, 1, "", "produce_geometry"]], "kqcircuits.elements.markers.marker_standard": [[52, 1, 1, "", "MarkerStandard"]], "kqcircuits.elements.markers.marker_standard.MarkerStandard": [[52, 2, 1, "", "build"]], "kqcircuits.elements.markers.mask_marker_fc": [[53, 1, 1, "", "MaskMarkerFc"]], "kqcircuits.elements.markers.mask_marker_fc.MaskMarkerFc": [[53, 2, 1, "", "build"], [53, 2, 1, "", "create_cross"], [53, 2, 1, "", "get_marker_locations"], [53, 2, 1, "", "get_marker_region"]], "kqcircuits.elements.meander": [[54, 1, 1, "", "Meander"]], "kqcircuits.elements.meander.Meander": [[54, 2, 1, "", "build"], [54, 2, 1, "", "can_create_from_shape_impl"], [54, 2, 1, "", "parameters_from_shape_impl"]], "kqcircuits.elements.smooth_capacitor": [[55, 1, 1, "", "SmoothCapacitor"]], "kqcircuits.elements.smooth_capacitor.SmoothCapacitor": [[55, 2, 1, "", "build"], [55, 2, 1, "", "can_create_from_shape_impl"], [55, 2, 1, "", "get_sim_ports"]], "kqcircuits.elements.spiral_resonator_polygon": [[56, 1, 1, "", "SpiralResonatorPolygon"], [56, 4, 1, "", "rectangular_parameters"]], "kqcircuits.elements.spiral_resonator_polygon.SpiralResonatorPolygon": [[56, 2, 1, "", "build"]], "kqcircuits.elements.tsvs": [[58, 0, 0, "-", "tsv"], [59, 0, 0, "-", "tsv_ellipse"], [60, 0, 0, "-", "tsv_standard"]], "kqcircuits.elements.tsvs.tsv": [[58, 1, 1, "", "Tsv"]], "kqcircuits.elements.tsvs.tsv.Tsv": [[58, 2, 1, "", "create"], [58, 3, 1, "", "default_type"]], "kqcircuits.elements.tsvs.tsv_ellipse": [[59, 1, 1, "", "TsvEllipse"]], "kqcircuits.elements.tsvs.tsv_ellipse.TsvEllipse": [[59, 2, 1, "", "create_tsv_connector"], [59, 2, 1, "", "produce_impl"]], "kqcircuits.elements.tsvs.tsv_standard": [[60, 1, 1, "", "TsvStandard"]], "kqcircuits.elements.tsvs.tsv_standard.TsvStandard": [[60, 2, 1, "", "build"]], "kqcircuits.elements.waveguide_composite": [[61, 1, 1, "", "Node"], [61, 1, 1, "", "WaveguideComposite"], [61, 4, 1, "", "produce_fixed_length_bend"]], "kqcircuits.elements.waveguide_composite.Node": [[61, 3, 1, "", "align"], [61, 3, 1, "", "angle"], [61, 2, 1, "", "deserialize"], [61, 3, 1, "", "element"], [61, 3, 1, "", "inst_name"], [61, 3, 1, "", "length_before"], [61, 3, 1, "", "length_increment"], [61, 2, 1, "", "nodes_from_string"], [61, 3, 1, "", "position"]], "kqcircuits.elements.waveguide_composite.WaveguideComposite": [[61, 2, 1, "", "build"], [61, 2, 1, "", "check_node_type"], [61, 2, 1, "", "coerce_parameters_impl"], [61, 2, 1, "", "create"], [61, 2, 1, "", "get_segment_cells"], [61, 2, 1, "", "get_segment_lengths"], [61, 2, 1, "", "produce_fixed_length_waveguide"], [61, 2, 1, "", "snap_point"]], "kqcircuits.elements.waveguide_coplanar": [[62, 1, 1, "", "WaveguideCoplanar"]], "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar": [[62, 2, 1, "", "build"], [62, 2, 1, "", "can_create_from_shape_impl"], [62, 2, 1, "", "get_corner_data"], [62, 2, 1, "", "is_continuous"], [62, 2, 1, "", "parameters_from_shape_impl"], [62, 2, 1, "", "produce_end_termination"], [62, 2, 1, "", "produce_waveguide"], [62, 2, 1, "", "transformation_from_shape_impl"]], "kqcircuits.elements.waveguide_coplanar_curved": [[63, 1, 1, "", "WaveguideCoplanarCurved"], [63, 4, 1, "", "arc"]], "kqcircuits.elements.waveguide_coplanar_curved.WaveguideCoplanarCurved": [[63, 2, 1, "", "build"], [63, 2, 1, "", "coerce_parameters_impl"], [63, 2, 1, "", "create_curve_arcs"], [63, 2, 1, "", "produce_curve_termination"]], "kqcircuits.elements.waveguide_coplanar_splitter": [[64, 1, 1, "", "WaveguideCoplanarSplitter"], [64, 4, 1, "", "t_cross_parameters"]], "kqcircuits.elements.waveguide_coplanar_splitter.WaveguideCoplanarSplitter": [[64, 2, 1, "", "build"]], "kqcircuits.elements.waveguide_coplanar_straight": [[65, 1, 1, "", "WaveguideCoplanarStraight"]], "kqcircuits.elements.waveguide_coplanar_straight.WaveguideCoplanarStraight": [[65, 2, 1, "", "build"]], "kqcircuits.elements.waveguide_coplanar_taper": [[66, 1, 1, "", "WaveguideCoplanarTaper"]], "kqcircuits.elements.waveguide_coplanar_taper.WaveguideCoplanarTaper": [[66, 2, 1, "", "build"]], "kqcircuits.junctions": [[68, 0, 0, "-", "junction"], [69, 0, 0, "-", "manhattan"], [70, 0, 0, "-", "manhattan_single_junction"], [71, 0, 0, "-", "no_squid"], [72, 0, 0, "-", "sim"], [73, 0, 0, "-", "squid"]], "kqcircuits.junctions.junction": [[68, 1, 1, "", "Junction"]], "kqcircuits.junctions.junction.Junction": [[68, 3, 1, "", "LIBRARY_DESCRIPTION"], [68, 3, 1, "", "LIBRARY_NAME"], [68, 3, 1, "", "LIBRARY_PATH"], [68, 2, 1, "", "coerce_parameters_impl"], [68, 2, 1, "", "create"], [68, 3, 1, "", "default_type"]], "kqcircuits.junctions.manhattan": [[69, 1, 1, "", "Manhattan"]], "kqcircuits.junctions.manhattan.Manhattan": [[69, 2, 1, "", "build"], [69, 2, 1, "", "produce_contact_pads"], [69, 2, 1, "", "produce_manhattan_squid"]], "kqcircuits.junctions.manhattan_single_junction": [[70, 1, 1, "", "ManhattanSingleJunction"]], "kqcircuits.junctions.manhattan_single_junction.ManhattanSingleJunction": [[70, 2, 1, "", "build"], [70, 2, 1, "", "produce_manhattan_junction"]], "kqcircuits.junctions.no_squid": [[71, 1, 1, "", "NoSquid"]], "kqcircuits.junctions.no_squid.NoSquid": [[71, 2, 1, "", "build"]], "kqcircuits.junctions.sim": [[72, 1, 1, "", "Sim"]], "kqcircuits.junctions.sim.Sim": [[72, 2, 1, "", "build"]], "kqcircuits.junctions.squid": [[73, 1, 1, "", "Squid"]], "kqcircuits.klayout_view": [[74, 1, 1, "", "KLayoutView"], [74, 6, 1, "", "MissingUILibraryException"], [74, 4, 1, "", "resolve_default_layer_info"]], "kqcircuits.klayout_view.KLayoutView": [[74, 5, 1, "", "active_cell"], [74, 2, 1, "", "add_default_layers"], [74, 5, 1, "", "cell_view"], [74, 2, 1, "", "clear_layers"], [74, 2, 1, "", "close"], [74, 2, 1, "", "create_top_cell"], [74, 2, 1, "", "export_all_layers_bitmap"], [74, 2, 1, "", "export_layers_bitmaps"], [74, 2, 1, "", "export_pcell_png"], [74, 2, 1, "", "focus"], [74, 2, 1, "", "get_active_cell"], [74, 2, 1, "", "get_active_cell_view"], [74, 2, 1, "", "get_active_layout"], [74, 2, 1, "", "get_pixels"], [74, 2, 1, "", "insert_cell"], [74, 5, 1, "", "layout"], [74, 3, 1, "", "layout_view"], [74, 2, 1, "", "show"], [74, 5, 1, "", "top_cell"]], "kqcircuits.layer_cluster": [[75, 1, 1, "", "LayerCluster"]], "kqcircuits.layer_cluster.LayerCluster": [[75, 2, 1, "", "all_layers"], [75, 3, 1, "", "extra_layers"], [75, 3, 1, "", "face_id"], [75, 3, 1, "", "main_layers"]], "kqcircuits.layer_config": [[77, 0, 0, "-", "default_layer_config"], [78, 0, 0, "-", "example_layer_config"]], "kqcircuits.masks": [[80, 0, 0, "-", "mask_export"], [81, 0, 0, "-", "mask_layout"], [82, 0, 0, "-", "mask_set"], [83, 0, 0, "-", "multi_face_mask_layout"]], "kqcircuits.masks.mask_export": [[80, 4, 1, "", "export_bitmaps"], [80, 4, 1, "", "export_chip"], [80, 4, 1, "", "export_designs"], [80, 4, 1, "", "export_docs"], [80, 4, 1, "", "export_junction_parameters"], [80, 4, 1, "", "export_mask"], [80, 4, 1, "", "export_mask_set"], [80, 4, 1, "", "export_masks_of_face"], [80, 4, 1, "", "get_mask_layout_full_name"]], "kqcircuits.masks.mask_layout": [[81, 1, 1, "", "MaskLayout"]], "kqcircuits.masks.mask_layout.MaskLayout": [[81, 2, 1, "", "add_chips_map"], [81, 3, 1, "", "added_chips"], [81, 3, 1, "", "align_to"], [81, 3, 1, "", "bbox_face_ids"], [81, 2, 1, "", "build"], [81, 3, 1, "", "chip_box_offset"], [81, 3, 1, "", "chip_copies"], [81, 3, 1, "", "chip_size"], [81, 3, 1, "", "chip_trans"], [81, 3, 1, "", "chips_map"], [81, 3, 1, "", "chips_map_legend"], [81, 3, 1, "", "chips_map_offset"], [81, 3, 1, "", "chips_placed_by_position_label"], [81, 3, 1, "", "covered_region_excluded_layers"], [81, 3, 1, "", "dice_width"], [81, 3, 1, "", "edge_clearance"], [81, 3, 1, "", "extra_chips"], [81, 3, 1, "", "extra_id"], [81, 2, 1, "", "face"], [81, 3, 1, "", "face_id"], [81, 2, 1, "", "insert_chip_copy_labels"], [81, 2, 1, "", "insert_chips"], [81, 3, 1, "", "layers_to_mask"], [81, 3, 1, "", "layout"], [81, 3, 1, "", "mask_export_density_layers"], [81, 3, 1, "", "mask_export_layers"], [81, 3, 1, "", "mask_marker_offset"], [81, 3, 1, "", "mask_markers_dict"], [81, 3, 1, "", "mask_name_box_margin"], [81, 3, 1, "", "mask_name_offset"], [81, 3, 1, "", "mask_name_scale"], [81, 3, 1, "", "mask_text_scale"], [81, 3, 1, "", "mirror_labels"], [81, 3, 1, "", "name"], [81, 2, 1, "", "overwrite_chips_by_position_label"], [81, 2, 1, "", "position_label_to_two_coordinates"], [81, 3, 1, "", "remove_chips"], [81, 3, 1, "", "submasks"], [81, 3, 1, "", "text_margin"], [81, 3, 1, "", "top_cell"], [81, 2, 1, "", "two_coordinates_to_position_label"], [81, 3, 1, "", "version"], [81, 3, 1, "", "wafer_bottom_flat_length"], [81, 3, 1, "", "wafer_center"], [81, 3, 1, "", "wafer_rad"], [81, 3, 1, "", "wafer_top_flat_length"], [81, 3, 1, "", "with_grid"]], "kqcircuits.masks.mask_set": [[82, 1, 1, "", "MaskSet"]], "kqcircuits.masks.mask_set.MaskSet": [[82, 2, 1, "", "add_chip"], [82, 2, 1, "", "add_mask_layout"], [82, 2, 1, "", "add_multi_face_mask_layout"], [82, 2, 1, "", "build"], [82, 2, 1, "", "chips_map_from_box_map"], [82, 3, 1, "", "chips_map_legend"], [82, 2, 1, "", "export"], [82, 3, 1, "", "export_drc"], [82, 3, 1, "", "export_path"], [82, 3, 1, "", "layout"], [82, 3, 1, "", "mask_export_layers"], [82, 3, 1, "", "mask_layouts"], [82, 3, 1, "", "name"], [82, 3, 1, "", "used_chips"], [82, 3, 1, "", "version"], [82, 3, 1, "", "with_grid"]], "kqcircuits.masks.multi_face_mask_layout": [[83, 1, 1, "", "MultiFaceMaskLayout"]], "kqcircuits.masks.multi_face_mask_layout.MultiFaceMaskLayout": [[83, 2, 1, "", "add_chips_map"], [83, 3, 1, "", "face_ids"], [83, 3, 1, "", "mask_layouts"]], "kqcircuits.pya_resolver": [[84, 4, 1, "", "is_standalone_session"], [84, 4, 1, "", "klayout_executable_command"]], "kqcircuits.qubits": [[86, 0, 0, "-", "concentric_transmon"], [87, 0, 0, "-", "double_pads"], [88, 0, 0, "-", "double_pads_splines"], [89, 0, 0, "-", "qubit"], [90, 0, 0, "-", "swissmon"]], "kqcircuits.qubits.concentric_transmon": [[86, 1, 1, "", "ConcentricTransmon"]], "kqcircuits.qubits.concentric_transmon.ConcentricTransmon": [[86, 2, 1, "", "build"], [86, 2, 1, "", "get_sim_ports"]], "kqcircuits.qubits.double_pads": [[87, 1, 1, "", "DoublePads"]], "kqcircuits.qubits.double_pads.DoublePads": [[87, 2, 1, "", "build"], [87, 2, 1, "", "get_sim_ports"]], "kqcircuits.qubits.double_pads_splines": [[88, 1, 1, "", "DoublePadsSplines"]], "kqcircuits.qubits.qubit": [[89, 1, 1, "", "Qubit"]], "kqcircuits.qubits.qubit.Qubit": [[89, 3, 1, "", "LIBRARY_DESCRIPTION"], [89, 3, 1, "", "LIBRARY_NAME"], [89, 3, 1, "", "LIBRARY_PATH"], [89, 2, 1, "", "coerce_parameters_impl"], [89, 2, 1, "", "produce_fluxline"], [89, 2, 1, "", "produce_squid"]], "kqcircuits.qubits.swissmon": [[90, 1, 1, "", "Swissmon"]], "kqcircuits.qubits.swissmon.Swissmon": [[90, 2, 1, "", "build"], [90, 2, 1, "", "get_sim_ports"]], "kqcircuits.run": [[91, 4, 1, "", "run"]], "kqcircuits.simulations": [[93, 0, 0, "-", "airbridges_sim"], [94, 0, 0, "-", "cross_section_simulation"], [95, 0, 0, "-", "empty_simulation"], [96, 0, 0, "-", "export"], [111, 0, 0, "-", "partition_region"], [112, 0, 0, "-", "port"], [113, 0, 0, "-", "post_process"], [114, 0, 0, "-", "simulation"], [115, 0, 0, "-", "single_element_simulation"], [116, 0, 0, "-", "single_xmons_full_chip_sim"], [117, 0, 0, "-", "waveguides_sim"], [118, 0, 0, "-", "xmons_direct_coupling_full_chip_sim"], [119, 0, 0, "-", "xmons_direct_coupling_sim"]], "kqcircuits.simulations.airbridges_sim": [[93, 1, 1, "", "AirbridgesSim"]], "kqcircuits.simulations.airbridges_sim.AirbridgesSim": [[93, 2, 1, "", "build"], [93, 3, 1, "", "ports"]], "kqcircuits.simulations.cross_section_simulation": [[94, 1, 1, "", "CrossSectionSimulation"]], "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation": [[94, 3, 1, "", "LIBRARY_NAME"], [94, 2, 1, "", "build"], [94, 2, 1, "", "get_parameters"], [94, 2, 1, "", "get_schema"], [94, 2, 1, "", "get_sim_layer"], [94, 2, 1, "", "get_simulation_data"], [94, 2, 1, "", "register_cell_layers_as_sim_layers"], [94, 2, 1, "", "set_permittivity"]], "kqcircuits.simulations.empty_simulation": [[95, 1, 1, "", "EmptySimulation"]], "kqcircuits.simulations.empty_simulation.EmptySimulation": [[95, 2, 1, "", "build"], [95, 3, 1, "", "ports"]], "kqcircuits.simulations.export": [[97, 0, 0, "-", "ansys"], [99, 0, 0, "-", "elmer"], [101, 0, 0, "-", "export_and_run"], [102, 0, 0, "-", "export_singularity"], [103, 0, 0, "-", "remote_export_and_run"], [104, 0, 0, "-", "simulation_export"], [105, 0, 0, "-", "sonnet"], [108, 0, 0, "-", "util"], [109, 0, 0, "-", "xsection"]], "kqcircuits.simulations.export.ansys": [[98, 0, 0, "-", "ansys_export"]], "kqcircuits.simulations.export.ansys.ansys_export": [[98, 4, 1, "", "export_ansys"], [98, 4, 1, "", "export_ansys_bat"], [98, 4, 1, "", "export_ansys_json"]], "kqcircuits.simulations.export.elmer": [[100, 0, 0, "-", "elmer_export"]], "kqcircuits.simulations.export.elmer.elmer_export": [[100, 4, 1, "", "export_elmer"], [100, 4, 1, "", "export_elmer_json"], [100, 4, 1, "", "export_elmer_script"]], "kqcircuits.simulations.export.export_and_run": [[101, 4, 1, "", "export_and_run"]], "kqcircuits.simulations.export.export_singularity": [[102, 4, 1, "", "export_singularity"]], "kqcircuits.simulations.export.remote_export_and_run": [[103, 4, 1, "", "remote_export_and_run"], [103, 4, 1, "", "remote_run_only"]], "kqcircuits.simulations.export.simulation_export": [[104, 4, 1, "", "copy_content_into_directory"], [104, 4, 1, "", "cross_sweep_simulation"], [104, 4, 1, "", "export_simulation_oas"], [104, 4, 1, "", "get_post_process_command_lines"], [104, 4, 1, "", "sweep_simulation"]], "kqcircuits.simulations.export.sonnet": [[106, 0, 0, "-", "parser"], [107, 0, 0, "-", "sonnet_export"]], "kqcircuits.simulations.export.sonnet.parser": [[106, 4, 1, "", "apply_template"], [106, 4, 1, "", "box"], [106, 4, 1, "", "control"], [106, 4, 1, "", "polygon_head"], [106, 4, 1, "", "polygons"], [106, 4, 1, "", "port"], [106, 4, 1, "", "refplane"], [106, 4, 1, "", "refplanes"], [106, 4, 1, "", "symmetry"], [106, 4, 1, "", "via"]], "kqcircuits.simulations.export.sonnet.sonnet_export": [[107, 4, 1, "", "export_sonnet"], [107, 4, 1, "", "export_sonnet_son"], [107, 4, 1, "", "poly_and_edge_indices"]], "kqcircuits.simulations.export.util": [[108, 4, 1, "", "export_layers"], [108, 4, 1, "", "find_edge_from_point_in_cell"], [108, 4, 1, "", "find_edge_from_point_in_polygons"], [108, 4, 1, "", "get_enclosing_polygon"]], "kqcircuits.simulations.export.xsection": [[110, 0, 0, "-", "xsection_export"]], "kqcircuits.simulations.export.xsection.xsection_export": [[110, 4, 1, "", "create_xsections_from_simulations"], [110, 4, 1, "", "find_layer_by_name"], [110, 4, 1, "", "free_layer_slots"], [110, 4, 1, "", "separate_signal_layer_shapes"], [110, 4, 1, "", "visualise_xsection_cut_on_original_layout"], [110, 4, 1, "", "xsection_call"]], "kqcircuits.simulations.partition_region": [[111, 1, 1, "", "PartitionRegion"], [111, 4, 1, "", "get_list_of_two"]], "kqcircuits.simulations.partition_region.PartitionRegion": [[111, 2, 1, "", "limit_box"], [111, 2, 1, "", "limit_face"]], "kqcircuits.simulations.port": [[112, 1, 1, "", "EdgePort"], [112, 1, 1, "", "InternalPort"], [112, 1, 1, "", "Port"]], "kqcircuits.simulations.port.Port": [[112, 2, 1, "", "as_dict"]], "kqcircuits.simulations.post_process": [[113, 1, 1, "", "PostProcess"]], "kqcircuits.simulations.post_process.PostProcess": [[113, 2, 1, "", "get_command_line"]], "kqcircuits.simulations.simulation": [[114, 1, 1, "", "Simulation"], [114, 4, 1, "", "get_simulation_layer_by_name"]], "kqcircuits.simulations.simulation.Simulation": [[114, 3, 1, "", "LIBRARY_NAME"], [114, 2, 1, "", "add_element"], [114, 2, 1, "", "build"], [114, 2, 1, "", "create_simulation_layers"], [114, 2, 1, "", "delete_instances"], [114, 2, 1, "", "etched_line"], [114, 2, 1, "", "face"], [114, 2, 1, "", "face_stack_list_of_lists"], [114, 2, 1, "", "face_z_levels"], [114, 2, 1, "", "from_cell"], [114, 2, 1, "", "get_layer"], [114, 2, 1, "", "get_layers"], [114, 2, 1, "", "get_parameters"], [114, 2, 1, "", "get_port_data"], [114, 2, 1, "", "get_refpoints"], [114, 2, 1, "", "get_schema"], [114, 2, 1, "", "get_simulation_data"], [114, 2, 1, "", "ground_grid_region"], [114, 2, 1, "", "insert_cell"], [114, 2, 1, "", "insert_layer"], [114, 2, 1, "", "insert_layers_between_faces"], [114, 2, 1, "", "insert_stacked_up_layers"], [114, 2, 1, "", "ith_value"], [114, 2, 1, "", "pcell_params_by_name"], [114, 3, 1, "", "ports"], [114, 2, 1, "", "produce_layers"], [114, 2, 1, "", "produce_waveguide_to_port"], [114, 2, 1, "", "region_from_layer"], [114, 2, 1, "", "simplified_region"]], "kqcircuits.simulations.single_element_simulation": [[115, 4, 1, "", "get_single_element_sim_class"]], "kqcircuits.simulations.single_xmons_full_chip_sim": [[116, 1, 1, "", "SingleXmonsFullChipSim"]], "kqcircuits.simulations.single_xmons_full_chip_sim.SingleXmonsFullChipSim": [[116, 2, 1, "", "build"]], "kqcircuits.simulations.waveguides_sim": [[117, 1, 1, "", "WaveGuidesSim"]], "kqcircuits.simulations.waveguides_sim.WaveGuidesSim": [[117, 2, 1, "", "build"], [117, 3, 1, "", "ports"], [117, 2, 1, "", "produce_ground_bumps"], [117, 2, 1, "", "produce_guides"]], "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim": [[118, 1, 1, "", "XMonsDirectCouplingFullChipSim"]], "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim": [[118, 2, 1, "", "build"], [118, 3, 1, "", "ports"], [118, 2, 1, "", "produce_launcher"], [118, 2, 1, "", "produce_launchers_SMA8"], [118, 2, 1, "", "produce_qubit"], [118, 2, 1, "", "produce_readout_resonator"], [118, 2, 1, "", "produce_waveguide"]], "kqcircuits.simulations.xmons_direct_coupling_sim": [[119, 1, 1, "", "XMonsDirectCouplingSim"]], "kqcircuits.simulations.xmons_direct_coupling_sim.XMonsDirectCouplingSim": [[119, 2, 1, "", "build"], [119, 3, 1, "", "ports"], [119, 2, 1, "", "produce_qubits"]], "kqcircuits.test_structures": [[121, 0, 0, "-", "airbridge_dc"], [122, 0, 0, "-", "cross_test"], [123, 0, 0, "-", "junction_test_pads"], [126, 0, 0, "-", "stripes_test"], [127, 0, 0, "-", "stripes_test_increasing_width"], [128, 0, 0, "-", "test_structure"], [129, 0, 0, "-", "tsv_test_pattern"]], "kqcircuits.test_structures.airbridge_dc": [[121, 1, 1, "", "AirbridgeDC"]], "kqcircuits.test_structures.airbridge_dc.AirbridgeDC": [[121, 2, 1, "", "build"]], "kqcircuits.test_structures.cross_test": [[122, 1, 1, "", "CrossTest"]], "kqcircuits.test_structures.cross_test.CrossTest": [[122, 2, 1, "", "build"]], "kqcircuits.test_structures.junction_test_pads": [[124, 0, 0, "-", "junction_test_pads"], [125, 0, 0, "-", "junction_test_pads_simple"]], "kqcircuits.test_structures.junction_test_pads.junction_test_pads": [[124, 1, 1, "", "JunctionTestPads"]], "kqcircuits.test_structures.junction_test_pads.junction_test_pads.JunctionTestPads": [[124, 2, 1, "", "coerce_parameters_impl"], [124, 2, 1, "", "create"], [124, 3, 1, "", "default_type"], [124, 2, 1, "", "produce_squid"]], "kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple": [[125, 1, 1, "", "JunctionTestPadsSimple"]], "kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple.JunctionTestPadsSimple": [[125, 2, 1, "", "build"]], "kqcircuits.test_structures.stripes_test": [[126, 1, 1, "", "StripesTest"]], "kqcircuits.test_structures.stripes_test.StripesTest": [[126, 2, 1, "", "build"]], "kqcircuits.test_structures.stripes_test_increasing_width": [[127, 1, 1, "", "StripesTestIncreasingWidth"]], "kqcircuits.test_structures.stripes_test_increasing_width.StripesTestIncreasingWidth": [[127, 2, 1, "", "build"]], "kqcircuits.test_structures.test_structure": [[128, 1, 1, "", "TestStructure"]], "kqcircuits.test_structures.test_structure.TestStructure": [[128, 3, 1, "", "LIBRARY_DESCRIPTION"], [128, 3, 1, "", "LIBRARY_NAME"], [128, 3, 1, "", "LIBRARY_PATH"], [128, 2, 1, "", "produce_etched_region"], [128, 2, 1, "", "produce_four_point_pads"], [128, 2, 1, "", "produce_pad"]], "kqcircuits.test_structures.tsv_test_pattern": [[129, 1, 1, "", "TsvTestPattern"]], "kqcircuits.test_structures.tsv_test_pattern.TsvTestPattern": [[129, 2, 1, "", "build"]], "kqcircuits.util": [[131, 0, 0, "-", "area"], [132, 0, 0, "-", "count_instances"], [133, 0, 0, "-", "coupler_lib"], [134, 0, 0, "-", "deep_delete"], [135, 0, 0, "-", "defaults_helper"], [136, 0, 0, "-", "dependencies"], [137, 0, 0, "-", "edit_node_plugin"], [138, 0, 0, "-", "export_helper"], [139, 0, 0, "-", "geometry_helper"], [140, 0, 0, "-", "geometry_json_encoder"], [141, 0, 0, "-", "groundgrid"], [142, 0, 0, "-", "gui_helper"], [143, 0, 0, "-", "import_helper"], [144, 0, 0, "-", "label"], [145, 0, 0, "-", "layout_to_code"], [146, 0, 0, "-", "library_helper"], [147, 0, 0, "-", "log_router"], [148, 0, 0, "-", "merge"], [149, 0, 0, "-", "netlist_extraction"], [150, 0, 0, "-", "netlist_graph"], [151, 0, 0, "-", "parameters"], [152, 0, 0, "-", "plugin_startup"], [153, 0, 0, "-", "refpoints"], [154, 0, 0, "-", "replace_junctions"], [155, 0, 0, "-", "symmetric_polygons"]], "kqcircuits.util.area": [[131, 1, 1, "", "AreaReceiver"], [131, 4, 1, "", "get_area_and_density"]], "kqcircuits.util.area.AreaReceiver": [[131, 2, 1, "", "put"]], "kqcircuits.util.count_instances": [[132, 4, 1, "", "count_instances_in_cell"]], "kqcircuits.util.coupler_lib": [[133, 4, 1, "", "cap_params"]], "kqcircuits.util.deep_delete": [[134, 4, 1, "", "deep_delete_all"], [134, 4, 1, "", "deep_delete_pcells"]], "kqcircuits.util.defaults_helper": [[135, 4, 1, "", "find_ansys_executable"]], "kqcircuits.util.dependencies": [[136, 4, 1, "", "install_kqc_dependencies"]], "kqcircuits.util.edit_node_plugin": [[137, 1, 1, "", "EditNodePlugin"], [137, 1, 1, "", "EditNodePluginFactory"]], "kqcircuits.util.edit_node_plugin.EditNodePlugin": [[137, 2, 1, "", "activated"], [137, 2, 1, "", "create_dialog"], [137, 2, 1, "", "deactivated"], [137, 2, 1, "", "deselect"], [137, 2, 1, "", "has_tracking_position"], [137, 2, 1, "", "mouse_click_event"], [137, 2, 1, "", "mouse_moved_event"], [137, 2, 1, "", "select"], [137, 2, 1, "", "tracking_position"], [137, 2, 1, "", "update"], [137, 2, 1, "", "update_form_from_node"], [137, 2, 1, "", "update_node_from_form"]], "kqcircuits.util.edit_node_plugin.EditNodePluginFactory": [[137, 2, 1, "", "create_plugin"]], "kqcircuits.util.export_helper": [[138, 4, 1, "", "create_or_empty_tmp_directory"], [138, 4, 1, "", "export_drc_report"], [138, 4, 1, "", "generate_probepoints_from_file"], [138, 4, 1, "", "generate_probepoints_json"], [138, 4, 1, "", "get_active_or_new_layout"], [138, 4, 1, "", "get_klayout_version"], [138, 4, 1, "", "get_simulation_directory"], [138, 4, 1, "", "open_with_klayout_or_default_application"], [138, 4, 1, "", "write_commit_reference_file"], [138, 4, 1, "", "write_export_machine_versions_file"]], "kqcircuits.util.geometry_helper": [[139, 4, 1, "", "arc_points"], [139, 4, 1, "", "bezier_points"], [139, 4, 1, "", "bspline_points"], [139, 4, 1, "", "circle_polygon"], [139, 4, 1, "", "get_angle"], [139, 4, 1, "", "get_cell_path_length"], [139, 4, 1, "", "get_direction"], [139, 4, 1, "", "get_object_path_length"], [139, 4, 1, "", "is_clockwise"], [139, 4, 1, "", "merge_points_and_match_on_edges"], [139, 4, 1, "", "point_shift_along_vector"], [139, 4, 1, "", "region_with_merged_points"], [139, 4, 1, "", "region_with_merged_polygons"], [139, 4, 1, "", "simple_region"], [139, 4, 1, "", "vector_length_and_direction"]], "kqcircuits.util.geometry_json_encoder": [[140, 1, 1, "", "GeometryJsonDecoder"], [140, 1, 1, "", "GeometryJsonEncoder"], [140, 4, 1, "", "decode_dict_as_python_obj"], [140, 4, 1, "", "encode_python_obj_as_dict"]], "kqcircuits.util.geometry_json_encoder.GeometryJsonEncoder": [[140, 2, 1, "", "default"]], "kqcircuits.util.groundgrid": [[141, 4, 1, "", "make_grid"]], "kqcircuits.util.gui_helper": [[142, 4, 1, "", "get_all_node_elements"], [142, 4, 1, "", "get_nodes_near_position"], [142, 4, 1, "", "get_valid_node_elements"], [142, 4, 1, "", "node_from_text"], [142, 4, 1, "", "node_to_text"], [142, 4, 1, "", "replace_node"]], "kqcircuits.util.import_helper": [[143, 4, 1, "", "module_from_file"]], "kqcircuits.util.label": [[144, 1, 1, "", "LabelOrigin"], [144, 4, 1, "", "produce_label"]], "kqcircuits.util.label.LabelOrigin": [[144, 3, 1, "", "BOTTOMLEFT"], [144, 3, 1, "", "BOTTOMRIGHT"], [144, 3, 1, "", "TOPLEFT"], [144, 3, 1, "", "TOPRIGHT"]], "kqcircuits.util.layout_to_code": [[145, 4, 1, "", "convert_cells_to_code"], [145, 4, 1, "", "extract_pcell_data_from_views"], [145, 4, 1, "", "get_node_params"], [145, 4, 1, "", "restore_pcells_to_views"]], "kqcircuits.util.library_helper": [[146, 4, 1, "", "delete_all_libraries"], [146, 4, 1, "", "delete_library"], [146, 4, 1, "", "element_by_class_name"], [146, 4, 1, "", "get_library_paths"], [146, 4, 1, "", "load_libraries"], [146, 4, 1, "", "to_library_name"], [146, 4, 1, "", "to_module_name"]], "kqcircuits.util.log_router": [[147, 4, 1, "", "route_log"]], "kqcircuits.util.merge": [[148, 4, 1, "", "convert_child_instances_to_static"], [148, 4, 1, "", "merge_layers"], [148, 4, 1, "", "merge_layout_layers_on_face"]], "kqcircuits.util.netlist_extraction": [[149, 4, 1, "", "export_cell_netlist"], [149, 4, 1, "", "extract_circuits"], [149, 4, 1, "", "extract_nets"]], "kqcircuits.util.netlist_graph": [[150, 4, 1, "", "draw_graph"], [150, 4, 1, "", "network_as_graph"]], "kqcircuits.util.parameters": [[151, 1, 1, "", "Param"], [151, 4, 1, "", "add_parameter"], [151, 4, 1, "", "add_parameters_from"], [151, 1, 1, "", "pdt"]], "kqcircuits.util.parameters.Param": [[151, 2, 1, "", "get_all"]], "kqcircuits.util.parameters.pdt": [[151, 3, 1, "", "TypeBoolean"], [151, 3, 1, "", "TypeDouble"], [151, 3, 1, "", "TypeInt"], [151, 3, 1, "", "TypeLayer"], [151, 3, 1, "", "TypeList"], [151, 3, 1, "", "TypeNone"], [151, 3, 1, "", "TypeShape"], [151, 3, 1, "", "TypeString"]], "kqcircuits.util.plugin_startup": [[152, 4, 1, "", "register_plugins"]], "kqcircuits.util.refpoints": [[153, 1, 1, "", "JunctionSimPort"], [153, 1, 1, "", "RefpointToEdgePort"], [153, 1, 1, "", "RefpointToInternalPort"], [153, 1, 1, "", "RefpointToSimPort"], [153, 1, 1, "", "Refpoints"], [153, 1, 1, "", "WaveguideToSimPort"]], "kqcircuits.util.refpoints.JunctionSimPort": [[153, 3, 1, "", "face"], [153, 3, 1, "", "other_refpoint"], [153, 3, 1, "", "refpoint"]], "kqcircuits.util.refpoints.RefpointToSimPort": [[153, 3, 1, "", "face"], [153, 3, 1, "", "refpoint"]], "kqcircuits.util.refpoints.Refpoints": [[153, 3, 1, "", "cell"], [153, 2, 1, "", "dict"], [153, 2, 1, "", "items"], [153, 2, 1, "", "keys"], [153, 3, 1, "", "layer"], [153, 3, 1, "", "rec_levels"], [153, 3, 1, "", "trans"], [153, 2, 1, "", "values"]], "kqcircuits.util.refpoints.WaveguideToSimPort": [[153, 3, 1, "", "a"], [153, 3, 1, "", "airbridge"], [153, 3, 1, "", "b"], [153, 3, 1, "", "face"], [153, 3, 1, "", "over_etching"], [153, 3, 1, "", "refpoint"], [153, 3, 1, "", "side"], [153, 3, 1, "", "term1"], [153, 3, 1, "", "towards"], [153, 3, 1, "", "turn_radius"], [153, 3, 1, "", "use_internal_ports"], [153, 3, 1, "", "waveguide_length"]], "kqcircuits.util.replace_junctions": [[154, 1, 1, "", "JunctionEntry"], [154, 4, 1, "", "convert_cells_to_static"], [154, 4, 1, "", "copy_one_layer_of_cell"], [154, 4, 1, "", "extract_junctions"], [154, 4, 1, "", "get_tuned_junction_json"], [154, 4, 1, "", "place_junctions"], [154, 4, 1, "", "replace_squid"], [154, 4, 1, "", "replace_squids"]], "kqcircuits.util.symmetric_polygons": [[155, 4, 1, "", "polygon_with_hsym"], [155, 4, 1, "", "polygon_with_sym"], [155, 4, 1, "", "polygon_with_vsym"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function", "5": "py:property", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"about": 0, "api": 1, "document": [1, 161, 166], "modul": [1, 2, 27, 29, 39, 43, 50, 57, 67, 76, 79, 85, 92, 96, 97, 99, 105, 109, 120, 123, 130], "content": [1, 2, 27, 29, 39, 43, 50, 57, 67, 76, 79, 85, 92, 96, 97, 99, 105, 109, 120, 123, 130], "kqcircuit": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 168, 177], "chip": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 168, 176, 177], "airbridge_cross": 3, "airbridge_dc_test": 4, "crossing_twofac": 6, "daisy_woven": 7, "dc_test": 8, "demo": 9, "demo_twofac": 10, "empti": 11, "junction_test": 12, "junction_test2": 13, "launcher": [14, 48], "lithography_test": 15, "lithography_test_twofac": 16, "quality_factor": 17, "quality_factor_twofac": 18, "sample_holder_test": 19, "shape": 20, "simpl": 21, "single_xmon": 22, "stripe": 23, "tsv_test": 24, "xmons_direct_coupl": 25, "default": 26, "element": [27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 158, 168, 172, 177, 182], "airbridge_connect": 28, "airbridg": [29, 30, 31, 32], "airbridge_multi_fac": 31, "airbridge_rectangular": 32, "capacitive_x_coupl": 33, "chip_fram": 34, "circular_capacitor": 35, "finger_capacitor_squar": 37, "finger_capacitor_tap": 38, "flip_chip_connector": [39, 40, 41, 42], "flip_chip_connector_dc": 41, "flip_chip_connector_rf": 42, "fluxlin": [43, 44, 45, 46], "fluxline_standard": 45, "fluxline_straight": 46, "hanger_reson": 47, "launcher_dc": 49, "marker": [50, 51, 52, 53], "marker_standard": 52, "mask_marker_fc": 53, "meander": 54, "smooth_capacitor": 55, "spiral_resonator_polygon": 56, "tsv": [57, 58, 59, 60], "tsv_ellips": 59, "tsv_standard": 60, "waveguide_composit": 61, "waveguide_coplanar": 62, "waveguide_coplanar_curv": 63, "waveguide_coplanar_splitt": 64, "waveguide_coplanar_straight": 65, "waveguide_coplanar_tap": 66, "junction": [67, 68, 69, 70, 71, 72, 73], "manhattan": 69, "manhattan_single_junct": 70, "no_squid": 71, "sim": 72, "squid": 73, "klayout_view": 74, "layer_clust": 75, "layer_config": [76, 77, 78], "default_layer_config": 77, "example_layer_config": 78, "mask": [79, 80, 81, 82, 83, 176], "mask_export": 80, "mask_layout": 81, "mask_set": 82, "multi_face_mask_layout": 83, "pya_resolv": 84, "qubit": [85, 86, 87, 88, 89, 90], "concentric_transmon": 86, "double_pad": 87, "double_pads_splin": 88, "swissmon": 90, "run": [91, 175, 179], "simul": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 178, 181, 182, 184], "airbridges_sim": 93, "cross_section_simul": 94, "empty_simul": 95, "export": [96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 176, 179, 180, 183], "ansi": [97, 98, 183], "ansys_export": 98, "elmer": [99, 100, 178, 180, 183], "elmer_export": 100, "export_and_run": 101, "export_singular": 102, "remote_export_and_run": 103, "simulation_export": 104, "sonnet": [105, 106, 107, 183], "parser": 106, "sonnet_export": 107, "util": [108, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 171], "xsection": [109, 110, 187], "xsection_export": 110, "partition_region": 111, "port": [112, 182], "post_process": 113, "single_element_simul": 115, "single_xmons_full_chip_sim": 116, "waveguides_sim": 117, "xmons_direct_coupling_full_chip_sim": 118, "xmons_direct_coupling_sim": 119, "test_structur": [120, 121, 122, 123, 124, 125, 126, 127, 128, 129], "airbridge_dc": 121, "cross_test": 122, "junction_test_pad": [123, 124, 125], "junction_test_pads_simpl": 125, "stripes_test": 126, "stripes_test_increasing_width": 127, "tsv_test_pattern": 129, "area": 131, "count_inst": 132, "coupler_lib": 133, "deep_delet": 134, "defaults_help": 135, "depend": [136, 164], "edit_node_plugin": 137, "export_help": 138, "geometry_help": 139, "geometry_json_encod": 140, "groundgrid": 141, "gui_help": 142, "import_help": 143, "label": 144, "layout_to_cod": 145, "library_help": 146, "log_rout": 147, "merg": 148, "netlist_extract": 149, "netlist_graph": 150, "paramet": [151, 158, 172, 177, 181], "plugin_startup": 152, "refpoint": [153, 177], "replace_junct": 154, "symmetric_polygon": 155, "cite": 156, "contribut": 157, "version": [157, 167], "architectur": 158, "pcell": 158, "librari": [158, 175, 177], "pya": 158, "resolv": 158, "code": [159, 172, 177, 187], "style": 159, "contain": 160, "cli": 160, "usag": [160, 164, 186], "docker": 160, "ci": 160, "singular": 160, "develop": [162, 163, 175], "guid": [162, 174], "setup": 163, "prerequisit": [163, 164], "python": [163, 167, 177], "sourc": 163, "instal": [163, 164, 167, 168], "unlink": 163, "updat": [163, 164], "secondari": 163, "manual": [163, 167], "linux": 163, "maco": 163, "window": 163, "klayout": [164, 167, 175, 183, 187], "standalon": 164, "standard": 164, "Not": 164, "secur": 164, "reproduc": 164, "pypi": 164, "jupyt": 164, "notebook": 164, "requir": 164, "test": 165, "unit": 165, "kqc": [166, 187], "logo": 166, "indic": 166, "tabl": 166, "known": 167, "issu": 167, "differ": 167, "packag": [167, 168], "get": 168, "start": 168, "salt": 168, "first": [168, 175], "look": 168, "around": 168, "set": 168, "up": 168, "user": [168, 174], "directori": 168, "defin": [168, 177], "custom": 168, "upgrad": 168, "remov": 168, "releas": 168, "note": 168, "support": 169, "trademark": 170, "gener": [171, 182], "structur": [171, 177], "miscellan": 171, "file": [171, 177, 187], "system": [171, 177], "hierarchi": [171, 177], "gui": [172, 183, 187], "featur": [172, 181], "us": [172, 175], "hotkei": 172, "introduct": 172, "place": 172, "modifi": [172, 176], "waveguid": 172, "edit": 172, "waveguidecomposit": 172, "node": 172, "convert": 172, "menu": 172, "command": 172, "point": 173, "click": 173, "workflow": [173, 177, 178], "tutori": [173, 176, 177], "macro": 175, "exampl": [175, 177], "interact": 175, "applic": 175, "creat": [175, 187], "new": [175, 177], "panel": 175, "access": 175, "current": 175, "activ": 175, "klayoutview": 175, "debugg": 175, "reload": 175, "basic": 176, "script": 176, "ground": 176, "grid": 176, "ad": [176, 177], "multi": 176, "face": [176, 177, 182], "composit": 176, "map": 176, "class": [177, 182], "build": 177, "an": 177, "insert": 177, "samplehold": 177, "type": 177, "layer": 177, "configur": 177, "open": 177, "from": [177, 183], "id": 177, "remot": 178, "one": 179, "line": 179, "gmsh": 180, "": 181, "matrix": 181, "capacit": 181, "eigenmod": 181, "energi": 181, "integr": 181, "particip": 181, "ratio": 181, "cross": [181, 187], "section": [181, 187], "pyepr": 181, "object": 182, "The": 182, "box": 182, "stack": 182, "subclass": 182, "singl": 182, "geometri": [182, 183], "sweep": 182, "function": 183, "extern": 184, "tool": [184, 187], "terminologi": 185, "imag": 187, "call": 187, "process": 187, "x": 187}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 58}, "alltitles": {"About": [[0, "about"]], "API documentation": [[1, "api-documentation"]], "Module contents": [[1, "module-kqcircuits"], [2, "module-kqcircuits.chips"], [27, "module-kqcircuits.elements"], [29, "module-kqcircuits.elements.airbridges"], [39, "module-kqcircuits.elements.flip_chip_connectors"], [43, "module-kqcircuits.elements.fluxlines"], [50, "module-kqcircuits.elements.markers"], [57, "module-kqcircuits.elements.tsvs"], [67, "module-kqcircuits.junctions"], [76, "module-kqcircuits.layer_config"], [79, "module-kqcircuits.masks"], [85, "module-kqcircuits.qubits"], [92, "module-kqcircuits.simulations"], [96, "module-kqcircuits.simulations.export"], [97, "module-kqcircuits.simulations.export.ansys"], [99, "module-kqcircuits.simulations.export.elmer"], [105, "module-kqcircuits.simulations.export.sonnet"], [109, "module-kqcircuits.simulations.export.xsection"], [120, "module-kqcircuits.test_structures"], [123, "module-kqcircuits.test_structures.junction_test_pads"], [130, "module-kqcircuits.util"]], "kqcircuits.chips": [[2, "kqcircuits-chips"]], "kqcircuits.chips.airbridge_crossings": [[3, "module-kqcircuits.chips.airbridge_crossings"]], "kqcircuits.chips.airbridge_dc_test": [[4, "module-kqcircuits.chips.airbridge_dc_test"]], "kqcircuits.chips.chip": [[5, "module-kqcircuits.chips.chip"]], "kqcircuits.chips.crossing_twoface": [[6, "module-kqcircuits.chips.crossing_twoface"]], "kqcircuits.chips.daisy_woven": [[7, "module-kqcircuits.chips.daisy_woven"]], "kqcircuits.chips.dc_test": [[8, "module-kqcircuits.chips.dc_test"]], "kqcircuits.chips.demo": [[9, "module-kqcircuits.chips.demo"]], "kqcircuits.chips.demo_twoface": [[10, "module-kqcircuits.chips.demo_twoface"]], "kqcircuits.chips.empty": [[11, "module-kqcircuits.chips.empty"]], "kqcircuits.chips.junction_test": [[12, "module-kqcircuits.chips.junction_test"]], "kqcircuits.chips.junction_test2": [[13, "module-kqcircuits.chips.junction_test2"]], "kqcircuits.chips.launchers": [[14, "module-kqcircuits.chips.launchers"]], "kqcircuits.chips.lithography_test": [[15, "module-kqcircuits.chips.lithography_test"]], "kqcircuits.chips.lithography_test_twoface": [[16, "module-kqcircuits.chips.lithography_test_twoface"]], "kqcircuits.chips.quality_factor": [[17, "module-kqcircuits.chips.quality_factor"]], "kqcircuits.chips.quality_factor_twoface": [[18, "module-kqcircuits.chips.quality_factor_twoface"]], "kqcircuits.chips.sample_holder_test": [[19, "module-kqcircuits.chips.sample_holder_test"]], "kqcircuits.chips.shaping": [[20, "module-kqcircuits.chips.shaping"]], "kqcircuits.chips.simple": [[21, "module-kqcircuits.chips.simple"]], "kqcircuits.chips.single_xmons": [[22, "module-kqcircuits.chips.single_xmons"]], "kqcircuits.chips.stripes": [[23, "module-kqcircuits.chips.stripes"]], "kqcircuits.chips.tsv_test": [[24, "module-kqcircuits.chips.tsv_test"]], "kqcircuits.chips.xmons_direct_coupling": [[25, "module-kqcircuits.chips.xmons_direct_coupling"]], "kqcircuits.defaults": [[26, "module-kqcircuits.defaults"]], "kqcircuits.elements": [[27, "kqcircuits-elements"]], "kqcircuits.elements.airbridge_connection": [[28, "module-kqcircuits.elements.airbridge_connection"]], "kqcircuits.elements.airbridges": [[29, "kqcircuits-elements-airbridges"]], "kqcircuits.elements.airbridges.airbridge": [[30, "module-kqcircuits.elements.airbridges.airbridge"]], "kqcircuits.elements.airbridges.airbridge_multi_face": [[31, "module-kqcircuits.elements.airbridges.airbridge_multi_face"]], "kqcircuits.elements.airbridges.airbridge_rectangular": [[32, "module-kqcircuits.elements.airbridges.airbridge_rectangular"]], "kqcircuits.elements.capacitive_x_coupler": [[33, "module-kqcircuits.elements.capacitive_x_coupler"]], "kqcircuits.elements.chip_frame": [[34, "module-kqcircuits.elements.chip_frame"]], "kqcircuits.elements.circular_capacitor": [[35, "module-kqcircuits.elements.circular_capacitor"]], "kqcircuits.elements.element": [[36, "module-kqcircuits.elements.element"]], "kqcircuits.elements.finger_capacitor_square": [[37, "module-kqcircuits.elements.finger_capacitor_square"]], "kqcircuits.elements.finger_capacitor_taper": [[38, "module-kqcircuits.elements.finger_capacitor_taper"]], "kqcircuits.elements.flip_chip_connectors": [[39, "kqcircuits-elements-flip-chip-connectors"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector": [[40, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc": [[41, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf": [[42, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf"]], "kqcircuits.elements.fluxlines": [[43, "kqcircuits-elements-fluxlines"]], "kqcircuits.elements.fluxlines.fluxline": [[44, "module-kqcircuits.elements.fluxlines.fluxline"]], "kqcircuits.elements.fluxlines.fluxline_standard": [[45, "module-kqcircuits.elements.fluxlines.fluxline_standard"]], "kqcircuits.elements.fluxlines.fluxline_straight": [[46, "module-kqcircuits.elements.fluxlines.fluxline_straight"]], "kqcircuits.elements.hanger_resonator": [[47, "module-kqcircuits.elements.hanger_resonator"]], "kqcircuits.elements.launcher": [[48, "module-kqcircuits.elements.launcher"]], "kqcircuits.elements.launcher_dc": [[49, "module-kqcircuits.elements.launcher_dc"]], "kqcircuits.elements.markers": [[50, "kqcircuits-elements-markers"]], "kqcircuits.elements.markers.marker": [[51, "module-kqcircuits.elements.markers.marker"]], "kqcircuits.elements.markers.marker_standard": [[52, "module-kqcircuits.elements.markers.marker_standard"]], "kqcircuits.elements.markers.mask_marker_fc": [[53, "module-kqcircuits.elements.markers.mask_marker_fc"]], "kqcircuits.elements.meander": [[54, "module-kqcircuits.elements.meander"]], "kqcircuits.elements.smooth_capacitor": [[55, "module-kqcircuits.elements.smooth_capacitor"]], "kqcircuits.elements.spiral_resonator_polygon": [[56, "module-kqcircuits.elements.spiral_resonator_polygon"]], "kqcircuits.elements.tsvs": [[57, "kqcircuits-elements-tsvs"]], "kqcircuits.elements.tsvs.tsv": [[58, "module-kqcircuits.elements.tsvs.tsv"]], "kqcircuits.elements.tsvs.tsv_ellipse": [[59, "module-kqcircuits.elements.tsvs.tsv_ellipse"]], "kqcircuits.elements.tsvs.tsv_standard": [[60, "module-kqcircuits.elements.tsvs.tsv_standard"]], "kqcircuits.elements.waveguide_composite": [[61, "module-kqcircuits.elements.waveguide_composite"]], "kqcircuits.elements.waveguide_coplanar": [[62, "module-kqcircuits.elements.waveguide_coplanar"]], "kqcircuits.elements.waveguide_coplanar_curved": [[63, "module-kqcircuits.elements.waveguide_coplanar_curved"]], "kqcircuits.elements.waveguide_coplanar_splitter": [[64, "module-kqcircuits.elements.waveguide_coplanar_splitter"]], "kqcircuits.elements.waveguide_coplanar_straight": [[65, "module-kqcircuits.elements.waveguide_coplanar_straight"]], "kqcircuits.elements.waveguide_coplanar_taper": [[66, "module-kqcircuits.elements.waveguide_coplanar_taper"]], "kqcircuits.junctions": [[67, "kqcircuits-junctions"]], "kqcircuits.junctions.junction": [[68, "module-kqcircuits.junctions.junction"]], "kqcircuits.junctions.manhattan": [[69, "module-kqcircuits.junctions.manhattan"]], "kqcircuits.junctions.manhattan_single_junction": [[70, "module-kqcircuits.junctions.manhattan_single_junction"]], "kqcircuits.junctions.no_squid": [[71, "module-kqcircuits.junctions.no_squid"]], "kqcircuits.junctions.sim": [[72, "module-kqcircuits.junctions.sim"]], "kqcircuits.junctions.squid": [[73, "module-kqcircuits.junctions.squid"]], "kqcircuits.klayout_view": [[74, "module-kqcircuits.klayout_view"]], "kqcircuits.layer_cluster": [[75, "module-kqcircuits.layer_cluster"]], "kqcircuits.layer_config": [[76, "kqcircuits-layer-config"]], "kqcircuits.layer_config.default_layer_config": [[77, "module-kqcircuits.layer_config.default_layer_config"]], "kqcircuits.layer_config.example_layer_config": [[78, "module-kqcircuits.layer_config.example_layer_config"]], "kqcircuits.masks": [[79, "kqcircuits-masks"]], "kqcircuits.masks.mask_export": [[80, "module-kqcircuits.masks.mask_export"]], "kqcircuits.masks.mask_layout": [[81, "module-kqcircuits.masks.mask_layout"]], "kqcircuits.masks.mask_set": [[82, "module-kqcircuits.masks.mask_set"]], "kqcircuits.masks.multi_face_mask_layout": [[83, "module-kqcircuits.masks.multi_face_mask_layout"]], "kqcircuits.pya_resolver": [[84, "module-kqcircuits.pya_resolver"]], "kqcircuits.qubits": [[85, "kqcircuits-qubits"]], "kqcircuits.qubits.concentric_transmon": [[86, "module-kqcircuits.qubits.concentric_transmon"]], "kqcircuits.qubits.double_pads": [[87, "module-kqcircuits.qubits.double_pads"]], "kqcircuits.qubits.double_pads_splines": [[88, "module-kqcircuits.qubits.double_pads_splines"]], "kqcircuits.qubits.qubit": [[89, "module-kqcircuits.qubits.qubit"]], "kqcircuits.qubits.swissmon": [[90, "module-kqcircuits.qubits.swissmon"]], "kqcircuits.run": [[91, "module-kqcircuits.run"]], "kqcircuits.simulations": [[92, "kqcircuits-simulations"]], "kqcircuits.simulations.airbridges_sim": [[93, "module-kqcircuits.simulations.airbridges_sim"]], "kqcircuits.simulations.cross_section_simulation": [[94, "module-kqcircuits.simulations.cross_section_simulation"]], "kqcircuits.simulations.empty_simulation": [[95, "module-kqcircuits.simulations.empty_simulation"]], "kqcircuits.simulations.export": [[96, "kqcircuits-simulations-export"]], "kqcircuits.simulations.export.ansys": [[97, "kqcircuits-simulations-export-ansys"]], "kqcircuits.simulations.export.ansys.ansys_export": [[98, "module-kqcircuits.simulations.export.ansys.ansys_export"]], "kqcircuits.simulations.export.elmer": [[99, "kqcircuits-simulations-export-elmer"]], "kqcircuits.simulations.export.elmer.elmer_export": [[100, "module-kqcircuits.simulations.export.elmer.elmer_export"]], "kqcircuits.simulations.export.export_and_run": [[101, "module-kqcircuits.simulations.export.export_and_run"]], "kqcircuits.simulations.export.export_singularity": [[102, "module-kqcircuits.simulations.export.export_singularity"]], "kqcircuits.simulations.export.remote_export_and_run": [[103, "module-kqcircuits.simulations.export.remote_export_and_run"]], "kqcircuits.simulations.export.simulation_export": [[104, "module-kqcircuits.simulations.export.simulation_export"]], "kqcircuits.simulations.export.sonnet": [[105, "kqcircuits-simulations-export-sonnet"]], "kqcircuits.simulations.export.sonnet.parser": [[106, "module-kqcircuits.simulations.export.sonnet.parser"]], "kqcircuits.simulations.export.sonnet.sonnet_export": [[107, "module-kqcircuits.simulations.export.sonnet.sonnet_export"]], "kqcircuits.simulations.export.util": [[108, "module-kqcircuits.simulations.export.util"]], "kqcircuits.simulations.export.xsection": [[109, "kqcircuits-simulations-export-xsection"]], "kqcircuits.simulations.export.xsection.xsection_export": [[110, "module-kqcircuits.simulations.export.xsection.xsection_export"]], "kqcircuits.simulations.partition_region": [[111, "module-kqcircuits.simulations.partition_region"]], "kqcircuits.simulations.port": [[112, "module-kqcircuits.simulations.port"]], "kqcircuits.simulations.post_process": [[113, "module-kqcircuits.simulations.post_process"]], "kqcircuits.simulations.simulation": [[114, "module-kqcircuits.simulations.simulation"]], "kqcircuits.simulations.single_element_simulation": [[115, "module-kqcircuits.simulations.single_element_simulation"]], "kqcircuits.simulations.single_xmons_full_chip_sim": [[116, "module-kqcircuits.simulations.single_xmons_full_chip_sim"]], "kqcircuits.simulations.waveguides_sim": [[117, "module-kqcircuits.simulations.waveguides_sim"]], "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim": [[118, "module-kqcircuits.simulations.xmons_direct_coupling_full_chip_sim"]], "kqcircuits.simulations.xmons_direct_coupling_sim": [[119, "module-kqcircuits.simulations.xmons_direct_coupling_sim"]], "kqcircuits.test_structures": [[120, "kqcircuits-test-structures"]], "kqcircuits.test_structures.airbridge_dc": [[121, "module-kqcircuits.test_structures.airbridge_dc"]], "kqcircuits.test_structures.cross_test": [[122, "module-kqcircuits.test_structures.cross_test"]], "kqcircuits.test_structures.junction_test_pads": [[123, "kqcircuits-test-structures-junction-test-pads"]], "kqcircuits.test_structures.junction_test_pads.junction_test_pads": [[124, "module-kqcircuits.test_structures.junction_test_pads.junction_test_pads"]], "kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple": [[125, "module-kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple"]], "kqcircuits.test_structures.stripes_test": [[126, "module-kqcircuits.test_structures.stripes_test"]], "kqcircuits.test_structures.stripes_test_increasing_width": [[127, "module-kqcircuits.test_structures.stripes_test_increasing_width"]], "kqcircuits.test_structures.test_structure": [[128, "module-kqcircuits.test_structures.test_structure"]], "kqcircuits.test_structures.tsv_test_pattern": [[129, "module-kqcircuits.test_structures.tsv_test_pattern"]], "kqcircuits.util": [[130, "kqcircuits-util"]], "kqcircuits.util.area": [[131, "module-kqcircuits.util.area"]], "kqcircuits.util.count_instances": [[132, "module-kqcircuits.util.count_instances"]], "kqcircuits.util.coupler_lib": [[133, "module-kqcircuits.util.coupler_lib"]], "kqcircuits.util.deep_delete": [[134, "module-kqcircuits.util.deep_delete"]], "kqcircuits.util.defaults_helper": [[135, "module-kqcircuits.util.defaults_helper"]], "kqcircuits.util.dependencies": [[136, "module-kqcircuits.util.dependencies"]], "kqcircuits.util.edit_node_plugin": [[137, "module-kqcircuits.util.edit_node_plugin"]], "kqcircuits.util.export_helper": [[138, "module-kqcircuits.util.export_helper"]], "kqcircuits.util.geometry_helper": [[139, "module-kqcircuits.util.geometry_helper"]], "kqcircuits.util.geometry_json_encoder": [[140, "module-kqcircuits.util.geometry_json_encoder"]], "kqcircuits.util.groundgrid": [[141, "module-kqcircuits.util.groundgrid"]], "kqcircuits.util.gui_helper": [[142, "module-kqcircuits.util.gui_helper"]], "kqcircuits.util.import_helper": [[143, "module-kqcircuits.util.import_helper"]], "kqcircuits.util.label": [[144, "module-kqcircuits.util.label"]], "kqcircuits.util.layout_to_code": [[145, "module-kqcircuits.util.layout_to_code"]], "kqcircuits.util.library_helper": [[146, "module-kqcircuits.util.library_helper"]], "kqcircuits.util.log_router": [[147, "module-kqcircuits.util.log_router"]], "kqcircuits.util.merge": [[148, "module-kqcircuits.util.merge"]], "kqcircuits.util.netlist_extraction": [[149, "module-kqcircuits.util.netlist_extraction"]], "kqcircuits.util.netlist_graph": [[150, "module-kqcircuits.util.netlist_graph"]], "kqcircuits.util.parameters": [[151, "module-kqcircuits.util.parameters"]], "kqcircuits.util.plugin_startup": [[152, "module-kqcircuits.util.plugin_startup"]], "kqcircuits.util.refpoints": [[153, "module-kqcircuits.util.refpoints"]], "kqcircuits.util.replace_junctions": [[154, "module-kqcircuits.util.replace_junctions"]], "kqcircuits.util.symmetric_polygons": [[155, "module-kqcircuits.util.symmetric_polygons"]], "Citing": [[156, "citing"]], "Contributing": [[157, "contributing"]], "Versioning": [[157, "versioning"]], "Architecture": [[158, "architecture"]], "Elements": [[158, "elements"]], "PCell parameters": [[158, "pcell-parameters"]], "Libraries": [[158, "libraries"], [177, "libraries"]], "pya resolver": [[158, "pya-resolver"]], "Coding Style": [[159, "coding-style"]], "Containers": [[160, "containers"]], "CLI usage": [[160, "cli-usage"]], "Docker CI usage": [[160, "docker-ci-usage"]], "Singularity usage": [[160, "singularity-usage"]], "Documentation": [[161, "documentation"], [166, "documentation"]], "Developer Guide": [[162, "developer-guide"]], "Developer Setup": [[163, "developer-setup"]], "Prerequisites": [[163, "prerequisites"], [164, "prerequisites"]], "Python": [[163, "python"]], "Sources": [[163, "sources"]], "Install": [[163, "install"]], "Unlinking": [[163, "unlinking"]], "Update": [[163, "update"]], "Secondary install": [[163, "secondary-install"]], "Manual installation": [[163, "manual-installation"]], "Linux or MacOS": [[163, "linux-or-macos"]], "Windows": [[163, "windows"]], "KLayout Standalone Usage": [[164, "klayout-standalone-usage"]], "Installation": [[164, "installation"], [167, "installation"]], "Standard, Not Secure Installation": [[164, "standard-not-secure-installation"]], "Reproducible, Secure Installation": [[164, "reproducible-secure-installation"]], "PyPI Installation": [[164, "pypi-installation"]], "Usage": [[164, "usage"], [186, "usage"]], "Jupyter notebook usage": [[164, "jupyter-notebook-usage"]], "Updating the required dependencies": [[164, "updating-the-required-dependencies"]], "Testing": [[165, "testing"]], "Unit tests": [[165, "unit-tests"]], "KQC logo": [[166, "logo"]], "Indices and tables": [[166, "indices-and-tables"]], "KLayout": [[167, "klayout"]], "Known installation issues": [[167, "known-installation-issues"]], "Installing different Python package versions to KLayout manually": [[167, "installing-different-python-package-versions-to-klayout-manually"]], "Getting started (Salt package)": [[168, "getting-started-salt-package"]], "Installing KQCircuits Salt Package": [[168, "installing-kqcircuits-salt-package"]], "First look around": [[168, "first-look-around"]], "Setting up a user package directory": [[168, "setting-up-a-user-package-directory"]], "Defining a custom element": [[168, "defining-a-custom-element"]], "Defining a custom chip": [[168, "defining-a-custom-chip"]], "Upgrading or Removing Salt Package": [[168, "upgrading-or-removing-salt-package"]], "Release Notes": [[168, "release-notes"]], "Support": [[169, "support"]], "Trademarks": [[170, "trademarks"]], "General Structure and Miscellaneous Utilities": [[171, "general-structure-and-miscellaneous-utilities"]], "File system hierarchy": [[171, "file-system-hierarchy"], [177, "file-system-hierarchy"]], "Miscellaneous Utilities": [[171, "miscellaneous-utilities"]], "GUI Features": [[172, "gui-features"]], "Useful hotkeys": [[172, "useful-hotkeys"]], "Introduction to Elements": [[172, "introduction-to-elements"]], "Placing Elements": [[172, "placing-elements"]], "Modifying Element parameters": [[172, "modifying-element-parameters"]], "Modifying waveguides": [[172, "modifying-waveguides"]], "Editing WaveguideComposite Nodes": [[172, "editing-waveguidecomposite-nodes"]], "Converting elements placed in GUI into code": [[172, "converting-elements-placed-in-gui-into-code"]], "Useful Menu Commands": [[172, "useful-menu-commands"]], "Point-and-click workflow tutorial": [[173, "point-and-click-workflow-tutorial"]], "User Guide": [[174, "user-guide"]], "Macro development": [[175, "macro-development"]], "Running the first example": [[175, "running-the-first-example"]], "Interacting with the KLayout application": [[175, "interacting-with-the-klayout-application"]], "Creating a new panel": [[175, "creating-a-new-panel"]], "Accessing the currently active panel": [[175, "accessing-the-currently-active-panel"]], "Using KLayoutView": [[175, "using-klayoutview"]], "Debugger": [[175, "debugger"]], "Reloading libraries": [[175, "reloading-libraries"]], "Examples": [[175, "examples"]], "Mask export": [[176, "mask-export"]], "Tutorial": [[176, "tutorial"]], "Basic mask script and export": [[176, "basic-mask-script-and-export"]], "Ground grid": [[176, "ground-grid"]], "Adding and modifying chips": [[176, "adding-and-modifying-chips"]], "Multi-face masks": [[176, "multi-face-masks"]], "Composite mask maps": [[176, "composite-mask-maps"]], "Python workflow tutorial": [[177, "python-workflow-tutorial"]], "Structure of Element code": [[177, "structure-of-element-code"]], "Element class": [[177, "element-class"]], "Parameters": [[177, "parameters"]], "Build": [[177, "build"]], "Example of defining an Element class": [[177, "example-of-defining-an-element-class"]], "Example of defining a Chip and inserting elements into it": [[177, "example-of-defining-a-chip-and-inserting-elements-into-it"]], "Defining sampleholder types": [[177, "defining-sampleholder-types"]], "Refpoints": [[177, "refpoints"]], "KQCircuits\u2019 Layers": [[177, "kqcircuits-layers"]], "Faces": [[177, "faces"]], "Layer configuration files": [[177, "layer-configuration-files"]], "Adding a new face": [[177, "adding-a-new-face"]], "Opening Element or Chip from an IDE": [[177, "opening-element-or-chip-from-an-ide"]], "Elmer remote simulations workflow": [[178, "elmer-remote-simulations-workflow"]], "Run and export in one line": [[179, "run-and-export-in-one-line"]], "Gmsh/Elmer export": [[180, "gmsh-elmer-export"]], "Simulation features": [[181, "simulation-features"]], "S-parameter matrix": [[181, "s-parameter-matrix"]], "Capacitance matrix": [[181, "capacitance-matrix"]], "Eigenmode": [[181, "eigenmode"]], "Energy integrals and participation ratio": [[181, "energy-integrals-and-participation-ratio"]], "Cross-sectional simulations": [[181, "cross-sectional-simulations"]], "pyEPR": [[181, "pyepr"]], "Simulation objects": [[182, "simulation-objects"]], "The Simulation class": [[182, "the-simulation-class"]], "Box": [[182, "box"]], "Ports": [[182, "ports"]], "Face stack": [[182, "face-stack"]], "Simulation subclass": [[182, "simulation-subclass"]], "Single element subclass": [[182, "single-element-subclass"]], "General subclass": [[182, "general-subclass"]], "Geometry sweeps": [[182, "geometry-sweeps"]], "Export functions": [[183, "export-functions"]], "Ansys export": [[183, "ansys-export"]], "Elmer export": [[183, "elmer-export"]], "Sonnet export": [[183, "sonnet-export"]], "Geometry from Klayout GUI": [[183, "geometry-from-klayout-gui"]], "External simulation tools": [[184, "external-simulation-tools"]], "Terminology": [[185, "terminology"]], "Creating cross section images": [[187, "creating-cross-section-images"]], "KLayout GUI XSection tool": [[187, "klayout-gui-xsection-tool"]], "XSection call in KQC code": [[187, "xsection-call-in-kqc-code"]], "Process files (.xs)": [[187, "process-files-xs"]]}, "indexentries": {"kqcircuits": [[1, "module-kqcircuits"]], "module": [[1, "module-kqcircuits"], [2, "module-kqcircuits.chips"], [3, "module-kqcircuits.chips.airbridge_crossings"], [4, "module-kqcircuits.chips.airbridge_dc_test"], [5, "module-kqcircuits.chips.chip"], [6, "module-kqcircuits.chips.crossing_twoface"], [7, "module-kqcircuits.chips.daisy_woven"], [8, "module-kqcircuits.chips.dc_test"], [9, "module-kqcircuits.chips.demo"], [10, "module-kqcircuits.chips.demo_twoface"], [11, "module-kqcircuits.chips.empty"], [12, "module-kqcircuits.chips.junction_test"], [13, "module-kqcircuits.chips.junction_test2"], [14, "module-kqcircuits.chips.launchers"], [15, "module-kqcircuits.chips.lithography_test"], [16, "module-kqcircuits.chips.lithography_test_twoface"], [17, "module-kqcircuits.chips.quality_factor"], [18, "module-kqcircuits.chips.quality_factor_twoface"], [19, "module-kqcircuits.chips.sample_holder_test"], [20, "module-kqcircuits.chips.shaping"], [21, "module-kqcircuits.chips.simple"], [22, "module-kqcircuits.chips.single_xmons"], [23, "module-kqcircuits.chips.stripes"], [24, "module-kqcircuits.chips.tsv_test"], [25, "module-kqcircuits.chips.xmons_direct_coupling"], [26, "module-kqcircuits.defaults"], [27, "module-kqcircuits.elements"], [28, "module-kqcircuits.elements.airbridge_connection"], [29, "module-kqcircuits.elements.airbridges"], [30, "module-kqcircuits.elements.airbridges.airbridge"], [31, "module-kqcircuits.elements.airbridges.airbridge_multi_face"], [32, "module-kqcircuits.elements.airbridges.airbridge_rectangular"], [33, "module-kqcircuits.elements.capacitive_x_coupler"], [34, "module-kqcircuits.elements.chip_frame"], [35, "module-kqcircuits.elements.circular_capacitor"], [36, "module-kqcircuits.elements.element"], [37, "module-kqcircuits.elements.finger_capacitor_square"], [38, "module-kqcircuits.elements.finger_capacitor_taper"], [39, "module-kqcircuits.elements.flip_chip_connectors"], [40, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector"], [41, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc"], [42, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf"], [43, "module-kqcircuits.elements.fluxlines"], [44, "module-kqcircuits.elements.fluxlines.fluxline"], [45, "module-kqcircuits.elements.fluxlines.fluxline_standard"], [46, "module-kqcircuits.elements.fluxlines.fluxline_straight"], [47, "module-kqcircuits.elements.hanger_resonator"], [48, "module-kqcircuits.elements.launcher"], [49, "module-kqcircuits.elements.launcher_dc"], [50, "module-kqcircuits.elements.markers"], [51, "module-kqcircuits.elements.markers.marker"], [52, "module-kqcircuits.elements.markers.marker_standard"], [53, "module-kqcircuits.elements.markers.mask_marker_fc"], [54, "module-kqcircuits.elements.meander"], [55, "module-kqcircuits.elements.smooth_capacitor"], [56, "module-kqcircuits.elements.spiral_resonator_polygon"], [57, "module-kqcircuits.elements.tsvs"], [58, "module-kqcircuits.elements.tsvs.tsv"], [59, "module-kqcircuits.elements.tsvs.tsv_ellipse"], [60, "module-kqcircuits.elements.tsvs.tsv_standard"], [61, "module-kqcircuits.elements.waveguide_composite"], [62, "module-kqcircuits.elements.waveguide_coplanar"], [63, "module-kqcircuits.elements.waveguide_coplanar_curved"], [64, "module-kqcircuits.elements.waveguide_coplanar_splitter"], [65, "module-kqcircuits.elements.waveguide_coplanar_straight"], [66, "module-kqcircuits.elements.waveguide_coplanar_taper"], [67, "module-kqcircuits.junctions"], [68, "module-kqcircuits.junctions.junction"], [69, "module-kqcircuits.junctions.manhattan"], [70, "module-kqcircuits.junctions.manhattan_single_junction"], [71, "module-kqcircuits.junctions.no_squid"], [72, "module-kqcircuits.junctions.sim"], [73, "module-kqcircuits.junctions.squid"], [74, "module-kqcircuits.klayout_view"], [75, "module-kqcircuits.layer_cluster"], [76, "module-kqcircuits.layer_config"], [77, "module-kqcircuits.layer_config.default_layer_config"], [78, "module-kqcircuits.layer_config.example_layer_config"], [79, "module-kqcircuits.masks"], [80, "module-kqcircuits.masks.mask_export"], [81, "module-kqcircuits.masks.mask_layout"], [82, "module-kqcircuits.masks.mask_set"], [83, "module-kqcircuits.masks.multi_face_mask_layout"], [84, "module-kqcircuits.pya_resolver"], [85, "module-kqcircuits.qubits"], [86, "module-kqcircuits.qubits.concentric_transmon"], [87, "module-kqcircuits.qubits.double_pads"], [88, "module-kqcircuits.qubits.double_pads_splines"], [89, "module-kqcircuits.qubits.qubit"], [90, "module-kqcircuits.qubits.swissmon"], [91, "module-kqcircuits.run"], [92, "module-kqcircuits.simulations"], [93, "module-kqcircuits.simulations.airbridges_sim"], [94, "module-kqcircuits.simulations.cross_section_simulation"], [95, "module-kqcircuits.simulations.empty_simulation"], [96, "module-kqcircuits.simulations.export"], [97, "module-kqcircuits.simulations.export.ansys"], [98, "module-kqcircuits.simulations.export.ansys.ansys_export"], [99, "module-kqcircuits.simulations.export.elmer"], [100, "module-kqcircuits.simulations.export.elmer.elmer_export"], [101, "module-kqcircuits.simulations.export.export_and_run"], [102, "module-kqcircuits.simulations.export.export_singularity"], [103, "module-kqcircuits.simulations.export.remote_export_and_run"], [104, "module-kqcircuits.simulations.export.simulation_export"], [105, "module-kqcircuits.simulations.export.sonnet"], [106, "module-kqcircuits.simulations.export.sonnet.parser"], [107, "module-kqcircuits.simulations.export.sonnet.sonnet_export"], [108, "module-kqcircuits.simulations.export.util"], [109, "module-kqcircuits.simulations.export.xsection"], [110, "module-kqcircuits.simulations.export.xsection.xsection_export"], [111, "module-kqcircuits.simulations.partition_region"], [112, "module-kqcircuits.simulations.port"], [113, "module-kqcircuits.simulations.post_process"], [114, "module-kqcircuits.simulations.simulation"], [115, "module-kqcircuits.simulations.single_element_simulation"], [116, "module-kqcircuits.simulations.single_xmons_full_chip_sim"], [117, "module-kqcircuits.simulations.waveguides_sim"], [118, "module-kqcircuits.simulations.xmons_direct_coupling_full_chip_sim"], [119, "module-kqcircuits.simulations.xmons_direct_coupling_sim"], [120, "module-kqcircuits.test_structures"], [121, "module-kqcircuits.test_structures.airbridge_dc"], [122, "module-kqcircuits.test_structures.cross_test"], [123, "module-kqcircuits.test_structures.junction_test_pads"], [124, "module-kqcircuits.test_structures.junction_test_pads.junction_test_pads"], [125, "module-kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple"], [126, "module-kqcircuits.test_structures.stripes_test"], [127, "module-kqcircuits.test_structures.stripes_test_increasing_width"], [128, "module-kqcircuits.test_structures.test_structure"], [129, "module-kqcircuits.test_structures.tsv_test_pattern"], [130, "module-kqcircuits.util"], [131, "module-kqcircuits.util.area"], [132, "module-kqcircuits.util.count_instances"], [133, "module-kqcircuits.util.coupler_lib"], [134, "module-kqcircuits.util.deep_delete"], [135, "module-kqcircuits.util.defaults_helper"], [136, "module-kqcircuits.util.dependencies"], [137, "module-kqcircuits.util.edit_node_plugin"], [138, "module-kqcircuits.util.export_helper"], [139, "module-kqcircuits.util.geometry_helper"], [140, "module-kqcircuits.util.geometry_json_encoder"], [141, "module-kqcircuits.util.groundgrid"], [142, "module-kqcircuits.util.gui_helper"], [143, "module-kqcircuits.util.import_helper"], [144, "module-kqcircuits.util.label"], [145, "module-kqcircuits.util.layout_to_code"], [146, "module-kqcircuits.util.library_helper"], [147, "module-kqcircuits.util.log_router"], [148, "module-kqcircuits.util.merge"], [149, "module-kqcircuits.util.netlist_extraction"], [150, "module-kqcircuits.util.netlist_graph"], [151, "module-kqcircuits.util.parameters"], [152, "module-kqcircuits.util.plugin_startup"], [153, "module-kqcircuits.util.refpoints"], [154, "module-kqcircuits.util.replace_junctions"], [155, "module-kqcircuits.util.symmetric_polygons"]], "kqcircuits.chips": [[2, "module-kqcircuits.chips"]], "airbridgecrossings (class in kqcircuits.chips.airbridge_crossings)": [[3, "kqcircuits.chips.airbridge_crossings.AirbridgeCrossings"]], "build() (kqcircuits.chips.airbridge_crossings.airbridgecrossings method)": [[3, "kqcircuits.chips.airbridge_crossings.AirbridgeCrossings.build"]], "kqcircuits.chips.airbridge_crossings": [[3, "module-kqcircuits.chips.airbridge_crossings"]], "airbridgedctest (class in kqcircuits.chips.airbridge_dc_test)": [[4, "kqcircuits.chips.airbridge_dc_test.AirbridgeDcTest"]], "build() (kqcircuits.chips.airbridge_dc_test.airbridgedctest method)": [[4, "kqcircuits.chips.airbridge_dc_test.AirbridgeDcTest.build"]], "kqcircuits.chips.airbridge_dc_test": [[4, "module-kqcircuits.chips.airbridge_dc_test"]], "chip (class in kqcircuits.chips.chip)": [[5, "kqcircuits.chips.chip.Chip"]], "library_description (kqcircuits.chips.chip.chip attribute)": [[5, "kqcircuits.chips.chip.Chip.LIBRARY_DESCRIPTION"]], "library_name (kqcircuits.chips.chip.chip attribute)": [[5, "kqcircuits.chips.chip.Chip.LIBRARY_NAME"]], "library_path (kqcircuits.chips.chip.chip attribute)": [[5, "kqcircuits.chips.chip.Chip.LIBRARY_PATH"]], "can_create_from_shape_impl() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.can_create_from_shape_impl"]], "display_text_impl() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.display_text_impl"]], "get_box() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.get_box"]], "get_filter_regions() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.get_filter_regions"]], "get_ground_bump_locations() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.get_ground_bump_locations"]], "get_ground_tsv_locations() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.get_ground_tsv_locations"]], "get_launcher_assignments() (kqcircuits.chips.chip.chip static method)": [[5, "kqcircuits.chips.chip.Chip.get_launcher_assignments"]], "insert_filtered_elements() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.insert_filtered_elements"]], "kqcircuits.chips.chip": [[5, "module-kqcircuits.chips.chip"]], "make_grid_locations() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.make_grid_locations"]], "merge_layout_layers() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.merge_layout_layers"]], "merge_layout_layers_on_face() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.merge_layout_layers_on_face"]], "parameters_from_shape_impl() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.parameters_from_shape_impl"]], "post_build() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.post_build"]], "produce_frame() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.produce_frame"]], "produce_ground_grid() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.produce_ground_grid"]], "produce_ground_on_face_grid() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.produce_ground_on_face_grid"]], "produce_junction_tests() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.produce_junction_tests"]], "produce_launchers() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.produce_launchers"]], "produce_n_launchers() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.produce_n_launchers"]], "produce_opt_lit_tests() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.produce_opt_lit_tests"]], "produce_structures() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.produce_structures"]], "transformation_from_shape_impl() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.transformation_from_shape_impl"]], "crossingtwoface (class in kqcircuits.chips.crossing_twoface)": [[6, "kqcircuits.chips.crossing_twoface.CrossingTwoface"]], "build() (kqcircuits.chips.crossing_twoface.crossingtwoface method)": [[6, "kqcircuits.chips.crossing_twoface.CrossingTwoface.build"]], "kqcircuits.chips.crossing_twoface": [[6, "module-kqcircuits.chips.crossing_twoface"]], "daisywoven (class in kqcircuits.chips.daisy_woven)": [[7, "kqcircuits.chips.daisy_woven.DaisyWoven"]], "build() (kqcircuits.chips.daisy_woven.daisywoven method)": [[7, "kqcircuits.chips.daisy_woven.DaisyWoven.build"]], "kqcircuits.chips.daisy_woven": [[7, "module-kqcircuits.chips.daisy_woven"]], "dctest (class in kqcircuits.chips.dc_test)": [[8, "kqcircuits.chips.dc_test.DcTest"]], "build() (kqcircuits.chips.dc_test.dctest method)": [[8, "kqcircuits.chips.dc_test.DcTest.build"]], "kqcircuits.chips.dc_test": [[8, "module-kqcircuits.chips.dc_test"]], "demo (class in kqcircuits.chips.demo)": [[9, "kqcircuits.chips.demo.Demo"]], "build() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.build"]], "kqcircuits.chips.demo": [[9, "module-kqcircuits.chips.demo"]], "produce_control_lines() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_control_lines"]], "produce_coupler() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_coupler"]], "produce_couplers() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_couplers"]], "produce_driveline() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_driveline"]], "produce_fluxline() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_fluxline"]], "produce_junction_tests() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_junction_tests"]], "produce_probeline() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_probeline"]], "produce_probelines() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_probelines"]], "produce_qubit() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_qubit"]], "produce_qubits() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_qubits"]], "produce_readout_structure() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_readout_structure"]], "produce_readout_structures() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_readout_structures"]], "demotwoface (class in kqcircuits.chips.demo_twoface)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface"]], "build() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.build"]], "kqcircuits.chips.demo_twoface": [[10, "module-kqcircuits.chips.demo_twoface"]], "produce_control_lines() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_control_lines"]], "produce_coupler() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_coupler"]], "produce_couplers() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_couplers"]], "produce_driveline() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_driveline"]], "produce_fluxline() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_fluxline"]], "produce_probeline() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_probeline"]], "produce_probelines() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_probelines"]], "produce_qubit() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_qubit"]], "produce_qubits() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_qubits"]], "produce_readout_structure() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_readout_structure"]], "produce_readout_structures() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_readout_structures"]], "empty (class in kqcircuits.chips.empty)": [[11, "kqcircuits.chips.empty.Empty"]], "build() (kqcircuits.chips.empty.empty method)": [[11, "kqcircuits.chips.empty.Empty.build"]], "kqcircuits.chips.empty": [[11, "module-kqcircuits.chips.empty"]], "make_empty_area() (kqcircuits.chips.empty.empty method)": [[11, "kqcircuits.chips.empty.Empty.make_empty_area"]], "junctiontest (class in kqcircuits.chips.junction_test)": [[12, "kqcircuits.chips.junction_test.JunctionTest"]], "build() (kqcircuits.chips.junction_test.junctiontest method)": [[12, "kqcircuits.chips.junction_test.JunctionTest.build"]], "kqcircuits.chips.junction_test": [[12, "module-kqcircuits.chips.junction_test"]], "junctiontest2 (class in kqcircuits.chips.junction_test2)": [[13, "kqcircuits.chips.junction_test2.JunctionTest2"]], "build() (kqcircuits.chips.junction_test2.junctiontest2 method)": [[13, "kqcircuits.chips.junction_test2.JunctionTest2.build"]], "coerce_parameters_impl() (kqcircuits.chips.junction_test2.junctiontest2 method)": [[13, "kqcircuits.chips.junction_test2.JunctionTest2.coerce_parameters_impl"]], "kqcircuits.chips.junction_test2": [[13, "module-kqcircuits.chips.junction_test2"]], "launchers (class in kqcircuits.chips.launchers)": [[14, "kqcircuits.chips.launchers.Launchers"]], "build() (kqcircuits.chips.launchers.launchers method)": [[14, "kqcircuits.chips.launchers.Launchers.build"]], "kqcircuits.chips.launchers": [[14, "module-kqcircuits.chips.launchers"]], "lithographytest (class in kqcircuits.chips.lithography_test)": [[15, "kqcircuits.chips.lithography_test.LithographyTest"]], "build() (kqcircuits.chips.lithography_test.lithographytest method)": [[15, "kqcircuits.chips.lithography_test.LithographyTest.build"]], "create_pattern() (kqcircuits.chips.lithography_test.lithographytest method)": [[15, "kqcircuits.chips.lithography_test.LithographyTest.create_pattern"]], "kqcircuits.chips.lithography_test": [[15, "module-kqcircuits.chips.lithography_test"]], "lithographytesttwoface (class in kqcircuits.chips.lithography_test_twoface)": [[16, "kqcircuits.chips.lithography_test_twoface.LithographyTestTwoface"]], "build() (kqcircuits.chips.lithography_test_twoface.lithographytesttwoface method)": [[16, "kqcircuits.chips.lithography_test_twoface.LithographyTestTwoface.build"]], "create_pattern() (kqcircuits.chips.lithography_test_twoface.lithographytesttwoface method)": [[16, "kqcircuits.chips.lithography_test_twoface.LithographyTestTwoface.create_pattern"]], "kqcircuits.chips.lithography_test_twoface": [[16, "module-kqcircuits.chips.lithography_test_twoface"]], "qualityfactor (class in kqcircuits.chips.quality_factor)": [[17, "kqcircuits.chips.quality_factor.QualityFactor"]], "build() (kqcircuits.chips.quality_factor.qualityfactor method)": [[17, "kqcircuits.chips.quality_factor.QualityFactor.build"]], "kqcircuits.chips.quality_factor": [[17, "module-kqcircuits.chips.quality_factor"]], "qualityfactortwoface (class in kqcircuits.chips.quality_factor_twoface)": [[18, "kqcircuits.chips.quality_factor_twoface.QualityFactorTwoface"]], "build() (kqcircuits.chips.quality_factor_twoface.qualityfactortwoface method)": [[18, "kqcircuits.chips.quality_factor_twoface.QualityFactorTwoface.build"]], "kqcircuits.chips.quality_factor_twoface": [[18, "module-kqcircuits.chips.quality_factor_twoface"]], "produce_resonator() (kqcircuits.chips.quality_factor_twoface.qualityfactortwoface method)": [[18, "kqcircuits.chips.quality_factor_twoface.QualityFactorTwoface.produce_resonator"]], "sampleholdertest (class in kqcircuits.chips.sample_holder_test)": [[19, "kqcircuits.chips.sample_holder_test.SampleHolderTest"]], "build() (kqcircuits.chips.sample_holder_test.sampleholdertest method)": [[19, "kqcircuits.chips.sample_holder_test.SampleHolderTest.build"]], "kqcircuits.chips.sample_holder_test": [[19, "module-kqcircuits.chips.sample_holder_test"]], "shaping (class in kqcircuits.chips.shaping)": [[20, "kqcircuits.chips.shaping.Shaping"]], "build() (kqcircuits.chips.shaping.shaping method)": [[20, "kqcircuits.chips.shaping.Shaping.build"]], "kqcircuits.chips.shaping": [[20, "module-kqcircuits.chips.shaping"]], "simple (class in kqcircuits.chips.simple)": [[21, "kqcircuits.chips.simple.Simple"]], "build() (kqcircuits.chips.simple.simple method)": [[21, "kqcircuits.chips.simple.Simple.build"]], "kqcircuits.chips.simple": [[21, "module-kqcircuits.chips.simple"]], "singlexmons (class in kqcircuits.chips.single_xmons)": [[22, "kqcircuits.chips.single_xmons.SingleXmons"]], "build() (kqcircuits.chips.single_xmons.singlexmons method)": [[22, "kqcircuits.chips.single_xmons.SingleXmons.build"]], "kqcircuits.chips.single_xmons": [[22, "module-kqcircuits.chips.single_xmons"]], "launchers (kqcircuits.chips.single_xmons.singlexmons attribute)": [[22, "kqcircuits.chips.single_xmons.SingleXmons.launchers"]], "qubits_refpoints (kqcircuits.chips.single_xmons.singlexmons attribute)": [[22, "kqcircuits.chips.single_xmons.SingleXmons.qubits_refpoints"]], "stripes (class in kqcircuits.chips.stripes)": [[23, "kqcircuits.chips.stripes.Stripes"]], "build() (kqcircuits.chips.stripes.stripes method)": [[23, "kqcircuits.chips.stripes.Stripes.build"]], "kqcircuits.chips.stripes": [[23, "module-kqcircuits.chips.stripes"]], "tsvtest (class in kqcircuits.chips.tsv_test)": [[24, "kqcircuits.chips.tsv_test.TsvTest"]], "build() (kqcircuits.chips.tsv_test.tsvtest method)": [[24, "kqcircuits.chips.tsv_test.TsvTest.build"]], "create_xsection() (kqcircuits.chips.tsv_test.tsvtest method)": [[24, "kqcircuits.chips.tsv_test.TsvTest.create_xsection"]], "kqcircuits.chips.tsv_test": [[24, "module-kqcircuits.chips.tsv_test"]], "xmonsdirectcoupling (class in kqcircuits.chips.xmons_direct_coupling)": [[25, "kqcircuits.chips.xmons_direct_coupling.XMonsDirectCoupling"]], "build() (kqcircuits.chips.xmons_direct_coupling.xmonsdirectcoupling method)": [[25, "kqcircuits.chips.xmons_direct_coupling.XMonsDirectCoupling.build"]], "kqcircuits.chips.xmons_direct_coupling": [[25, "module-kqcircuits.chips.xmons_direct_coupling"]], "produce_qubits() (kqcircuits.chips.xmons_direct_coupling.xmonsdirectcoupling method)": [[25, "kqcircuits.chips.xmons_direct_coupling.XMonsDirectCoupling.produce_qubits"]], "produce_readout_resonator() (kqcircuits.chips.xmons_direct_coupling.xmonsdirectcoupling method)": [[25, "kqcircuits.chips.xmons_direct_coupling.XMonsDirectCoupling.produce_readout_resonator"]], "kqcircuits.defaults": [[26, "module-kqcircuits.defaults"]], "kqcircuits.elements": [[27, "module-kqcircuits.elements"]], "airbridgeconnection (class in kqcircuits.elements.airbridge_connection)": [[28, "kqcircuits.elements.airbridge_connection.AirbridgeConnection"]], "build() (kqcircuits.elements.airbridge_connection.airbridgeconnection method)": [[28, "kqcircuits.elements.airbridge_connection.AirbridgeConnection.build"]], "kqcircuits.elements.airbridge_connection": [[28, "module-kqcircuits.elements.airbridge_connection"]], "kqcircuits.elements.airbridges": [[29, "module-kqcircuits.elements.airbridges"]], "airbridge (class in kqcircuits.elements.airbridges.airbridge)": [[30, "kqcircuits.elements.airbridges.airbridge.Airbridge"]], "create() (kqcircuits.elements.airbridges.airbridge.airbridge class method)": [[30, "kqcircuits.elements.airbridges.airbridge.Airbridge.create"]], "default_type (kqcircuits.elements.airbridges.airbridge.airbridge attribute)": [[30, "kqcircuits.elements.airbridges.airbridge.Airbridge.default_type"]], "kqcircuits.elements.airbridges.airbridge": [[30, "module-kqcircuits.elements.airbridges.airbridge"]], "transformation_from_shape_impl() (kqcircuits.elements.airbridges.airbridge.airbridge method)": [[30, "kqcircuits.elements.airbridges.airbridge.Airbridge.transformation_from_shape_impl"]], "airbridgemultiface (class in kqcircuits.elements.airbridges.airbridge_multi_face)": [[31, "kqcircuits.elements.airbridges.airbridge_multi_face.AirbridgeMultiFace"]], "build() (kqcircuits.elements.airbridges.airbridge_multi_face.airbridgemultiface method)": [[31, "kqcircuits.elements.airbridges.airbridge_multi_face.AirbridgeMultiFace.build"]], "default_type (kqcircuits.elements.airbridges.airbridge_multi_face.airbridgemultiface attribute)": [[31, "kqcircuits.elements.airbridges.airbridge_multi_face.AirbridgeMultiFace.default_type"]], "kqcircuits.elements.airbridges.airbridge_multi_face": [[31, "module-kqcircuits.elements.airbridges.airbridge_multi_face"]], "airbridgerectangular (class in kqcircuits.elements.airbridges.airbridge_rectangular)": [[32, "kqcircuits.elements.airbridges.airbridge_rectangular.AirbridgeRectangular"]], "build() (kqcircuits.elements.airbridges.airbridge_rectangular.airbridgerectangular method)": [[32, "kqcircuits.elements.airbridges.airbridge_rectangular.AirbridgeRectangular.build"]], "default_type (kqcircuits.elements.airbridges.airbridge_rectangular.airbridgerectangular attribute)": [[32, "kqcircuits.elements.airbridges.airbridge_rectangular.AirbridgeRectangular.default_type"]], "kqcircuits.elements.airbridges.airbridge_rectangular": [[32, "module-kqcircuits.elements.airbridges.airbridge_rectangular"]], "capacitivexcoupler (class in kqcircuits.elements.capacitive_x_coupler)": [[33, "kqcircuits.elements.capacitive_x_coupler.CapacitiveXCoupler"]], "build() (kqcircuits.elements.capacitive_x_coupler.capacitivexcoupler method)": [[33, "kqcircuits.elements.capacitive_x_coupler.CapacitiveXCoupler.build"]], "get_sim_ports() (kqcircuits.elements.capacitive_x_coupler.capacitivexcoupler class method)": [[33, "kqcircuits.elements.capacitive_x_coupler.CapacitiveXCoupler.get_sim_ports"]], "kqcircuits.elements.capacitive_x_coupler": [[33, "module-kqcircuits.elements.capacitive_x_coupler"]], "chipframe (class in kqcircuits.elements.chip_frame)": [[34, "kqcircuits.elements.chip_frame.ChipFrame"]], "build() (kqcircuits.elements.chip_frame.chipframe method)": [[34, "kqcircuits.elements.chip_frame.ChipFrame.build"]], "kqcircuits.elements.chip_frame": [[34, "module-kqcircuits.elements.chip_frame"]], "circularcapacitor (class in kqcircuits.elements.circular_capacitor)": [[35, "kqcircuits.elements.circular_capacitor.CircularCapacitor"]], "build() (kqcircuits.elements.circular_capacitor.circularcapacitor method)": [[35, "kqcircuits.elements.circular_capacitor.CircularCapacitor.build"]], "get_sim_ports() (kqcircuits.elements.circular_capacitor.circularcapacitor class method)": [[35, "kqcircuits.elements.circular_capacitor.CircularCapacitor.get_sim_ports"]], "kqcircuits.elements.circular_capacitor": [[35, "module-kqcircuits.elements.circular_capacitor"]], "element (class in kqcircuits.elements.element)": [[36, "kqcircuits.elements.element.Element"]], "library_description (kqcircuits.elements.element.element attribute)": [[36, "kqcircuits.elements.element.Element.LIBRARY_DESCRIPTION"]], "library_name (kqcircuits.elements.element.element attribute)": [[36, "kqcircuits.elements.element.Element.LIBRARY_NAME"]], "library_path (kqcircuits.elements.element.element attribute)": [[36, "kqcircuits.elements.element.Element.LIBRARY_PATH"]], "add_element() (kqcircuits.elements.element.element method)": [[36, "kqcircuits.elements.element.Element.add_element"]], "add_port() (kqcircuits.elements.element.element method)": [[36, "kqcircuits.elements.element.Element.add_port"]], "add_protection() (kqcircuits.elements.element.element method)": [[36, "kqcircuits.elements.element.Element.add_protection"]], "build() (kqcircuits.elements.element.element method)": [[36, "kqcircuits.elements.element.Element.build"]], "copy_port() (kqcircuits.elements.element.element method)": [[36, "kqcircuits.elements.element.Element.copy_port"]], "create() (kqcircuits.elements.element.element class method)": [[36, "kqcircuits.elements.element.Element.create"]], "create_cell_from_shape() (kqcircuits.elements.element.element static method)": [[36, "kqcircuits.elements.element.Element.create_cell_from_shape"]], "create_subtype() (kqcircuits.elements.element.element class method)": [[36, "kqcircuits.elements.element.Element.create_subtype"]], "create_with_refpoints() (kqcircuits.elements.element.element class method)": [[36, "kqcircuits.elements.element.Element.create_with_refpoints"]], "display_text_impl() (kqcircuits.elements.element.element method)": [[36, "kqcircuits.elements.element.Element.display_text_impl"]], "face() (kqcircuits.elements.element.element method)": [[36, "kqcircuits.elements.element.Element.face"]], "face_changer_waveguides() (kqcircuits.elements.element.element static method)": [[36, "kqcircuits.elements.element.Element.face_changer_waveguides"]], "get_layer() (kqcircuits.elements.element.element method)": [[36, "kqcircuits.elements.element.Element.get_layer"]], "get_refpoints() (in module kqcircuits.elements.element)": [[36, "kqcircuits.elements.element.get_refpoints"]], "get_refpoints() (kqcircuits.elements.element.element method)": [[36, "kqcircuits.elements.element.Element.get_refpoints"]], "get_schema() (kqcircuits.elements.element.element class method)": [[36, "kqcircuits.elements.element.Element.get_schema"]], "get_sim_ports() (kqcircuits.elements.element.element class method)": [[36, "kqcircuits.elements.element.Element.get_sim_ports"]], "insert_cell() (kqcircuits.elements.element.element method)": [[36, "kqcircuits.elements.element.Element.insert_cell"]], "insert_cell_into() (in module kqcircuits.elements.element)": [[36, "kqcircuits.elements.element.insert_cell_into"]], "kqcircuits.elements.element": [[36, "module-kqcircuits.elements.element"]], "left_and_right_waveguides() (kqcircuits.elements.element.element static method)": [[36, "kqcircuits.elements.element.Element.left_and_right_waveguides"]], "pcell_params_by_name() (kqcircuits.elements.element.element method)": [[36, "kqcircuits.elements.element.Element.pcell_params_by_name"]], "post_build() (kqcircuits.elements.element.element method)": [[36, "kqcircuits.elements.element.Element.post_build"]], "produce_impl() (kqcircuits.elements.element.element method)": [[36, "kqcircuits.elements.element.Element.produce_impl"]], "raise_error_on_cell() (kqcircuits.elements.element.element method)": [[36, "kqcircuits.elements.element.Element.raise_error_on_cell"]], "resolve_face() (in module kqcircuits.elements.element)": [[36, "kqcircuits.elements.element.resolve_face"]], "sync_parameters() (kqcircuits.elements.element.element method)": [[36, "kqcircuits.elements.element.Element.sync_parameters"]], "fingercapacitorsquare (class in kqcircuits.elements.finger_capacitor_square)": [[37, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare"]], "add_waveguides() (kqcircuits.elements.finger_capacitor_square.fingercapacitorsquare method)": [[37, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare.add_waveguides"]], "build() (kqcircuits.elements.finger_capacitor_square.fingercapacitorsquare method)": [[37, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare.build"]], "can_create_from_shape_impl() (kqcircuits.elements.finger_capacitor_square.fingercapacitorsquare method)": [[37, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare.can_create_from_shape_impl"]], "cut_region() (kqcircuits.elements.finger_capacitor_square.fingercapacitorsquare method)": [[37, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare.cut_region"]], "finger_area_length() (kqcircuits.elements.finger_capacitor_square.fingercapacitorsquare method)": [[37, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare.finger_area_length"]], "finger_area_width() (kqcircuits.elements.finger_capacitor_square.fingercapacitorsquare method)": [[37, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare.finger_area_width"]], "get_ground_region() (kqcircuits.elements.finger_capacitor_square.fingercapacitorsquare method)": [[37, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare.get_ground_region"]], "get_sim_ports() (kqcircuits.elements.finger_capacitor_square.fingercapacitorsquare class method)": [[37, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare.get_sim_ports"]], "kqcircuits.elements.finger_capacitor_square": [[37, "module-kqcircuits.elements.finger_capacitor_square"]], "fingercapacitortaper (class in kqcircuits.elements.finger_capacitor_taper)": [[38, "kqcircuits.elements.finger_capacitor_taper.FingerCapacitorTaper"]], "build() (kqcircuits.elements.finger_capacitor_taper.fingercapacitortaper method)": [[38, "kqcircuits.elements.finger_capacitor_taper.FingerCapacitorTaper.build"]], "can_create_from_shape_impl() (kqcircuits.elements.finger_capacitor_taper.fingercapacitortaper method)": [[38, "kqcircuits.elements.finger_capacitor_taper.FingerCapacitorTaper.can_create_from_shape_impl"]], "kqcircuits.elements.finger_capacitor_taper": [[38, "module-kqcircuits.elements.finger_capacitor_taper"]], "kqcircuits.elements.flip_chip_connectors": [[39, "module-kqcircuits.elements.flip_chip_connectors"]], "flipchipconnector (class in kqcircuits.elements.flip_chip_connectors.flip_chip_connector)": [[40, "kqcircuits.elements.flip_chip_connectors.flip_chip_connector.FlipChipConnector"]], "create_bump_connector() (kqcircuits.elements.flip_chip_connectors.flip_chip_connector.flipchipconnector method)": [[40, "kqcircuits.elements.flip_chip_connectors.flip_chip_connector.FlipChipConnector.create_bump_connector"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector": [[40, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector"]], "flipchipconnectordc (class in kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc)": [[41, "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc.FlipChipConnectorDc"]], "build() (kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc.flipchipconnectordc method)": [[41, "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc.FlipChipConnectorDc.build"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc": [[41, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc"]], "flipchipconnectorrf (class in kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf)": [[42, "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf.FlipChipConnectorRf"]], "build() (kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf.flipchipconnectorrf method)": [[42, "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf.FlipChipConnectorRf.build"]], "get_sim_ports() (kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf.flipchipconnectorrf class method)": [[42, "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf.FlipChipConnectorRf.get_sim_ports"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf": [[42, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf"]], "kqcircuits.elements.fluxlines": [[43, "module-kqcircuits.elements.fluxlines"]], "fluxline (class in kqcircuits.elements.fluxlines.fluxline)": [[44, "kqcircuits.elements.fluxlines.fluxline.Fluxline"]], "coerce_parameters_impl() (kqcircuits.elements.fluxlines.fluxline.fluxline method)": [[44, "kqcircuits.elements.fluxlines.fluxline.Fluxline.coerce_parameters_impl"]], "create() (kqcircuits.elements.fluxlines.fluxline.fluxline class method)": [[44, "kqcircuits.elements.fluxlines.fluxline.Fluxline.create"]], "default_type (kqcircuits.elements.fluxlines.fluxline.fluxline attribute)": [[44, "kqcircuits.elements.fluxlines.fluxline.Fluxline.default_type"]], "kqcircuits.elements.fluxlines.fluxline": [[44, "module-kqcircuits.elements.fluxlines.fluxline"]], "fluxlinestandard (class in kqcircuits.elements.fluxlines.fluxline_standard)": [[45, "kqcircuits.elements.fluxlines.fluxline_standard.FluxlineStandard"]], "build() (kqcircuits.elements.fluxlines.fluxline_standard.fluxlinestandard method)": [[45, "kqcircuits.elements.fluxlines.fluxline_standard.FluxlineStandard.build"]], "kqcircuits.elements.fluxlines.fluxline_standard": [[45, "module-kqcircuits.elements.fluxlines.fluxline_standard"]], "fluxlinestraight (class in kqcircuits.elements.fluxlines.fluxline_straight)": [[46, "kqcircuits.elements.fluxlines.fluxline_straight.FluxlineStraight"]], "build() (kqcircuits.elements.fluxlines.fluxline_straight.fluxlinestraight method)": [[46, "kqcircuits.elements.fluxlines.fluxline_straight.FluxlineStraight.build"]], "kqcircuits.elements.fluxlines.fluxline_straight": [[46, "module-kqcircuits.elements.fluxlines.fluxline_straight"]], "hangerresonator (class in kqcircuits.elements.hanger_resonator)": [[47, "kqcircuits.elements.hanger_resonator.HangerResonator"]], "build() (kqcircuits.elements.hanger_resonator.hangerresonator method)": [[47, "kqcircuits.elements.hanger_resonator.HangerResonator.build"]], "get_sim_ports() (kqcircuits.elements.hanger_resonator.hangerresonator class method)": [[47, "kqcircuits.elements.hanger_resonator.HangerResonator.get_sim_ports"]], "kqcircuits.elements.hanger_resonator": [[47, "module-kqcircuits.elements.hanger_resonator"]], "launcher (class in kqcircuits.elements.launcher)": [[48, "kqcircuits.elements.launcher.Launcher"]], "build() (kqcircuits.elements.launcher.launcher method)": [[48, "kqcircuits.elements.launcher.Launcher.build"]], "kqcircuits.elements.launcher": [[48, "module-kqcircuits.elements.launcher"]], "launcherdc (class in kqcircuits.elements.launcher_dc)": [[49, "kqcircuits.elements.launcher_dc.LauncherDC"]], "build() (kqcircuits.elements.launcher_dc.launcherdc method)": [[49, "kqcircuits.elements.launcher_dc.LauncherDC.build"]], "kqcircuits.elements.launcher_dc": [[49, "module-kqcircuits.elements.launcher_dc"]], "kqcircuits.elements.markers": [[50, "module-kqcircuits.elements.markers"]], "marker (class in kqcircuits.elements.markers.marker)": [[51, "kqcircuits.elements.markers.marker.Marker"]], "create() (kqcircuits.elements.markers.marker.marker class method)": [[51, "kqcircuits.elements.markers.marker.Marker.create"]], "default_type (kqcircuits.elements.markers.marker.marker attribute)": [[51, "kqcircuits.elements.markers.marker.Marker.default_type"]], "get_marker_locations() (kqcircuits.elements.markers.marker.marker class method)": [[51, "kqcircuits.elements.markers.marker.Marker.get_marker_locations"]], "get_marker_region() (kqcircuits.elements.markers.marker.marker class method)": [[51, "kqcircuits.elements.markers.marker.Marker.get_marker_region"]], "kqcircuits.elements.markers.marker": [[51, "module-kqcircuits.elements.markers.marker"]], "produce_geometry() (kqcircuits.elements.markers.marker.marker method)": [[51, "kqcircuits.elements.markers.marker.Marker.produce_geometry"]], "markerstandard (class in kqcircuits.elements.markers.marker_standard)": [[52, "kqcircuits.elements.markers.marker_standard.MarkerStandard"]], "build() (kqcircuits.elements.markers.marker_standard.markerstandard method)": [[52, "kqcircuits.elements.markers.marker_standard.MarkerStandard.build"]], "kqcircuits.elements.markers.marker_standard": [[52, "module-kqcircuits.elements.markers.marker_standard"]], "maskmarkerfc (class in kqcircuits.elements.markers.mask_marker_fc)": [[53, "kqcircuits.elements.markers.mask_marker_fc.MaskMarkerFc"]], "build() (kqcircuits.elements.markers.mask_marker_fc.maskmarkerfc method)": [[53, "kqcircuits.elements.markers.mask_marker_fc.MaskMarkerFc.build"]], "create_cross() (kqcircuits.elements.markers.mask_marker_fc.maskmarkerfc static method)": [[53, "kqcircuits.elements.markers.mask_marker_fc.MaskMarkerFc.create_cross"]], "get_marker_locations() (kqcircuits.elements.markers.mask_marker_fc.maskmarkerfc class method)": [[53, "kqcircuits.elements.markers.mask_marker_fc.MaskMarkerFc.get_marker_locations"]], "get_marker_region() (kqcircuits.elements.markers.mask_marker_fc.maskmarkerfc class method)": [[53, "kqcircuits.elements.markers.mask_marker_fc.MaskMarkerFc.get_marker_region"]], "kqcircuits.elements.markers.mask_marker_fc": [[53, "module-kqcircuits.elements.markers.mask_marker_fc"]], "meander (class in kqcircuits.elements.meander)": [[54, "kqcircuits.elements.meander.Meander"]], "build() (kqcircuits.elements.meander.meander method)": [[54, "kqcircuits.elements.meander.Meander.build"]], "can_create_from_shape_impl() (kqcircuits.elements.meander.meander method)": [[54, "kqcircuits.elements.meander.Meander.can_create_from_shape_impl"]], "kqcircuits.elements.meander": [[54, "module-kqcircuits.elements.meander"]], "parameters_from_shape_impl() (kqcircuits.elements.meander.meander method)": [[54, "kqcircuits.elements.meander.Meander.parameters_from_shape_impl"]], "smoothcapacitor (class in kqcircuits.elements.smooth_capacitor)": [[55, "kqcircuits.elements.smooth_capacitor.SmoothCapacitor"]], "build() (kqcircuits.elements.smooth_capacitor.smoothcapacitor method)": [[55, "kqcircuits.elements.smooth_capacitor.SmoothCapacitor.build"]], "can_create_from_shape_impl() (kqcircuits.elements.smooth_capacitor.smoothcapacitor method)": [[55, "kqcircuits.elements.smooth_capacitor.SmoothCapacitor.can_create_from_shape_impl"]], "get_sim_ports() (kqcircuits.elements.smooth_capacitor.smoothcapacitor class method)": [[55, "kqcircuits.elements.smooth_capacitor.SmoothCapacitor.get_sim_ports"]], "kqcircuits.elements.smooth_capacitor": [[55, "module-kqcircuits.elements.smooth_capacitor"]], "spiralresonatorpolygon (class in kqcircuits.elements.spiral_resonator_polygon)": [[56, "kqcircuits.elements.spiral_resonator_polygon.SpiralResonatorPolygon"]], "build() (kqcircuits.elements.spiral_resonator_polygon.spiralresonatorpolygon method)": [[56, "kqcircuits.elements.spiral_resonator_polygon.SpiralResonatorPolygon.build"]], "kqcircuits.elements.spiral_resonator_polygon": [[56, "module-kqcircuits.elements.spiral_resonator_polygon"]], "rectangular_parameters() (in module kqcircuits.elements.spiral_resonator_polygon)": [[56, "kqcircuits.elements.spiral_resonator_polygon.rectangular_parameters"]], "kqcircuits.elements.tsvs": [[57, "module-kqcircuits.elements.tsvs"]], "tsv (class in kqcircuits.elements.tsvs.tsv)": [[58, "kqcircuits.elements.tsvs.tsv.Tsv"]], "create() (kqcircuits.elements.tsvs.tsv.tsv class method)": [[58, "kqcircuits.elements.tsvs.tsv.Tsv.create"]], "default_type (kqcircuits.elements.tsvs.tsv.tsv attribute)": [[58, "kqcircuits.elements.tsvs.tsv.Tsv.default_type"]], "kqcircuits.elements.tsvs.tsv": [[58, "module-kqcircuits.elements.tsvs.tsv"]], "tsvellipse (class in kqcircuits.elements.tsvs.tsv_ellipse)": [[59, "kqcircuits.elements.tsvs.tsv_ellipse.TsvEllipse"]], "create_tsv_connector() (kqcircuits.elements.tsvs.tsv_ellipse.tsvellipse method)": [[59, "kqcircuits.elements.tsvs.tsv_ellipse.TsvEllipse.create_tsv_connector"]], "kqcircuits.elements.tsvs.tsv_ellipse": [[59, "module-kqcircuits.elements.tsvs.tsv_ellipse"]], "produce_impl() (kqcircuits.elements.tsvs.tsv_ellipse.tsvellipse method)": [[59, "kqcircuits.elements.tsvs.tsv_ellipse.TsvEllipse.produce_impl"]], "tsvstandard (class in kqcircuits.elements.tsvs.tsv_standard)": [[60, "kqcircuits.elements.tsvs.tsv_standard.TsvStandard"]], "build() (kqcircuits.elements.tsvs.tsv_standard.tsvstandard method)": [[60, "kqcircuits.elements.tsvs.tsv_standard.TsvStandard.build"]], "kqcircuits.elements.tsvs.tsv_standard": [[60, "module-kqcircuits.elements.tsvs.tsv_standard"]], "node (class in kqcircuits.elements.waveguide_composite)": [[61, "kqcircuits.elements.waveguide_composite.Node"]], "waveguidecomposite (class in kqcircuits.elements.waveguide_composite)": [[61, "kqcircuits.elements.waveguide_composite.WaveguideComposite"]], "align (kqcircuits.elements.waveguide_composite.node attribute)": [[61, "kqcircuits.elements.waveguide_composite.Node.align"]], "angle (kqcircuits.elements.waveguide_composite.node attribute)": [[61, "kqcircuits.elements.waveguide_composite.Node.angle"]], "build() (kqcircuits.elements.waveguide_composite.waveguidecomposite method)": [[61, "kqcircuits.elements.waveguide_composite.WaveguideComposite.build"]], "check_node_type() (kqcircuits.elements.waveguide_composite.waveguidecomposite method)": [[61, "kqcircuits.elements.waveguide_composite.WaveguideComposite.check_node_type"]], "coerce_parameters_impl() (kqcircuits.elements.waveguide_composite.waveguidecomposite method)": [[61, "kqcircuits.elements.waveguide_composite.WaveguideComposite.coerce_parameters_impl"]], "create() (kqcircuits.elements.waveguide_composite.waveguidecomposite class method)": [[61, "kqcircuits.elements.waveguide_composite.WaveguideComposite.create"]], "deserialize() (kqcircuits.elements.waveguide_composite.node class method)": [[61, "kqcircuits.elements.waveguide_composite.Node.deserialize"]], "element (kqcircuits.elements.waveguide_composite.node attribute)": [[61, "kqcircuits.elements.waveguide_composite.Node.element"]], "get_segment_cells() (kqcircuits.elements.waveguide_composite.waveguidecomposite static method)": [[61, "kqcircuits.elements.waveguide_composite.WaveguideComposite.get_segment_cells"]], "get_segment_lengths() (kqcircuits.elements.waveguide_composite.waveguidecomposite static method)": [[61, "kqcircuits.elements.waveguide_composite.WaveguideComposite.get_segment_lengths"]], "inst_name (kqcircuits.elements.waveguide_composite.node attribute)": [[61, "kqcircuits.elements.waveguide_composite.Node.inst_name"]], "kqcircuits.elements.waveguide_composite": [[61, "module-kqcircuits.elements.waveguide_composite"]], "length_before (kqcircuits.elements.waveguide_composite.node attribute)": [[61, "kqcircuits.elements.waveguide_composite.Node.length_before"]], "length_increment (kqcircuits.elements.waveguide_composite.node attribute)": [[61, "kqcircuits.elements.waveguide_composite.Node.length_increment"]], "nodes_from_string() (kqcircuits.elements.waveguide_composite.node static method)": [[61, "kqcircuits.elements.waveguide_composite.Node.nodes_from_string"]], "position (kqcircuits.elements.waveguide_composite.node attribute)": [[61, "kqcircuits.elements.waveguide_composite.Node.position"]], "produce_fixed_length_bend() (in module kqcircuits.elements.waveguide_composite)": [[61, "kqcircuits.elements.waveguide_composite.produce_fixed_length_bend"]], "produce_fixed_length_waveguide() (kqcircuits.elements.waveguide_composite.waveguidecomposite static method)": [[61, "kqcircuits.elements.waveguide_composite.WaveguideComposite.produce_fixed_length_waveguide"]], "snap_point() (kqcircuits.elements.waveguide_composite.waveguidecomposite method)": [[61, "kqcircuits.elements.waveguide_composite.WaveguideComposite.snap_point"]], "waveguidecoplanar (class in kqcircuits.elements.waveguide_coplanar)": [[62, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar"]], "build() (kqcircuits.elements.waveguide_coplanar.waveguidecoplanar method)": [[62, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar.build"]], "can_create_from_shape_impl() (kqcircuits.elements.waveguide_coplanar.waveguidecoplanar method)": [[62, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar.can_create_from_shape_impl"]], "get_corner_data() (kqcircuits.elements.waveguide_coplanar.waveguidecoplanar static method)": [[62, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar.get_corner_data"]], "is_continuous() (kqcircuits.elements.waveguide_coplanar.waveguidecoplanar static method)": [[62, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar.is_continuous"]], "kqcircuits.elements.waveguide_coplanar": [[62, "module-kqcircuits.elements.waveguide_coplanar"]], "parameters_from_shape_impl() (kqcircuits.elements.waveguide_coplanar.waveguidecoplanar method)": [[62, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar.parameters_from_shape_impl"]], "produce_end_termination() (kqcircuits.elements.waveguide_coplanar.waveguidecoplanar static method)": [[62, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar.produce_end_termination"]], "produce_waveguide() (kqcircuits.elements.waveguide_coplanar.waveguidecoplanar method)": [[62, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar.produce_waveguide"]], "transformation_from_shape_impl() (kqcircuits.elements.waveguide_coplanar.waveguidecoplanar method)": [[62, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar.transformation_from_shape_impl"]], "waveguidecoplanarcurved (class in kqcircuits.elements.waveguide_coplanar_curved)": [[63, "kqcircuits.elements.waveguide_coplanar_curved.WaveguideCoplanarCurved"]], "arc() (in module kqcircuits.elements.waveguide_coplanar_curved)": [[63, "kqcircuits.elements.waveguide_coplanar_curved.arc"]], "build() (kqcircuits.elements.waveguide_coplanar_curved.waveguidecoplanarcurved method)": [[63, "kqcircuits.elements.waveguide_coplanar_curved.WaveguideCoplanarCurved.build"]], "coerce_parameters_impl() (kqcircuits.elements.waveguide_coplanar_curved.waveguidecoplanarcurved method)": [[63, "kqcircuits.elements.waveguide_coplanar_curved.WaveguideCoplanarCurved.coerce_parameters_impl"]], "create_curve_arcs() (kqcircuits.elements.waveguide_coplanar_curved.waveguidecoplanarcurved static method)": [[63, "kqcircuits.elements.waveguide_coplanar_curved.WaveguideCoplanarCurved.create_curve_arcs"]], "kqcircuits.elements.waveguide_coplanar_curved": [[63, "module-kqcircuits.elements.waveguide_coplanar_curved"]], "produce_curve_termination() (kqcircuits.elements.waveguide_coplanar_curved.waveguidecoplanarcurved static method)": [[63, "kqcircuits.elements.waveguide_coplanar_curved.WaveguideCoplanarCurved.produce_curve_termination"]], "waveguidecoplanarsplitter (class in kqcircuits.elements.waveguide_coplanar_splitter)": [[64, "kqcircuits.elements.waveguide_coplanar_splitter.WaveguideCoplanarSplitter"]], "build() (kqcircuits.elements.waveguide_coplanar_splitter.waveguidecoplanarsplitter method)": [[64, "kqcircuits.elements.waveguide_coplanar_splitter.WaveguideCoplanarSplitter.build"]], "kqcircuits.elements.waveguide_coplanar_splitter": [[64, "module-kqcircuits.elements.waveguide_coplanar_splitter"]], "t_cross_parameters() (in module kqcircuits.elements.waveguide_coplanar_splitter)": [[64, "kqcircuits.elements.waveguide_coplanar_splitter.t_cross_parameters"]], "waveguidecoplanarstraight (class in kqcircuits.elements.waveguide_coplanar_straight)": [[65, "kqcircuits.elements.waveguide_coplanar_straight.WaveguideCoplanarStraight"]], "build() (kqcircuits.elements.waveguide_coplanar_straight.waveguidecoplanarstraight method)": [[65, "kqcircuits.elements.waveguide_coplanar_straight.WaveguideCoplanarStraight.build"]], "kqcircuits.elements.waveguide_coplanar_straight": [[65, "module-kqcircuits.elements.waveguide_coplanar_straight"]], "waveguidecoplanartaper (class in kqcircuits.elements.waveguide_coplanar_taper)": [[66, "kqcircuits.elements.waveguide_coplanar_taper.WaveguideCoplanarTaper"]], "build() (kqcircuits.elements.waveguide_coplanar_taper.waveguidecoplanartaper method)": [[66, "kqcircuits.elements.waveguide_coplanar_taper.WaveguideCoplanarTaper.build"]], "kqcircuits.elements.waveguide_coplanar_taper": [[66, "module-kqcircuits.elements.waveguide_coplanar_taper"]], "kqcircuits.junctions": [[67, "module-kqcircuits.junctions"]], "junction (class in kqcircuits.junctions.junction)": [[68, "kqcircuits.junctions.junction.Junction"]], "library_description (kqcircuits.junctions.junction.junction attribute)": [[68, "kqcircuits.junctions.junction.Junction.LIBRARY_DESCRIPTION"]], "library_name (kqcircuits.junctions.junction.junction attribute)": [[68, "kqcircuits.junctions.junction.Junction.LIBRARY_NAME"]], "library_path (kqcircuits.junctions.junction.junction attribute)": [[68, "kqcircuits.junctions.junction.Junction.LIBRARY_PATH"]], "coerce_parameters_impl() (kqcircuits.junctions.junction.junction method)": [[68, "kqcircuits.junctions.junction.Junction.coerce_parameters_impl"]], "create() (kqcircuits.junctions.junction.junction class method)": [[68, "kqcircuits.junctions.junction.Junction.create"]], "default_type (kqcircuits.junctions.junction.junction attribute)": [[68, "kqcircuits.junctions.junction.Junction.default_type"]], "kqcircuits.junctions.junction": [[68, "module-kqcircuits.junctions.junction"]], "manhattan (class in kqcircuits.junctions.manhattan)": [[69, "kqcircuits.junctions.manhattan.Manhattan"]], "build() (kqcircuits.junctions.manhattan.manhattan method)": [[69, "kqcircuits.junctions.manhattan.Manhattan.build"]], "kqcircuits.junctions.manhattan": [[69, "module-kqcircuits.junctions.manhattan"]], "produce_contact_pads() (kqcircuits.junctions.manhattan.manhattan method)": [[69, "kqcircuits.junctions.manhattan.Manhattan.produce_contact_pads"]], "produce_manhattan_squid() (kqcircuits.junctions.manhattan.manhattan method)": [[69, "kqcircuits.junctions.manhattan.Manhattan.produce_manhattan_squid"]], "manhattansinglejunction (class in kqcircuits.junctions.manhattan_single_junction)": [[70, "kqcircuits.junctions.manhattan_single_junction.ManhattanSingleJunction"]], "build() (kqcircuits.junctions.manhattan_single_junction.manhattansinglejunction method)": [[70, "kqcircuits.junctions.manhattan_single_junction.ManhattanSingleJunction.build"]], "kqcircuits.junctions.manhattan_single_junction": [[70, "module-kqcircuits.junctions.manhattan_single_junction"]], "produce_manhattan_junction() (kqcircuits.junctions.manhattan_single_junction.manhattansinglejunction method)": [[70, "kqcircuits.junctions.manhattan_single_junction.ManhattanSingleJunction.produce_manhattan_junction"]], "nosquid (class in kqcircuits.junctions.no_squid)": [[71, "kqcircuits.junctions.no_squid.NoSquid"]], "build() (kqcircuits.junctions.no_squid.nosquid method)": [[71, "kqcircuits.junctions.no_squid.NoSquid.build"]], "kqcircuits.junctions.no_squid": [[71, "module-kqcircuits.junctions.no_squid"]], "sim (class in kqcircuits.junctions.sim)": [[72, "kqcircuits.junctions.sim.Sim"]], "build() (kqcircuits.junctions.sim.sim method)": [[72, "kqcircuits.junctions.sim.Sim.build"]], "kqcircuits.junctions.sim": [[72, "module-kqcircuits.junctions.sim"]], "squid (class in kqcircuits.junctions.squid)": [[73, "kqcircuits.junctions.squid.Squid"]], "kqcircuits.junctions.squid": [[73, "module-kqcircuits.junctions.squid"]], "klayoutview (class in kqcircuits.klayout_view)": [[74, "kqcircuits.klayout_view.KLayoutView"]], "missinguilibraryexception": [[74, "kqcircuits.klayout_view.MissingUILibraryException"]], "active_cell (kqcircuits.klayout_view.klayoutview property)": [[74, "kqcircuits.klayout_view.KLayoutView.active_cell"]], "add_default_layers() (kqcircuits.klayout_view.klayoutview method)": [[74, "kqcircuits.klayout_view.KLayoutView.add_default_layers"]], "cell_view (kqcircuits.klayout_view.klayoutview property)": [[74, "kqcircuits.klayout_view.KLayoutView.cell_view"]], "clear_layers() (kqcircuits.klayout_view.klayoutview method)": [[74, "kqcircuits.klayout_view.KLayoutView.clear_layers"]], "close() (kqcircuits.klayout_view.klayoutview method)": [[74, "kqcircuits.klayout_view.KLayoutView.close"]], "create_top_cell() (kqcircuits.klayout_view.klayoutview method)": [[74, "kqcircuits.klayout_view.KLayoutView.create_top_cell"]], "export_all_layers_bitmap() (kqcircuits.klayout_view.klayoutview method)": [[74, "kqcircuits.klayout_view.KLayoutView.export_all_layers_bitmap"]], "export_layers_bitmaps() (kqcircuits.klayout_view.klayoutview method)": [[74, "kqcircuits.klayout_view.KLayoutView.export_layers_bitmaps"]], "export_pcell_png() (kqcircuits.klayout_view.klayoutview method)": [[74, "kqcircuits.klayout_view.KLayoutView.export_pcell_png"]], "focus() (kqcircuits.klayout_view.klayoutview method)": [[74, "kqcircuits.klayout_view.KLayoutView.focus"]], "get_active_cell() (kqcircuits.klayout_view.klayoutview static method)": [[74, "kqcircuits.klayout_view.KLayoutView.get_active_cell"]], "get_active_cell_view() (kqcircuits.klayout_view.klayoutview static method)": [[74, "kqcircuits.klayout_view.KLayoutView.get_active_cell_view"]], "get_active_layout() (kqcircuits.klayout_view.klayoutview static method)": [[74, "kqcircuits.klayout_view.KLayoutView.get_active_layout"]], "get_pixels() (kqcircuits.klayout_view.klayoutview method)": [[74, "kqcircuits.klayout_view.KLayoutView.get_pixels"]], "insert_cell() (kqcircuits.klayout_view.klayoutview method)": [[74, "kqcircuits.klayout_view.KLayoutView.insert_cell"]], "kqcircuits.klayout_view": [[74, "module-kqcircuits.klayout_view"]], "layout (kqcircuits.klayout_view.klayoutview property)": [[74, "kqcircuits.klayout_view.KLayoutView.layout"]], "layout_view (kqcircuits.klayout_view.klayoutview attribute)": [[74, "kqcircuits.klayout_view.KLayoutView.layout_view"]], "resolve_default_layer_info() (in module kqcircuits.klayout_view)": [[74, "kqcircuits.klayout_view.resolve_default_layer_info"]], "show() (kqcircuits.klayout_view.klayoutview method)": [[74, "kqcircuits.klayout_view.KLayoutView.show"]], "top_cell (kqcircuits.klayout_view.klayoutview property)": [[74, "kqcircuits.klayout_view.KLayoutView.top_cell"]], "layercluster (class in kqcircuits.layer_cluster)": [[75, "kqcircuits.layer_cluster.LayerCluster"]], "all_layers() (kqcircuits.layer_cluster.layercluster method)": [[75, "kqcircuits.layer_cluster.LayerCluster.all_layers"]], "extra_layers (kqcircuits.layer_cluster.layercluster attribute)": [[75, "kqcircuits.layer_cluster.LayerCluster.extra_layers"]], "face_id (kqcircuits.layer_cluster.layercluster attribute)": [[75, "kqcircuits.layer_cluster.LayerCluster.face_id"]], "kqcircuits.layer_cluster": [[75, "module-kqcircuits.layer_cluster"]], "main_layers (kqcircuits.layer_cluster.layercluster attribute)": [[75, "kqcircuits.layer_cluster.LayerCluster.main_layers"]], "kqcircuits.layer_config": [[76, "module-kqcircuits.layer_config"]], "kqcircuits.layer_config.default_layer_config": [[77, "module-kqcircuits.layer_config.default_layer_config"]], "kqcircuits.layer_config.example_layer_config": [[78, "module-kqcircuits.layer_config.example_layer_config"]], "kqcircuits.masks": [[79, "module-kqcircuits.masks"]], "export_bitmaps() (in module kqcircuits.masks.mask_export)": [[80, "kqcircuits.masks.mask_export.export_bitmaps"]], "export_chip() (in module kqcircuits.masks.mask_export)": [[80, "kqcircuits.masks.mask_export.export_chip"]], "export_designs() (in module kqcircuits.masks.mask_export)": [[80, "kqcircuits.masks.mask_export.export_designs"]], "export_docs() (in module kqcircuits.masks.mask_export)": [[80, "kqcircuits.masks.mask_export.export_docs"]], "export_junction_parameters() (in module kqcircuits.masks.mask_export)": [[80, "kqcircuits.masks.mask_export.export_junction_parameters"]], "export_mask() (in module kqcircuits.masks.mask_export)": [[80, "kqcircuits.masks.mask_export.export_mask"]], "export_mask_set() (in module kqcircuits.masks.mask_export)": [[80, "kqcircuits.masks.mask_export.export_mask_set"]], "export_masks_of_face() (in module kqcircuits.masks.mask_export)": [[80, "kqcircuits.masks.mask_export.export_masks_of_face"]], "get_mask_layout_full_name() (in module kqcircuits.masks.mask_export)": [[80, "kqcircuits.masks.mask_export.get_mask_layout_full_name"]], "kqcircuits.masks.mask_export": [[80, "module-kqcircuits.masks.mask_export"]], "masklayout (class in kqcircuits.masks.mask_layout)": [[81, "kqcircuits.masks.mask_layout.MaskLayout"]], "add_chips_map() (kqcircuits.masks.mask_layout.masklayout method)": [[81, "kqcircuits.masks.mask_layout.MaskLayout.add_chips_map"]], "added_chips (kqcircuits.masks.mask_layout.masklayout attribute)": [[81, "kqcircuits.masks.mask_layout.MaskLayout.added_chips"]], "align_to (kqcircuits.masks.mask_layout.masklayout attribute)": [[81, "kqcircuits.masks.mask_layout.MaskLayout.align_to"]], "bbox_face_ids (kqcircuits.masks.mask_layout.masklayout attribute)": [[81, "kqcircuits.masks.mask_layout.MaskLayout.bbox_face_ids"]], "build() (kqcircuits.masks.mask_layout.masklayout method)": [[81, "kqcircuits.masks.mask_layout.MaskLayout.build"]], "chip_box_offset (kqcircuits.masks.mask_layout.masklayout attribute)": [[81, "kqcircuits.masks.mask_layout.MaskLayout.chip_box_offset"]], "chip_copies (kqcircuits.masks.mask_layout.masklayout attribute)": [[81, "kqcircuits.masks.mask_layout.MaskLayout.chip_copies"]], "chip_size (kqcircuits.masks.mask_layout.masklayout attribute)": [[81, "kqcircuits.masks.mask_layout.MaskLayout.chip_size"]], "chip_trans (kqcircuits.masks.mask_layout.masklayout attribute)": [[81, "kqcircuits.masks.mask_layout.MaskLayout.chip_trans"]], "chips_map (kqcircuits.masks.mask_layout.masklayout attribute)": [[81, "kqcircuits.masks.mask_layout.MaskLayout.chips_map"]], "chips_map_legend (kqcircuits.masks.mask_layout.masklayout attribute)": [[81, "kqcircuits.masks.mask_layout.MaskLayout.chips_map_legend"]], "chips_map_offset (kqcircuits.masks.mask_layout.masklayout attribute)": [[81, "kqcircuits.masks.mask_layout.MaskLayout.chips_map_offset"]], "chips_placed_by_position_label (kqcircuits.masks.mask_layout.masklayout attribute)": [[81, "kqcircuits.masks.mask_layout.MaskLayout.chips_placed_by_position_label"]], "covered_region_excluded_layers (kqcircuits.masks.mask_layout.masklayout attribute)": [[81, "kqcircuits.masks.mask_layout.MaskLayout.covered_region_excluded_layers"]], "dice_width (kqcircuits.masks.mask_layout.masklayout attribute)": [[81, "kqcircuits.masks.mask_layout.MaskLayout.dice_width"]], "edge_clearance (kqcircuits.masks.mask_layout.masklayout attribute)": [[81, "kqcircuits.masks.mask_layout.MaskLayout.edge_clearance"]], "extra_chips (kqcircuits.masks.mask_layout.masklayout attribute)": [[81, "kqcircuits.masks.mask_layout.MaskLayout.extra_chips"]], "extra_id (kqcircuits.masks.mask_layout.masklayout attribute)": [[81, "kqcircuits.masks.mask_layout.MaskLayout.extra_id"]], "face() (kqcircuits.masks.mask_layout.masklayout method)": [[81, "kqcircuits.masks.mask_layout.MaskLayout.face"]], "face_id (kqcircuits.masks.mask_layout.masklayout attribute)": [[81, "kqcircuits.masks.mask_layout.MaskLayout.face_id"]], "insert_chip_copy_labels() (kqcircuits.masks.mask_layout.masklayout method)": [[81, "kqcircuits.masks.mask_layout.MaskLayout.insert_chip_copy_labels"]], "insert_chips() (kqcircuits.masks.mask_layout.masklayout method)": [[81, "kqcircuits.masks.mask_layout.MaskLayout.insert_chips"]], "kqcircuits.masks.mask_layout": [[81, "module-kqcircuits.masks.mask_layout"]], "layers_to_mask (kqcircuits.masks.mask_layout.masklayout attribute)": [[81, "kqcircuits.masks.mask_layout.MaskLayout.layers_to_mask"]], "layout (kqcircuits.masks.mask_layout.masklayout attribute)": [[81, "kqcircuits.masks.mask_layout.MaskLayout.layout"]], "mask_export_density_layers (kqcircuits.masks.mask_layout.masklayout attribute)": [[81, "kqcircuits.masks.mask_layout.MaskLayout.mask_export_density_layers"]], "mask_export_layers (kqcircuits.masks.mask_layout.masklayout attribute)": [[81, "kqcircuits.masks.mask_layout.MaskLayout.mask_export_layers"]], "mask_marker_offset (kqcircuits.masks.mask_layout.masklayout attribute)": [[81, "kqcircuits.masks.mask_layout.MaskLayout.mask_marker_offset"]], "mask_markers_dict (kqcircuits.masks.mask_layout.masklayout attribute)": [[81, "kqcircuits.masks.mask_layout.MaskLayout.mask_markers_dict"]], "mask_name_box_margin (kqcircuits.masks.mask_layout.masklayout attribute)": [[81, "kqcircuits.masks.mask_layout.MaskLayout.mask_name_box_margin"]], "mask_name_offset (kqcircuits.masks.mask_layout.masklayout attribute)": [[81, "kqcircuits.masks.mask_layout.MaskLayout.mask_name_offset"]], "mask_name_scale (kqcircuits.masks.mask_layout.masklayout attribute)": [[81, "kqcircuits.masks.mask_layout.MaskLayout.mask_name_scale"]], "mask_text_scale (kqcircuits.masks.mask_layout.masklayout attribute)": [[81, "kqcircuits.masks.mask_layout.MaskLayout.mask_text_scale"]], "mirror_labels (kqcircuits.masks.mask_layout.masklayout attribute)": [[81, "kqcircuits.masks.mask_layout.MaskLayout.mirror_labels"]], "name (kqcircuits.masks.mask_layout.masklayout attribute)": [[81, "kqcircuits.masks.mask_layout.MaskLayout.name"]], "overwrite_chips_by_position_label() (kqcircuits.masks.mask_layout.masklayout method)": [[81, "kqcircuits.masks.mask_layout.MaskLayout.overwrite_chips_by_position_label"]], "position_label_to_two_coordinates() (kqcircuits.masks.mask_layout.masklayout static method)": [[81, "kqcircuits.masks.mask_layout.MaskLayout.position_label_to_two_coordinates"]], "remove_chips (kqcircuits.masks.mask_layout.masklayout attribute)": [[81, "kqcircuits.masks.mask_layout.MaskLayout.remove_chips"]], "submasks (kqcircuits.masks.mask_layout.masklayout attribute)": [[81, "kqcircuits.masks.mask_layout.MaskLayout.submasks"]], "text_margin (kqcircuits.masks.mask_layout.masklayout attribute)": [[81, "kqcircuits.masks.mask_layout.MaskLayout.text_margin"]], "top_cell (kqcircuits.masks.mask_layout.masklayout attribute)": [[81, "kqcircuits.masks.mask_layout.MaskLayout.top_cell"]], "two_coordinates_to_position_label() (kqcircuits.masks.mask_layout.masklayout static method)": [[81, "kqcircuits.masks.mask_layout.MaskLayout.two_coordinates_to_position_label"]], "version (kqcircuits.masks.mask_layout.masklayout attribute)": [[81, "kqcircuits.masks.mask_layout.MaskLayout.version"]], "wafer_bottom_flat_length (kqcircuits.masks.mask_layout.masklayout attribute)": [[81, "kqcircuits.masks.mask_layout.MaskLayout.wafer_bottom_flat_length"]], "wafer_center (kqcircuits.masks.mask_layout.masklayout attribute)": [[81, "kqcircuits.masks.mask_layout.MaskLayout.wafer_center"]], "wafer_rad (kqcircuits.masks.mask_layout.masklayout attribute)": [[81, "kqcircuits.masks.mask_layout.MaskLayout.wafer_rad"]], "wafer_top_flat_length (kqcircuits.masks.mask_layout.masklayout attribute)": [[81, "kqcircuits.masks.mask_layout.MaskLayout.wafer_top_flat_length"]], "with_grid (kqcircuits.masks.mask_layout.masklayout attribute)": [[81, "kqcircuits.masks.mask_layout.MaskLayout.with_grid"]], "maskset (class in kqcircuits.masks.mask_set)": [[82, "kqcircuits.masks.mask_set.MaskSet"]], "add_chip() (kqcircuits.masks.mask_set.maskset method)": [[82, "kqcircuits.masks.mask_set.MaskSet.add_chip"]], "add_mask_layout() (kqcircuits.masks.mask_set.maskset method)": [[82, "kqcircuits.masks.mask_set.MaskSet.add_mask_layout"]], "add_multi_face_mask_layout() (kqcircuits.masks.mask_set.maskset method)": [[82, "kqcircuits.masks.mask_set.MaskSet.add_multi_face_mask_layout"]], "build() (kqcircuits.masks.mask_set.maskset method)": [[82, "kqcircuits.masks.mask_set.MaskSet.build"]], "chips_map_from_box_map() (kqcircuits.masks.mask_set.maskset static method)": [[82, "kqcircuits.masks.mask_set.MaskSet.chips_map_from_box_map"]], "chips_map_legend (kqcircuits.masks.mask_set.maskset attribute)": [[82, "kqcircuits.masks.mask_set.MaskSet.chips_map_legend"]], "export() (kqcircuits.masks.mask_set.maskset method)": [[82, "kqcircuits.masks.mask_set.MaskSet.export"]], "export_drc (kqcircuits.masks.mask_set.maskset attribute)": [[82, "kqcircuits.masks.mask_set.MaskSet.export_drc"]], "export_path (kqcircuits.masks.mask_set.maskset attribute)": [[82, "kqcircuits.masks.mask_set.MaskSet.export_path"]], "kqcircuits.masks.mask_set": [[82, "module-kqcircuits.masks.mask_set"]], "layout (kqcircuits.masks.mask_set.maskset attribute)": [[82, "kqcircuits.masks.mask_set.MaskSet.layout"]], "mask_export_layers (kqcircuits.masks.mask_set.maskset attribute)": [[82, "kqcircuits.masks.mask_set.MaskSet.mask_export_layers"]], "mask_layouts (kqcircuits.masks.mask_set.maskset attribute)": [[82, "kqcircuits.masks.mask_set.MaskSet.mask_layouts"]], "name (kqcircuits.masks.mask_set.maskset attribute)": [[82, "kqcircuits.masks.mask_set.MaskSet.name"]], "used_chips (kqcircuits.masks.mask_set.maskset attribute)": [[82, "kqcircuits.masks.mask_set.MaskSet.used_chips"]], "version (kqcircuits.masks.mask_set.maskset attribute)": [[82, "kqcircuits.masks.mask_set.MaskSet.version"]], "with_grid (kqcircuits.masks.mask_set.maskset attribute)": [[82, "kqcircuits.masks.mask_set.MaskSet.with_grid"]], "multifacemasklayout (class in kqcircuits.masks.multi_face_mask_layout)": [[83, "kqcircuits.masks.multi_face_mask_layout.MultiFaceMaskLayout"]], "add_chips_map() (kqcircuits.masks.multi_face_mask_layout.multifacemasklayout method)": [[83, "kqcircuits.masks.multi_face_mask_layout.MultiFaceMaskLayout.add_chips_map"]], "face_ids (kqcircuits.masks.multi_face_mask_layout.multifacemasklayout attribute)": [[83, "kqcircuits.masks.multi_face_mask_layout.MultiFaceMaskLayout.face_ids"]], "kqcircuits.masks.multi_face_mask_layout": [[83, "module-kqcircuits.masks.multi_face_mask_layout"]], "mask_layouts (kqcircuits.masks.multi_face_mask_layout.multifacemasklayout attribute)": [[83, "kqcircuits.masks.multi_face_mask_layout.MultiFaceMaskLayout.mask_layouts"]], "is_standalone_session() (in module kqcircuits.pya_resolver)": [[84, "kqcircuits.pya_resolver.is_standalone_session"]], "klayout_executable_command() (in module kqcircuits.pya_resolver)": [[84, "kqcircuits.pya_resolver.klayout_executable_command"]], "kqcircuits.pya_resolver": [[84, "module-kqcircuits.pya_resolver"]], "kqcircuits.qubits": [[85, "module-kqcircuits.qubits"]], "concentrictransmon (class in kqcircuits.qubits.concentric_transmon)": [[86, "kqcircuits.qubits.concentric_transmon.ConcentricTransmon"]], "build() (kqcircuits.qubits.concentric_transmon.concentrictransmon method)": [[86, "kqcircuits.qubits.concentric_transmon.ConcentricTransmon.build"]], "get_sim_ports() (kqcircuits.qubits.concentric_transmon.concentrictransmon class method)": [[86, "kqcircuits.qubits.concentric_transmon.ConcentricTransmon.get_sim_ports"]], "kqcircuits.qubits.concentric_transmon": [[86, "module-kqcircuits.qubits.concentric_transmon"]], "doublepads (class in kqcircuits.qubits.double_pads)": [[87, "kqcircuits.qubits.double_pads.DoublePads"]], "build() (kqcircuits.qubits.double_pads.doublepads method)": [[87, "kqcircuits.qubits.double_pads.DoublePads.build"]], "get_sim_ports() (kqcircuits.qubits.double_pads.doublepads class method)": [[87, "kqcircuits.qubits.double_pads.DoublePads.get_sim_ports"]], "kqcircuits.qubits.double_pads": [[87, "module-kqcircuits.qubits.double_pads"]], "doublepadssplines (class in kqcircuits.qubits.double_pads_splines)": [[88, "kqcircuits.qubits.double_pads_splines.DoublePadsSplines"]], "kqcircuits.qubits.double_pads_splines": [[88, "module-kqcircuits.qubits.double_pads_splines"]], "library_description (kqcircuits.qubits.qubit.qubit attribute)": [[89, "kqcircuits.qubits.qubit.Qubit.LIBRARY_DESCRIPTION"]], "library_name (kqcircuits.qubits.qubit.qubit attribute)": [[89, "kqcircuits.qubits.qubit.Qubit.LIBRARY_NAME"]], "library_path (kqcircuits.qubits.qubit.qubit attribute)": [[89, "kqcircuits.qubits.qubit.Qubit.LIBRARY_PATH"]], "qubit (class in kqcircuits.qubits.qubit)": [[89, "kqcircuits.qubits.qubit.Qubit"]], "coerce_parameters_impl() (kqcircuits.qubits.qubit.qubit method)": [[89, "kqcircuits.qubits.qubit.Qubit.coerce_parameters_impl"]], "kqcircuits.qubits.qubit": [[89, "module-kqcircuits.qubits.qubit"]], "produce_fluxline() (kqcircuits.qubits.qubit.qubit method)": [[89, "kqcircuits.qubits.qubit.Qubit.produce_fluxline"]], "produce_squid() (kqcircuits.qubits.qubit.qubit method)": [[89, "kqcircuits.qubits.qubit.Qubit.produce_squid"]], "swissmon (class in kqcircuits.qubits.swissmon)": [[90, "kqcircuits.qubits.swissmon.Swissmon"]], "build() (kqcircuits.qubits.swissmon.swissmon method)": [[90, "kqcircuits.qubits.swissmon.Swissmon.build"]], "get_sim_ports() (kqcircuits.qubits.swissmon.swissmon class method)": [[90, "kqcircuits.qubits.swissmon.Swissmon.get_sim_ports"]], "kqcircuits.qubits.swissmon": [[90, "module-kqcircuits.qubits.swissmon"]], "kqcircuits.run": [[91, "module-kqcircuits.run"]], "run() (in module kqcircuits.run)": [[91, "kqcircuits.run.run"]], "kqcircuits.simulations": [[92, "module-kqcircuits.simulations"]], "airbridgessim (class in kqcircuits.simulations.airbridges_sim)": [[93, "kqcircuits.simulations.airbridges_sim.AirbridgesSim"]], "build() (kqcircuits.simulations.airbridges_sim.airbridgessim method)": [[93, "kqcircuits.simulations.airbridges_sim.AirbridgesSim.build"]], "kqcircuits.simulations.airbridges_sim": [[93, "module-kqcircuits.simulations.airbridges_sim"]], "ports (kqcircuits.simulations.airbridges_sim.airbridgessim attribute)": [[93, "kqcircuits.simulations.airbridges_sim.AirbridgesSim.ports"]], "crosssectionsimulation (class in kqcircuits.simulations.cross_section_simulation)": [[94, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation"]], "library_name (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation attribute)": [[94, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.LIBRARY_NAME"]], "build() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[94, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.build"]], "get_parameters() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[94, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.get_parameters"]], "get_schema() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation class method)": [[94, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.get_schema"]], "get_sim_layer() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[94, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.get_sim_layer"]], "get_simulation_data() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[94, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.get_simulation_data"]], "kqcircuits.simulations.cross_section_simulation": [[94, "module-kqcircuits.simulations.cross_section_simulation"]], "register_cell_layers_as_sim_layers() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[94, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.register_cell_layers_as_sim_layers"]], "set_permittivity() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[94, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.set_permittivity"]], "emptysimulation (class in kqcircuits.simulations.empty_simulation)": [[95, "kqcircuits.simulations.empty_simulation.EmptySimulation"]], "build() (kqcircuits.simulations.empty_simulation.emptysimulation method)": [[95, "kqcircuits.simulations.empty_simulation.EmptySimulation.build"]], "kqcircuits.simulations.empty_simulation": [[95, "module-kqcircuits.simulations.empty_simulation"]], "ports (kqcircuits.simulations.empty_simulation.emptysimulation attribute)": [[95, "kqcircuits.simulations.empty_simulation.EmptySimulation.ports"]], "kqcircuits.simulations.export": [[96, "module-kqcircuits.simulations.export"]], "kqcircuits.simulations.export.ansys": [[97, "module-kqcircuits.simulations.export.ansys"]], "export_ansys() (in module kqcircuits.simulations.export.ansys.ansys_export)": [[98, "kqcircuits.simulations.export.ansys.ansys_export.export_ansys"]], "export_ansys_bat() (in module kqcircuits.simulations.export.ansys.ansys_export)": [[98, "kqcircuits.simulations.export.ansys.ansys_export.export_ansys_bat"]], "export_ansys_json() (in module kqcircuits.simulations.export.ansys.ansys_export)": [[98, "kqcircuits.simulations.export.ansys.ansys_export.export_ansys_json"]], "kqcircuits.simulations.export.ansys.ansys_export": [[98, "module-kqcircuits.simulations.export.ansys.ansys_export"]], "kqcircuits.simulations.export.elmer": [[99, "module-kqcircuits.simulations.export.elmer"]], "export_elmer() (in module kqcircuits.simulations.export.elmer.elmer_export)": [[100, "kqcircuits.simulations.export.elmer.elmer_export.export_elmer"]], "export_elmer_json() (in module kqcircuits.simulations.export.elmer.elmer_export)": [[100, "kqcircuits.simulations.export.elmer.elmer_export.export_elmer_json"]], "export_elmer_script() (in module kqcircuits.simulations.export.elmer.elmer_export)": [[100, "kqcircuits.simulations.export.elmer.elmer_export.export_elmer_script"]], "kqcircuits.simulations.export.elmer.elmer_export": [[100, "module-kqcircuits.simulations.export.elmer.elmer_export"]], "export_and_run() (in module kqcircuits.simulations.export.export_and_run)": [[101, "kqcircuits.simulations.export.export_and_run.export_and_run"]], "kqcircuits.simulations.export.export_and_run": [[101, "module-kqcircuits.simulations.export.export_and_run"]], "export_singularity() (in module kqcircuits.simulations.export.export_singularity)": [[102, "kqcircuits.simulations.export.export_singularity.export_singularity"]], "kqcircuits.simulations.export.export_singularity": [[102, "module-kqcircuits.simulations.export.export_singularity"]], "kqcircuits.simulations.export.remote_export_and_run": [[103, "module-kqcircuits.simulations.export.remote_export_and_run"]], "remote_export_and_run() (in module kqcircuits.simulations.export.remote_export_and_run)": [[103, "kqcircuits.simulations.export.remote_export_and_run.remote_export_and_run"]], "remote_run_only() (in module kqcircuits.simulations.export.remote_export_and_run)": [[103, "kqcircuits.simulations.export.remote_export_and_run.remote_run_only"]], "copy_content_into_directory() (in module kqcircuits.simulations.export.simulation_export)": [[104, "kqcircuits.simulations.export.simulation_export.copy_content_into_directory"]], "cross_sweep_simulation() (in module kqcircuits.simulations.export.simulation_export)": [[104, "kqcircuits.simulations.export.simulation_export.cross_sweep_simulation"]], "export_simulation_oas() (in module kqcircuits.simulations.export.simulation_export)": [[104, "kqcircuits.simulations.export.simulation_export.export_simulation_oas"]], "get_post_process_command_lines() (in module kqcircuits.simulations.export.simulation_export)": [[104, "kqcircuits.simulations.export.simulation_export.get_post_process_command_lines"]], "kqcircuits.simulations.export.simulation_export": [[104, "module-kqcircuits.simulations.export.simulation_export"]], "sweep_simulation() (in module kqcircuits.simulations.export.simulation_export)": [[104, "kqcircuits.simulations.export.simulation_export.sweep_simulation"]], "kqcircuits.simulations.export.sonnet": [[105, "module-kqcircuits.simulations.export.sonnet"]], "apply_template() (in module kqcircuits.simulations.export.sonnet.parser)": [[106, "kqcircuits.simulations.export.sonnet.parser.apply_template"]], "box() (in module kqcircuits.simulations.export.sonnet.parser)": [[106, "kqcircuits.simulations.export.sonnet.parser.box"]], "control() (in module kqcircuits.simulations.export.sonnet.parser)": [[106, "kqcircuits.simulations.export.sonnet.parser.control"]], "kqcircuits.simulations.export.sonnet.parser": [[106, "module-kqcircuits.simulations.export.sonnet.parser"]], "polygon_head() (in module kqcircuits.simulations.export.sonnet.parser)": [[106, "kqcircuits.simulations.export.sonnet.parser.polygon_head"]], "polygons() (in module kqcircuits.simulations.export.sonnet.parser)": [[106, "kqcircuits.simulations.export.sonnet.parser.polygons"]], "port() (in module kqcircuits.simulations.export.sonnet.parser)": [[106, "kqcircuits.simulations.export.sonnet.parser.port"]], "refplane() (in module kqcircuits.simulations.export.sonnet.parser)": [[106, "kqcircuits.simulations.export.sonnet.parser.refplane"]], "refplanes() (in module kqcircuits.simulations.export.sonnet.parser)": [[106, "kqcircuits.simulations.export.sonnet.parser.refplanes"]], "symmetry() (in module kqcircuits.simulations.export.sonnet.parser)": [[106, "kqcircuits.simulations.export.sonnet.parser.symmetry"]], "via() (in module kqcircuits.simulations.export.sonnet.parser)": [[106, "kqcircuits.simulations.export.sonnet.parser.via"]], "export_sonnet() (in module kqcircuits.simulations.export.sonnet.sonnet_export)": [[107, "kqcircuits.simulations.export.sonnet.sonnet_export.export_sonnet"]], "export_sonnet_son() (in module kqcircuits.simulations.export.sonnet.sonnet_export)": [[107, "kqcircuits.simulations.export.sonnet.sonnet_export.export_sonnet_son"]], "kqcircuits.simulations.export.sonnet.sonnet_export": [[107, "module-kqcircuits.simulations.export.sonnet.sonnet_export"]], "poly_and_edge_indices() (in module kqcircuits.simulations.export.sonnet.sonnet_export)": [[107, "kqcircuits.simulations.export.sonnet.sonnet_export.poly_and_edge_indices"]], "export_layers() (in module kqcircuits.simulations.export.util)": [[108, "kqcircuits.simulations.export.util.export_layers"]], "find_edge_from_point_in_cell() (in module kqcircuits.simulations.export.util)": [[108, "kqcircuits.simulations.export.util.find_edge_from_point_in_cell"]], "find_edge_from_point_in_polygons() (in module kqcircuits.simulations.export.util)": [[108, "kqcircuits.simulations.export.util.find_edge_from_point_in_polygons"]], "get_enclosing_polygon() (in module kqcircuits.simulations.export.util)": [[108, "kqcircuits.simulations.export.util.get_enclosing_polygon"]], "kqcircuits.simulations.export.util": [[108, "module-kqcircuits.simulations.export.util"]], "kqcircuits.simulations.export.xsection": [[109, "module-kqcircuits.simulations.export.xsection"]], "create_xsections_from_simulations() (in module kqcircuits.simulations.export.xsection.xsection_export)": [[110, "kqcircuits.simulations.export.xsection.xsection_export.create_xsections_from_simulations"]], "find_layer_by_name() (in module kqcircuits.simulations.export.xsection.xsection_export)": [[110, "kqcircuits.simulations.export.xsection.xsection_export.find_layer_by_name"]], "free_layer_slots() (in module kqcircuits.simulations.export.xsection.xsection_export)": [[110, "kqcircuits.simulations.export.xsection.xsection_export.free_layer_slots"]], "kqcircuits.simulations.export.xsection.xsection_export": [[110, "module-kqcircuits.simulations.export.xsection.xsection_export"]], "separate_signal_layer_shapes() (in module kqcircuits.simulations.export.xsection.xsection_export)": [[110, "kqcircuits.simulations.export.xsection.xsection_export.separate_signal_layer_shapes"]], "visualise_xsection_cut_on_original_layout() (in module kqcircuits.simulations.export.xsection.xsection_export)": [[110, "kqcircuits.simulations.export.xsection.xsection_export.visualise_xsection_cut_on_original_layout"]], "xsection_call() (in module kqcircuits.simulations.export.xsection.xsection_export)": [[110, "kqcircuits.simulations.export.xsection.xsection_export.xsection_call"]], "partitionregion (class in kqcircuits.simulations.partition_region)": [[111, "kqcircuits.simulations.partition_region.PartitionRegion"]], "get_list_of_two() (in module kqcircuits.simulations.partition_region)": [[111, "kqcircuits.simulations.partition_region.get_list_of_two"]], "kqcircuits.simulations.partition_region": [[111, "module-kqcircuits.simulations.partition_region"]], "limit_box() (kqcircuits.simulations.partition_region.partitionregion method)": [[111, "kqcircuits.simulations.partition_region.PartitionRegion.limit_box"]], "limit_face() (kqcircuits.simulations.partition_region.partitionregion method)": [[111, "kqcircuits.simulations.partition_region.PartitionRegion.limit_face"]], "edgeport (class in kqcircuits.simulations.port)": [[112, "kqcircuits.simulations.port.EdgePort"]], "internalport (class in kqcircuits.simulations.port)": [[112, "kqcircuits.simulations.port.InternalPort"]], "port (class in kqcircuits.simulations.port)": [[112, "kqcircuits.simulations.port.Port"]], "as_dict() (kqcircuits.simulations.port.port method)": [[112, "kqcircuits.simulations.port.Port.as_dict"]], "kqcircuits.simulations.port": [[112, "module-kqcircuits.simulations.port"]], "postprocess (class in kqcircuits.simulations.post_process)": [[113, "kqcircuits.simulations.post_process.PostProcess"]], "get_command_line() (kqcircuits.simulations.post_process.postprocess method)": [[113, "kqcircuits.simulations.post_process.PostProcess.get_command_line"]], "kqcircuits.simulations.post_process": [[113, "module-kqcircuits.simulations.post_process"]], "library_name (kqcircuits.simulations.simulation.simulation attribute)": [[114, "kqcircuits.simulations.simulation.Simulation.LIBRARY_NAME"]], "simulation (class in kqcircuits.simulations.simulation)": [[114, "kqcircuits.simulations.simulation.Simulation"]], "add_element() (kqcircuits.simulations.simulation.simulation method)": [[114, "kqcircuits.simulations.simulation.Simulation.add_element"]], "build() (kqcircuits.simulations.simulation.simulation method)": [[114, "kqcircuits.simulations.simulation.Simulation.build"]], "create_simulation_layers() (kqcircuits.simulations.simulation.simulation method)": [[114, "kqcircuits.simulations.simulation.Simulation.create_simulation_layers"]], "delete_instances() (kqcircuits.simulations.simulation.simulation static method)": [[114, "kqcircuits.simulations.simulation.Simulation.delete_instances"]], "etched_line() (kqcircuits.simulations.simulation.simulation method)": [[114, "kqcircuits.simulations.simulation.Simulation.etched_line"]], "face() (kqcircuits.simulations.simulation.simulation method)": [[114, "kqcircuits.simulations.simulation.Simulation.face"]], "face_stack_list_of_lists() (kqcircuits.simulations.simulation.simulation method)": [[114, "kqcircuits.simulations.simulation.Simulation.face_stack_list_of_lists"]], "face_z_levels() (kqcircuits.simulations.simulation.simulation method)": [[114, "kqcircuits.simulations.simulation.Simulation.face_z_levels"]], "from_cell() (kqcircuits.simulations.simulation.simulation class method)": [[114, "kqcircuits.simulations.simulation.Simulation.from_cell"]], "get_layer() (kqcircuits.simulations.simulation.simulation method)": [[114, "kqcircuits.simulations.simulation.Simulation.get_layer"]], "get_layers() (kqcircuits.simulations.simulation.simulation method)": [[114, "kqcircuits.simulations.simulation.Simulation.get_layers"]], "get_parameters() (kqcircuits.simulations.simulation.simulation method)": [[114, "kqcircuits.simulations.simulation.Simulation.get_parameters"]], "get_port_data() (kqcircuits.simulations.simulation.simulation method)": [[114, "kqcircuits.simulations.simulation.Simulation.get_port_data"]], "get_refpoints() (kqcircuits.simulations.simulation.simulation method)": [[114, "kqcircuits.simulations.simulation.Simulation.get_refpoints"]], "get_schema() (kqcircuits.simulations.simulation.simulation class method)": [[114, "kqcircuits.simulations.simulation.Simulation.get_schema"]], "get_simulation_data() (kqcircuits.simulations.simulation.simulation method)": [[114, "kqcircuits.simulations.simulation.Simulation.get_simulation_data"]], "get_simulation_layer_by_name() (in module kqcircuits.simulations.simulation)": [[114, "kqcircuits.simulations.simulation.get_simulation_layer_by_name"]], "ground_grid_region() (kqcircuits.simulations.simulation.simulation method)": [[114, "kqcircuits.simulations.simulation.Simulation.ground_grid_region"]], "insert_cell() (kqcircuits.simulations.simulation.simulation method)": [[114, "kqcircuits.simulations.simulation.Simulation.insert_cell"]], "insert_layer() (kqcircuits.simulations.simulation.simulation method)": [[114, "kqcircuits.simulations.simulation.Simulation.insert_layer"]], "insert_layers_between_faces() (kqcircuits.simulations.simulation.simulation method)": [[114, "kqcircuits.simulations.simulation.Simulation.insert_layers_between_faces"]], "insert_stacked_up_layers() (kqcircuits.simulations.simulation.simulation method)": [[114, "kqcircuits.simulations.simulation.Simulation.insert_stacked_up_layers"]], "ith_value() (kqcircuits.simulations.simulation.simulation static method)": [[114, "kqcircuits.simulations.simulation.Simulation.ith_value"]], "kqcircuits.simulations.simulation": [[114, "module-kqcircuits.simulations.simulation"]], "pcell_params_by_name() (kqcircuits.simulations.simulation.simulation method)": [[114, "kqcircuits.simulations.simulation.Simulation.pcell_params_by_name"]], "ports (kqcircuits.simulations.simulation.simulation attribute)": [[114, "kqcircuits.simulations.simulation.Simulation.ports"]], "produce_layers() (kqcircuits.simulations.simulation.simulation method)": [[114, "kqcircuits.simulations.simulation.Simulation.produce_layers"]], "produce_waveguide_to_port() (kqcircuits.simulations.simulation.simulation method)": [[114, "kqcircuits.simulations.simulation.Simulation.produce_waveguide_to_port"]], "region_from_layer() (kqcircuits.simulations.simulation.simulation method)": [[114, "kqcircuits.simulations.simulation.Simulation.region_from_layer"]], "simplified_region() (kqcircuits.simulations.simulation.simulation method)": [[114, "kqcircuits.simulations.simulation.Simulation.simplified_region"]], "get_single_element_sim_class() (in module kqcircuits.simulations.single_element_simulation)": [[115, "kqcircuits.simulations.single_element_simulation.get_single_element_sim_class"]], "kqcircuits.simulations.single_element_simulation": [[115, "module-kqcircuits.simulations.single_element_simulation"]], "singlexmonsfullchipsim (class in kqcircuits.simulations.single_xmons_full_chip_sim)": [[116, "kqcircuits.simulations.single_xmons_full_chip_sim.SingleXmonsFullChipSim"]], "build() (kqcircuits.simulations.single_xmons_full_chip_sim.singlexmonsfullchipsim method)": [[116, "kqcircuits.simulations.single_xmons_full_chip_sim.SingleXmonsFullChipSim.build"]], "kqcircuits.simulations.single_xmons_full_chip_sim": [[116, "module-kqcircuits.simulations.single_xmons_full_chip_sim"]], "waveguidessim (class in kqcircuits.simulations.waveguides_sim)": [[117, "kqcircuits.simulations.waveguides_sim.WaveGuidesSim"]], "build() (kqcircuits.simulations.waveguides_sim.waveguidessim method)": [[117, "kqcircuits.simulations.waveguides_sim.WaveGuidesSim.build"]], "kqcircuits.simulations.waveguides_sim": [[117, "module-kqcircuits.simulations.waveguides_sim"]], "ports (kqcircuits.simulations.waveguides_sim.waveguidessim attribute)": [[117, "kqcircuits.simulations.waveguides_sim.WaveGuidesSim.ports"]], "produce_ground_bumps() (kqcircuits.simulations.waveguides_sim.waveguidessim method)": [[117, "kqcircuits.simulations.waveguides_sim.WaveGuidesSim.produce_ground_bumps"]], "produce_guides() (kqcircuits.simulations.waveguides_sim.waveguidessim method)": [[117, "kqcircuits.simulations.waveguides_sim.WaveGuidesSim.produce_guides"]], "xmonsdirectcouplingfullchipsim (class in kqcircuits.simulations.xmons_direct_coupling_full_chip_sim)": [[118, "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim"]], "build() (kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.xmonsdirectcouplingfullchipsim method)": [[118, "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim.build"]], "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim": [[118, "module-kqcircuits.simulations.xmons_direct_coupling_full_chip_sim"]], "ports (kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.xmonsdirectcouplingfullchipsim attribute)": [[118, "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim.ports"]], "produce_launcher() (kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.xmonsdirectcouplingfullchipsim method)": [[118, "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim.produce_launcher"]], "produce_launchers_sma8() (kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.xmonsdirectcouplingfullchipsim method)": [[118, "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim.produce_launchers_SMA8"]], "produce_qubit() (kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.xmonsdirectcouplingfullchipsim method)": [[118, "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim.produce_qubit"]], "produce_readout_resonator() (kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.xmonsdirectcouplingfullchipsim method)": [[118, "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim.produce_readout_resonator"]], "produce_waveguide() (kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.xmonsdirectcouplingfullchipsim method)": [[118, "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim.produce_waveguide"]], "xmonsdirectcouplingsim (class in kqcircuits.simulations.xmons_direct_coupling_sim)": [[119, "kqcircuits.simulations.xmons_direct_coupling_sim.XMonsDirectCouplingSim"]], "build() (kqcircuits.simulations.xmons_direct_coupling_sim.xmonsdirectcouplingsim method)": [[119, "kqcircuits.simulations.xmons_direct_coupling_sim.XMonsDirectCouplingSim.build"]], "kqcircuits.simulations.xmons_direct_coupling_sim": [[119, "module-kqcircuits.simulations.xmons_direct_coupling_sim"]], "ports (kqcircuits.simulations.xmons_direct_coupling_sim.xmonsdirectcouplingsim attribute)": [[119, "kqcircuits.simulations.xmons_direct_coupling_sim.XMonsDirectCouplingSim.ports"]], "produce_qubits() (kqcircuits.simulations.xmons_direct_coupling_sim.xmonsdirectcouplingsim method)": [[119, "kqcircuits.simulations.xmons_direct_coupling_sim.XMonsDirectCouplingSim.produce_qubits"]], "kqcircuits.test_structures": [[120, "module-kqcircuits.test_structures"]], "airbridgedc (class in kqcircuits.test_structures.airbridge_dc)": [[121, "kqcircuits.test_structures.airbridge_dc.AirbridgeDC"]], "build() (kqcircuits.test_structures.airbridge_dc.airbridgedc method)": [[121, "kqcircuits.test_structures.airbridge_dc.AirbridgeDC.build"]], "kqcircuits.test_structures.airbridge_dc": [[121, "module-kqcircuits.test_structures.airbridge_dc"]], "crosstest (class in kqcircuits.test_structures.cross_test)": [[122, "kqcircuits.test_structures.cross_test.CrossTest"]], "build() (kqcircuits.test_structures.cross_test.crosstest method)": [[122, "kqcircuits.test_structures.cross_test.CrossTest.build"]], "kqcircuits.test_structures.cross_test": [[122, "module-kqcircuits.test_structures.cross_test"]], "kqcircuits.test_structures.junction_test_pads": [[123, "module-kqcircuits.test_structures.junction_test_pads"]], "junctiontestpads (class in kqcircuits.test_structures.junction_test_pads.junction_test_pads)": [[124, "kqcircuits.test_structures.junction_test_pads.junction_test_pads.JunctionTestPads"]], "coerce_parameters_impl() (kqcircuits.test_structures.junction_test_pads.junction_test_pads.junctiontestpads method)": [[124, "kqcircuits.test_structures.junction_test_pads.junction_test_pads.JunctionTestPads.coerce_parameters_impl"]], "create() (kqcircuits.test_structures.junction_test_pads.junction_test_pads.junctiontestpads class method)": [[124, "kqcircuits.test_structures.junction_test_pads.junction_test_pads.JunctionTestPads.create"]], "default_type (kqcircuits.test_structures.junction_test_pads.junction_test_pads.junctiontestpads attribute)": [[124, "kqcircuits.test_structures.junction_test_pads.junction_test_pads.JunctionTestPads.default_type"]], "kqcircuits.test_structures.junction_test_pads.junction_test_pads": [[124, "module-kqcircuits.test_structures.junction_test_pads.junction_test_pads"]], "produce_squid() (kqcircuits.test_structures.junction_test_pads.junction_test_pads.junctiontestpads method)": [[124, "kqcircuits.test_structures.junction_test_pads.junction_test_pads.JunctionTestPads.produce_squid"]], "junctiontestpadssimple (class in kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple)": [[125, "kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple.JunctionTestPadsSimple"]], "build() (kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple.junctiontestpadssimple method)": [[125, "kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple.JunctionTestPadsSimple.build"]], "kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple": [[125, "module-kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple"]], "stripestest (class in kqcircuits.test_structures.stripes_test)": [[126, "kqcircuits.test_structures.stripes_test.StripesTest"]], "build() (kqcircuits.test_structures.stripes_test.stripestest method)": [[126, "kqcircuits.test_structures.stripes_test.StripesTest.build"]], "kqcircuits.test_structures.stripes_test": [[126, "module-kqcircuits.test_structures.stripes_test"]], "stripestestincreasingwidth (class in kqcircuits.test_structures.stripes_test_increasing_width)": [[127, "kqcircuits.test_structures.stripes_test_increasing_width.StripesTestIncreasingWidth"]], "build() (kqcircuits.test_structures.stripes_test_increasing_width.stripestestincreasingwidth method)": [[127, "kqcircuits.test_structures.stripes_test_increasing_width.StripesTestIncreasingWidth.build"]], "kqcircuits.test_structures.stripes_test_increasing_width": [[127, "module-kqcircuits.test_structures.stripes_test_increasing_width"]], "library_description (kqcircuits.test_structures.test_structure.teststructure attribute)": [[128, "kqcircuits.test_structures.test_structure.TestStructure.LIBRARY_DESCRIPTION"]], "library_name (kqcircuits.test_structures.test_structure.teststructure attribute)": [[128, "kqcircuits.test_structures.test_structure.TestStructure.LIBRARY_NAME"]], "library_path (kqcircuits.test_structures.test_structure.teststructure attribute)": [[128, "kqcircuits.test_structures.test_structure.TestStructure.LIBRARY_PATH"]], "teststructure (class in kqcircuits.test_structures.test_structure)": [[128, "kqcircuits.test_structures.test_structure.TestStructure"]], "kqcircuits.test_structures.test_structure": [[128, "module-kqcircuits.test_structures.test_structure"]], "produce_etched_region() (kqcircuits.test_structures.test_structure.teststructure method)": [[128, "kqcircuits.test_structures.test_structure.TestStructure.produce_etched_region"]], "produce_four_point_pads() (kqcircuits.test_structures.test_structure.teststructure method)": [[128, "kqcircuits.test_structures.test_structure.TestStructure.produce_four_point_pads"]], "produce_pad() (kqcircuits.test_structures.test_structure.teststructure method)": [[128, "kqcircuits.test_structures.test_structure.TestStructure.produce_pad"]], "tsvtestpattern (class in kqcircuits.test_structures.tsv_test_pattern)": [[129, "kqcircuits.test_structures.tsv_test_pattern.TsvTestPattern"]], "build() (kqcircuits.test_structures.tsv_test_pattern.tsvtestpattern method)": [[129, "kqcircuits.test_structures.tsv_test_pattern.TsvTestPattern.build"]], "kqcircuits.test_structures.tsv_test_pattern": [[129, "module-kqcircuits.test_structures.tsv_test_pattern"]], "kqcircuits.util": [[130, "module-kqcircuits.util"]], "areareceiver (class in kqcircuits.util.area)": [[131, "kqcircuits.util.area.AreaReceiver"]], "get_area_and_density() (in module kqcircuits.util.area)": [[131, "kqcircuits.util.area.get_area_and_density"]], "kqcircuits.util.area": [[131, "module-kqcircuits.util.area"]], "put() (kqcircuits.util.area.areareceiver method)": [[131, "kqcircuits.util.area.AreaReceiver.put"]], "count_instances_in_cell() (in module kqcircuits.util.count_instances)": [[132, "kqcircuits.util.count_instances.count_instances_in_cell"]], "kqcircuits.util.count_instances": [[132, "module-kqcircuits.util.count_instances"]], "cap_params() (in module kqcircuits.util.coupler_lib)": [[133, "kqcircuits.util.coupler_lib.cap_params"]], "kqcircuits.util.coupler_lib": [[133, "module-kqcircuits.util.coupler_lib"]], "deep_delete_all() (in module kqcircuits.util.deep_delete)": [[134, "kqcircuits.util.deep_delete.deep_delete_all"]], "deep_delete_pcells() (in module kqcircuits.util.deep_delete)": [[134, "kqcircuits.util.deep_delete.deep_delete_pcells"]], "kqcircuits.util.deep_delete": [[134, "module-kqcircuits.util.deep_delete"]], "find_ansys_executable() (in module kqcircuits.util.defaults_helper)": [[135, "kqcircuits.util.defaults_helper.find_ansys_executable"]], "kqcircuits.util.defaults_helper": [[135, "module-kqcircuits.util.defaults_helper"]], "install_kqc_dependencies() (in module kqcircuits.util.dependencies)": [[136, "kqcircuits.util.dependencies.install_kqc_dependencies"]], "kqcircuits.util.dependencies": [[136, "module-kqcircuits.util.dependencies"]], "editnodeplugin (class in kqcircuits.util.edit_node_plugin)": [[137, "kqcircuits.util.edit_node_plugin.EditNodePlugin"]], "editnodepluginfactory (class in kqcircuits.util.edit_node_plugin)": [[137, "kqcircuits.util.edit_node_plugin.EditNodePluginFactory"]], "activated() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[137, "kqcircuits.util.edit_node_plugin.EditNodePlugin.activated"]], "create_dialog() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[137, "kqcircuits.util.edit_node_plugin.EditNodePlugin.create_dialog"]], "create_plugin() (kqcircuits.util.edit_node_plugin.editnodepluginfactory method)": [[137, "kqcircuits.util.edit_node_plugin.EditNodePluginFactory.create_plugin"]], "deactivated() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[137, "kqcircuits.util.edit_node_plugin.EditNodePlugin.deactivated"]], "deselect() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[137, "kqcircuits.util.edit_node_plugin.EditNodePlugin.deselect"]], "has_tracking_position() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[137, "kqcircuits.util.edit_node_plugin.EditNodePlugin.has_tracking_position"]], "kqcircuits.util.edit_node_plugin": [[137, "module-kqcircuits.util.edit_node_plugin"]], "mouse_click_event() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[137, "kqcircuits.util.edit_node_plugin.EditNodePlugin.mouse_click_event"]], "mouse_moved_event() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[137, "kqcircuits.util.edit_node_plugin.EditNodePlugin.mouse_moved_event"]], "select() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[137, "kqcircuits.util.edit_node_plugin.EditNodePlugin.select"]], "tracking_position() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[137, "kqcircuits.util.edit_node_plugin.EditNodePlugin.tracking_position"]], "update() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[137, "kqcircuits.util.edit_node_plugin.EditNodePlugin.update"]], "update_form_from_node() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[137, "kqcircuits.util.edit_node_plugin.EditNodePlugin.update_form_from_node"]], "update_node_from_form() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[137, "kqcircuits.util.edit_node_plugin.EditNodePlugin.update_node_from_form"]], "create_or_empty_tmp_directory() (in module kqcircuits.util.export_helper)": [[138, "kqcircuits.util.export_helper.create_or_empty_tmp_directory"]], "export_drc_report() (in module kqcircuits.util.export_helper)": [[138, "kqcircuits.util.export_helper.export_drc_report"]], "generate_probepoints_from_file() (in module kqcircuits.util.export_helper)": [[138, "kqcircuits.util.export_helper.generate_probepoints_from_file"]], "generate_probepoints_json() (in module kqcircuits.util.export_helper)": [[138, "kqcircuits.util.export_helper.generate_probepoints_json"]], "get_active_or_new_layout() (in module kqcircuits.util.export_helper)": [[138, "kqcircuits.util.export_helper.get_active_or_new_layout"]], "get_klayout_version() (in module kqcircuits.util.export_helper)": [[138, "kqcircuits.util.export_helper.get_klayout_version"]], "get_simulation_directory() (in module kqcircuits.util.export_helper)": [[138, "kqcircuits.util.export_helper.get_simulation_directory"]], "kqcircuits.util.export_helper": [[138, "module-kqcircuits.util.export_helper"]], "open_with_klayout_or_default_application() (in module kqcircuits.util.export_helper)": [[138, "kqcircuits.util.export_helper.open_with_klayout_or_default_application"]], "write_commit_reference_file() (in module kqcircuits.util.export_helper)": [[138, "kqcircuits.util.export_helper.write_commit_reference_file"]], "write_export_machine_versions_file() (in module kqcircuits.util.export_helper)": [[138, "kqcircuits.util.export_helper.write_export_machine_versions_file"]], "arc_points() (in module kqcircuits.util.geometry_helper)": [[139, "kqcircuits.util.geometry_helper.arc_points"]], "bezier_points() (in module kqcircuits.util.geometry_helper)": [[139, "kqcircuits.util.geometry_helper.bezier_points"]], "bspline_points() (in module kqcircuits.util.geometry_helper)": [[139, "kqcircuits.util.geometry_helper.bspline_points"]], "circle_polygon() (in module kqcircuits.util.geometry_helper)": [[139, "kqcircuits.util.geometry_helper.circle_polygon"]], "get_angle() (in module kqcircuits.util.geometry_helper)": [[139, "kqcircuits.util.geometry_helper.get_angle"]], "get_cell_path_length() (in module kqcircuits.util.geometry_helper)": [[139, "kqcircuits.util.geometry_helper.get_cell_path_length"]], "get_direction() (in module kqcircuits.util.geometry_helper)": [[139, "kqcircuits.util.geometry_helper.get_direction"]], "get_object_path_length() (in module kqcircuits.util.geometry_helper)": [[139, "kqcircuits.util.geometry_helper.get_object_path_length"]], "is_clockwise() (in module kqcircuits.util.geometry_helper)": [[139, "kqcircuits.util.geometry_helper.is_clockwise"]], "kqcircuits.util.geometry_helper": [[139, "module-kqcircuits.util.geometry_helper"]], "merge_points_and_match_on_edges() (in module kqcircuits.util.geometry_helper)": [[139, "kqcircuits.util.geometry_helper.merge_points_and_match_on_edges"]], "point_shift_along_vector() (in module kqcircuits.util.geometry_helper)": [[139, "kqcircuits.util.geometry_helper.point_shift_along_vector"]], "region_with_merged_points() (in module kqcircuits.util.geometry_helper)": [[139, "kqcircuits.util.geometry_helper.region_with_merged_points"]], "region_with_merged_polygons() (in module kqcircuits.util.geometry_helper)": [[139, "kqcircuits.util.geometry_helper.region_with_merged_polygons"]], "simple_region() (in module kqcircuits.util.geometry_helper)": [[139, "kqcircuits.util.geometry_helper.simple_region"]], "vector_length_and_direction() (in module kqcircuits.util.geometry_helper)": [[139, "kqcircuits.util.geometry_helper.vector_length_and_direction"]], "geometryjsondecoder (class in kqcircuits.util.geometry_json_encoder)": [[140, "kqcircuits.util.geometry_json_encoder.GeometryJsonDecoder"]], "geometryjsonencoder (class in kqcircuits.util.geometry_json_encoder)": [[140, "kqcircuits.util.geometry_json_encoder.GeometryJsonEncoder"]], "decode_dict_as_python_obj() (in module kqcircuits.util.geometry_json_encoder)": [[140, "kqcircuits.util.geometry_json_encoder.decode_dict_as_python_obj"]], "default() (kqcircuits.util.geometry_json_encoder.geometryjsonencoder method)": [[140, "kqcircuits.util.geometry_json_encoder.GeometryJsonEncoder.default"]], "encode_python_obj_as_dict() (in module kqcircuits.util.geometry_json_encoder)": [[140, "kqcircuits.util.geometry_json_encoder.encode_python_obj_as_dict"]], "kqcircuits.util.geometry_json_encoder": [[140, "module-kqcircuits.util.geometry_json_encoder"]], "kqcircuits.util.groundgrid": [[141, "module-kqcircuits.util.groundgrid"]], "make_grid() (in module kqcircuits.util.groundgrid)": [[141, "kqcircuits.util.groundgrid.make_grid"]], "get_all_node_elements() (in module kqcircuits.util.gui_helper)": [[142, "kqcircuits.util.gui_helper.get_all_node_elements"]], "get_nodes_near_position() (in module kqcircuits.util.gui_helper)": [[142, "kqcircuits.util.gui_helper.get_nodes_near_position"]], "get_valid_node_elements() (in module kqcircuits.util.gui_helper)": [[142, "kqcircuits.util.gui_helper.get_valid_node_elements"]], "kqcircuits.util.gui_helper": [[142, "module-kqcircuits.util.gui_helper"]], "node_from_text() (in module kqcircuits.util.gui_helper)": [[142, "kqcircuits.util.gui_helper.node_from_text"]], "node_to_text() (in module kqcircuits.util.gui_helper)": [[142, "kqcircuits.util.gui_helper.node_to_text"]], "replace_node() (in module kqcircuits.util.gui_helper)": [[142, "kqcircuits.util.gui_helper.replace_node"]], "kqcircuits.util.import_helper": [[143, "module-kqcircuits.util.import_helper"]], "module_from_file() (in module kqcircuits.util.import_helper)": [[143, "kqcircuits.util.import_helper.module_from_file"]], "bottomleft (kqcircuits.util.label.labelorigin attribute)": [[144, "kqcircuits.util.label.LabelOrigin.BOTTOMLEFT"]], "bottomright (kqcircuits.util.label.labelorigin attribute)": [[144, "kqcircuits.util.label.LabelOrigin.BOTTOMRIGHT"]], "labelorigin (class in kqcircuits.util.label)": [[144, "kqcircuits.util.label.LabelOrigin"]], "topleft (kqcircuits.util.label.labelorigin attribute)": [[144, "kqcircuits.util.label.LabelOrigin.TOPLEFT"]], "topright (kqcircuits.util.label.labelorigin attribute)": [[144, "kqcircuits.util.label.LabelOrigin.TOPRIGHT"]], "kqcircuits.util.label": [[144, "module-kqcircuits.util.label"]], "produce_label() (in module kqcircuits.util.label)": [[144, "kqcircuits.util.label.produce_label"]], "convert_cells_to_code() (in module kqcircuits.util.layout_to_code)": [[145, "kqcircuits.util.layout_to_code.convert_cells_to_code"]], "extract_pcell_data_from_views() (in module kqcircuits.util.layout_to_code)": [[145, "kqcircuits.util.layout_to_code.extract_pcell_data_from_views"]], "get_node_params() (in module kqcircuits.util.layout_to_code)": [[145, "kqcircuits.util.layout_to_code.get_node_params"]], "kqcircuits.util.layout_to_code": [[145, "module-kqcircuits.util.layout_to_code"]], "restore_pcells_to_views() (in module kqcircuits.util.layout_to_code)": [[145, "kqcircuits.util.layout_to_code.restore_pcells_to_views"]], "delete_all_libraries() (in module kqcircuits.util.library_helper)": [[146, "kqcircuits.util.library_helper.delete_all_libraries"]], "delete_library() (in module kqcircuits.util.library_helper)": [[146, "kqcircuits.util.library_helper.delete_library"]], "element_by_class_name() (in module kqcircuits.util.library_helper)": [[146, "kqcircuits.util.library_helper.element_by_class_name"]], "get_library_paths() (in module kqcircuits.util.library_helper)": [[146, "kqcircuits.util.library_helper.get_library_paths"]], "kqcircuits.util.library_helper": [[146, "module-kqcircuits.util.library_helper"]], "load_libraries() (in module kqcircuits.util.library_helper)": [[146, "kqcircuits.util.library_helper.load_libraries"]], "to_library_name() (in module kqcircuits.util.library_helper)": [[146, "kqcircuits.util.library_helper.to_library_name"]], "to_module_name() (in module kqcircuits.util.library_helper)": [[146, "kqcircuits.util.library_helper.to_module_name"]], "kqcircuits.util.log_router": [[147, "module-kqcircuits.util.log_router"]], "route_log() (in module kqcircuits.util.log_router)": [[147, "kqcircuits.util.log_router.route_log"]], "convert_child_instances_to_static() (in module kqcircuits.util.merge)": [[148, "kqcircuits.util.merge.convert_child_instances_to_static"]], "kqcircuits.util.merge": [[148, "module-kqcircuits.util.merge"]], "merge_layers() (in module kqcircuits.util.merge)": [[148, "kqcircuits.util.merge.merge_layers"]], "merge_layout_layers_on_face() (in module kqcircuits.util.merge)": [[148, "kqcircuits.util.merge.merge_layout_layers_on_face"]], "export_cell_netlist() (in module kqcircuits.util.netlist_extraction)": [[149, "kqcircuits.util.netlist_extraction.export_cell_netlist"]], "extract_circuits() (in module kqcircuits.util.netlist_extraction)": [[149, "kqcircuits.util.netlist_extraction.extract_circuits"]], "extract_nets() (in module kqcircuits.util.netlist_extraction)": [[149, "kqcircuits.util.netlist_extraction.extract_nets"]], "kqcircuits.util.netlist_extraction": [[149, "module-kqcircuits.util.netlist_extraction"]], "draw_graph() (in module kqcircuits.util.netlist_graph)": [[150, "kqcircuits.util.netlist_graph.draw_graph"]], "kqcircuits.util.netlist_graph": [[150, "module-kqcircuits.util.netlist_graph"]], "network_as_graph() (in module kqcircuits.util.netlist_graph)": [[150, "kqcircuits.util.netlist_graph.network_as_graph"]], "param (class in kqcircuits.util.parameters)": [[151, "kqcircuits.util.parameters.Param"]], "typeboolean (kqcircuits.util.parameters.pdt attribute)": [[151, "kqcircuits.util.parameters.pdt.TypeBoolean"]], "typedouble (kqcircuits.util.parameters.pdt attribute)": [[151, "kqcircuits.util.parameters.pdt.TypeDouble"]], "typeint (kqcircuits.util.parameters.pdt attribute)": [[151, "kqcircuits.util.parameters.pdt.TypeInt"]], "typelayer (kqcircuits.util.parameters.pdt attribute)": [[151, "kqcircuits.util.parameters.pdt.TypeLayer"]], "typelist (kqcircuits.util.parameters.pdt attribute)": [[151, "kqcircuits.util.parameters.pdt.TypeList"]], "typenone (kqcircuits.util.parameters.pdt attribute)": [[151, "kqcircuits.util.parameters.pdt.TypeNone"]], "typeshape (kqcircuits.util.parameters.pdt attribute)": [[151, "kqcircuits.util.parameters.pdt.TypeShape"]], "typestring (kqcircuits.util.parameters.pdt attribute)": [[151, "kqcircuits.util.parameters.pdt.TypeString"]], "add_parameter() (in module kqcircuits.util.parameters)": [[151, "kqcircuits.util.parameters.add_parameter"]], "add_parameters_from() (in module kqcircuits.util.parameters)": [[151, "kqcircuits.util.parameters.add_parameters_from"]], "get_all() (kqcircuits.util.parameters.param class method)": [[151, "kqcircuits.util.parameters.Param.get_all"]], "kqcircuits.util.parameters": [[151, "module-kqcircuits.util.parameters"]], "pdt (class in kqcircuits.util.parameters)": [[151, "kqcircuits.util.parameters.pdt"]], "kqcircuits.util.plugin_startup": [[152, "module-kqcircuits.util.plugin_startup"]], "register_plugins() (in module kqcircuits.util.plugin_startup)": [[152, "kqcircuits.util.plugin_startup.register_plugins"]], "junctionsimport (class in kqcircuits.util.refpoints)": [[153, "kqcircuits.util.refpoints.JunctionSimPort"]], "refpointtoedgeport (class in kqcircuits.util.refpoints)": [[153, "kqcircuits.util.refpoints.RefpointToEdgePort"]], "refpointtointernalport (class in kqcircuits.util.refpoints)": [[153, "kqcircuits.util.refpoints.RefpointToInternalPort"]], "refpointtosimport (class in kqcircuits.util.refpoints)": [[153, "kqcircuits.util.refpoints.RefpointToSimPort"]], "refpoints (class in kqcircuits.util.refpoints)": [[153, "kqcircuits.util.refpoints.Refpoints"]], "waveguidetosimport (class in kqcircuits.util.refpoints)": [[153, "kqcircuits.util.refpoints.WaveguideToSimPort"]], "a (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[153, "kqcircuits.util.refpoints.WaveguideToSimPort.a"]], "airbridge (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[153, "kqcircuits.util.refpoints.WaveguideToSimPort.airbridge"]], "b (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[153, "kqcircuits.util.refpoints.WaveguideToSimPort.b"]], "cell (kqcircuits.util.refpoints.refpoints attribute)": [[153, "kqcircuits.util.refpoints.Refpoints.cell"]], "dict() (kqcircuits.util.refpoints.refpoints method)": [[153, "kqcircuits.util.refpoints.Refpoints.dict"]], "face (kqcircuits.util.refpoints.junctionsimport attribute)": [[153, "kqcircuits.util.refpoints.JunctionSimPort.face"]], "face (kqcircuits.util.refpoints.refpointtosimport attribute)": [[153, "kqcircuits.util.refpoints.RefpointToSimPort.face"]], "face (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[153, "kqcircuits.util.refpoints.WaveguideToSimPort.face"]], "items() (kqcircuits.util.refpoints.refpoints method)": [[153, "kqcircuits.util.refpoints.Refpoints.items"]], "keys() (kqcircuits.util.refpoints.refpoints method)": [[153, "kqcircuits.util.refpoints.Refpoints.keys"]], "kqcircuits.util.refpoints": [[153, "module-kqcircuits.util.refpoints"]], "layer (kqcircuits.util.refpoints.refpoints attribute)": [[153, "kqcircuits.util.refpoints.Refpoints.layer"]], "other_refpoint (kqcircuits.util.refpoints.junctionsimport attribute)": [[153, "kqcircuits.util.refpoints.JunctionSimPort.other_refpoint"]], "over_etching (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[153, "kqcircuits.util.refpoints.WaveguideToSimPort.over_etching"]], "rec_levels (kqcircuits.util.refpoints.refpoints attribute)": [[153, "kqcircuits.util.refpoints.Refpoints.rec_levels"]], "refpoint (kqcircuits.util.refpoints.junctionsimport attribute)": [[153, "kqcircuits.util.refpoints.JunctionSimPort.refpoint"]], "refpoint (kqcircuits.util.refpoints.refpointtosimport attribute)": [[153, "kqcircuits.util.refpoints.RefpointToSimPort.refpoint"]], "refpoint (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[153, "kqcircuits.util.refpoints.WaveguideToSimPort.refpoint"]], "side (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[153, "kqcircuits.util.refpoints.WaveguideToSimPort.side"]], "term1 (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[153, "kqcircuits.util.refpoints.WaveguideToSimPort.term1"]], "towards (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[153, "kqcircuits.util.refpoints.WaveguideToSimPort.towards"]], "trans (kqcircuits.util.refpoints.refpoints attribute)": [[153, "kqcircuits.util.refpoints.Refpoints.trans"]], "turn_radius (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[153, "kqcircuits.util.refpoints.WaveguideToSimPort.turn_radius"]], "use_internal_ports (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[153, "kqcircuits.util.refpoints.WaveguideToSimPort.use_internal_ports"]], "values() (kqcircuits.util.refpoints.refpoints method)": [[153, "kqcircuits.util.refpoints.Refpoints.values"]], "waveguide_length (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[153, "kqcircuits.util.refpoints.WaveguideToSimPort.waveguide_length"]], "junctionentry (class in kqcircuits.util.replace_junctions)": [[154, "kqcircuits.util.replace_junctions.JunctionEntry"]], "convert_cells_to_static() (in module kqcircuits.util.replace_junctions)": [[154, "kqcircuits.util.replace_junctions.convert_cells_to_static"]], "copy_one_layer_of_cell() (in module kqcircuits.util.replace_junctions)": [[154, "kqcircuits.util.replace_junctions.copy_one_layer_of_cell"]], "extract_junctions() (in module kqcircuits.util.replace_junctions)": [[154, "kqcircuits.util.replace_junctions.extract_junctions"]], "get_tuned_junction_json() (in module kqcircuits.util.replace_junctions)": [[154, "kqcircuits.util.replace_junctions.get_tuned_junction_json"]], "kqcircuits.util.replace_junctions": [[154, "module-kqcircuits.util.replace_junctions"]], "place_junctions() (in module kqcircuits.util.replace_junctions)": [[154, "kqcircuits.util.replace_junctions.place_junctions"]], "replace_squid() (in module kqcircuits.util.replace_junctions)": [[154, "kqcircuits.util.replace_junctions.replace_squid"]], "replace_squids() (in module kqcircuits.util.replace_junctions)": [[154, "kqcircuits.util.replace_junctions.replace_squids"]], "kqcircuits.util.symmetric_polygons": [[155, "module-kqcircuits.util.symmetric_polygons"]], "polygon_with_hsym() (in module kqcircuits.util.symmetric_polygons)": [[155, "kqcircuits.util.symmetric_polygons.polygon_with_hsym"]], "polygon_with_sym() (in module kqcircuits.util.symmetric_polygons)": [[155, "kqcircuits.util.symmetric_polygons.polygon_with_sym"]], "polygon_with_vsym() (in module kqcircuits.util.symmetric_polygons)": [[155, "kqcircuits.util.symmetric_polygons.polygon_with_vsym"]]}})