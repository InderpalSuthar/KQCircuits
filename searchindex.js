Search.setIndex({"docnames": ["about", "api/kqcircuits", "api/kqcircuits.chips", "api/kqcircuits.chips.airbridge_crossings", "api/kqcircuits.chips.airbridge_dc_test", "api/kqcircuits.chips.chip", "api/kqcircuits.chips.crossing_twoface", "api/kqcircuits.chips.daisy_woven", "api/kqcircuits.chips.dc_test", "api/kqcircuits.chips.demo", "api/kqcircuits.chips.demo_twoface", "api/kqcircuits.chips.empty", "api/kqcircuits.chips.junction_test", "api/kqcircuits.chips.junction_test2", "api/kqcircuits.chips.launchers", "api/kqcircuits.chips.lithography_test", "api/kqcircuits.chips.lithography_test_twoface", "api/kqcircuits.chips.munch_qubits", "api/kqcircuits.chips.quality_factor", "api/kqcircuits.chips.quality_factor_twoface", "api/kqcircuits.chips.sample_holder_test", "api/kqcircuits.chips.shaping", "api/kqcircuits.chips.simple", "api/kqcircuits.chips.single_xmons", "api/kqcircuits.chips.stripes", "api/kqcircuits.chips.tsv_test", "api/kqcircuits.chips.xmons_direct_coupling", "api/kqcircuits.defaults", "api/kqcircuits.elements", "api/kqcircuits.elements.airbridge_connection", "api/kqcircuits.elements.airbridges", "api/kqcircuits.elements.airbridges.airbridge", "api/kqcircuits.elements.airbridges.airbridge_multi_face", "api/kqcircuits.elements.airbridges.airbridge_rectangular", "api/kqcircuits.elements.capacitive_x_coupler", "api/kqcircuits.elements.chip_frame", "api/kqcircuits.elements.circular_capacitor", "api/kqcircuits.elements.element", "api/kqcircuits.elements.finger_capacitor_square", "api/kqcircuits.elements.finger_capacitor_taper", "api/kqcircuits.elements.flip_chip_connectors", "api/kqcircuits.elements.flip_chip_connectors.flip_chip_connector", "api/kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc", "api/kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf", "api/kqcircuits.elements.fluxlines", "api/kqcircuits.elements.fluxlines.fluxline", "api/kqcircuits.elements.fluxlines.fluxline_standard", "api/kqcircuits.elements.fluxlines.fluxline_straight", "api/kqcircuits.elements.hanger_resonator", "api/kqcircuits.elements.launcher", "api/kqcircuits.elements.launcher_dc", "api/kqcircuits.elements.markers", "api/kqcircuits.elements.markers.marker", "api/kqcircuits.elements.markers.marker_standard", "api/kqcircuits.elements.markers.mask_marker_fc", "api/kqcircuits.elements.meander", "api/kqcircuits.elements.quarter_wave_cpw_resonator", "api/kqcircuits.elements.smooth_capacitor", "api/kqcircuits.elements.spiral_resonator_polygon", "api/kqcircuits.elements.tsvs", "api/kqcircuits.elements.tsvs.tsv", "api/kqcircuits.elements.tsvs.tsv_ellipse", "api/kqcircuits.elements.tsvs.tsv_standard", "api/kqcircuits.elements.waveguide_composite", "api/kqcircuits.elements.waveguide_coplanar", "api/kqcircuits.elements.waveguide_coplanar_curved", "api/kqcircuits.elements.waveguide_coplanar_splitter", "api/kqcircuits.elements.waveguide_coplanar_straight", "api/kqcircuits.elements.waveguide_coplanar_taper", "api/kqcircuits.junctions", "api/kqcircuits.junctions.junction", "api/kqcircuits.junctions.manhattan", "api/kqcircuits.junctions.manhattan_single_junction", "api/kqcircuits.junctions.no_squid", "api/kqcircuits.junctions.sim", "api/kqcircuits.junctions.squid", "api/kqcircuits.klayout_view", "api/kqcircuits.layer_cluster", "api/kqcircuits.layer_config", "api/kqcircuits.layer_config.default_layer_config", "api/kqcircuits.layer_config.example_layer_config", "api/kqcircuits.masks", "api/kqcircuits.masks.mask_export", "api/kqcircuits.masks.mask_layout", "api/kqcircuits.masks.mask_set", "api/kqcircuits.masks.multi_face_mask_layout", "api/kqcircuits.pya_resolver", "api/kqcircuits.qubits", "api/kqcircuits.qubits.circular_transmon_single_island", "api/kqcircuits.qubits.concentric_transmon", "api/kqcircuits.qubits.double_pads", "api/kqcircuits.qubits.double_pads_splines", "api/kqcircuits.qubits.qubit", "api/kqcircuits.qubits.swissmon", "api/kqcircuits.run", "api/kqcircuits.simulations", "api/kqcircuits.simulations.airbridges_sim", "api/kqcircuits.simulations.cross_section_simulation", "api/kqcircuits.simulations.empty_simulation", "api/kqcircuits.simulations.epr", "api/kqcircuits.simulations.epr.circular_capacitor", "api/kqcircuits.simulations.epr.example", "api/kqcircuits.simulations.epr.smooth_capacitor", "api/kqcircuits.simulations.epr.swissmon", "api/kqcircuits.simulations.epr.utils", "api/kqcircuits.simulations.export", "api/kqcircuits.simulations.export.ansys", "api/kqcircuits.simulations.export.ansys.ansys_export", "api/kqcircuits.simulations.export.ansys.ansys_solution", "api/kqcircuits.simulations.export.elmer", "api/kqcircuits.simulations.export.elmer.elmer_export", "api/kqcircuits.simulations.export.elmer.elmer_solution", "api/kqcircuits.simulations.export.export_and_run", "api/kqcircuits.simulations.export.export_singularity", "api/kqcircuits.simulations.export.remote_export_and_run", "api/kqcircuits.simulations.export.simulation_export", "api/kqcircuits.simulations.export.simulation_validate", "api/kqcircuits.simulations.export.solution", "api/kqcircuits.simulations.export.sonnet", "api/kqcircuits.simulations.export.sonnet.parser", "api/kqcircuits.simulations.export.sonnet.sonnet_export", "api/kqcircuits.simulations.export.util", "api/kqcircuits.simulations.export.xsection", "api/kqcircuits.simulations.export.xsection.epr_correction_export", "api/kqcircuits.simulations.export.xsection.xsection_export", "api/kqcircuits.simulations.partition_region", "api/kqcircuits.simulations.port", "api/kqcircuits.simulations.post_process", "api/kqcircuits.simulations.simulation", "api/kqcircuits.simulations.single_element_simulation", "api/kqcircuits.simulations.single_xmons_full_chip_sim", "api/kqcircuits.simulations.waveguides_sim", "api/kqcircuits.simulations.xmons_direct_coupling_full_chip_sim", "api/kqcircuits.simulations.xmons_direct_coupling_sim", "api/kqcircuits.test_structures", "api/kqcircuits.test_structures.airbridge_dc", "api/kqcircuits.test_structures.cross_test", "api/kqcircuits.test_structures.junction_test_pads", "api/kqcircuits.test_structures.junction_test_pads.junction_test_pads", "api/kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple", "api/kqcircuits.test_structures.stripes_test", "api/kqcircuits.test_structures.stripes_test_increasing_width", "api/kqcircuits.test_structures.test_structure", "api/kqcircuits.test_structures.tsv_test_pattern", "api/kqcircuits.util", "api/kqcircuits.util.area", "api/kqcircuits.util.count_instances", "api/kqcircuits.util.coupler_lib", "api/kqcircuits.util.deep_delete", "api/kqcircuits.util.defaults_helper", "api/kqcircuits.util.dependencies", "api/kqcircuits.util.edit_node_plugin", "api/kqcircuits.util.export_helper", "api/kqcircuits.util.geometry_helper", "api/kqcircuits.util.geometry_json_encoder", "api/kqcircuits.util.groundgrid", "api/kqcircuits.util.gui_helper", "api/kqcircuits.util.import_helper", "api/kqcircuits.util.label", "api/kqcircuits.util.label_polygons", "api/kqcircuits.util.layout_to_code", "api/kqcircuits.util.library_helper", "api/kqcircuits.util.log_router", "api/kqcircuits.util.merge", "api/kqcircuits.util.netlist_extraction", "api/kqcircuits.util.netlist_graph", "api/kqcircuits.util.parameters", "api/kqcircuits.util.plugin_startup", "api/kqcircuits.util.refpoints", "api/kqcircuits.util.replace_junctions", "api/kqcircuits.util.symmetric_polygons", "citing", "contributing", "developer/architecture", "developer/coding_style", "developer/containers", "developer/documentation", "developer/index", "developer/setup", "developer/standalone", "developer/testing", "index", "installation", "salt", "support", "trademarks", "user_guide/file_system_and_utilities", "user_guide/gui_features", "user_guide/gui_workflow", "user_guide/index", "user_guide/macro_workflow", "user_guide/mask_export", "user_guide/python_workflow", "user_guide/simulation/elmer_remote_workflow", "user_guide/simulation/export_and_run", "user_guide/simulation/gmsh_elmer_export", "user_guide/simulation/simulation_features", "user_guide/simulation/simulation_objects", "user_guide/simulation/simulation_scripts", "user_guide/simulations", "user_guide/terminology", "user_guide/usage", "user_guide/xsection"], "filenames": ["about.rst", "api/kqcircuits.rst", "api/kqcircuits.chips.rst", "api/kqcircuits.chips.airbridge_crossings.rst", "api/kqcircuits.chips.airbridge_dc_test.rst", "api/kqcircuits.chips.chip.rst", "api/kqcircuits.chips.crossing_twoface.rst", "api/kqcircuits.chips.daisy_woven.rst", "api/kqcircuits.chips.dc_test.rst", "api/kqcircuits.chips.demo.rst", "api/kqcircuits.chips.demo_twoface.rst", "api/kqcircuits.chips.empty.rst", "api/kqcircuits.chips.junction_test.rst", "api/kqcircuits.chips.junction_test2.rst", "api/kqcircuits.chips.launchers.rst", "api/kqcircuits.chips.lithography_test.rst", "api/kqcircuits.chips.lithography_test_twoface.rst", "api/kqcircuits.chips.munch_qubits.rst", "api/kqcircuits.chips.quality_factor.rst", "api/kqcircuits.chips.quality_factor_twoface.rst", "api/kqcircuits.chips.sample_holder_test.rst", "api/kqcircuits.chips.shaping.rst", "api/kqcircuits.chips.simple.rst", "api/kqcircuits.chips.single_xmons.rst", "api/kqcircuits.chips.stripes.rst", "api/kqcircuits.chips.tsv_test.rst", "api/kqcircuits.chips.xmons_direct_coupling.rst", "api/kqcircuits.defaults.rst", "api/kqcircuits.elements.rst", "api/kqcircuits.elements.airbridge_connection.rst", "api/kqcircuits.elements.airbridges.rst", "api/kqcircuits.elements.airbridges.airbridge.rst", "api/kqcircuits.elements.airbridges.airbridge_multi_face.rst", "api/kqcircuits.elements.airbridges.airbridge_rectangular.rst", "api/kqcircuits.elements.capacitive_x_coupler.rst", "api/kqcircuits.elements.chip_frame.rst", "api/kqcircuits.elements.circular_capacitor.rst", "api/kqcircuits.elements.element.rst", "api/kqcircuits.elements.finger_capacitor_square.rst", "api/kqcircuits.elements.finger_capacitor_taper.rst", "api/kqcircuits.elements.flip_chip_connectors.rst", "api/kqcircuits.elements.flip_chip_connectors.flip_chip_connector.rst", "api/kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc.rst", "api/kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf.rst", "api/kqcircuits.elements.fluxlines.rst", "api/kqcircuits.elements.fluxlines.fluxline.rst", "api/kqcircuits.elements.fluxlines.fluxline_standard.rst", "api/kqcircuits.elements.fluxlines.fluxline_straight.rst", "api/kqcircuits.elements.hanger_resonator.rst", "api/kqcircuits.elements.launcher.rst", "api/kqcircuits.elements.launcher_dc.rst", "api/kqcircuits.elements.markers.rst", "api/kqcircuits.elements.markers.marker.rst", "api/kqcircuits.elements.markers.marker_standard.rst", "api/kqcircuits.elements.markers.mask_marker_fc.rst", "api/kqcircuits.elements.meander.rst", "api/kqcircuits.elements.quarter_wave_cpw_resonator.rst", "api/kqcircuits.elements.smooth_capacitor.rst", "api/kqcircuits.elements.spiral_resonator_polygon.rst", "api/kqcircuits.elements.tsvs.rst", "api/kqcircuits.elements.tsvs.tsv.rst", "api/kqcircuits.elements.tsvs.tsv_ellipse.rst", "api/kqcircuits.elements.tsvs.tsv_standard.rst", "api/kqcircuits.elements.waveguide_composite.rst", "api/kqcircuits.elements.waveguide_coplanar.rst", "api/kqcircuits.elements.waveguide_coplanar_curved.rst", "api/kqcircuits.elements.waveguide_coplanar_splitter.rst", "api/kqcircuits.elements.waveguide_coplanar_straight.rst", "api/kqcircuits.elements.waveguide_coplanar_taper.rst", "api/kqcircuits.junctions.rst", "api/kqcircuits.junctions.junction.rst", "api/kqcircuits.junctions.manhattan.rst", "api/kqcircuits.junctions.manhattan_single_junction.rst", "api/kqcircuits.junctions.no_squid.rst", "api/kqcircuits.junctions.sim.rst", "api/kqcircuits.junctions.squid.rst", "api/kqcircuits.klayout_view.rst", "api/kqcircuits.layer_cluster.rst", "api/kqcircuits.layer_config.rst", "api/kqcircuits.layer_config.default_layer_config.rst", "api/kqcircuits.layer_config.example_layer_config.rst", "api/kqcircuits.masks.rst", "api/kqcircuits.masks.mask_export.rst", "api/kqcircuits.masks.mask_layout.rst", "api/kqcircuits.masks.mask_set.rst", "api/kqcircuits.masks.multi_face_mask_layout.rst", "api/kqcircuits.pya_resolver.rst", "api/kqcircuits.qubits.rst", "api/kqcircuits.qubits.circular_transmon_single_island.rst", "api/kqcircuits.qubits.concentric_transmon.rst", "api/kqcircuits.qubits.double_pads.rst", "api/kqcircuits.qubits.double_pads_splines.rst", "api/kqcircuits.qubits.qubit.rst", "api/kqcircuits.qubits.swissmon.rst", "api/kqcircuits.run.rst", "api/kqcircuits.simulations.rst", "api/kqcircuits.simulations.airbridges_sim.rst", "api/kqcircuits.simulations.cross_section_simulation.rst", "api/kqcircuits.simulations.empty_simulation.rst", "api/kqcircuits.simulations.epr.rst", "api/kqcircuits.simulations.epr.circular_capacitor.rst", "api/kqcircuits.simulations.epr.example.rst", "api/kqcircuits.simulations.epr.smooth_capacitor.rst", "api/kqcircuits.simulations.epr.swissmon.rst", "api/kqcircuits.simulations.epr.utils.rst", "api/kqcircuits.simulations.export.rst", "api/kqcircuits.simulations.export.ansys.rst", "api/kqcircuits.simulations.export.ansys.ansys_export.rst", "api/kqcircuits.simulations.export.ansys.ansys_solution.rst", "api/kqcircuits.simulations.export.elmer.rst", "api/kqcircuits.simulations.export.elmer.elmer_export.rst", "api/kqcircuits.simulations.export.elmer.elmer_solution.rst", "api/kqcircuits.simulations.export.export_and_run.rst", "api/kqcircuits.simulations.export.export_singularity.rst", "api/kqcircuits.simulations.export.remote_export_and_run.rst", "api/kqcircuits.simulations.export.simulation_export.rst", "api/kqcircuits.simulations.export.simulation_validate.rst", "api/kqcircuits.simulations.export.solution.rst", "api/kqcircuits.simulations.export.sonnet.rst", "api/kqcircuits.simulations.export.sonnet.parser.rst", "api/kqcircuits.simulations.export.sonnet.sonnet_export.rst", "api/kqcircuits.simulations.export.util.rst", "api/kqcircuits.simulations.export.xsection.rst", "api/kqcircuits.simulations.export.xsection.epr_correction_export.rst", "api/kqcircuits.simulations.export.xsection.xsection_export.rst", "api/kqcircuits.simulations.partition_region.rst", "api/kqcircuits.simulations.port.rst", "api/kqcircuits.simulations.post_process.rst", "api/kqcircuits.simulations.simulation.rst", "api/kqcircuits.simulations.single_element_simulation.rst", "api/kqcircuits.simulations.single_xmons_full_chip_sim.rst", "api/kqcircuits.simulations.waveguides_sim.rst", "api/kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.rst", "api/kqcircuits.simulations.xmons_direct_coupling_sim.rst", "api/kqcircuits.test_structures.rst", "api/kqcircuits.test_structures.airbridge_dc.rst", "api/kqcircuits.test_structures.cross_test.rst", "api/kqcircuits.test_structures.junction_test_pads.rst", "api/kqcircuits.test_structures.junction_test_pads.junction_test_pads.rst", "api/kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple.rst", "api/kqcircuits.test_structures.stripes_test.rst", "api/kqcircuits.test_structures.stripes_test_increasing_width.rst", "api/kqcircuits.test_structures.test_structure.rst", "api/kqcircuits.test_structures.tsv_test_pattern.rst", "api/kqcircuits.util.rst", "api/kqcircuits.util.area.rst", "api/kqcircuits.util.count_instances.rst", "api/kqcircuits.util.coupler_lib.rst", "api/kqcircuits.util.deep_delete.rst", "api/kqcircuits.util.defaults_helper.rst", "api/kqcircuits.util.dependencies.rst", "api/kqcircuits.util.edit_node_plugin.rst", "api/kqcircuits.util.export_helper.rst", "api/kqcircuits.util.geometry_helper.rst", "api/kqcircuits.util.geometry_json_encoder.rst", "api/kqcircuits.util.groundgrid.rst", "api/kqcircuits.util.gui_helper.rst", "api/kqcircuits.util.import_helper.rst", "api/kqcircuits.util.label.rst", "api/kqcircuits.util.label_polygons.rst", "api/kqcircuits.util.layout_to_code.rst", "api/kqcircuits.util.library_helper.rst", "api/kqcircuits.util.log_router.rst", "api/kqcircuits.util.merge.rst", "api/kqcircuits.util.netlist_extraction.rst", "api/kqcircuits.util.netlist_graph.rst", "api/kqcircuits.util.parameters.rst", "api/kqcircuits.util.plugin_startup.rst", "api/kqcircuits.util.refpoints.rst", "api/kqcircuits.util.replace_junctions.rst", "api/kqcircuits.util.symmetric_polygons.rst", "citing.rst", "contributing.rst", "developer/architecture.rst", "developer/coding_style.rst", "developer/containers.rst", "developer/documentation.rst", "developer/index.rst", "developer/setup.rst", "developer/standalone.rst", "developer/testing.rst", "index.rst", "installation.rst", "salt.rst", "support.rst", "trademarks.rst", "user_guide/file_system_and_utilities.rst", "user_guide/gui_features.rst", "user_guide/gui_workflow.rst", "user_guide/index.rst", "user_guide/macro_workflow.rst", "user_guide/mask_export.rst", "user_guide/python_workflow.rst", "user_guide/simulation/elmer_remote_workflow.rst", "user_guide/simulation/export_and_run.rst", "user_guide/simulation/gmsh_elmer_export.rst", "user_guide/simulation/simulation_features.rst", "user_guide/simulation/simulation_objects.rst", "user_guide/simulation/simulation_scripts.rst", "user_guide/simulations.rst", "user_guide/terminology.rst", "user_guide/usage.rst", "user_guide/xsection.rst"], "titles": ["About", "API documentation", "kqcircuits.chips", "kqcircuits.chips.airbridge_crossings", "kqcircuits.chips.airbridge_dc_test", "kqcircuits.chips.chip", "kqcircuits.chips.crossing_twoface", "kqcircuits.chips.daisy_woven", "kqcircuits.chips.dc_test", "kqcircuits.chips.demo", "kqcircuits.chips.demo_twoface", "kqcircuits.chips.empty", "kqcircuits.chips.junction_test", "kqcircuits.chips.junction_test2", "kqcircuits.chips.launchers", "kqcircuits.chips.lithography_test", "kqcircuits.chips.lithography_test_twoface", "kqcircuits.chips.munch_qubits", "kqcircuits.chips.quality_factor", "kqcircuits.chips.quality_factor_twoface", "kqcircuits.chips.sample_holder_test", "kqcircuits.chips.shaping", "kqcircuits.chips.simple", "kqcircuits.chips.single_xmons", "kqcircuits.chips.stripes", "kqcircuits.chips.tsv_test", "kqcircuits.chips.xmons_direct_coupling", "kqcircuits.defaults", "kqcircuits.elements", "kqcircuits.elements.airbridge_connection", "kqcircuits.elements.airbridges", "kqcircuits.elements.airbridges.airbridge", "kqcircuits.elements.airbridges.airbridge_multi_face", "kqcircuits.elements.airbridges.airbridge_rectangular", "kqcircuits.elements.capacitive_x_coupler", "kqcircuits.elements.chip_frame", "kqcircuits.elements.circular_capacitor", "kqcircuits.elements.element", "kqcircuits.elements.finger_capacitor_square", "kqcircuits.elements.finger_capacitor_taper", "kqcircuits.elements.flip_chip_connectors", "kqcircuits.elements.flip_chip_connectors.flip_chip_connector", "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc", "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf", "kqcircuits.elements.fluxlines", "kqcircuits.elements.fluxlines.fluxline", "kqcircuits.elements.fluxlines.fluxline_standard", "kqcircuits.elements.fluxlines.fluxline_straight", "kqcircuits.elements.hanger_resonator", "kqcircuits.elements.launcher", "kqcircuits.elements.launcher_dc", "kqcircuits.elements.markers", "kqcircuits.elements.markers.marker", "kqcircuits.elements.markers.marker_standard", "kqcircuits.elements.markers.mask_marker_fc", "kqcircuits.elements.meander", "kqcircuits.elements.quarter_wave_cpw_resonator", "kqcircuits.elements.smooth_capacitor", "kqcircuits.elements.spiral_resonator_polygon", "kqcircuits.elements.tsvs", "kqcircuits.elements.tsvs.tsv", "kqcircuits.elements.tsvs.tsv_ellipse", "kqcircuits.elements.tsvs.tsv_standard", "kqcircuits.elements.waveguide_composite", "kqcircuits.elements.waveguide_coplanar", "kqcircuits.elements.waveguide_coplanar_curved", "kqcircuits.elements.waveguide_coplanar_splitter", "kqcircuits.elements.waveguide_coplanar_straight", "kqcircuits.elements.waveguide_coplanar_taper", "kqcircuits.junctions", "kqcircuits.junctions.junction", "kqcircuits.junctions.manhattan", "kqcircuits.junctions.manhattan_single_junction", "kqcircuits.junctions.no_squid", "kqcircuits.junctions.sim", "kqcircuits.junctions.squid", "kqcircuits.klayout_view", "kqcircuits.layer_cluster", "kqcircuits.layer_config", "kqcircuits.layer_config.default_layer_config", "kqcircuits.layer_config.example_layer_config", "kqcircuits.masks", "kqcircuits.masks.mask_export", "kqcircuits.masks.mask_layout", "kqcircuits.masks.mask_set", "kqcircuits.masks.multi_face_mask_layout", "kqcircuits.pya_resolver", "kqcircuits.qubits", "kqcircuits.qubits.circular_transmon_single_island", "kqcircuits.qubits.concentric_transmon", "kqcircuits.qubits.double_pads", "kqcircuits.qubits.double_pads_splines", "kqcircuits.qubits.qubit", "kqcircuits.qubits.swissmon", "kqcircuits.run", "kqcircuits.simulations", "kqcircuits.simulations.airbridges_sim", "kqcircuits.simulations.cross_section_simulation", "kqcircuits.simulations.empty_simulation", "kqcircuits.simulations.epr", "kqcircuits.simulations.epr.circular_capacitor", "kqcircuits.simulations.epr.example", "kqcircuits.simulations.epr.smooth_capacitor", "kqcircuits.simulations.epr.swissmon", "kqcircuits.simulations.epr.utils", "kqcircuits.simulations.export", "kqcircuits.simulations.export.ansys", "kqcircuits.simulations.export.ansys.ansys_export", "kqcircuits.simulations.export.ansys.ansys_solution", "kqcircuits.simulations.export.elmer", "kqcircuits.simulations.export.elmer.elmer_export", "kqcircuits.simulations.export.elmer.elmer_solution", "kqcircuits.simulations.export.export_and_run", "kqcircuits.simulations.export.export_singularity", "kqcircuits.simulations.export.remote_export_and_run", "kqcircuits.simulations.export.simulation_export", "kqcircuits.simulations.export.simulation_validate", "kqcircuits.simulations.export.solution", "kqcircuits.simulations.export.sonnet", "kqcircuits.simulations.export.sonnet.parser", "kqcircuits.simulations.export.sonnet.sonnet_export", "kqcircuits.simulations.export.util", "kqcircuits.simulations.export.xsection", "kqcircuits.simulations.export.xsection.epr_correction_export", "kqcircuits.simulations.export.xsection.xsection_export", "kqcircuits.simulations.partition_region", "kqcircuits.simulations.port", "kqcircuits.simulations.post_process", "kqcircuits.simulations.simulation", "kqcircuits.simulations.single_element_simulation", "kqcircuits.simulations.single_xmons_full_chip_sim", "kqcircuits.simulations.waveguides_sim", "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim", "kqcircuits.simulations.xmons_direct_coupling_sim", "kqcircuits.test_structures", "kqcircuits.test_structures.airbridge_dc", "kqcircuits.test_structures.cross_test", "kqcircuits.test_structures.junction_test_pads", "kqcircuits.test_structures.junction_test_pads.junction_test_pads", "kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple", "kqcircuits.test_structures.stripes_test", "kqcircuits.test_structures.stripes_test_increasing_width", "kqcircuits.test_structures.test_structure", "kqcircuits.test_structures.tsv_test_pattern", "kqcircuits.util", "kqcircuits.util.area", "kqcircuits.util.count_instances", "kqcircuits.util.coupler_lib", "kqcircuits.util.deep_delete", "kqcircuits.util.defaults_helper", "kqcircuits.util.dependencies", "kqcircuits.util.edit_node_plugin", "kqcircuits.util.export_helper", "kqcircuits.util.geometry_helper", "kqcircuits.util.geometry_json_encoder", "kqcircuits.util.groundgrid", "kqcircuits.util.gui_helper", "kqcircuits.util.import_helper", "kqcircuits.util.label", "kqcircuits.util.label_polygons", "kqcircuits.util.layout_to_code", "kqcircuits.util.library_helper", "kqcircuits.util.log_router", "kqcircuits.util.merge", "kqcircuits.util.netlist_extraction", "kqcircuits.util.netlist_graph", "kqcircuits.util.parameters", "kqcircuits.util.plugin_startup", "kqcircuits.util.refpoints", "kqcircuits.util.replace_junctions", "kqcircuits.util.symmetric_polygons", "Citing", "Contributing", "Architecture", "Coding Style", "Containers", "Documentation", "Developer Guide", "Developer GUI Setup", "Developer Standalone module Setup", "Testing", "KQCircuits documentation", "Installation", "Getting started (Salt package)", "Support", "Trademarks", "General Structure and Miscellaneous Utilities", "GUI Features", "Point-and-click workflow tutorial", "User Guide", "Macro development", "Mask export", "Python workflow tutorial", "Elmer remote simulations workflow", "Run and export in one line", "Gmsh/Elmer export", "Simulation features", "Simulation objects", "Export functions", "External simulation tools", "Terminology", "Usage", "Creating cross section images"], "terms": {"kqcircuit": [0, 1, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "develop": [0, 172, 180, 181, 182, 183, 189, 192, 194, 198], "wa": [0, 37, 83, 97, 128, 160, 168, 181, 182, 183, 190, 191, 195, 197, 201], "start": [0, 5, 13, 19, 35, 55, 58, 63, 64, 65, 66, 79, 88, 89, 114, 121, 128, 138, 153, 160, 166, 169, 176, 179, 181, 182, 184, 190, 192, 193, 195, 197], "johann": [0, 171], "heinsoo": [0, 171], "aalto": [0, 69, 196], "univers": [0, 196], "The": [0, 3, 5, 6, 12, 13, 14, 18, 19, 20, 21, 22, 23, 24, 26, 29, 32, 33, 35, 36, 37, 38, 39, 41, 43, 49, 50, 52, 53, 54, 55, 57, 58, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 76, 79, 81, 82, 83, 84, 85, 87, 88, 89, 92, 93, 95, 96, 97, 98, 104, 107, 108, 110, 120, 121, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 135, 146, 152, 153, 154, 156, 157, 160, 163, 164, 165, 166, 169, 172, 173, 175, 176, 178, 179, 180, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 198, 199, 200, 201, 202], "final": [0, 63, 79, 84, 128, 192, 198], "kqc": [0, 94, 97, 112, 114, 165, 167, 168, 172, 173, 175, 178, 179, 182, 183, 186, 187, 189, 190, 191, 192, 193, 194, 195, 201], "version": [0, 1, 81, 82, 83, 84, 85, 154, 171, 175, 177, 178, 179, 183, 186, 188, 191, 192, 193, 195, 198, 202], "correspond": [0, 17, 19, 26, 37, 63, 79, 83, 85, 88, 89, 111, 125, 128, 133, 153, 157, 158, 160, 164, 173, 175, 179, 180, 183, 186, 187, 190, 192, 196, 197, 199, 200], "v0": [0, 182], "0": [0, 5, 6, 7, 10, 13, 16, 17, 18, 19, 23, 28, 29, 31, 35, 36, 37, 38, 47, 55, 56, 57, 58, 63, 64, 65, 66, 70, 71, 72, 76, 79, 88, 90, 91, 92, 93, 97, 108, 111, 119, 120, 121, 123, 124, 126, 128, 132, 138, 142, 145, 153, 154, 159, 160, 163, 166, 167, 168, 169, 175, 179, 182, 183, 188, 191, 192, 196, 197], "tag": [0, 164, 172, 175, 179, 200], "iqm": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "github": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "repositori": [0, 152, 175, 177, 179, 182, 183, 186, 196], "sinc": [0, 156, 179, 187, 192, 197], "ha": [0, 5, 20, 23, 36, 37, 38, 57, 63, 71, 83, 84, 88, 89, 93, 97, 108, 116, 128, 152, 156, 160, 165, 166, 169, 175, 178, 179, 182, 183, 187, 190, 191, 192, 193, 195, 197], "been": [0, 63, 84, 128, 161, 175, 183, 191], "see": [0, 2, 19, 37, 63, 79, 84, 96, 98, 104, 108, 111, 120, 124, 128, 130, 131, 132, 133, 134, 169, 172, 173, 175, 178, 179, 182, 183, 185, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 201], "cite": [0, 181], "section": [0, 97, 108, 111, 124, 164, 173, 178, 179, 181, 183, 187, 189, 191, 192, 194, 197, 199], "other": [0, 2, 5, 13, 28, 34, 37, 38, 63, 64, 65, 71, 72, 76, 77, 79, 90, 92, 97, 111, 114, 120, 128, 138, 147, 153, 162, 168, 169, 170, 171, 172, 173, 175, 179, 180, 181, 182, 186, 187, 190, 191, 192, 195, 196, 197, 198, 200, 201, 202], "author": [0, 171], "http": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "com": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "finland": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "chip": [1, 28, 29, 32, 35, 37, 38, 40, 41, 42, 43, 49, 54, 58, 63, 79, 81, 82, 83, 84, 85, 90, 128, 131, 132, 138, 143, 152, 160, 164, 165, 169, 173, 175, 181, 186, 187, 188, 189, 190, 197, 200, 201], "airbridge_cross": [1, 2], "airbridgecross": [1, 2, 3], "build": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 81, 83, 84, 87, 88, 89, 90, 93, 95, 96, 97, 98, 104, 128, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 143, 160, 161, 173, 175, 176, 178, 182, 183, 187, 189, 191, 193, 195, 196, 197, 198, 199], "airbridge_dc_test": [1, 2], "airbridgedctest": [1, 2, 4], "library_nam": [1, 2, 5, 28, 37, 63, 69, 70, 87, 92, 95, 97, 128, 134, 142, 161, 173], "library_descript": [1, 2, 5, 28, 37, 69, 70, 87, 92, 134, 142, 173], "library_path": [1, 2, 5, 28, 37, 69, 70, 87, 92, 134, 142, 161], "display_text_impl": [1, 2, 5, 28, 37], "can_create_from_shape_impl": [1, 2, 5, 28, 38, 39, 55, 57, 64], "parameters_from_shape_impl": [1, 2, 5, 28, 55, 64], "transformation_from_shape_impl": [1, 2, 5, 28, 30, 31, 64], "get_launcher_assign": [1, 2, 5], "produce_junction_test": [1, 2, 5, 9], "produce_opt_lit_test": [1, 2, 5], "produce_ground_grid": [1, 2, 5], "produce_ground_on_face_grid": [1, 2, 5], "produce_fram": [1, 2, 5], "merge_layout_layers_on_fac": [1, 2, 5, 144, 163], "merge_layout_lay": [1, 2, 5], "produce_structur": [1, 2, 5], "get_box": [1, 2, 5], "get_filter_region": [1, 2, 5], "insert_filtered_el": [1, 2, 5], "get_ground_bump_loc": [1, 2, 5], "post_build": [1, 2, 5, 28, 37], "produce_launch": [1, 2, 5, 95, 132, 192], "produce_n_launch": [1, 2, 5], "make_grid_loc": [1, 2, 5], "get_ground_tsv_loc": [1, 2, 5], "crossing_twofac": [1, 2], "crossingtwofac": [1, 2, 6], "daisy_woven": [1, 2], "daisywoven": [1, 2, 7], "dc_test": [1, 2], "dctest": [1, 2, 8], "demo": [1, 2, 188, 190, 191, 192], "produce_qubit": [1, 2, 9, 10, 17, 26, 95, 132, 133], "produce_coupl": [1, 2, 9, 10, 17], "produce_control_lin": [1, 2, 9, 10], "produce_drivelin": [1, 2, 9, 10, 17], "produce_fluxlin": [1, 2, 9, 10, 87, 92], "produce_readout_structur": [1, 2, 9, 10], "produce_probelin": [1, 2, 9, 10, 17], "demo_twofac": [1, 2, 191], "demotwofac": [1, 2, 10, 191], "empti": [1, 2, 5, 13, 25, 29, 32, 34, 36, 37, 38, 43, 48, 56, 57, 58, 63, 66, 84, 85, 88, 89, 90, 93, 97, 128, 138, 143, 156, 165, 166, 180, 187, 196, 197, 198], "make_empty_area": [1, 2, 11], "junction_test": [1, 2], "junctiontest": [1, 2, 12], "junction_test2": [1, 2], "junctiontest2": [1, 2, 13], "coerce_parameters_impl": [1, 2, 13, 28, 37, 44, 45, 63, 65, 69, 70, 87, 92, 134, 137, 138], "launcher": [1, 2, 5, 7, 8, 18, 20, 23, 28, 50, 93, 130, 132, 164, 188, 192], "lithography_test": [1, 2], "lithographytest": [1, 2, 15], "create_pattern": [1, 2, 15, 16], "lithography_test_twofac": [1, 2], "lithographytesttwofac": [1, 2, 16], "munch_qubit": [1, 2], "munchqubit": [1, 2, 17], "produce_readout_reson": [1, 2, 17, 26, 95, 132], "quality_factor": [1, 2, 161, 191], "qualityfactor": [1, 2, 18, 84, 161, 191], "quality_factor_twofac": [1, 2], "qualityfactortwofac": [1, 2, 19], "produce_reson": [1, 2, 19], "sample_holder_test": [1, 2], "sampleholdertest": [1, 2, 20], "shape": [1, 2, 5, 13, 18, 25, 28, 29, 31, 32, 33, 35, 37, 38, 43, 55, 58, 63, 64, 77, 82, 84, 88, 89, 90, 92, 97, 124, 128, 138, 142, 143, 158, 163, 169, 187, 188, 190, 192, 197, 198, 200, 202], "simpl": [1, 2, 13, 84, 86, 120, 128, 138, 139, 175, 191, 195], "single_xmon": [1, 2], "singlexmon": [1, 2, 23], "qubits_refpoint": [1, 2, 23], "stripe": [1, 2, 5, 15, 16, 140, 141], "tsv_test": [1, 2], "tsvtest": [1, 2, 25], "create_xsect": [1, 2, 25], "xmons_direct_coupl": [1, 2], "xmonsdirectcoupl": [1, 2, 26], "element": [1, 2, 3, 5, 13, 22, 23, 25, 27, 70, 72, 76, 83, 84, 88, 89, 90, 92, 93, 101, 104, 108, 111, 126, 128, 129, 134, 138, 142, 143, 144, 147, 153, 154, 156, 160, 161, 163, 164, 165, 166, 168, 169, 175, 177, 179, 181, 186, 189, 190, 191, 196, 198, 199, 201], "airbridg": [1, 3, 4, 18, 19, 28, 29, 37, 52, 54, 55, 56, 58, 63, 66, 128, 135, 144, 161, 168, 187, 197], "default_typ": [1, 28, 30, 31, 32, 33, 40, 41, 44, 45, 51, 52, 59, 60, 69, 70, 134, 137, 138], "creat": [1, 2, 5, 28, 30, 31, 32, 37, 40, 41, 44, 45, 51, 52, 59, 60, 63, 64, 65, 69, 70, 75, 76, 79, 83, 84, 85, 86, 92, 96, 97, 98, 104, 107, 110, 115, 124, 128, 129, 130, 131, 132, 133, 134, 137, 138, 145, 151, 152, 156, 160, 161, 163, 167, 168, 173, 176, 178, 179, 180, 181, 183, 184, 186, 187, 188, 189, 191, 192, 195, 196, 197, 198, 200], "airbridge_multi_fac": [1, 28, 30], "airbridgemultifac": [1, 28, 30, 32], "airbridge_rectangular": [1, 28, 30], "airbridgerectangular": [1, 28, 30, 33], "flip_chip_connector": [1, 28], "flipchipconnector": [1, 28, 40, 41, 42, 63], "flip_chip_connector_dc": [1, 28, 40], "flipchipconnectordc": [1, 28, 40, 42], "flip_chip_connector_rf": [1, 28, 40], "flipchipconnectorrf": [1, 28, 40, 43, 192], "get_sim_port": [1, 28, 34, 36, 37, 38, 40, 43, 48, 56, 57, 87, 88, 89, 90, 93, 197], "fluxlin": [1, 9, 23, 26, 28, 37, 87, 92, 93, 133], "fluxline_standard": [1, 28, 44], "fluxlinestandard": [1, 28, 44, 46], "fluxline_straight": [1, 28, 44], "fluxlinestraight": [1, 28, 44, 47], "marker": [1, 5, 13, 28, 35, 55, 83, 136, 152, 169], "produce_geometri": [1, 28, 51, 52], "get_marker_loc": [1, 28, 51, 52, 54], "get_marker_region": [1, 28, 51, 52, 54], "marker_standard": [1, 28, 51], "markerstandard": [1, 28, 51, 53], "mask_marker_fc": [1, 28, 51], "maskmarkerfc": [1, 28, 51, 54], "create_cross": [1, 28, 51, 54], "tsv": [1, 5, 25, 28, 37, 128, 143], "tsv_ellips": [1, 28, 59], "tsvellips": [1, 28, 59, 61], "produce_impl": [1, 28, 37, 59, 61, 173], "create_tsv_connector": [1, 28, 59, 61], "tsv_standard": [1, 28, 59], "tsvstandard": [1, 28, 59, 62], "airbridge_connect": [1, 28], "airbridgeconnect": [1, 28, 29, 63], "capacitive_x_coupl": [1, 28], "capacitivexcoupl": [1, 28, 34], "chip_fram": [1, 28], "chipfram": [1, 5, 6, 7, 10, 16, 19, 28, 35], "circular_capacitor": [1, 28, 95, 99], "circularcapacitor": [1, 28, 36], "get_refpoint": [1, 28, 37, 95, 128], "insert_cell_into": [1, 28, 37], "resolve_fac": [1, 28, 37], "create_cell_from_shap": [1, 28, 37], "create_subtyp": [1, 28, 37], "create_with_refpoint": [1, 28, 37], "add_el": [1, 28, 37, 70, 75, 95, 128, 147, 173, 192], "insert_cel": [1, 26, 28, 37, 76, 95, 128, 133, 147, 160, 173, 190, 192, 197], "face": [1, 5, 6, 7, 10, 13, 16, 19, 25, 28, 29, 31, 32, 35, 37, 38, 41, 43, 56, 58, 61, 62, 63, 64, 65, 66, 76, 79, 81, 82, 83, 84, 85, 90, 95, 97, 124, 125, 126, 128, 131, 138, 143, 144, 152, 163, 164, 168, 169, 183, 187, 189, 199], "pcell_params_by_nam": [1, 28, 37, 95, 128], "add_port": [1, 28, 37], "copy_port": [1, 28, 37], "get_schema": [1, 28, 37, 95, 97, 128], "get_lay": [1, 28, 37, 92, 95, 97, 128, 192], "raise_error_on_cel": [1, 28, 37], "add_protect": [1, 28, 37], "sync_paramet": [1, 28, 37], "left_and_right_waveguid": [1, 28, 37], "face_changer_waveguid": [1, 28, 37], "finger_capacitor_squar": [1, 28, 192], "fingercapacitorsquar": [1, 28, 38, 147, 192], "get_ground_region": [1, 28, 38], "finger_area_width": [1, 28, 38], "finger_area_length": [1, 28, 38], "cut_region": [1, 28, 38], "add_waveguid": [1, 28, 38], "finger_capacitor_tap": [1, 28], "fingercapacitortap": [1, 28, 39], "hanger_reson": [1, 28], "hangerreson": [1, 28, 48], "launcher_dc": [1, 28], "launcherdc": [1, 28, 50], "meander": [1, 3, 6, 18, 28, 56, 63, 120, 156, 187], "quarter_wave_cpw_reson": [1, 28], "quarterwavecpwreson": [1, 28, 56], "smooth_capacitor": [1, 28, 95, 99], "smoothcapacitor": [1, 19, 28, 57, 147], "spiral_resonator_polygon": [1, 28], "spiralresonatorpolygon": [1, 28, 58], "rectangular_paramet": [1, 28, 58], "waveguide_composit": [1, 28], "node": [1, 28, 63, 151, 156, 160, 165, 188, 189, 192, 195], "posit": [1, 17, 23, 25, 28, 31, 37, 55, 63, 64, 65, 83, 88, 89, 92, 93, 119, 152, 156, 158, 160, 165, 168, 187, 191, 192], "align": [1, 28, 37, 54, 63, 76, 83, 92, 128, 136, 152, 156, 169, 187, 191, 192], "inst_nam": [1, 9, 10, 28, 37, 63, 76, 128, 156, 169, 192], "angl": [1, 17, 28, 36, 63, 64, 65, 66, 88, 89, 153, 156], "length_befor": [1, 28, 63, 156], "length_incr": [1, 28, 63, 156], "meander_direct": [1, 28, 55, 63], "deseri": [1, 28, 63, 154], "nodes_from_str": [1, 28, 63], "waveguidecomposit": [1, 28, 63, 156, 160, 189, 192], "get_segment_cel": [1, 28, 63], "get_segment_length": [1, 28, 63], "produce_fixed_length_waveguid": [1, 28, 63], "snap_point": [1, 28, 63], "check_node_typ": [1, 28, 63], "produce_fixed_length_bend": [1, 28, 63], "waveguide_coplanar": [1, 28, 192], "waveguidecoplanar": [1, 28, 63, 64, 160, 187, 192], "produce_waveguid": [1, 28, 64, 95, 132], "get_corner_data": [1, 28, 64], "produce_end_termin": [1, 28, 64], "is_continu": [1, 28, 64], "waveguide_coplanar_curv": [1, 28], "arc": [1, 17, 28, 65, 88, 89, 153], "waveguidecoplanarcurv": [1, 28, 65], "build_geometri": [1, 28, 65, 67], "create_curve_arc": [1, 28, 65], "produce_curve_termin": [1, 28, 65], "waveguide_coplanar_splitt": [1, 28], "waveguidecoplanarsplitt": [1, 28, 66], "t_cross_paramet": [1, 28, 66], "waveguide_coplanar_straight": [1, 28], "waveguidecoplanarstraight": [1, 28, 67], "waveguide_coplanar_tap": [1, 28], "waveguidecoplanartap": [1, 28, 63, 68], "junction": [1, 5, 9, 10, 13, 23, 26, 82, 88, 89, 90, 91, 92, 126, 128, 133, 137, 138, 139, 168, 169, 173, 181, 183, 192, 196, 197], "manhattan": [1, 5, 10, 13, 23, 26, 69, 70, 72, 90, 92, 133, 138], "produce_manhattan_squid": [1, 69, 71], "produce_tp_smal": [1, 69, 71], "produce_tp_larg": [1, 69, 71], "produce_contact_pad": [1, 69, 71], "manhattan_single_junct": [1, 69], "manhattansinglejunct": [1, 69, 72], "produce_manhattan_junct": [1, 69, 72], "no_squid": [1, 69], "nosquid": [1, 69, 73], "sim": [1, 10, 13, 23, 26, 69, 70, 90, 92, 123, 129, 133, 138, 179, 182, 193, 194, 195, 197, 198], "squid": [1, 10, 13, 23, 26, 69, 70, 71, 73, 74, 87, 90, 91, 92, 93, 126, 133, 138, 169], "layer_config": [1, 181, 192], "default_layer_config": [1, 78, 192], "example_layer_config": [1, 78, 192], "mask": [1, 5, 35, 52, 54, 144, 175, 179, 181, 182, 186, 189, 192, 200], "mask_export": [1, 81], "export_mask_set": [1, 81, 82], "export_design": [1, 81, 82], "export_chip": [1, 81, 82], "export_masks_of_fac": [1, 81, 82], "export_mask": [1, 81, 82], "export_doc": [1, 81, 82], "export_bitmap": [1, 81, 82], "get_mask_layout_full_nam": [1, 81, 82], "export_junction_paramet": [1, 81, 82], "mask_layout": [1, 81, 82, 84, 85, 191], "masklayout": [1, 81, 82, 83, 84, 85], "layout": [1, 25, 26, 28, 31, 37, 41, 45, 52, 60, 63, 70, 76, 81, 82, 83, 84, 85, 95, 96, 97, 98, 115, 121, 124, 125, 128, 130, 131, 132, 133, 138, 143, 152, 153, 161, 163, 164, 165, 167, 169, 173, 179, 181, 182, 187, 188, 190, 191, 192, 196, 197, 198, 199, 201, 202], "name": [1, 5, 7, 9, 10, 13, 17, 19, 22, 23, 25, 26, 29, 32, 35, 37, 38, 58, 61, 63, 66, 70, 75, 76, 77, 79, 81, 82, 83, 84, 85, 90, 92, 95, 97, 104, 105, 107, 108, 110, 111, 114, 115, 116, 117, 123, 125, 127, 128, 132, 138, 142, 143, 145, 152, 156, 160, 161, 162, 163, 164, 165, 166, 168, 169, 173, 175, 176, 178, 182, 183, 188, 190, 191, 192, 193, 197, 198, 199], "with_grid": [1, 5, 81, 83, 84, 85, 128, 191], "face_id": [1, 5, 13, 15, 16, 19, 25, 28, 29, 32, 37, 38, 58, 63, 76, 77, 81, 83, 84, 85, 90, 128, 138, 143, 192], "layers_to_mask": [1, 81, 83, 191], "covered_region_excluded_lay": [1, 81, 83], "chips_map": [1, 81, 83, 84, 85], "align_to": [1, 37, 76, 81, 83, 128, 191, 192], "chips_map_legend": [1, 81, 83, 84], "wafer_rad": [1, 81, 83], "wafer_cent": [1, 81, 83], "chips_map_offset": [1, 81, 83], "wafer_top_flat_length": [1, 81, 83], "wafer_bottom_flat_length": [1, 81, 83], "dice_width": [1, 35, 81, 83], "text_margin": [1, 35, 81, 83], "chip_siz": [1, 81, 83, 191], "edge_clear": [1, 81, 83, 191], "remove_chip": [1, 81, 83], "chip_box_offset": [1, 81, 83], "chip_tran": [1, 81, 83], "mask_name_offset": [1, 81, 83], "mask_name_scal": [1, 81, 83], "mask_name_box_margin": [1, 81, 83], "mask_text_scal": [1, 81, 83], "mask_markers_dict": [1, 81, 83], "mask_marker_offset": [1, 81, 83], "mask_export_lay": [1, 79, 81, 83, 84], "mask_export_density_lay": [1, 81, 83], "submask": [1, 81, 83], "extra_id": [1, 81, 83], "extra_chip": [1, 81, 83], "top_cel": [1, 76, 81, 83, 156, 160, 169, 190, 200], "added_chip": [1, 81, 83], "chips_placed_by_position_label": [1, 81, 83], "chip_copi": [1, 81, 83], "mirror_label": [1, 81, 83], "bbox_face_id": [1, 81, 83, 84, 85], "add_chips_map": [1, 81, 83, 85, 191], "insert_chip": [1, 81, 83], "generate_position_label": [1, 81, 83], "generate_and_insert_chip_copy_label": [1, 81, 83], "insert_chip_copy_label": [1, 81, 83], "two_coordinates_to_position_label": [1, 81, 83], "position_label_to_two_coordin": [1, 81, 83], "mask_set": [1, 81, 82, 191], "maskset": [1, 81, 82, 84, 85, 191], "export_drc": [1, 81, 82, 84], "used_chip": [1, 81, 84], "export_path": [1, 81, 84, 112, 165, 191], "add_mask_layout": [1, 81, 84, 191], "add_multi_face_mask_layout": [1, 81, 84, 85], "add_chip": [1, 81, 84, 191], "export": [1, 76, 77, 79, 81, 82, 83, 84, 95, 96, 98, 104, 128, 130, 131, 132, 133, 152, 160, 164, 165, 169, 179, 181, 182, 183, 189, 190, 193, 196, 197, 199, 200, 202], "chips_map_from_box_map": [1, 81, 84], "multi_face_mask_layout": [1, 81], "multifacemasklayout": [1, 81, 84, 85], "qubit": [1, 9, 10, 17, 23, 26, 69, 104, 132, 133, 173, 181, 183, 187, 188, 192, 196, 197, 198], "circular_transmon_single_island": [1, 87], "circulartransmonsingleisland": [1, 87, 88], "concentric_transmon": [1, 87], "concentrictransmon": [1, 87, 89], "double_pad": [1, 87], "doublepad": [1, 87, 90, 91], "double_pads_splin": [1, 87], "doublepadssplin": [1, 87, 91], "produce_squid": [1, 87, 92, 134, 137, 138], "swissmon": [1, 87, 95, 99, 188, 197, 198], "simul": [1, 26, 34, 36, 37, 38, 43, 48, 56, 57, 74, 79, 88, 89, 90, 92, 93, 144, 168, 175, 179, 181, 182, 183, 186, 189, 192, 194, 195, 198, 202], "epr": [1, 56, 95, 111, 123, 126, 128, 196], "partition_region": [1, 95, 99, 100, 101, 102, 103, 123, 128], "correction_cut": [1, 95, 99, 100, 101, 102, 103, 123], "extract_circular_capacitor_from": [1, 95, 99, 100], "exampl": [1, 5, 28, 37, 63, 76, 77, 79, 83, 84, 95, 99, 104, 111, 128, 154, 161, 165, 169, 173, 175, 178, 179, 180, 182, 183, 187, 189, 191, 193, 195, 196, 197, 198, 202], "extract_from": [1, 95, 99, 101], "extract_swissmon_from": [1, 95, 99, 103], "util": [1, 58, 66, 95, 99, 105, 179, 180, 181, 189, 192, 197, 198], "extract_child_simul": [1, 95, 99, 104], "ansi": [1, 95, 105, 117, 128, 149, 189, 195, 196, 197, 199], "ansys_export": [1, 95, 105, 106, 196, 198], "export_ansys_json": [1, 95, 105, 106, 107], "export_ansys_bat": [1, 95, 105, 106, 107], "export_ansi": [1, 95, 105, 106, 107, 196, 198, 199], "ansys_solut": [1, 95, 105, 106], "ansyssolut": [1, 95, 105, 106, 107, 108], "ansys_tool": [1, 95, 105, 106, 108, 196], "percent_refin": [1, 95, 105, 106, 108, 196], "maximum_pass": [1, 95, 105, 106, 108, 109, 111, 196], "minimum_pass": [1, 95, 105, 106, 108, 109, 111, 196], "minimum_converged_pass": [1, 95, 105, 106, 108, 196], "frequency_unit": [1, 95, 105, 106, 108, 196], "mesh_siz": [1, 95, 105, 106, 108, 109, 111], "simulation_flag": [1, 95, 105, 106, 108, 196], "ansys_project_templ": [1, 95, 105, 106, 108], "get_solution_data": [1, 95, 105, 106, 108, 109, 111], "ansyshfsssolut": [1, 95, 105, 106, 108], "frequenc": [1, 95, 105, 106, 108, 109, 111, 195, 196], "max_delta_": [1, 95, 105, 106, 108, 109, 111, 196], "sweep_en": [1, 95, 105, 106, 108, 196], "sweep_start": [1, 95, 105, 106, 108, 196], "sweep_end": [1, 95, 105, 106, 108, 196], "sweep_count": [1, 95, 105, 106, 108, 196], "sweep_typ": [1, 95, 105, 106, 108, 109, 111, 196], "capacitance_export": [1, 95, 105, 106, 108, 196], "integrate_energi": [1, 95, 105, 106, 108, 109, 111, 196], "integrate_magnetic_flux": [1, 95, 105, 106, 108], "ansysq3dsolut": [1, 95, 105, 106, 108], "percent_error": [1, 95, 105, 106, 108, 109, 111, 196], "ansyseigenmodesolut": [1, 95, 105, 106, 108], "min_frequ": [1, 95, 105, 106, 108, 196], "max_delta_f": [1, 95, 105, 106, 108, 196], "n_mode": [1, 95, 105, 106, 108, 196], "ansyscurrentsolut": [1, 95, 105, 106, 108], "ansysvoltagesolut": [1, 95, 105, 106, 108], "ansyscrosssectionsolut": [1, 95, 105, 106, 108], "get_ansys_solut": [1, 95, 105, 106, 108], "elmer": [1, 95, 105, 117, 175, 189, 194, 196, 197, 199], "elmer_export": [1, 95, 105, 109, 196, 198], "export_elmer_json": [1, 95, 105, 109, 110], "export_elmer_script": [1, 95, 105, 109, 110], "export_elm": [1, 95, 105, 109, 110, 195, 196, 198, 199], "elmer_solut": [1, 95, 105, 109], "elmersolut": [1, 95, 105, 109, 110, 111], "tool": [1, 55, 64, 95, 97, 105, 109, 111, 164, 179, 180, 181, 183, 187, 188, 189, 196, 197, 198, 201], "max_error_scal": [1, 95, 105, 109, 111], "max_outlier_fract": [1, 95, 105, 109, 111], "is_axisymmetr": [1, 95, 105, 109, 111], "mesh_level": [1, 95, 105, 109, 111], "vtu_output": [1, 95, 105, 109, 111], "elmervectorhelmholtzsolut": [1, 95, 105, 109, 111], "frequency_batch": [1, 95, 105, 109, 111], "london_penetration_depth": [1, 95, 97, 105, 109, 111, 124], "quadratic_approxim": [1, 95, 105, 109, 111], "second_kind_basi": [1, 95, 105, 109, 111], "use_av": [1, 95, 105, 109, 111], "conduct": [1, 95, 105, 109, 111], "nested_iter": [1, 95, 105, 109, 111], "convergence_toler": [1, 95, 105, 109, 111], "max_iter": [1, 95, 105, 109, 111], "elmercapacitancesolut": [1, 95, 105, 109, 111], "p_element_ord": [1, 95, 105, 109, 111], "linear_system_method": [1, 95, 105, 109, 111], "linear_system_precondit": [1, 95, 105, 109, 111], "elmercrosssectionsolut": [1, 95, 105, 109, 111, 123], "boundary_condit": [1, 95, 105, 109, 111], "run_inductance_sim": [1, 95, 105, 109, 111], "elmerepr3dsolut": [1, 95, 105, 109, 111, 128], "sequential_signal_excit": [1, 95, 105, 109, 111], "get_elmer_solut": [1, 95, 105, 109, 111], "sonnet": [1, 95, 105, 189, 199], "parser": [1, 95, 105, 118, 154], "apply_templ": [1, 95, 105, 118, 119], "polygon_head": [1, 95, 105, 118, 119], "symmetri": [1, 95, 105, 118, 119, 170], "box": [1, 5, 18, 19, 35, 52, 55, 76, 83, 84, 92, 95, 97, 105, 111, 118, 119, 124, 125, 128, 129, 136, 138, 155, 158, 164, 168, 183, 187, 188, 189, 191, 192, 199, 200], "refplan": [1, 95, 105, 118, 119], "port": [1, 5, 13, 17, 31, 34, 36, 37, 38, 39, 43, 48, 49, 56, 57, 63, 66, 88, 89, 90, 92, 93, 95, 96, 98, 105, 111, 116, 118, 119, 120, 128, 129, 130, 131, 132, 133, 138, 164, 168, 187, 188, 189, 192, 196, 198, 199], "control": [1, 17, 91, 95, 105, 118, 119, 120, 147, 153, 154, 166, 176, 177, 178, 179, 182, 192, 193, 195], "polygon": [1, 58, 64, 65, 95, 105, 118, 119, 120, 121, 124, 126, 128, 153, 170, 187, 192, 197, 200], "via": [1, 5, 25, 95, 105, 118, 119, 143, 193, 195, 197], "sonnet_export": [1, 95, 105, 118, 198], "poly_and_edge_indic": [1, 95, 105, 118, 120], "export_sonnet_son": [1, 95, 105, 118, 120, 198], "export_sonnet": [1, 95, 105, 118, 120, 198, 199], "xsection": [1, 95, 97, 105, 186, 189, 196], "epr_correction_export": [1, 95, 105, 122], "get_epr_correction_elmer_solut": [1, 95, 105, 122, 123], "get_epr_correction_simul": [1, 95, 101, 105, 122, 123], "xsection_export": [1, 95, 105, 122, 202], "xsection_cal": [1, 95, 105, 122, 124, 202], "create_xsections_from_simul": [1, 95, 105, 122, 124, 202], "separate_signal_layer_shap": [1, 95, 105, 122, 124], "find_layer_by_nam": [1, 95, 105, 122, 124], "free_layer_slot": [1, 95, 105, 122, 124], "visualise_xsection_cut_on_original_layout": [1, 95, 105, 122, 124], "export_and_run": [1, 95, 105, 194], "run_export_script": [1, 95, 105, 112], "run_simul": [1, 95, 105, 112], "export_singular": [1, 95, 105], "remote_export_and_run": [1, 95, 105], "remote_run_onli": [1, 95, 105, 114], "simulation_export": [1, 95, 105, 197, 198], "get_combined_paramet": [1, 95, 105, 115], "copy_content_into_directori": [1, 95, 105, 115], "get_post_process_command_lin": [1, 95, 105, 115], "export_simulation_json": [1, 95, 105, 115], "export_simulation_oa": [1, 95, 105, 115, 198], "sweep_simul": [1, 95, 105, 115, 197], "cross_sweep_simul": [1, 95, 105, 115, 197], "sweep_solut": [1, 95, 105, 115], "cross_sweep_solut": [1, 95, 105, 115], "cross_combin": [1, 95, 105, 115], "simulation_valid": [1, 95, 105], "validate_simul": [1, 95, 105, 116], "simulation_and_solution_types_match": [1, 95, 105, 116], "has_no_ports_when_requir": [1, 95, 105, 116], "has_edgeport_when_forbidden": [1, 95, 105, 116], "flux_integration_layer_exists_if_need": [1, 95, 105, 116], "get_port_nam": [1, 95, 105, 116], "validatesimerror": [1, 95, 105, 116], "solut": [1, 95, 105, 107, 108, 110, 111, 115, 116, 123, 178, 183, 196], "get_paramet": [1, 95, 97, 105, 117, 128], "export_lay": [1, 95, 105, 121], "find_edge_from_point_in_cel": [1, 95, 105, 121], "find_edge_from_point_in_polygon": [1, 95, 105, 121], "get_enclosing_polygon": [1, 95, 105, 121], "airbridges_sim": [1, 95], "airbridgessim": [1, 95, 96], "cross_section_simul": [1, 95, 124], "crosssectionsimul": [1, 95, 97, 107, 110, 124, 196, 197, 199], "process_lay": [1, 95, 97], "register_cell_layers_as_sim_lay": [1, 95, 97], "get_sim_lay": [1, 95, 97], "set_permitt": [1, 95, 97], "get_dict_by_lay": [1, 95, 97], "get_simulation_data": [1, 95, 97, 128], "empty_simul": [1, 95], "emptysimul": [1, 95, 98], "get_list_of_two": [1, 95, 125], "partitionregion": [1, 95, 100, 101, 102, 103, 111, 125, 128, 129], "limit_box": [1, 95, 125], "limit_fac": [1, 95, 125], "as_dict": [1, 95, 126], "internalport": [1, 95, 126, 128, 168, 197], "get_etch_polygon": [1, 95, 126], "edgeport": [1, 95, 116, 126, 168, 196, 197], "post_process": [1, 95, 107, 110, 115, 123, 198], "postprocess": [1, 95, 107, 110, 115, 123, 127], "get_command_lin": [1, 95, 127], "get_simulation_layer_by_nam": [1, 95, 128], "to_1d_list": [1, 95, 128], "from_cel": [1, 95, 96, 98, 128, 130, 131, 132, 133, 197, 198], "face_stack_list_of_list": [1, 95, 128], "ith_valu": [1, 95, 128], "face_z_level": [1, 95, 128], "region_from_lay": [1, 95, 128], "simplified_region": [1, 95, 128], "insert_lay": [1, 95, 128], "insert_stacked_up_lay": [1, 95, 128], "insert_layers_between_fac": [1, 95, 128], "create_simulation_lay": [1, 95, 96, 98, 128, 130, 131, 132, 133], "produce_lay": [1, 95, 128], "ground_grid_region": [1, 95, 128], "produce_waveguide_to_port": [1, 95, 128, 192, 197], "etched_lin": [1, 95, 128], "get_port_data": [1, 95, 128], "get_partition_region": [1, 95, 101, 125, 128], "delete_inst": [1, 95, 128], "visualise_region": [1, 95, 128], "single_element_simul": [1, 95, 197, 198], "get_single_element_sim_class": [1, 95, 101, 129, 168, 197, 198], "single_xmons_full_chip_sim": [1, 95], "singlexmonsfullchipsim": [1, 95, 130], "waveguides_sim": [1, 95], "waveguidessim": [1, 95, 131], "produce_guid": [1, 95, 131], "produce_ground_bump": [1, 95, 131], "xmons_direct_coupling_full_chip_sim": [1, 95], "xmonsdirectcouplingfullchipsim": [1, 95, 132], "produce_launchers_sma8": [1, 95, 132], "xmons_direct_coupling_sim": [1, 95], "xmonsdirectcouplingsim": [1, 95, 133], "test_structur": [1, 181], "junction_test_pad": [1, 134], "junctiontestpad": [1, 13, 92, 134, 137, 138, 139], "junction_test_pads_simpl": [1, 134, 137], "junctiontestpadssimpl": [1, 134, 137, 139], "airbridge_dc": [1, 134], "airbridgedc": [1, 134, 135], "cross_test": [1, 134], "crosstest": [1, 134, 136], "stripes_test": [1, 134], "stripestest": [1, 15, 16, 134, 140], "stripes_test_increasing_width": [1, 134], "stripestestincreasingwidth": [1, 134, 141], "teststructur": [1, 134, 135, 136, 138, 140, 141, 142, 143, 173], "produce_pad": [1, 134, 142], "produce_four_point_pad": [1, 134, 142], "produce_etched_region": [1, 134, 142], "tsv_test_pattern": [1, 134], "tsvtestpattern": [1, 134, 143], "area": [1, 13, 43, 52, 55, 58, 63, 71, 75, 76, 83, 90, 92, 120, 125, 126, 138, 139, 142, 144, 155, 183, 187, 192, 197], "areareceiv": [1, 144, 145], "put": [1, 63, 144, 145, 175, 187, 192], "get_area_and_dens": [1, 144, 145], "count_inst": [1, 144], "count_instances_in_cel": [1, 144, 146], "coupler_lib": [1, 144], "cap_param": [1, 19, 144, 147], "deep_delet": [1, 144], "deep_delete_pcel": [1, 144, 148], "deep_delete_al": [1, 144, 148], "defaults_help": [1, 144], "find_ansys_execut": [1, 144, 149], "depend": [1, 19, 126, 139, 144, 161, 168, 173, 175, 177, 182, 186, 192, 194, 195, 197], "install_kqc_gui_depend": [1, 144, 150], "edit_node_plugin": [1, 144], "editnodeplugin": [1, 144, 151], "create_dialog": [1, 144, 151], "update_node_from_form": [1, 144, 151], "update_form_from_nod": [1, 144, 151], "deselect": [1, 144, 151], "select": [1, 13, 71, 120, 144, 151, 160, 183, 187, 188, 190, 191, 192, 197, 202], "activ": [1, 76, 126, 144, 151, 152, 179, 182, 189, 195, 196], "deactiv": [1, 144, 151], "mouse_click_ev": [1, 144, 151], "mouse_moved_ev": [1, 144, 151], "has_tracking_posit": [1, 144, 151], "tracking_posit": [1, 144, 151], "updat": [1, 37, 83, 128, 144, 151, 173, 177, 182, 186, 187, 190, 196, 202], "editnodepluginfactori": [1, 144, 151], "create_plugin": [1, 144, 151], "export_help": [1, 144, 197, 198], "generate_probepoints_json": [1, 144, 152], "generate_probepoints_from_fil": [1, 144, 152], "create_or_empty_tmp_directori": [1, 112, 144, 152, 198], "get_simulation_directori": [1, 144, 152], "get_active_or_new_layout": [1, 144, 152, 197, 198], "write_commit_reference_fil": [1, 144, 152], "write_export_machine_versions_fil": [1, 144, 152], "open_with_klayout_or_default_appl": [1, 144, 152, 198], "get_klayout_vers": [1, 144, 152], "export_drc_report": [1, 144, 152], "geometry_help": [1, 144], "vector_length_and_direct": [1, 144, 153], "point_shift_along_vector": [1, 144, 153], "get_direct": [1, 144, 153], "get_angl": [1, 144, 153], "get_cell_path_length": [1, 144, 153], "get_object_path_length": [1, 144, 153], "simple_region": [1, 144, 153], "region_with_merged_point": [1, 128, 144, 153], "region_with_merged_polygon": [1, 128, 144, 153], "merge_points_and_match_on_edg": [1, 144, 153], "is_clockwis": [1, 144, 153], "circle_polygon": [1, 144, 153], "arc_point": [1, 144, 153], "bspline_point": [1, 144, 153], "bezier_point": [1, 144, 153], "round_dpath_width": [1, 144, 153], "geometry_json_encod": [1, 144], "geometryjsonencod": [1, 144, 154], "default": [1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 78, 79, 83, 84, 85, 88, 89, 90, 91, 92, 93, 96, 97, 107, 110, 111, 120, 123, 124, 128, 130, 131, 132, 133, 135, 136, 138, 139, 140, 141, 143, 144, 147, 149, 152, 153, 154, 156, 158, 162, 163, 164, 165, 166, 168, 173, 175, 178, 181, 182, 183, 187, 188, 191, 192, 193, 196, 197, 198, 201, 202], "geometryjsondecod": [1, 144, 154], "encode_python_obj_as_dict": [1, 144, 154], "decode_dict_as_python_obj": [1, 144, 154], "groundgrid": [1, 144], "make_grid": [1, 144, 155], "gui_help": [1, 144], "get_nodes_near_posit": [1, 144, 156], "node_to_text": [1, 144, 156], "node_from_text": [1, 144, 156], "replace_nod": [1, 144, 156], "get_all_node_el": [1, 144, 156], "get_valid_node_el": [1, 144, 156], "import_help": [1, 144], "module_from_fil": [1, 144, 157], "label": [1, 5, 35, 37, 66, 76, 83, 128, 144, 159, 165, 172, 191], "labelorigin": [1, 144, 158], "bottomleft": [1, 144, 158], "bottomright": [1, 144, 158], "topleft": [1, 144, 158], "topright": [1, 144, 158], "produce_label": [1, 144, 158], "label_polygon": [1, 144], "get_text_polygon": [1, 144, 159], "load_font_polygon": [1, 144, 159], "layout_to_cod": [1, 144], "convert_cells_to_cod": [1, 144, 160], "get_node_param": [1, 144, 160], "extract_pcell_data_from_view": [1, 144, 160], "restore_pcells_to_view": [1, 144, 160], "library_help": [1, 144, 173, 180, 192], "load_librari": [1, 144, 161], "get_library_path": [1, 144, 161], "delete_all_librari": [1, 144, 161], "delete_librari": [1, 144, 161], "element_by_class_nam": [1, 144, 161], "to_module_nam": [1, 144, 161], "to_library_nam": [1, 144, 161], "log_rout": [1, 144], "route_log": [1, 144, 162], "merg": [1, 5, 63, 128, 144, 153, 172, 173, 192], "merge_lay": [1, 144, 163], "convert_child_instances_to_stat": [1, 144, 163], "netlist_extract": [1, 144], "export_cell_netlist": [1, 84, 144, 164], "extract_net": [1, 144, 164], "extract_circuit": [1, 144, 164], "netlist_graph": [1, 144], "network_as_graph": [1, 144, 165], "draw_graph": [1, 144, 165], "paramet": [1, 3, 4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 96, 97, 98, 101, 104, 107, 108, 110, 111, 112, 114, 115, 116, 117, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 168, 169, 170, 176, 177, 181, 188, 189, 190, 191, 195, 197, 198, 199, 201, 202], "add_parameters_from": [1, 144, 166, 173, 197], "add_paramet": [1, 144, 166, 173, 197], "pdt": [1, 144, 166, 192], "typedoubl": [1, 144, 166, 192], "typeint": [1, 144, 166], "typelist": [1, 144, 166], "typestr": [1, 144, 166], "typeshap": [1, 144, 166], "typeboolean": [1, 144, 166], "typelay": [1, 144, 166], "typenon": [1, 144, 166], "param": [1, 37, 63, 116, 128, 144, 166, 169, 173, 192], "get_al": [1, 144, 166], "plugin_startup": [1, 144], "register_plugin": [1, 144, 167], "refpoint": [1, 19, 23, 28, 33, 34, 36, 37, 38, 43, 48, 56, 57, 61, 63, 76, 79, 88, 89, 90, 91, 92, 93, 101, 104, 128, 129, 138, 142, 144, 152, 156, 160, 187, 189, 197], "layer": [1, 5, 13, 25, 27, 28, 29, 32, 33, 35, 37, 38, 52, 54, 58, 61, 63, 64, 65, 68, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 90, 92, 97, 108, 111, 116, 121, 123, 124, 125, 126, 128, 136, 138, 140, 141, 142, 143, 144, 145, 153, 158, 163, 164, 168, 169, 181, 183, 186, 187, 188, 189, 190, 196, 197, 202], "cell": [1, 5, 15, 16, 31, 34, 36, 37, 38, 41, 43, 45, 48, 52, 55, 56, 57, 60, 63, 64, 70, 75, 76, 82, 83, 84, 88, 89, 90, 92, 93, 95, 96, 97, 98, 121, 124, 128, 129, 130, 131, 132, 133, 138, 144, 145, 146, 147, 148, 152, 153, 156, 158, 160, 161, 163, 164, 168, 169, 173, 179, 187, 188, 190, 191, 192, 197, 198, 200], "tran": [1, 5, 9, 10, 37, 65, 67, 76, 83, 128, 142, 144, 168, 169, 197], "rec_level": [1, 37, 76, 128, 144, 168, 192], "dict": [1, 5, 63, 83, 92, 97, 100, 101, 102, 103, 108, 110, 111, 123, 138, 144, 152, 154, 159, 161, 168, 169, 197], "item": [1, 123, 128, 144, 154, 165, 168, 183], "kei": [1, 5, 23, 37, 79, 83, 84, 85, 108, 111, 115, 123, 128, 132, 144, 147, 152, 154, 160, 161, 163, 164, 168, 169, 175, 187, 193, 195], "valu": [1, 5, 13, 23, 27, 29, 34, 36, 37, 38, 43, 48, 56, 57, 58, 63, 68, 76, 79, 82, 83, 84, 88, 89, 90, 93, 97, 108, 111, 120, 123, 124, 126, 128, 132, 138, 144, 152, 153, 154, 156, 158, 160, 161, 163, 164, 166, 168, 169, 173, 175, 181, 186, 187, 188, 190, 192, 196, 197, 202], "refpointtosimport": [1, 34, 36, 37, 38, 43, 48, 56, 57, 88, 89, 90, 93, 144, 168, 197], "refpointtointernalport": [1, 144, 168], "refpointtoedgeport": [1, 144, 168], "waveguidetosimport": [1, 144, 168, 197], "toward": [1, 63, 128, 144, 168, 197], "side": [1, 3, 5, 6, 18, 19, 29, 34, 36, 37, 38, 43, 48, 56, 57, 61, 62, 66, 83, 88, 89, 90, 93, 124, 126, 128, 129, 142, 144, 160, 168, 170, 173, 191, 192, 196, 197], "use_internal_port": [1, 56, 128, 144, 168, 197], "waveguide_length": [1, 128, 133, 144, 153, 168, 197], "term1": [1, 58, 63, 64, 128, 132, 144, 168], "turn_radiu": [1, 128, 132, 144, 168], "b": [1, 13, 19, 25, 29, 31, 32, 36, 37, 38, 39, 43, 49, 57, 58, 63, 66, 68, 79, 90, 91, 128, 132, 138, 143, 144, 153, 168], "over_etch": [1, 128, 144, 168], "junctionsimport": [1, 144, 168, 197], "other_refpoint": [1, 144, 168], "float": [1, 5, 17, 63, 83, 108, 111, 119, 121, 123, 124, 126, 128, 144, 145, 153, 154, 156, 168, 196, 197], "replace_junct": [1, 144], "junctionentri": [1, 144, 169], "extract_junct": [1, 144, 169], "check_static_cell_has_junct": [1, 144, 169], "place_junct": [1, 144, 169], "get_tuned_junction_json": [1, 144, 169], "copy_one_layer_of_cel": [1, 144, 169], "replace_squid": [1, 144, 169], "convert_cells_to_stat": [1, 144, 169], "symmetric_polygon": [1, 144, 192], "polygon_with_hsym": [1, 144, 170], "polygon_with_vsym": [1, 144, 170, 192], "polygon_with_sym": [1, 144, 170], "klayout_view": [1, 179, 181, 190], "klayoutview": [1, 76, 179, 189], "layout_view": [1, 76, 190], "focu": [1, 76, 190], "show": [1, 76, 140, 141, 165, 179, 183, 187, 188, 190, 191, 192, 197, 198], "close": [1, 52, 64, 76, 107, 153, 160, 183, 191], "cell_view": [1, 76, 190], "active_cel": [1, 76, 190], "clear_lay": [1, 76], "add_default_lay": [1, 76], "create_top_cel": [1, 76], "export_layers_bitmap": [1, 76], "export_all_layers_bitmap": [1, 76], "export_pcell_png": [1, 76, 190], "get_pixel": [1, 76], "get_active_cell_view": [1, 76], "get_active_layout": [1, 76], "get_active_cel": [1, 76], "missinguilibraryexcept": [1, 76], "resolve_default_layer_info": [1, 76], "layer_clust": [1, 181], "layerclust": [1, 77], "main_lay": [1, 77], "extra_lay": [1, 77], "all_lay": [1, 77], "pya_resolv": [1, 173, 181, 192, 197], "is_standalone_sess": [1, 86], "klayout_executable_command": [1, 86], "run": [1, 63, 76, 79, 86, 107, 110, 111, 112, 114, 124, 127, 150, 152, 175, 176, 178, 179, 180, 181, 182, 183, 186, 188, 189, 191, 192, 193, 195, 196, 198, 199, 200, 201, 202], "argument_pars": [1, 94], "run_kqc": [1, 94], "pcell": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 84, 87, 88, 89, 90, 91, 92, 93, 96, 97, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 156, 158, 159, 160, 161, 163, 164, 165, 166, 169, 176, 177, 186, 187, 188, 190, 192, 197, 200], "declar": [2, 3, 5, 6, 7, 12, 13, 14, 18, 19, 20, 21, 22, 23, 24, 26, 28, 29, 32, 33, 35, 36, 37, 38, 39, 42, 43, 49, 50, 53, 54, 55, 57, 58, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 87, 88, 89, 93, 134, 135, 136, 140, 141, 142, 143], "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 101, 108, 111, 116, 117, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 151, 154, 156, 158, 160, 161, 166, 168, 169, 173, 174, 176, 183, 186, 189, 190, 196, 198, 199], "consist": [2, 15, 16, 25, 35, 63, 64, 65, 79, 81, 84, 88, 89, 90, 91, 101, 139, 152, 154, 174, 181, 187, 195, 199], "thei": [2, 3, 6, 28, 63, 69, 79, 83, 85, 88, 89, 97, 121, 153, 163, 165, 169, 173, 175, 183, 190, 192, 196], "ar": [2, 3, 5, 6, 20, 23, 28, 30, 33, 37, 49, 63, 64, 65, 66, 69, 76, 79, 81, 83, 84, 85, 92, 97, 101, 104, 105, 108, 111, 112, 114, 116, 120, 123, 124, 125, 128, 132, 134, 142, 144, 146, 152, 153, 154, 156, 160, 161, 162, 163, 164, 165, 166, 167, 169, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202], "themselv": 2, "A": [2, 5, 9, 23, 26, 37, 52, 58, 63, 64, 65, 66, 76, 83, 84, 85, 88, 89, 90, 91, 104, 108, 111, 115, 116, 117, 120, 124, 128, 132, 133, 152, 153, 161, 165, 166, 168, 175, 179, 187, 188, 190, 191, 192, 196, 197, 200], "frame": [2, 5, 35, 49, 83, 187], "i": [2, 3, 5, 6, 7, 10, 16, 19, 23, 28, 29, 31, 32, 33, 34, 36, 37, 38, 39, 41, 43, 48, 49, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 68, 70, 75, 76, 79, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 96, 97, 98, 101, 104, 107, 108, 110, 111, 112, 115, 116, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 139, 140, 141, 142, 147, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 163, 164, 165, 166, 168, 169, 171, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202], "alwai": [2, 111, 164, 179, 183, 192, 196], "method": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 32, 33, 34, 36, 37, 38, 39, 42, 43, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 76, 88, 89, 90, 93, 96, 97, 98, 111, 128, 130, 131, 132, 133, 135, 136, 139, 140, 141, 143, 154, 160, 173, 174, 179, 180, 183, 190, 192, 196, 197, 198, 202], "place": [2, 5, 18, 28, 34, 36, 37, 38, 43, 48, 52, 55, 56, 57, 58, 63, 64, 65, 76, 79, 83, 88, 89, 90, 93, 128, 129, 153, 154, 160, 162, 168, 169, 173, 176, 180, 183, 188, 189, 190, 191, 192, 197, 198], "some": [2, 5, 13, 25, 28, 29, 32, 37, 38, 58, 63, 77, 84, 85, 90, 104, 107, 110, 116, 120, 128, 138, 143, 152, 153, 166, 169, 173, 176, 178, 179, 180, 182, 183, 187, 188, 190, 191, 192, 193, 196, 197, 200], "test": [2, 3, 4, 5, 9, 11, 13, 15, 16, 23, 25, 34, 69, 130, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 154, 169, 175, 177, 178, 179, 181, 182, 183, 186, 191, 192, 195, 198], "structur": [2, 5, 28, 69, 126, 134, 135, 138, 139, 142, 143, 165, 169, 179, 180, 181, 183, 189, 191, 196, 200], "after": [2, 13, 28, 63, 64, 71, 72, 79, 83, 90, 107, 110, 115, 124, 128, 129, 138, 166, 175, 178, 183, 186, 188, 190, 191, 192, 195, 198], "ad": [2, 19, 37, 63, 76, 83, 115, 126, 127, 128, 132, 152, 153, 158, 160, 164, 165, 166, 173, 175, 189, 197], "ground": [2, 5, 11, 17, 18, 35, 36, 37, 38, 39, 43, 48, 52, 55, 56, 57, 63, 64, 65, 67, 83, 84, 85, 88, 89, 90, 97, 111, 120, 126, 128, 131, 147, 155, 158, 187, 188, 189, 192, 196, 197], "grid": [2, 5, 18, 35, 37, 55, 56, 63, 64, 65, 67, 83, 84, 85, 128, 142, 155, 158, 160, 187, 188, 189, 192], "which": [2, 5, 6, 7, 10, 16, 19, 23, 28, 34, 36, 37, 38, 43, 48, 56, 57, 63, 64, 65, 76, 77, 79, 81, 83, 84, 85, 87, 88, 89, 90, 93, 95, 96, 97, 98, 104, 111, 114, 115, 120, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 139, 140, 141, 142, 143, 144, 146, 147, 152, 153, 154, 155, 156, 158, 161, 163, 168, 169, 173, 175, 176, 178, 179, 180, 182, 186, 187, 190, 191, 192, 193, 195, 196, 197, 198, 199, 201, 202], "avoid": [2, 5, 13, 19, 25, 29, 32, 35, 37, 38, 58, 63, 64, 65, 90, 128, 138, 142, 143, 155, 158, 162, 163, 181, 187, 191, 192, 196], "can": [2, 5, 19, 23, 28, 36, 37, 52, 55, 58, 63, 64, 69, 70, 75, 76, 79, 81, 82, 84, 85, 87, 88, 89, 96, 97, 98, 101, 104, 111, 115, 116, 120, 123, 124, 125, 126, 128, 130, 131, 132, 133, 139, 152, 153, 154, 156, 160, 165, 168, 169, 171, 173, 175, 178, 179, 180, 182, 183, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "produc": [2, 5, 9, 13, 19, 23, 31, 35, 45, 52, 58, 63, 64, 65, 66, 70, 75, 83, 92, 108, 111, 123, 124, 126, 128, 130, 132, 138, 139, 142, 147, 156, 158, 180, 191, 192, 195, 197, 198, 200, 202], "document": [2, 81, 82, 84, 95, 134, 173, 174, 177, 179, 180, 182, 183, 186, 187, 190, 191, 192, 200], "gener": [2, 5, 13, 30, 37, 55, 61, 64, 69, 70, 75, 76, 81, 83, 84, 85, 87, 90, 92, 97, 112, 124, 128, 134, 138, 153, 155, 156, 159, 160, 164, 166, 169, 175, 176, 179, 181, 187, 188, 189, 190, 191, 192, 195, 196, 198, 199, 202], "descript": [2, 134, 166, 173, 192, 200], "sourc": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 177, 179, 180, 182, 185, 186, 196, 197], "base": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 83, 84, 85, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 108, 111, 112, 116, 117, 125, 126, 127, 128, 130, 131, 132, 133, 135, 136, 138, 139, 140, 141, 142, 143, 145, 151, 153, 154, 158, 166, 168, 169, 173, 186, 191, 192, 195, 196, 197], "an": [3, 5, 26, 28, 29, 31, 32, 36, 37, 42, 43, 63, 64, 65, 76, 79, 83, 84, 85, 92, 104, 108, 110, 111, 115, 116, 124, 128, 129, 135, 139, 147, 152, 153, 154, 156, 160, 164, 165, 166, 168, 169, 170, 173, 178, 179, 182, 183, 187, 189, 190, 191, 193, 195, 196, 197, 198, 199, 200, 201, 202], "On": [3, 6, 178, 182, 188, 192, 193, 194], "left": [3, 5, 6, 13, 19, 23, 35, 37, 43, 48, 58, 65, 82, 83, 91, 97, 121, 124, 126, 128, 168, 183, 188, 191, 192, 197], "straight": [3, 6, 26, 45, 47, 58, 63, 64, 67, 92, 128, 133, 192], "vertic": [3, 6, 13, 24, 25, 32, 33, 47, 58, 83, 125, 128, 138, 143, 169, 170, 202], "waveguid": [3, 6, 17, 19, 20, 29, 37, 43, 48, 49, 55, 58, 63, 64, 65, 66, 67, 68, 88, 89, 90, 93, 97, 126, 128, 131, 133, 153, 156, 160, 164, 165, 168, 188, 189, 192, 196, 197], "cross": [3, 6, 23, 58, 66, 97, 108, 111, 115, 124, 136, 181, 187, 189, 192, 197, 199], "multipl": [3, 6, 63, 79, 84, 85, 88, 89, 101, 104, 124, 152, 163, 165, 169, 173, 178, 181, 183, 187, 190, 191, 192, 195, 197, 200], "time": [3, 6, 37, 107, 110, 111, 115, 120, 124, 153, 168, 176, 181, 182, 183, 188, 190, 191, 193, 195, 197], "There": [3, 6, 23, 91, 139, 140, 141, 173, 176, 179, 182, 187, 191, 192, 193, 195, 196, 197], "right": [3, 6, 19, 23, 29, 37, 58, 68, 82, 83, 124, 126, 128, 168, 183, 187, 188, 190, 191, 192, 197], "likewis": [3, 6], "do": [3, 6, 37, 63, 79, 111, 128, 160, 174, 175, 178, 179, 180, 188, 190, 191, 192, 194, 195, 196, 197, 198], "ani": [3, 6, 19, 63, 64, 70, 75, 76, 84, 85, 96, 97, 98, 100, 101, 103, 104, 111, 123, 128, 129, 130, 131, 132, 133, 139, 156, 161, 167, 172, 173, 178, 179, 183, 184, 187, 191, 192, 195, 196, 197, 198, 199], "point": [3, 4, 5, 6, 13, 25, 29, 32, 33, 36, 37, 38, 39, 55, 58, 63, 64, 65, 76, 83, 88, 89, 90, 91, 94, 121, 124, 128, 132, 133, 135, 138, 143, 152, 153, 160, 163, 165, 168, 170, 176, 180, 181, 187, 189, 190, 192, 195, 197, 200], "In": [3, 43, 63, 76, 79, 84, 96, 98, 115, 124, 128, 130, 131, 132, 133, 153, 173, 175, 178, 183, 186, 187, 188, 190, 191, 192, 196, 197, 198], "center": [3, 5, 13, 17, 18, 19, 23, 25, 29, 32, 33, 36, 37, 38, 41, 43, 48, 58, 61, 62, 63, 64, 65, 66, 73, 74, 83, 88, 89, 90, 91, 92, 93, 126, 128, 138, 142, 143, 153, 164, 168, 188, 191, 197], "arrai": [3, 5, 25, 83, 84, 139, 154, 200], "mechan": 3, "differ": [3, 5, 6, 13, 15, 16, 28, 36, 37, 43, 52, 58, 83, 84, 85, 97, 108, 124, 128, 138, 152, 164, 169, 173, 178, 180, 181, 186, 187, 191, 192, 195, 196, 197, 198], "length": [3, 5, 6, 9, 10, 12, 13, 15, 16, 17, 18, 19, 23, 24, 26, 29, 31, 32, 34, 35, 36, 38, 39, 48, 49, 55, 56, 57, 58, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 83, 90, 92, 93, 97, 108, 111, 119, 124, 126, 128, 131, 132, 133, 136, 138, 140, 141, 147, 153, 155, 156, 160, 163, 168, 187, 188, 192, 196, 197], "width": [3, 4, 5, 13, 17, 18, 19, 20, 25, 26, 29, 31, 32, 34, 35, 36, 37, 38, 39, 43, 45, 47, 48, 49, 50, 56, 57, 58, 61, 63, 64, 66, 70, 71, 72, 74, 76, 83, 88, 89, 90, 92, 93, 124, 126, 128, 132, 133, 135, 136, 138, 140, 141, 142, 143, 153, 168, 192, 197], "child": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 29, 32, 33, 34, 36, 37, 38, 39, 42, 43, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 62, 64, 65, 66, 67, 68, 71, 72, 73, 74, 84, 88, 89, 90, 93, 104, 135, 136, 139, 140, 141, 143, 146, 156, 160, 163, 168, 192, 197], "re": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 29, 32, 33, 34, 36, 37, 38, 39, 42, 43, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 62, 64, 65, 66, 67, 68, 71, 72, 73, 74, 88, 89, 90, 93, 119, 126, 135, 136, 139, 140, 141, 143, 160, 166, 173, 190, 195], "defin": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 29, 32, 33, 34, 36, 37, 38, 39, 42, 43, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 79, 88, 89, 90, 91, 92, 93, 97, 101, 104, 107, 124, 128, 129, 135, 136, 139, 140, 141, 142, 143, 152, 153, 154, 162, 164, 166, 169, 173, 180, 181, 188, 189, 191, 193, 195, 196, 197, 202], "thi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 42, 43, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 82, 83, 84, 85, 86, 88, 89, 90, 93, 95, 96, 97, 98, 101, 107, 110, 111, 124, 125, 126, 128, 130, 131, 132, 133, 135, 136, 138, 139, 140, 141, 143, 145, 150, 151, 153, 154, 156, 160, 161, 163, 164, 165, 166, 168, 169, 173, 175, 176, 178, 179, 180, 182, 183, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198], "int": [3, 4, 5, 6, 12, 13, 18, 20, 24, 25, 29, 32, 34, 35, 37, 38, 39, 43, 52, 54, 55, 56, 58, 63, 64, 65, 83, 88, 89, 90, 91, 96, 108, 111, 114, 119, 121, 124, 126, 128, 131, 135, 136, 138, 140, 141, 143, 153, 154, 156, 159], "number": [3, 4, 5, 6, 13, 18, 19, 20, 22, 23, 25, 29, 32, 34, 35, 37, 38, 39, 43, 52, 54, 55, 56, 57, 58, 63, 65, 66, 79, 81, 84, 88, 89, 90, 91, 96, 108, 111, 120, 124, 125, 126, 128, 131, 135, 136, 138, 140, 141, 143, 146, 147, 152, 153, 154, 155, 165, 169, 172, 192, 195, 196, 197], "pair": [3, 6, 13, 17, 54, 138, 154, 156, 160, 168, 186, 187], "10": [3, 5, 13, 17, 18, 19, 23, 25, 26, 29, 32, 34, 35, 37, 38, 48, 52, 56, 57, 58, 63, 66, 68, 88, 89, 90, 93, 108, 111, 128, 132, 136, 138, 143, 153, 155, 156, 171, 178, 179, 182, 195, 196, 197], "b_number": 3, "one": [3, 12, 17, 19, 23, 24, 58, 63, 65, 79, 81, 84, 85, 88, 89, 90, 91, 97, 107, 110, 115, 116, 124, 128, 152, 153, 154, 160, 162, 163, 164, 166, 167, 168, 169, 172, 173, 175, 178, 179, 182, 187, 189, 190, 192, 195, 196, 197, 198, 199], "5": [3, 13, 18, 19, 23, 25, 29, 32, 37, 38, 39, 57, 58, 63, 72, 73, 88, 89, 90, 93, 96, 108, 111, 124, 128, 131, 138, 143, 155, 166, 183, 195, 196], "full": [4, 5, 65, 76, 79, 86, 125, 153, 160, 165, 179, 181, 183, 187, 192, 194, 195, 197, 200], "4": [4, 5, 13, 17, 18, 19, 23, 84, 88, 89, 111, 123, 124, 128, 136, 138, 139, 153, 158, 166, 182, 183, 197], "dc": [4, 5, 7, 8, 32, 41, 42, 43, 50, 58, 63, 135], "n_step": 4, "increment": [4, 5, 13, 63, 141, 156, 169], "step": [4, 13, 15, 16, 63, 138, 153, 155, 169, 178, 182, 183, 188, 190, 191, 193], "1": [4, 5, 6, 7, 10, 13, 16, 17, 18, 19, 23, 26, 28, 29, 36, 37, 38, 43, 55, 56, 57, 58, 63, 65, 68, 71, 72, 84, 88, 89, 90, 108, 111, 119, 123, 124, 125, 128, 133, 138, 140, 141, 145, 153, 158, 160, 165, 166, 177, 183, 188, 191, 192, 193, 195, 196, 197, 202], "test_width": 4, "doubl": [4, 5, 6, 13, 17, 18, 19, 20, 25, 26, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 45, 47, 48, 49, 50, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 88, 89, 90, 92, 93, 111, 128, 131, 132, 133, 135, 136, 138, 140, 141, 143, 170, 187, 188, 190, 196, 201], "singl": [4, 6, 10, 13, 17, 19, 23, 26, 57, 58, 63, 70, 72, 82, 84, 88, 90, 92, 101, 107, 110, 111, 115, 128, 129, 133, 138, 160, 161, 166, 179, 180, 183, 189, 191, 192, 193, 195, 199, 200], "2000": [4, 19, 111, 135, 192], "unit": [4, 5, 6, 9, 10, 13, 17, 18, 19, 20, 25, 26, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 45, 47, 48, 49, 50, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66, 68, 70, 71, 72, 73, 74, 75, 88, 89, 90, 92, 93, 97, 108, 111, 124, 125, 126, 128, 131, 132, 133, 135, 136, 138, 140, 141, 143, 152, 153, 155, 173, 177, 179, 181, 192, 196], "\u03bcm": [4, 5, 6, 9, 10, 13, 17, 18, 19, 20, 25, 26, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 45, 47, 48, 49, 50, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66, 68, 70, 71, 72, 75, 88, 89, 90, 92, 93, 128, 131, 132, 133, 135, 136, 138, 140, 141, 143, 168, 192], "pixel": [5, 7, 76, 153, 200], "corner": [5, 7, 13, 35, 37, 38, 39, 52, 63, 64, 65, 158, 187, 188, 192], "dice": [5, 7, 35, 83], "edg": [5, 7, 12, 19, 20, 24, 35, 36, 52, 58, 63, 64, 73, 74, 83, 89, 90, 91, 111, 120, 121, 123, 124, 125, 126, 128, 131, 132, 142, 153, 155, 168, 180, 187, 197], "option": [5, 23, 32, 37, 58, 63, 83, 84, 85, 93, 101, 108, 111, 114, 120, 123, 124, 126, 128, 129, 139, 147, 160, 164, 175, 180, 182, 187, 188, 191, 192, 193, 195, 198, 202], "all": [5, 11, 28, 31, 34, 36, 37, 38, 43, 48, 56, 57, 61, 63, 64, 66, 76, 82, 83, 84, 85, 88, 89, 90, 93, 97, 101, 104, 110, 111, 112, 114, 115, 123, 124, 128, 145, 153, 154, 156, 160, 161, 163, 166, 169, 173, 174, 175, 179, 180, 182, 183, 186, 187, 188, 190, 191, 192, 194, 195, 196, 197, 198], "contain": [5, 22, 23, 28, 34, 36, 37, 38, 43, 48, 56, 57, 63, 69, 76, 77, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95, 97, 101, 104, 107, 110, 111, 112, 114, 115, 123, 124, 128, 129, 136, 140, 141, 143, 145, 152, 154, 156, 158, 163, 164, 165, 168, 169, 173, 176, 177, 178, 179, 180, 181, 186, 187, 190, 191, 192, 195, 197, 198, 200, 202], "connector": [5, 19, 32, 37, 40, 41, 42, 43, 58, 61, 62, 63, 187], "between": [5, 6, 9, 10, 12, 13, 17, 18, 19, 23, 24, 25, 29, 32, 34, 35, 37, 38, 39, 41, 43, 57, 58, 61, 62, 63, 64, 79, 90, 93, 111, 124, 126, 128, 133, 136, 138, 140, 141, 142, 143, 145, 153, 155, 164, 181, 187, 196, 197], "librari": [5, 28, 31, 37, 41, 45, 52, 60, 63, 70, 76, 90, 91, 92, 93, 138, 142, 156, 161, 177, 178, 179, 181, 182, 183, 186, 187, 188, 189, 200, 201], "superconduct": [5, 37, 124, 142, 181], "quantum": [5, 28, 37, 69, 142, 181, 200], "circuit": [5, 28, 37, 142, 164, 181, 192, 200], "implement": [5, 13, 28, 31, 34, 36, 37, 38, 39, 43, 45, 48, 52, 55, 56, 57, 63, 64, 65, 70, 88, 89, 90, 92, 93, 97, 101, 128, 138, 152, 153, 154, 160, 168, 172, 192, 193, 195, 197, 200], "static": [5, 37, 54, 63, 64, 65, 67, 76, 83, 84, 128, 159, 163, 169, 187, 188], "chip_cel": [5, 82, 83], "return": [5, 34, 36, 37, 38, 43, 48, 52, 56, 57, 58, 63, 64, 65, 66, 76, 77, 83, 84, 86, 88, 89, 90, 92, 93, 97, 101, 104, 107, 108, 110, 111, 112, 115, 116, 117, 120, 121, 123, 124, 125, 126, 127, 128, 129, 132, 138, 145, 146, 147, 149, 152, 153, 154, 155, 156, 157, 159, 160, 161, 165, 166, 168, 169, 170, 190, 191, 192, 197], "dictionari": [5, 23, 37, 58, 66, 79, 83, 84, 85, 97, 108, 111, 115, 117, 123, 126, 128, 132, 147, 154, 161, 163, 164, 165, 166, 168, 192, 197], "assign": [5, 123, 168, 187, 192], "port_id": 5, "launcher_id": 5, "object": [5, 26, 34, 36, 37, 38, 43, 45, 48, 52, 56, 57, 63, 76, 77, 79, 82, 83, 84, 85, 88, 89, 90, 92, 93, 95, 97, 104, 105, 107, 110, 111, 115, 116, 117, 123, 124, 125, 126, 127, 128, 129, 133, 145, 151, 152, 153, 154, 156, 163, 164, 166, 168, 169, 173, 179, 181, 187, 188, 189, 190, 191, 192, 195, 196, 198, 199, 200, 201, 202], "junction_typ": [5, 9, 10, 13, 23, 26, 70, 71, 72, 73, 74, 75, 90, 92, 133, 138, 169, 197], "pad": [5, 9, 13, 29, 31, 32, 33, 34, 36, 38, 49, 50, 58, 71, 72, 74, 89, 90, 92, 93, 128, 135, 137, 138, 139, 142, 192, 197], "string": [5, 6, 7, 9, 10, 13, 14, 15, 16, 17, 19, 22, 23, 24, 25, 26, 29, 31, 32, 33, 34, 35, 37, 38, 41, 43, 45, 46, 47, 56, 58, 60, 61, 62, 63, 66, 70, 71, 72, 73, 74, 83, 84, 90, 92, 97, 108, 111, 112, 114, 115, 127, 128, 129, 131, 133, 138, 139, 143, 147, 152, 154, 156, 159, 160, 161, 162, 164, 165, 168, 191, 192], "type": [5, 9, 10, 13, 14, 15, 16, 18, 19, 23, 25, 26, 27, 29, 31, 32, 33, 35, 37, 41, 43, 45, 46, 47, 52, 56, 58, 60, 61, 62, 63, 66, 70, 71, 72, 73, 74, 79, 84, 86, 90, 92, 93, 111, 116, 120, 124, 126, 128, 129, 130, 133, 138, 139, 143, 145, 146, 147, 152, 153, 154, 156, 160, 164, 166, 169, 179, 180, 187, 189, 194, 196, 197, 202], "us": [5, 9, 11, 19, 23, 26, 28, 29, 34, 35, 36, 37, 38, 43, 48, 49, 52, 55, 56, 57, 58, 63, 64, 66, 68, 70, 75, 76, 79, 82, 83, 84, 85, 86, 88, 89, 90, 92, 93, 96, 97, 98, 101, 104, 105, 107, 108, 110, 111, 112, 114, 115, 120, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 138, 142, 147, 152, 153, 154, 155, 156, 159, 160, 161, 163, 164, 165, 166, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202], "optic": [5, 15, 16, 136, 140, 141, 181, 200], "lithographi": [5, 15, 16, 128, 136, 140, 141, 200], "call": [5, 37, 57, 63, 84, 96, 97, 98, 101, 111, 115, 124, 125, 128, 130, 131, 132, 133, 145, 154, 161, 163, 164, 173, 180, 183, 189, 190, 191, 192, 194, 195, 196, 197, 198, 200], "overrid": [5, 13, 83, 85, 96, 97, 98, 104, 123, 126, 128, 130, 131, 132, 133, 138, 173, 175, 193], "set": [5, 19, 37, 58, 63, 76, 81, 82, 84, 85, 97, 101, 104, 108, 111, 112, 120, 123, 124, 126, 128, 132, 152, 153, 168, 172, 173, 175, 178, 179, 180, 181, 187, 188, 192, 193, 195, 196, 197, 198], "given": [5, 34, 36, 37, 38, 43, 48, 55, 56, 57, 58, 63, 64, 76, 79, 82, 84, 88, 89, 90, 92, 93, 97, 104, 108, 111, 123, 124, 125, 126, 127, 128, 129, 136, 138, 139, 140, 141, 143, 152, 153, 154, 157, 158, 159, 161, 163, 166, 168, 169, 173, 175, 191, 192, 195, 196, 197, 199], "pya": [5, 37, 52, 63, 79, 83, 84, 86, 92, 123, 124, 125, 128, 142, 153, 154, 156, 164, 166, 168, 170, 177, 191, 192, 197], "dbox": [5, 76, 92, 124, 125, 128, 191, 192, 197], "within": [5, 34, 36, 37, 38, 43, 48, 56, 57, 63, 88, 89, 90, 93, 101, 104, 111, 139, 169, 179, 180, 186, 199, 201], "id": [5, 6, 7, 10, 13, 16, 19, 25, 29, 32, 37, 38, 58, 63, 76, 79, 84, 85, 90, 128, 131, 138, 143, 152, 153, 165, 174, 179, 189, 190, 191, 201], "where": [5, 17, 19, 23, 34, 36, 37, 38, 43, 48, 56, 57, 58, 63, 64, 65, 70, 75, 83, 84, 85, 88, 89, 90, 93, 97, 101, 107, 110, 111, 112, 115, 120, 124, 125, 127, 128, 132, 152, 153, 156, 158, 160, 163, 164, 168, 169, 173, 178, 182, 187, 190, 191, 192, 193, 195, 196, 197, 199], "frame_paramet": 5, "r0": [5, 37, 128, 142], "dtran": [5, 52, 65, 83, 129, 170, 192, 197], "toler": [5, 64, 111, 121, 128, 153, 163], "004": [5, 128, 163], "base_metal_gap": [5, 79, 163, 192], "combin": [5, 37, 97, 115, 128, 163, 181, 197], "three": [5, 17, 69, 128, 163, 179, 182, 186, 190, 191, 192, 195, 197], "subtract": [5, 52, 128, 142, 163], "insert": [5, 28, 35, 37, 58, 63, 76, 83, 92, 104, 128, 138, 142, 154, 163, 168, 179, 187, 189, 197], "oper": [5, 37, 63, 152, 163, 178, 179, 182, 187, 195], "base_metal_gap_wo_grid": [5, 92, 136, 138, 140, 141, 163, 164, 183, 187, 192], "base_metal_addit": [5, 163, 192], "ground_grid": [5, 163, 192], "info": [5, 114, 120, 128, 162, 163, 175, 195], "gap": [5, 13, 17, 18, 19, 20, 23, 25, 29, 32, 34, 35, 36, 37, 38, 39, 43, 45, 47, 48, 49, 56, 57, 58, 63, 64, 65, 66, 71, 72, 74, 88, 89, 90, 93, 123, 125, 128, 138, 142, 143, 147, 153, 163, 168, 192, 197], "ignor": [5, 84, 92, 97, 128, 153, 163, 168, 178, 195], "while": [5, 23, 37, 79, 111, 163, 164, 175, 180, 182, 183, 195], "\u00b5m": [5, 17, 35, 58, 63, 73, 74, 88, 89, 90, 92, 120, 128, 163], "possibli": [5, 52, 169, 183, 191, 192], "befor": [5, 37, 63, 64, 76, 84, 111, 125, 128, 156, 167, 178, 187, 198], "get": [5, 63, 76, 97, 123, 124, 145, 154, 164, 166, 173, 175, 176, 178, 179, 180, 181, 182, 186, 190, 193], "specifi": [5, 31, 32, 33, 37, 49, 63, 76, 83, 84, 85, 97, 111, 124, 126, 128, 152, 153, 154, 156, 157, 162, 164, 165, 166, 169, 175, 176, 186, 191, 193, 197, 198], "correctli": [5, 37, 64, 83, 187, 192], "resolv": [5, 83, 177, 192], "integ": [5, 6, 7, 10, 16, 19, 83, 126, 128, 153, 154, 159, 197], "filter_layer_list": 5, "transform": [5, 37, 52, 65, 76, 83, 92, 128, 129, 138, 142, 153, 168, 192], "filter_region": 5, "tupl": [5, 23, 37, 63, 64, 65, 76, 83, 84, 107, 110, 112, 115, 123, 124, 128, 132, 145, 152, 154, 156, 160, 166], "layer_nam": [5, 37, 76, 82, 97, 124, 128], "distanc": [5, 6, 17, 18, 19, 25, 29, 35, 43, 63, 64, 66, 88, 89, 90, 111, 123, 128, 132, 133, 136, 142, 143, 153, 156], "filter": [5, 114, 180], "region": [5, 37, 38, 52, 63, 83, 101, 104, 111, 123, 124, 125, 128, 129, 142, 153, 155, 159], "element_cel": 5, "shape_lay": 5, "locat": [5, 37, 52, 63, 76, 79, 83, 104, 107, 110, 120, 123, 126, 128, 132, 149, 158, 160, 165, 168, 169, 178, 179, 180, 182, 183, 187, 188, 190, 196, 197, 198], "rotat": [5, 37, 43, 63, 76, 83, 92, 128, 191, 192], "repeat": [5, 127], "list": [5, 6, 7, 9, 10, 13, 16, 17, 18, 19, 23, 25, 26, 28, 29, 32, 34, 35, 36, 37, 38, 43, 48, 52, 55, 56, 57, 58, 63, 64, 65, 66, 76, 77, 81, 83, 84, 85, 88, 89, 90, 91, 93, 97, 100, 101, 102, 103, 104, 107, 108, 110, 111, 112, 114, 115, 116, 120, 121, 123, 124, 125, 126, 127, 128, 129, 132, 133, 138, 143, 145, 152, 153, 154, 156, 158, 160, 161, 163, 164, 165, 166, 168, 169, 170, 175, 178, 179, 183, 186, 188, 192, 196, 197, 198, 199], "dpoint": [5, 37, 63, 64, 76, 83, 92, 121, 123, 124, 126, 128, 142, 152, 153, 156, 158, 164, 168, 191, 192, 197, 202], "degre": [5, 17, 36, 43, 63, 66, 83, 88, 89, 92, 111, 153, 191, 192], "bump_box": 5, "should": [5, 31, 34, 36, 37, 38, 43, 48, 56, 57, 58, 63, 64, 76, 77, 79, 88, 89, 90, 93, 96, 97, 98, 104, 111, 124, 125, 126, 128, 129, 130, 131, 132, 133, 150, 152, 154, 164, 166, 168, 169, 173, 174, 175, 176, 178, 179, 180, 182, 183, 187, 188, 190, 191, 192, 197, 201], "fill": [5, 97, 120, 172, 183, 187, 188, 192], "bump": [5, 32, 41, 43, 58, 63, 128, 131, 172, 197], "coordin": [5, 17, 37, 55, 63, 65, 76, 83, 90, 111, 124, 128, 142, 165, 168, 191], "mai": [5, 28, 37, 63, 76, 83, 84, 97, 126, 128, 129, 161, 163, 164, 165, 169, 173, 175, 176, 178, 179, 180, 182, 183, 186, 187, 188, 190, 191, 192, 194, 195], "post": [5, 37, 115, 124, 127, 196, 198, 199], "sampleholder_typ": [5, 14, 192], "launcher_assign": 5, "none": [5, 26, 31, 35, 37, 41, 45, 52, 60, 63, 70, 76, 82, 83, 84, 85, 86, 92, 97, 104, 107, 108, 110, 112, 114, 115, 116, 121, 123, 124, 125, 126, 127, 128, 129, 132, 133, 138, 142, 145, 147, 152, 153, 154, 160, 161, 164, 165, 166, 168, 169, 195, 197], "enabl": [5, 57, 63, 101, 108, 111, 125, 128, 132, 162, 181, 182, 187, 188, 192, 196], "typic": [5, 13, 25, 29, 32, 37, 38, 58, 63, 69, 90, 128, 138, 143, 147, 161, 164, 192, 197, 198, 199], "sampl": [5, 8, 18, 91, 132, 153], "holder": [5, 8, 18, 132], "size": [5, 29, 36, 38, 43, 57, 63, 68, 76, 83, 84, 88, 89, 111, 126, 128, 153, 158, 159, 165, 187, 191, 192], "self": [5, 37, 58, 63, 66, 70, 75, 83, 84, 92, 96, 97, 98, 128, 130, 131, 132, 133, 154, 174, 186, 192, 195, 197], "accordingli": [5, 37, 192], "wrapper": [5, 76, 132, 173], "around": [5, 19, 29, 35, 36, 37, 38, 52, 64, 65, 76, 83, 128, 152, 153, 158, 173, 181, 186, 187, 188, 191, 197], "configur": [5, 13, 20, 27, 43, 76, 78, 79, 101, 116, 138, 139, 153, 173, 180, 189], "mean": [5, 29, 36, 38, 43, 55, 57, 58, 63, 64, 68, 79, 124, 125, 128, 172, 173, 191, 192, 197], "index": [5, 19, 37, 63, 64, 65, 79, 121, 126, 128, 156, 168, 169, 179, 181, 192], "head": [5, 48, 132], "from": [5, 13, 19, 20, 23, 29, 31, 34, 35, 37, 49, 52, 58, 63, 64, 65, 66, 69, 71, 72, 76, 79, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 101, 104, 108, 111, 112, 114, 115, 121, 123, 124, 125, 126, 128, 130, 131, 132, 133, 138, 142, 145, 146, 149, 152, 153, 156, 157, 158, 159, 161, 162, 164, 166, 168, 169, 172, 173, 175, 176, 178, 179, 181, 182, 183, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 199, 200, 201, 202], "n": [5, 13, 25, 29, 32, 37, 38, 58, 63, 65, 88, 89, 90, 119, 128, 138, 143, 153, 154, 164, 180, 192, 195, 196], "launcher_typ": [5, 192], "launcher_width": [5, 20, 192], "launcher_gap": [5, 20, 192], "launcher_ind": [5, 20, 192], "pad_pitch": [5, 192], "port_id_remap": 5, "launcher_frame_gap": [5, 49], "chip_box": [5, 192], "chang": [5, 34, 36, 37, 38, 43, 48, 56, 57, 63, 88, 89, 90, 93, 129, 166, 169, 172, 173, 175, 178, 179, 180, 182, 183, 187, 188, 190, 192, 193, 197, 198, 201], "equal": [5, 125, 153, 160, 165, 168, 196], "distribut": [5, 63, 85, 182], "overridden": [5, 96, 97, 98, 128, 130, 131, 132, 133], "desir": [5, 37, 63, 64, 92, 158, 179, 187, 191, 193, 196, 197], "per": [5, 38, 57, 63, 66, 108, 139, 173, 195, 196], "disabl": [5, 13, 37, 71, 76, 90, 125, 128, 138, 168, 187, 188, 190], "argument": [5, 34, 36, 37, 38, 43, 48, 52, 56, 57, 63, 76, 84, 85, 88, 89, 90, 92, 93, 96, 97, 98, 101, 104, 108, 111, 112, 114, 123, 124, 127, 128, 129, 130, 131, 132, 133, 138, 156, 159, 166, 175, 182, 191, 192, 197, 198, 199], "If": [5, 37, 63, 66, 76, 85, 96, 97, 98, 101, 104, 108, 111, 112, 114, 123, 124, 125, 128, 129, 130, 131, 132, 133, 142, 152, 153, 154, 159, 160, 161, 162, 164, 165, 168, 169, 171, 174, 175, 176, 178, 179, 180, 182, 183, 184, 187, 190, 191, 192, 195, 197, 200, 201, 202], "neither": [5, 76], "rf": [5, 43, 180, 192], "most": [5, 121, 153, 154, 156, 168, 173, 182, 183, 186, 187, 188, 190, 192, 195, 197, 200], "top": [5, 6, 19, 33, 41, 58, 76, 79, 83, 96, 97, 98, 124, 125, 128, 130, 131, 132, 133, 152, 160, 168, 169, 173, 187, 188, 190, 191, 192, 197, 200], "clockwis": [5, 13, 19, 35, 58, 83, 121, 153, 191], "order": [5, 19, 23, 58, 63, 64, 97, 111, 121, 124, 128, 153, 154, 173, 175, 187, 196, 197], "x": [5, 17, 34, 55, 63, 64, 83, 88, 89, 92, 111, 121, 123, 124, 142, 152, 156, 164, 165, 176, 182, 187, 189, 191, 192, 195, 196, 197, 198], "y": [5, 13, 55, 63, 83, 92, 111, 119, 121, 124, 138, 142, 152, 156, 164, 165, 176, 191, 196, 197, 198], "your": [5, 52, 97, 107, 110, 126, 128, 171, 172, 174, 175, 178, 179, 180, 181, 182, 183, 192, 193, 198], "For": [5, 19, 23, 28, 37, 63, 79, 83, 92, 104, 111, 128, 152, 154, 156, 160, 161, 165, 166, 167, 169, 173, 175, 179, 180, 182, 183, 187, 188, 190, 192, 195, 196, 197, 198], "flip": [5, 6, 16, 19, 32, 37, 40, 41, 43, 54, 58, 63, 131, 152, 187, 191, 192, 197], "": [5, 12, 17, 24, 34, 36, 37, 38, 43, 48, 49, 56, 57, 63, 76, 84, 86, 88, 89, 90, 92, 93, 104, 108, 121, 128, 129, 138, 152, 153, 159, 160, 164, 166, 168, 169, 173, 176, 178, 182, 183, 186, 187, 189, 191, 192, 193, 199, 201], "axi": [5, 13, 17, 24, 64, 88, 89, 92, 111, 138, 152, 169, 170], "rang": [5, 57, 154], "delta_x": 5, "100": [5, 13, 18, 25, 29, 32, 35, 37, 38, 43, 58, 60, 63, 64, 75, 90, 91, 92, 111, 119, 128, 131, 133, 136, 138, 140, 141, 143, 153, 188, 192, 197, 198], "delta_i": 5, "x0": 5, "y0": 5, "separ": [5, 13, 37, 71, 72, 76, 84, 90, 91, 97, 111, 124, 128, 138, 154, 156, 160, 161, 163, 180, 182, 183, 187, 188, 192, 193, 197, 198], "along": [5, 58, 111, 169, 202], "dimens": [5, 20, 76, 83, 125, 128, 176, 196, 197], "displac": [5, 92, 192], "tsv_box": 5, "boolean": [5, 9, 10, 13, 18, 21, 23, 25, 29, 32, 34, 35, 37, 38, 43, 49, 52, 54, 55, 56, 58, 63, 64, 65, 66, 67, 68, 71, 72, 74, 76, 83, 84, 90, 92, 97, 128, 130, 131, 132, 138, 142, 143, 162], "make": [5, 28, 41, 83, 84, 85, 86, 107, 110, 111, 128, 166, 172, 173, 175, 176, 178, 179, 180, 181, 182, 183, 187, 188, 190, 191, 192, 193, 197, 198, 202], "plane": [5, 36, 38, 39, 52, 88, 89, 128, 187, 188, 191, 192], "fals": [5, 13, 18, 19, 21, 25, 29, 32, 34, 35, 37, 38, 43, 49, 52, 54, 55, 56, 58, 63, 64, 65, 66, 67, 68, 71, 72, 76, 82, 83, 84, 90, 92, 97, 107, 108, 110, 111, 112, 114, 119, 120, 123, 125, 126, 127, 128, 130, 131, 138, 143, 153, 154, 158, 160, 161, 165, 168, 169, 191, 192, 195, 196, 197], "merge_base_metal_gap": 5, "a_cap": 5, "conductor": [5, 13, 17, 18, 19, 25, 29, 32, 37, 38, 43, 58, 63, 64, 66, 88, 89, 90, 128, 138, 143, 168], "cap": [5, 19], "b_cap": 5, "with_gnd_tsv": 5, "through": [5, 25, 57, 58, 64, 84, 85, 108, 143, 153, 175, 176, 190, 197], "silicon": [5, 25, 128, 143, 192, 197, 200], "tsv_grid_spac": 5, "space": [5, 12, 13, 15, 16, 19, 24, 26, 58, 63, 97, 131, 132, 133, 136, 138, 140, 141, 156, 158, 161, 179], "300": [5, 6, 48, 49, 58, 88, 89, 128], "edge_from_tsv": 5, "clearanc": [5, 52, 63, 83], "550": [5, 17, 128], "tsv_edge_to_tsv_edge_separ": 5, "exist": [5, 76, 83, 96, 97, 98, 111, 115, 124, 128, 130, 131, 132, 133, 152, 153, 156, 161, 165, 169, 173, 178, 182, 183, 187, 192, 197, 198], "250": [5, 89, 91], "tsv_edge_to_nearest_el": 5, "with_gnd_bump": 5, "indium": [5, 128, 197], "bump_grid_spac": 5, "120": [5, 88, 89, 93, 172, 174], "edge_from_bump": 5, "bump_edge_to_bump_edge_separ": 5, "95": 5, "frames_en": [5, 6, 7, 10, 16, 19], "drawn": [5, 6, 7, 10, 16, 19, 183, 197, 200], "frames_marker_dist": 5, "each": [5, 13, 18, 23, 26, 35, 36, 37, 58, 63, 64, 65, 66, 76, 79, 81, 82, 83, 84, 85, 88, 89, 91, 93, 97, 101, 108, 111, 124, 128, 133, 139, 142, 152, 153, 156, 159, 160, 161, 163, 164, 165, 169, 173, 178, 179, 180, 183, 187, 190, 191, 192, 193, 195, 196, 197, 198, 199, 202], "1500": [5, 35], "1000": [5, 17, 18, 48, 56, 58, 76, 79, 83, 111, 128, 192], "frames_diagonal_squar": 5, "diagon": [5, 35, 52, 196], "squar": [5, 12, 24, 35, 38, 52, 83, 84, 142, 160, 179, 183, 192], "2": [5, 13, 18, 19, 23, 25, 26, 33, 34, 38, 39, 45, 57, 63, 71, 75, 83, 90, 92, 108, 111, 124, 133, 138, 139, 143, 153, 158, 166, 177, 178, 181, 192, 193, 195, 196, 197], "frames_mirror": 5, "mirror": [5, 9, 10, 13, 19, 82, 83, 92, 138, 158, 169, 170, 191], "true": [5, 9, 10, 13, 18, 19, 23, 29, 32, 37, 56, 58, 63, 64, 71, 72, 74, 76, 83, 84, 85, 90, 97, 107, 108, 111, 112, 114, 120, 128, 130, 131, 132, 138, 146, 152, 153, 154, 156, 160, 161, 162, 163, 165, 166, 168, 169, 173, 188, 190, 191, 192, 195, 196, 197], "frames_dice_width": 5, "street": 5, "200": [5, 13, 17, 19, 25, 35, 58, 63, 93, 143, 192], "140": 5, "face_box": 5, "8500": 5, "dice_grid_margin": [5, 35], "margin": [5, 13, 19, 25, 29, 32, 35, 37, 38, 58, 60, 63, 68, 71, 72, 83, 90, 128, 138, 143, 158, 192, 197, 198], "name_mask": [5, 35], "m000": [5, 35], "name_chip": [5, 7, 9, 10, 17, 22, 35], "ctest": [5, 35], "name_copi": [5, 35, 83], "copi": [5, 35, 37, 63, 83, 115, 160, 170, 173, 192, 193, 198, 199], "name_brand": [5, 35], "brand": [5, 35], "marker_typ": [5, 13, 35, 52], "lower": [5, 13, 23, 35, 74, 92, 125, 128, 183, 196, 197], "standard": [5, 13, 25, 26, 35, 45, 46, 52, 53, 60, 62, 63, 92, 132, 133, 143, 153, 156, 162, 182, 183], "chip_dicing_in_base_met": [5, 35], "line": [5, 6, 9, 17, 18, 19, 35, 36, 48, 56, 64, 84, 90, 91, 115, 121, 127, 128, 140, 141, 143, 153, 156, 172, 176, 178, 179, 187, 188, 189, 190, 191, 192, 198, 199, 200, 201], "metal": [5, 11, 13, 25, 29, 32, 35, 37, 38, 41, 49, 58, 63, 64, 65, 67, 68, 71, 72, 74, 90, 92, 93, 97, 111, 123, 124, 125, 126, 128, 131, 138, 142, 143, 168, 192, 196, 197], "addit": [5, 13, 29, 35, 37, 49, 63, 64, 65, 67, 68, 71, 72, 79, 83, 90, 96, 98, 111, 124, 127, 128, 130, 131, 132, 133, 138, 172, 175, 187, 191, 192, 196], "bound": [5, 35, 55, 63, 83, 92, 125, 128, 138, 155, 158, 164, 187], "10000": [5, 18, 35, 97, 128, 191], "bump_typ": [5, 32, 41, 43, 58, 63], "choic": [5, 6, 10, 13, 14, 15, 16, 18, 19, 23, 25, 26, 29, 31, 32, 33, 34, 41, 43, 45, 46, 47, 56, 58, 60, 61, 62, 63, 66, 70, 71, 72, 73, 74, 90, 92, 108, 111, 133, 138, 139, 143, 166, 173, 179, 196], "tsv_type": [5, 25, 60, 61, 62, 143], "ellips": [5, 25, 60, 61, 143], "bottom": [6, 33, 41, 58, 73, 74, 79, 83, 124, 125, 128, 168, 173, 188, 191, 192, 197], "transmiss": [6, 18, 56, 64, 143], "3": [6, 17, 18, 19, 23, 26, 34, 38, 39, 47, 54, 65, 83, 88, 89, 93, 111, 124, 128, 133, 153, 158, 166, 175, 177, 178, 182, 183, 196, 197], "crossing_length": 6, "400": [6, 17, 58, 88, 89, 128, 192], "cross_talk_dist": 6, "meander_fac": 6, "two": [6, 9, 17, 35, 36, 38, 39, 41, 43, 55, 61, 62, 63, 71, 83, 89, 90, 91, 92, 124, 125, 128, 142, 152, 153, 156, 164, 168, 173, 178, 187, 191, 192, 195, 196, 197, 198, 202], "daisi": 7, "woven": 7, "includ": [7, 9, 10, 13, 18, 25, 28, 29, 32, 37, 38, 56, 58, 63, 69, 71, 72, 82, 84, 85, 90, 92, 97, 107, 110, 124, 128, 130, 138, 143, 152, 153, 154, 160, 169, 171, 175, 176, 181, 182, 186, 187, 191, 192, 196, 198, 202], "text": [7, 35, 37, 63, 79, 83, 124, 126, 128, 140, 141, 156, 158, 159, 168, 179, 188, 192], "manual": [7, 30, 58, 63, 69, 70, 75, 79, 84, 87, 101, 108, 111, 126, 150, 152, 175, 177, 181, 183, 191, 196, 197, 198, 200], "pattern": [7, 58, 181], "No": [7, 10, 13, 23, 26, 70, 73, 90, 92, 111, 133, 138, 182], "input": [7, 17, 19, 43, 58, 63, 124, 153, 156, 195, 197, 202], "demonstr": [9, 10, 17, 179, 180, 187, 188, 202], "four": [9, 23, 52, 91, 135, 142, 153, 158, 164, 191], "readout": [9, 10, 17, 23, 90, 91], "reson": [9, 10, 17, 18, 19, 23, 48, 56, 58, 130, 187, 196], "probe": [9, 17, 142, 152], "charg": [9, 188], "qubit_a_nr": [9, 10], "qubit_b_nr": [9, 10], "port_nr": [9, 128, 197], "qubit_nr": [9, 10], "cap_finger_nr": [9, 10], "probeline_nam": [9, 10], "readout_res_length": [9, 10, 17, 23, 191], "5000": [9, 10, 23, 58, 132, 191, 192], "5100": [9, 10, 23], "5200": [9, 10, 23], "5300": [9, 10, 23], "include_coupl": [9, 10, 191], "coupler": [9, 10, 17, 18, 19, 23, 26, 34, 36, 38, 56, 88, 89, 90, 91, 93, 128, 133, 147, 188, 197], "3d": [10, 28, 111, 123, 128, 187, 192, 197], "integr": [10, 28, 108, 110, 111, 116, 186, 187, 189, 192, 199], "multi": [10, 29, 31, 32, 56, 58, 63, 66, 79, 84, 85, 128, 180, 181, 189, 192], "featur": [10, 37, 63, 104, 154, 179, 180, 181, 182, 183, 188, 189, 190, 191, 192, 199], "dt": 10, "almost": [11, 164, 192], "remov": [11, 34, 52, 83, 84, 128, 131, 152, 153, 161, 162, 166, 169, 176, 178, 179, 181, 192], "ebl": [11, 77, 181, 191], "edge_len": [12, 24], "80": [12, 13, 24, 36, 66, 88, 89, 91], "inter_spac": [12, 24], "20": [12, 17, 18, 19, 24, 29, 31, 36, 38, 39, 68, 88, 89, 90, 91, 92, 140, 141, 195, 197], "pad_width": [13, 72, 90, 138, 142], "500": [13, 19, 25, 34, 48, 50, 56, 58, 63, 83, 90, 111, 135, 138, 143, 159, 192, 197], "junctions_horizont": [13, 138], "horizont": [13, 18, 23, 25, 58, 72, 83, 90, 138, 142, 143, 170], "small_loop_area": 13, "small": [13, 22, 64, 172, 192, 195], "loop": [13, 71, 75, 90, 92, 138], "large_loop_area": 13, "larg": [13, 180, 195], "130": [13, 192], "junction_width_smal": 13, "finger": [13, 17, 18, 19, 23, 34, 38, 39, 56, 57, 71, 72, 90, 93, 138, 147], "15": [13, 88, 89, 136, 197], "junction_width_larg": 13, "08": [13, 133], "junction_width_step_increment_smal": 13, "01": [13, 108, 111, 121, 128], "junction_width_step_increment_larg": 13, "03": 13, "pads_loop": 13, "central": [13, 191], "6": [13, 17, 18, 19, 23, 25, 29, 32, 37, 38, 48, 58, 63, 66, 72, 88, 89, 90, 128, 138, 143, 153, 166], "turn": [13, 19, 25, 29, 32, 34, 36, 37, 38, 43, 48, 56, 57, 58, 63, 88, 89, 90, 93, 111, 128, 133, 138, 143, 168, 173, 187, 192], "64": [13, 25, 29, 32, 37, 38, 58, 63, 90, 128, 138, 143, 153, 182], "r": [13, 25, 29, 32, 37, 38, 43, 58, 63, 64, 65, 90, 128, 138, 143, 153, 154, 168, 175, 178, 179, 192, 195, 198, 201], "radiu": [13, 25, 29, 32, 36, 37, 38, 39, 55, 58, 63, 64, 65, 72, 83, 88, 89, 90, 93, 128, 138, 143, 153, 168, 192], "protect": [13, 25, 29, 32, 37, 38, 58, 63, 68, 90, 128, 138, 143], "1t1": [13, 25, 29, 32, 37, 38, 58, 63, 79, 83, 84, 90, 128, 131, 138, 143, 152, 183, 187, 191, 192, 197], "2b1": [13, 25, 29, 32, 37, 38, 58, 63, 79, 83, 90, 128, 138, 143, 191, 192, 197], "1b1": [13, 25, 29, 32, 37, 38, 58, 63, 90, 128, 138, 143], "2t1": [13, 25, 29, 32, 37, 38, 58, 63, 79, 83, 90, 128, 138, 143, 192], "display_nam": [13, 25, 29, 32, 37, 38, 58, 63, 90, 128, 138, 143], "displai": [13, 25, 29, 32, 37, 38, 58, 63, 76, 90, 128, 138, 143, 187, 190, 191], "gui": [13, 25, 28, 29, 32, 37, 38, 55, 58, 63, 64, 76, 79, 90, 112, 114, 128, 138, 143, 150, 152, 156, 160, 173, 177, 179, 181, 182, 183, 186, 188, 189, 190, 192, 194, 197, 199, 200, 201], "protect_opposite_fac": [13, 25, 29, 32, 37, 38, 58, 63, 90, 128, 138, 143], "appli": [13, 25, 29, 32, 37, 38, 58, 63, 65, 76, 83, 84, 85, 90, 111, 123, 125, 128, 129, 138, 142, 143, 173, 187, 197], "onli": [13, 25, 29, 32, 34, 36, 37, 38, 43, 48, 56, 57, 58, 63, 64, 70, 83, 84, 85, 88, 89, 90, 92, 93, 97, 104, 111, 112, 125, 128, 134, 138, 139, 143, 146, 150, 154, 156, 159, 163, 166, 167, 168, 169, 173, 175, 178, 179, 180, 182, 183, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 202], "signal": [13, 25, 29, 32, 37, 38, 58, 63, 90, 97, 111, 124, 126, 128, 138, 143, 168, 187, 196, 197], "carri": [13, 25, 29, 32, 37, 38, 58, 63, 90, 128, 138, 143], "opposing_face_id_group": [13, 25, 29, 32, 37, 38, 58, 63, 90, 128, 138, 143], "oppos": [13, 25, 29, 32, 37, 38, 58, 63, 90, 128, 138, 143, 197], "group": [13, 25, 29, 32, 37, 38, 58, 63, 69, 79, 90, 119, 120, 128, 138, 143, 152, 155, 183, 187, 192], "etch_opposite_fac": [13, 25, 29, 32, 37, 38, 58, 63, 90, 128, 138, 143], "etch": [13, 19, 25, 29, 32, 37, 38, 58, 63, 79, 90, 124, 125, 126, 128, 138, 143], "opposit": [13, 19, 25, 29, 32, 37, 38, 58, 63, 90, 128, 131, 138, 143, 197], "too": [13, 25, 29, 32, 37, 38, 49, 58, 63, 64, 65, 67, 68, 90, 128, 138, 143, 164, 166, 178, 179, 180], "etch_opposite_face_margin": [13, 19, 25, 29, 32, 37, 38, 58, 63, 90, 128, 138, 143], "area_height": [13, 138], "height": [13, 17, 19, 34, 72, 76, 83, 90, 123, 125, 126, 128, 135, 138, 142, 158, 197], "1900": [13, 138], "area_width": [13, 138], "1300": [13, 19, 138], "pad_spac": [13, 138], "only_pad": [13, 138], "pad_configur": [13, 138], "junction_width_step": [13, 138], "automat": [13, 39, 55, 58, 63, 71, 76, 81, 83, 86, 97, 107, 138, 160, 173, 175, 176, 178, 179, 182, 183, 186, 187, 190, 191, 192, 193, 195], "junction_width": [13, 70, 90, 92, 138], "junction_test_pads_typ": [13, 138, 139], "junction_test_pads_paramet": [13, 138], "extra": [13, 19, 29, 33, 45, 63, 64, 66, 70, 83, 90, 92, 120, 138, 158, 169, 182], "_junction_test_pads_paramet": [13, 138], "previou": [13, 45, 63, 70, 90, 92, 138, 153, 178, 179, 187, 190, 191, 192], "state": [13, 45, 70, 90, 92, 138, 193, 195], "_paramet": [13, 37, 45, 70, 90, 92, 138], "mirror_squid": [13, 92, 138], "its": [13, 37, 58, 63, 64, 83, 92, 97, 104, 111, 128, 138, 152, 153, 154, 169, 173, 175, 187, 191, 192, 193], "junction_paramet": [13, 70, 90, 92, 138], "_junction_paramet": [13, 70, 90, 92, 138], "finger_overshoot": [13, 71, 72, 90, 138], "include_base_metal_gap": [13, 71, 72, 90, 138], "shadow_margin": [13, 71, 72, 90, 138], "shadow": [13, 71, 72, 90, 138], "compact_geometri": [13, 71, 90, 138], "compact": [13, 71, 90, 138, 154], "geometri": [13, 34, 36, 37, 38, 43, 48, 52, 56, 57, 61, 62, 71, 88, 89, 90, 92, 93, 96, 97, 98, 124, 125, 128, 130, 131, 132, 133, 138, 153, 159, 164, 169, 172, 181, 183, 187, 189, 190, 192, 196, 199, 200, 202], "separate_junct": [13, 71, 72, 90, 138], "offset_compens": [13, 71, 72, 90, 138], "lead": [13, 38, 57, 71, 72, 90, 111, 138, 168, 178, 195, 197], "offset": [13, 63, 71, 72, 83, 90, 93, 138], "mirror_offset": [13, 71, 72, 90, 138], "move": [13, 55, 63, 71, 72, 90, 92, 138, 153, 175, 183, 187, 188], "finger_overlap": [13, 71, 72, 90, 138], "insid": [13, 36, 57, 58, 63, 71, 72, 90, 97, 108, 111, 124, 126, 128, 138, 154, 160, 168, 183, 187, 190, 191, 192, 197, 200], "single_junct": [13, 71, 90, 138], "second": [13, 17, 32, 37, 43, 71, 90, 111, 114, 123, 124, 128, 138, 153, 192, 193, 195, 198], "predefin": [14, 64, 124, 187], "sma8": [14, 18, 132, 192], "ard24": [14, 18], "dc24": 14, "num_strip": [15, 16, 140, 141], "min_width": [15, 16], "max_width": [15, 16], "stripe_test": [15, 16], "stripe_test_increasing_width": [15, 16], "architectur": [16, 177, 181, 182, 192], "circular": [17, 36, 62, 83, 88, 154], "island": [17, 36, 88, 89, 90, 91, 92, 93, 196, 197], "drivelin": [17, 88, 89, 90, 91], "11500": 17, "12700": 17, "8000": [17, 119], "kappa_finger_control": 17, "capacitor": [17, 18, 19, 34, 36, 38, 39, 56, 57, 63, 147, 164, 187, 192], "32": [17, 88, 89], "21": [17, 18, 19, 23], "46": 17, "coupler_length": 17, "9800": 17, "couplers_a_qb1": 17, "couplers_b_qb1": 17, "couplers_angle_qb1": 17, "0deg": [17, 88, 89], "225": 17, "315": 17, "couplers_width_qb1": 17, "radial": [17, 88, 89], "30": [17, 18, 25, 56, 60, 61, 67, 88, 89, 108, 135, 143, 192, 196], "50": [17, 25, 35, 90, 119, 126, 160, 168], "couplers_arc_amplitude_qb1": 17, "angular": [17, 88, 89], "extens": [17, 88, 89, 126, 128, 176, 177, 182, 193, 196], "25": [17, 32, 41, 58, 197], "65": 17, "couplers_a_qb2": 17, "couplers_b_qb2": 17, "couplers_angle_qb2": 17, "couplers_width_qb2": 17, "couplers_arc_amplitude_qb2": 17, "35": [17, 88, 89], "drive_line_offset": 17, "end": [17, 29, 32, 55, 58, 63, 64, 65, 107, 110, 114, 123, 125, 128, 131, 168, 169, 175, 176, 187, 190, 191, 196, 197], "drive": [17, 88, 89, 90, 132], "ground_gap": [17, 36, 57, 88, 89, 90], "1400": 17, "900": [17, 192], "coupler_ext": [17, 90], "150": [17, 88, 90, 93, 192], "island1_ext": [17, 90], "first": [17, 18, 23, 37, 43, 55, 58, 63, 64, 76, 79, 90, 123, 124, 127, 128, 153, 166, 168, 173, 176, 178, 179, 181, 182, 187, 189, 191, 192, 194, 195, 197, 198], "island2_ext": [17, 90], "drive_posit": [17, 90], "1100": 17, "island_island_gap": [17, 90], "em1": 17, "res_length": [18, 19], "physic": [18, 19, 29, 36, 38, 43, 57, 63, 68, 107, 110, 111, 165, 195, 200, 202], "5434": [18, 19], "5429": [18, 19], "5374": [18, 19], "5412": [18, 19], "5493": [18, 19], "5589": [18, 19], "n_finger": [18, 19, 23, 56], "planar": [18, 19, 97], "l_finger": [18, 19, 23, 56], "23": [18, 19, 23], "9": [18, 19, 23, 182, 191, 192], "14": [18, 19, 23, 25, 178, 179], "28": [18, 19, 167, 179, 182], "type_coupl": [18, 19, 23, 56], "interdigit": [18, 19, 23, 56, 147], "n_ab": [18, 56, 135], "res_term": [18, 56], "termin": [18, 56, 58, 63, 64, 65, 114, 128, 131, 168, 178, 179, 182, 191, 193, 196, 197], "galvan": [18, 41, 56], "res_beg": [18, 56], "begin": [18, 56, 58, 65, 141, 191, 193], "res_a": [18, 19, 48, 56], "res_b": [18, 19, 48, 56], "12": [18, 19, 29, 68, 72, 74, 90, 92, 93, 108, 128, 196], "tl_airbridg": [18, 56], "res_airbridge_typ": [18, 56], "rectangular": [18, 29, 31, 33, 49, 56, 58, 63, 64, 65, 66, 83, 93, 191], "sample_holder_typ": 18, "marker_safeti": 18, "curv": [18, 64, 65, 153], "feedline_bend_dist": 18, "feedlin": [18, 23, 36, 38], "bend": [18, 55, 63, 64, 197], "resonators_both_sid": 18, "both": [18, 19, 29, 30, 32, 37, 63, 70, 75, 86, 111, 117, 128, 168, 173, 176, 180, 191, 195, 197, 198], "max_res_len": [18, 56], "exceed": [18, 56], "becom": [18, 56, 63, 79, 127, 190, 196, 197], "1e": [18, 56, 111, 124, 133], "ground_grid_in_trac": [18, 55, 56, 63, 64, 65, 67], "trace": [18, 29, 48, 49, 56, 63, 64, 65, 67, 68, 126], "border": [18, 128], "preliminari": 19, "resonator_typ": 19, "connector_dist": [19, 58], "extra_resonator_avoid": 19, "extra_resonator_etch": 19, "spiral": [19, 58, 187], "attach": [19, 83, 161, 191], "pl_": 19, "_t_port_c": 19, "identifi": [19, 84, 104, 112, 164, 165, 172, 191, 192, 193], "long": [19, 172, 179, 192, 195, 196, 197], "same": [19, 23, 36, 37, 38, 55, 63, 76, 83, 84, 85, 97, 124, 128, 153, 160, 163, 164, 165, 166, 169, 173, 178, 179, 180, 183, 187, 190, 191, 192, 193, 195, 197], "wai": [19, 22, 37, 63, 84, 85, 121, 124, 168, 173, 179, 181, 182, 183, 186, 187, 191, 192, 197, 198], "direct": [19, 22, 32, 33, 37, 49, 55, 63, 64, 83, 92, 111, 125, 128, 132, 146, 153, 156, 168, 187, 192, 197], "_corner": [19, 168], "cpw": [19, 25, 56, 143], "exclud": [19, 166, 168], "finger_control": [19, 57], "solid": [19, 196], "twofac": 19, "ground_grid_avoid": [19, 37, 92, 192], "counter": [19, 58, 153], "resonator_fac": 19, "2100": 19, "2900": 19, "3700": 19, "4500": 19, "spiral_box_height": 19, "spiral_box_width": 19, "x_indent": 19, "indent": [19, 20, 154], "800": [19, 58], "cap_res_dist": 19, "waveguide_indent": 19, "At": [19, 153, 188], "bridge_spac": [19, 58], "parametr": [20, 181, 187], "connect": [20, 22, 23, 38, 43, 49, 50, 58, 64, 88, 89, 120, 126, 128, 139, 142, 160, 187, 188, 192, 197], "pairwis": 20, "coplanar": [20, 43, 63, 64, 65, 67, 68, 165, 187, 192, 196], "n_launcher": 20, "40": [20, 32, 36, 41, 43, 58, 63], "launcher_pitch": 20, "pitch": [20, 25, 143], "635": 20, "160": [20, 188], "96": 20, "520": 20, "tunabl": 21, "veri": [22, 64, 76, 187, 190, 192, 197, 198], "coupl": [23, 48, 188, 196], "half": [23, 91, 192], "abov": [23, 58, 128, 160, 179, 180, 183, 187, 188, 190, 195, 196, 198, 199], "below": [23, 29, 58, 74, 123, 125, 128, 146, 160, 169, 171, 178, 186, 190, 191, 192, 193, 195, 196, 197, 199], "chargelin": [23, 93], "whose": [23, 160, 163], "upper": [23, 74, 92, 125, 128, 197], "six": 23, "5400": [23, 191], "5500": [23, 191], "use_test_reson": [23, 130], "test_res_length": 23, "5600": [23, 191], "5800": 23, "metrologi": 25, "segment": [25, 58, 63, 64, 65, 67, 68, 123, 128, 187], "crossect": 25, "analysi": [25, 108, 120, 196], "array_form": 25, "array_layout": 25, "metrology_pitch": 25, "cpw_distanc": [25, 143], "placehold": [25, 143, 191], "hor_dist": [25, 143], "ver_dist": [25, 143], "tsv_diamet": [25, 60, 143], "diamet": [25, 32, 41, 58, 60, 143], "tsv_margin": [25, 60, 143], "tsv_elliptical_width": [25, 61, 143], "ellipt": [25, 61, 143], "pos_start": [26, 132], "end_i": [26, 132], "c_kappa_l_fing": 26, "dedic": [26, 124, 128, 133, 197, 199], "function": [26, 31, 37, 45, 57, 58, 63, 66, 70, 75, 79, 82, 84, 86, 92, 95, 97, 101, 104, 112, 116, 123, 124, 125, 128, 129, 132, 133, 145, 147, 150, 153, 154, 156, 163, 164, 166, 169, 172, 173, 174, 180, 189, 191, 192, 195, 196, 197, 199], "also": [26, 28, 37, 49, 55, 63, 64, 65, 67, 76, 83, 84, 85, 86, 87, 92, 93, 110, 117, 125, 128, 133, 138, 140, 141, 142, 146, 152, 153, 154, 160, 161, 162, 164, 166, 169, 173, 175, 176, 178, 179, 180, 181, 182, 183, 186, 187, 190, 191, 192, 193, 195, 196, 197, 199, 201], "assum": [26, 64, 65, 76, 84, 128, 133, 182, 188, 196, 197], "follow": [26, 58, 63, 64, 76, 79, 81, 82, 96, 97, 98, 128, 130, 131, 132, 133, 153, 154, 160, 161, 165, 171, 172, 173, 174, 175, 178, 179, 180, 182, 183, 187, 190, 191, 192, 193, 195, 196, 197, 198, 199, 202], "attribut": [26, 37, 82, 126, 133, 166, 173, 174], "arm_width_a": [26, 132, 133], "arm_width_b": [26, 132, 133], "qubit_spac": [26, 132, 133], "fluxline_typ": [26, 45, 46, 47, 92, 133, 197], "rr_cpl_width": [26, 133], "arm": [26, 38, 92, 93, 132, 133, 136, 138, 192], "24": [26, 93, 132, 133], "rr": [26, 133], "qb": [26, 133], "um": [26, 93, 126, 128, 133, 158, 165], "file": [27, 37, 69, 76, 77, 79, 81, 82, 83, 84, 107, 108, 110, 111, 112, 115, 120, 124, 127, 128, 150, 152, 157, 159, 162, 164, 165, 169, 171, 173, 175, 176, 178, 179, 180, 181, 182, 183, 187, 188, 189, 190, 191, 193, 194, 195, 196, 198, 199, 200, 201], "thing": [27, 81, 173, 183, 192, 195], "path": [27, 58, 63, 64, 76, 82, 86, 107, 108, 110, 112, 115, 120, 123, 124, 127, 132, 152, 153, 157, 161, 164, 165, 175, 179, 180, 182, 186, 187, 192, 193, 194, 195, 198, 202], "sub": [27, 37, 63, 64, 71, 83, 92, 111, 125, 128, 169, 173, 187, 191], "repres": [28, 63, 64, 65, 70, 75, 76, 81, 83, 84, 85, 124, 153, 181, 190, 197], "form": [28, 63, 83, 97, 108, 111, 117, 121, 128, 160, 172, 173], "being": [28, 79, 178, 192], "pcelldeclarationhelp": [28, 37, 173], "load": [28, 69, 84, 87, 90, 91, 93, 157, 159, 161, 165, 169, 173, 190, 191, 192], "klayout": [28, 63, 64, 76, 79, 86, 124, 128, 150, 152, 159, 160, 161, 162, 164, 167, 173, 175, 176, 178, 179, 181, 183, 186, 187, 188, 189, 191, 192, 197, 199, 200, 201], "code": [28, 30, 34, 36, 37, 38, 43, 48, 55, 56, 57, 63, 64, 69, 70, 75, 76, 87, 88, 89, 90, 92, 93, 97, 138, 154, 160, 169, 172, 173, 175, 177, 178, 179, 180, 181, 182, 183, 186, 189, 190, 197, 198, 200, 201], "share": [28, 92, 128, 153, 195], "them": [28, 97, 108, 164, 173, 178, 179, 180, 183, 186, 187, 191, 192, 197], "have": [28, 31, 34, 36, 37, 38, 43, 48, 52, 56, 57, 63, 64, 76, 79, 83, 84, 85, 87, 88, 89, 90, 93, 104, 108, 124, 128, 152, 153, 160, 161, 164, 166, 168, 169, 173, 175, 176, 178, 179, 180, 182, 183, 184, 187, 188, 190, 191, 192, 193, 194, 196, 197, 202], "easi": [28, 178, 180, 181], "support": [28, 36, 63, 76, 105, 110, 111, 120, 152, 154, 159, 179, 181, 182, 187, 192, 193, 195, 196, 197, 199, 202], "concept": [28, 187, 190, 192, 197], "belong": [28, 79, 104, 164, 192], "certain": [28, 34, 36, 37, 38, 43, 48, 56, 57, 77, 83, 84, 88, 89, 90, 93, 128, 178, 179, 180, 192, 197], "determin": [28, 37, 52, 63, 64, 83, 84, 107, 108, 111, 128, 142, 160, 162, 168, 169, 191, 192, 193, 196, 197], "actual": [28, 31, 45, 63, 64, 65, 70, 75, 83, 84, 92, 105, 175, 179, 183, 190, 191, 192, 197, 202], "refer": [28, 35, 36, 37, 38, 39, 76, 79, 82, 88, 89, 128, 152, 153, 154, 168, 171, 173, 178, 179, 180, 187, 190, 192, 198], "taper": [29, 39, 49, 63, 68, 90], "bridge_gap_width": 29, "with_side_airbridg": 29, "With": [29, 79, 173, 187, 191], "with_right_waveguid": 29, "gap_between_bridg": 29, "inner": [29, 89, 128, 197], "adjac": [29, 63, 128, 153, 155], "bridg": [29, 31, 32, 33, 55, 58, 63, 66, 96, 192], "waveguide_extra": 29, "taper_length": [29, 39, 63, 68], "31": [29, 68, 154], "41592653589793": [29, 68], "m2": [29, 68, 182], "a2": [29, 36, 37, 38, 43, 57, 63, 66, 68], "non": [29, 36, 38, 43, 55, 57, 58, 63, 68, 108, 124, 128, 153, 154, 159, 172, 196, 197], "b2": [29, 36, 37, 38, 43, 57, 63, 66, 68], "add_met": [29, 49, 63, 64, 65, 67, 68], "add": [29, 32, 37, 49, 55, 61, 63, 64, 65, 67, 68, 74, 76, 83, 84, 96, 98, 111, 120, 124, 128, 130, 131, 132, 133, 142, 166, 173, 175, 183, 188, 191, 192, 193, 197, 198], "airbridge_typ": [29, 31, 32, 33, 58, 63, 66], "bridge_width": [29, 31, 32, 58], "pad_length": [29, 31, 32, 58], "22": [29, 72, 90, 175, 178, 182], "bridge_length": [29, 31, 58, 192], "60": [29, 39, 88, 89], "without": [31, 45, 58, 63, 70, 75, 76, 83, 86, 92, 121, 128, 139, 179, 180, 182, 183, 187, 191, 192, 193, 195, 197, 201], "subclass": [31, 34, 36, 37, 38, 43, 48, 52, 56, 57, 63, 84, 85, 88, 89, 90, 92, 93, 97, 108, 111, 128, 154, 166, 189, 196, 198, 199], "otherwis": [31, 32, 33, 37, 63, 64, 76, 96, 98, 112, 114, 125, 128, 129, 130, 131, 132, 133, 154, 161, 169, 178, 182, 187, 197], "user": [31, 32, 33, 37, 61, 63, 76, 84, 92, 114, 172, 175, 176, 178, 179, 181, 182, 186, 191, 192, 193, 195, 197], "classmethod": [31, 34, 36, 37, 38, 41, 43, 45, 48, 52, 54, 56, 57, 60, 63, 70, 88, 89, 90, 93, 97, 128, 138, 166, 173, 197], "18": [31, 45], "44": [31, 58, 192], "equival": [32, 63, 154], "origin": [32, 33, 37, 41, 61, 62, 65, 66, 73, 74, 76, 83, 124, 128, 153, 158, 192], "geometr": [32, 33, 41, 61, 62, 153, 181], "include_bump": [32, 58], "ubm_diamet": [32, 41, 58], "under": [32, 37, 41, 58, 76, 84, 104, 123, 126, 128, 161, 175, 178, 183, 186, 187, 190, 192], "bump_diamet": [32, 41, 58], "part": [33, 48, 49, 58, 84, 92, 93, 111, 125, 126, 128, 138, 153, 178, 187, 188, 190, 191, 192, 195, 196], "port_a": [33, 37, 63], "port_b": [33, 37, 63, 192], "closest": [33, 35, 121, 128, 142, 152, 160, 197], "pad_extra": 33, "capacit": [34, 57, 90, 91, 108, 111, 126, 133, 168, 189, 195, 197, 199], "fem": [34, 195], "comput": [34, 69, 120, 153, 193, 195, 196], "when": [34, 36, 37, 38, 43, 48, 56, 57, 63, 64, 76, 83, 88, 89, 90, 93, 104, 111, 114, 116, 124, 125, 126, 128, 152, 153, 168, 169, 172, 173, 175, 176, 179, 182, 187, 190, 191, 192, 193, 195, 197, 200], "best": [34, 36, 37, 38, 43, 48, 56, 57, 88, 89, 90, 93, 179, 182, 192], "practic": [34, 36, 37, 38, 43, 48, 56, 57, 63, 88, 89, 90, 93, 173, 186, 197], "effect": [34, 36, 37, 38, 43, 48, 56, 57, 88, 89, 90, 93, 108, 128, 129, 132, 158, 178, 180, 196], "serv": [34, 36, 37, 38, 43, 48, 56, 57, 88, 89, 90, 93], "deriv": [34, 36, 37, 38, 43, 48, 56, 57, 63, 88, 89, 90, 93, 101, 104, 129, 146, 153, 173, 192], "noth": [34, 36, 37, 38, 43, 48, 56, 57, 88, 89, 90, 93, 166, 190], "els": [34, 36, 37, 38, 43, 48, 56, 57, 88, 89, 90, 93, 154], "cl": [34, 36, 37, 38, 43, 48, 52, 56, 57, 88, 89, 90, 93, 97, 128, 147, 166, 197], "you": [34, 36, 37, 38, 43, 48, 52, 56, 57, 58, 76, 88, 89, 90, 93, 107, 110, 124, 154, 160, 171, 173, 174, 175, 176, 178, 179, 180, 182, 183, 184, 186, 187, 188, 190, 191, 192, 193, 194, 196, 197, 198, 200, 201, 202], "need": [34, 36, 37, 38, 43, 48, 52, 56, 57, 58, 63, 64, 77, 79, 86, 88, 89, 90, 93, 95, 97, 101, 104, 127, 150, 152, 153, 165, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199], "decid": [34, 36, 37, 38, 43, 48, 56, 57, 88, 89, 90, 93, 197], "x_coupler_length": 34, "x_coupler_height": 34, "x_coupler_vari": 34, "variant": [34, 46, 47, 81, 84, 191], "either": [34, 37, 58, 69, 70, 75, 76, 79, 84, 85, 87, 101, 128, 139, 153, 168, 178, 187, 192, 197, 199], "remove_capacitor": 34, "finger_numb": [34, 38, 39], "finger_width": [34, 38, 39, 57], "finger_gap": [34, 38, 39, 57], "finger_gap_end": [34, 38], "marker_dist": 35, "diagonal_squar": [35, 52], "use_face_prefix": 35, "prefix": [35, 37, 76, 82, 100, 101, 102, 103, 104, 110, 115, 124, 127, 128, 142, 153, 180, 192], "chip_dicing_width": 35, "chip_dicing_line_length": 35, "chip_dicing_gap_length": 35, "dash": [35, 187], "outer": [36, 49, 83, 89, 142], "semi": 36, "fix": [36, 38, 57, 63, 128, 180, 182], "imped": [36, 88, 89, 126], "r_inner": [36, 89], "r_outer": [36, 89], "extern": [36, 89, 181, 186, 189, 192, 197, 198], "swept_angl": 36, "cover": [36, 52, 83, 125, 128, 147, 155, 168, 180, 187, 191, 196], "180": [36, 43, 63, 66, 89], "outer_island_width": [36, 89], "fixed_length": [36, 38, 57], "auto": [36, 38, 57, 192], "cell_transf": [37, 128], "extract": [37, 101, 104, 160, 164, 168, 169], "specif": [37, 52, 63, 70, 75, 76, 81, 82, 84, 97, 104, 116, 128, 154, 168, 171, 173, 175, 178, 179, 182, 183, 187, 190, 192, 197, 198, 199], "convert": [37, 63, 83, 128, 154, 156, 160, 161, 163, 164, 168, 169, 186, 188, 189], "target": [37, 63, 145, 168, 179, 182], "system": [37, 79, 111, 152, 168, 175, 178, 179, 182, 183, 189, 195, 198], "recurs": [37, 76, 128, 154, 163, 168], "level": [37, 76, 125, 128, 152, 154, 160, 168, 172, 173, 180, 186, 187, 190, 192, 195, 202], "look": [37, 76, 127, 128, 129, 161, 168, 178, 181, 192], "subcel": [37, 63, 76, 92, 128, 138, 168, 192], "behav": 37, "like": [37, 63, 70, 75, 84, 101, 154, 166, 173, 175, 176, 179, 180, 182, 183, 187, 191, 192, 195, 196], "target_cel": 37, "label_tran": [37, 76, 128], "note": [37, 58, 63, 76, 83, 84, 101, 111, 156, 167, 168, 173, 175, 178, 179, 180, 181, 187, 191, 192, 193, 195, 201], "To": [37, 84, 85, 86, 101, 108, 111, 132, 154, 175, 176, 178, 182, 183, 187, 190, 191, 192, 195, 196, 197, 201, 202], "inherit": [37, 173, 192, 197], "It": [37, 63, 64, 76, 83, 84, 85, 86, 92, 128, 138, 154, 173, 175, 178, 179, 180, 181, 182, 183, 187, 188, 192, 194, 195, 197, 198], "directli": [37, 63, 76, 128, 180, 186, 187, 191, 192, 195], "take": [37, 76, 97, 104, 124, 128, 129, 153, 154, 166, 168, 178, 187, 188, 195, 196, 198, 199, 202], "provid": [37, 76, 85, 95, 128, 154, 175, 187, 190, 196, 197, 202], "keyword": [37, 52, 63, 76, 84, 85, 96, 97, 98, 123, 128, 130, 131, 132, 133, 197], "placement": [37, 52, 76, 83, 128, 132, 169, 176], "parent": [37, 76, 128, 132, 168, 169, 173], "allow": [37, 63, 64, 76, 83, 92, 108, 111, 128, 138, 153, 154, 173, 179, 181, 182, 183, 187, 195, 196, 201], "possibl": [37, 52, 58, 63, 64, 76, 84, 92, 128, 139, 166, 173, 175, 178, 179, 183, 187, 192, 193, 195, 196, 198, 200], "instanc": [37, 52, 63, 76, 84, 85, 108, 111, 128, 129, 146, 147, 151, 156, 160, 163, 164, 165, 169, 173, 178, 179, 187, 188, 190, 192, 196, 197, 198, 199, 200], "properti": [37, 61, 76, 83, 85, 97, 128, 165, 166, 169, 173, 186, 187, 188, 190, 192], "rel": [37, 76, 92, 104, 107, 108, 111, 123, 128, 138, 158, 161, 168, 173, 192, 196], "dvector": [37, 76, 83, 92, 128, 153], "must": [37, 63, 64, 76, 125, 128, 153, 156, 167, 168, 169, 178, 179, 183, 190, 192, 195, 196, 197, 198, 201], "default_fac": [37, 79, 192], "doe": [37, 63, 126, 153, 160, 175, 178, 183, 187, 195, 199, 202], "necessarili": [37, 64], "subtyp": 37, "abstract": [37, 97, 128, 173], "care": [37, 153, 178, 180], "str": [37, 63, 83, 100, 101, 102, 103, 104, 107, 108, 110, 111, 113, 114, 117, 119, 123, 124, 126, 128, 129, 145, 152, 154, 156, 159, 160, 161, 166, 169], "indic": [37, 79, 123, 128, 168, 192, 196, 197], "refpoint_transform": 37, "conveni": [37, 63, 83, 86, 128, 153, 194, 197], "new": [37, 76, 96, 97, 98, 115, 128, 130, 131, 132, 133, 145, 151, 152, 156, 161, 166, 169, 172, 173, 178, 179, 180, 183, 187, 188, 189, 191], "present": [37, 116, 128, 169, 175, 178, 182], "avail": [37, 76, 92, 124, 128, 173, 179, 183, 187, 192, 195, 196, 198, 202], "give": [37, 111, 128, 178, 182, 183, 192, 196], "current": [37, 76, 86, 105, 108, 120, 128, 152, 182, 187, 189, 191, 192, 193, 197], "po": [37, 132, 142], "well": [37, 104, 121, 153, 169, 191, 197, 202], "netlist": [37, 84, 164, 165, 186, 191], "Will": [37, 124], "decor": [37, 166, 173, 197], "annot": [37, 61, 64, 65, 79, 176, 186, 192], "evalu": 37, "replac": [37, 84, 156, 169, 178, 191, 198], "mark": [37, 79, 190], "go": [37, 76, 128, 171, 175, 176, 188, 190, 192, 197, 201], "_to_": 37, "cell_inst": 37, "new_nam": 37, "definit": [37, 115, 128, 160, 173, 181, 183, 191, 192, 193, 195, 200], "expos": [37, 63, 86, 190], "renam": 37, "nopar": [37, 97, 128], "abstract_class": [37, 97, 128], "ancestor": [37, 97, 128, 173], "up": [37, 97, 107, 108, 110, 111, 126, 128, 129, 155, 159, 161, 167, 168, 173, 178, 179, 180, 181, 187, 190, 192, 195, 196, 197, 199], "draw": [37, 61, 63, 165, 179, 181, 183, 186, 192, 197, 198], "error_msg": 37, "error": [37, 107, 110, 111, 115, 116, 120, 162, 175, 178, 181, 182, 183, 187, 190, 192], "rais": [37, 63, 115, 116, 154, 156, 169, 190], "valueerror": [37, 63, 154, 156], "messag": [37, 76, 116, 172, 182, 183], "pure": [37, 196], "doesn": [37, 97, 104, 128, 187, 197], "t": [37, 43, 63, 66, 79, 97, 104, 116, 128, 154, 173, 175, 178, 179, 182, 187, 192, 195, 197], "dpolygon": [37, 125, 170, 192], "etc": [37, 63, 79, 124, 128, 164, 169, 173, 178, 183, 192, 200], "primari": [37, 178, 196], "abc": [37, 83], "syncronis": 37, "json": [37, 82, 107, 110, 115, 124, 127, 152, 154, 164, 165, 169, 195, 196, 198, 202], "represent": [37, 63, 83, 153, 154, 195], "sever": [37, 63, 76, 154, 173, 178, 183, 187, 191, 192, 197, 198, 199], "editor": [37, 86, 178, 179, 182, 183, 186, 188, 190, 191, 192, 198, 201], "particularli": [37, 166], "figur": [37, 165, 197], "out": [37, 76, 114, 128, 159, 160, 168, 178, 179, 182, 191, 192, 193, 196], "fluxline_width": [37, 45, 47], "fluxline_paramet": [37, 45, 92], "Or": [37, 84, 86], "consid": [37, 64, 83, 97, 124, 153, 156, 179, 196, 197], "descend": [37, 163, 173], "common": [37, 52, 95, 104, 115, 181, 182, 190, 198], "respect": [37, 63, 125, 126, 128, 136, 158, 170, 197], "adjust": [37, 39, 63, 187], "_port": 37, "orient": [37, 63, 123, 169], "output_rot": [37, 43, 63], "x_max": 38, "y_max": 38, "x_end": 38, "y_left": 38, "y_right": 38, "ground_pad": 38, "ground_gap_ratio": 38, "ratio": [38, 39, 49, 76, 189, 199], "finger_length": [38, 39], "corner_r": [38, 39], "maintain": [39, 172, 178, 182], "match": [41, 65, 84, 85, 116, 183, 193, 198], "contact": [41, 152], "over": [41, 63, 85, 108, 111, 128, 160, 166, 175, 178, 190, 196, 197], "inter": [42, 43], "output": [43, 63, 110, 111, 124, 145, 154, 156, 160, 162, 175, 179, 186, 192, 193, 195, 196, 198, 199, 202], "chosen": [43, 55, 58, 76, 116, 187, 193, 195], "inter_bump_dist": [43, 63], "w": [43, 58, 63, 64, 132], "connector_a": [43, 58, 63], "connector_b": [43, 58, 63], "round_connector": [43, 58, 63], "round": [43, 58, 63, 72, 90, 93, 111, 128, 153, 159, 192], "n_center_bump": [43, 63], "seri": [43, 63, 91, 96, 198], "fluxline_gap_width": [45, 47], "_fluxline_paramet": [45, 92], "hanger": 48, "coupling_length": 48, "head_length": 48, "resonator_length": [48, 56], "total": [48, 55, 63, 73, 74, 92, 111, 128, 135, 145, 153, 195, 196], "ground_width": 48, "middl": [48, 63, 128, 129, 191, 197], "wirebond": [49, 50], "west": [49, 93, 152], "east": [49, 93, 152], "scale": [49, 83], "a_launch": 49, "b_launcher": 49, "l": [49, 67, 174], "240": 49, "144": 49, "cell_mark": [52, 54], "kwarg": [52, 54, 58, 63, 66, 76, 83, 84, 85, 96, 97, 98, 128, 130, 131, 132, 133, 145, 147, 154, 161, 166], "wafer": [52, 83, 85, 191, 192, 200], "By": [52, 55, 83, 84, 85, 92, 111, 128, 154, 162, 172, 190, 191, 192, 193, 195, 200], "own": [52, 93, 124, 152, 175, 178, 181, 182, 183, 192], "wish": [52, 178, 191], "custom": [52, 63, 79, 88, 89, 110, 116, 124, 125, 154, 176, 181, 195], "hous": 52, "encod": [52, 154], "prefer": [52, 150, 173, 176, 179, 188, 194, 195, 200], "inst": [52, 54, 146], "surround": [52, 169], "extend": [52, 63, 64, 128, 168, 181, 191, 192], "box_margin": 52, "window": [52, 54, 76, 110, 152, 153, 175, 177, 182, 183, 187, 188, 190, 191, 194, 198, 201], "flyover": [52, 54], "arm_length": [54, 92, 93, 138, 192, 197], "arm_width": [54, 93, 192], "ubm": 54, "arrow_numb": 54, "arrow": [54, 190], "start_point": 55, "end_point": 55, "altern": [55, 58, 63, 64, 84, 108, 111, 114, 128, 164, 169, 178, 195, 196, 198], "shown": [55, 76, 112, 114, 124, 164, 165, 173, 187, 190, 195], "latter": [55, 63, 84, 175], "cannot": [55, 63, 156, 182, 192, 193], "edit": [55, 63, 64, 156, 179, 183, 186, 188, 189, 192, 201], "minim": [55, 63, 104], "taken": [55, 64, 65, 91, 124, 128, 153, 160, 173, 186, 197], "underli": [55, 192], "equidist": 55, "n_bridg": [55, 63, 96], "600": 55, "3000": [55, 192], "probeline_length": 56, "probelin": 56, "smooth": [56, 57, 147], "intern": [56, 97, 128, 168, 187, 196, 197, 198], "continu": [57, 58, 63, 64, 153, 180], "numer": [57, 153], "optim": [57, 111], "achiev": [57, 63, 92], "growth": 57, "relat": [57, 79, 116, 181, 184, 192], "input_path": 58, "goe": [58, 63, 153], "last": [58, 63, 64, 79, 101, 127, 128, 153, 191, 192], "poly_path": 58, "unless": [58, 178, 179, 182, 191], "alreadi": [58, 76, 107, 114, 124, 178, 188, 191, 192], "longer": [58, 163, 166, 187], "than": [58, 63, 76, 79, 83, 111, 123, 128, 153, 160, 162, 164, 173, 181, 182, 190, 192, 195, 196], "vertex": 58, "parallel": [58, 84, 131, 178, 191, 195], "polygon_path": 58, "want": [58, 83, 101, 160, 169, 176, 178, 179, 180, 187, 190, 191, 192, 194, 195, 197, 198, 202], "choos": [58, 84, 92, 138, 179, 182, 183, 187, 188, 190, 191, 192, 193, 195, 202], "attempt": [58, 154, 164, 178], "find": [58, 86, 121, 149, 156, 161, 173, 180, 182, 192], "largest": [58, 153], "zero": [58, 124, 128, 197], "independ": [58, 178, 179, 195], "n_bridges_pattern": 58, "neg": [58, 128, 154], "so": [58, 63, 84, 96, 97, 98, 104, 124, 128, 130, 131, 132, 133, 152, 153, 168, 169, 173, 175, 178, 179, 180, 182, 183, 187, 190, 192, 196, 198, 201], "above_spac": 58, "below_spac": 58, "right_spac": 58, "x_space": 58, "y_space": 58, "bridges_left": 58, "bridges_bottom": 58, "bridges_right": 58, "bridges_top": 58, "easili": [58, 66, 120, 147, 179, 180, 181, 192], "old": [58, 66, 161, 162, 169, 191], "spiralresonatorrectangl": 58, "bx": [58, 63, 64], "ex": [58, 63, 64, 182], "auto_spac": 58, "include_connector_length": 58, "manual_spac": 58, "term2": [58, 63, 64, 132], "substrat": [61, 62, 111, 123, 124, 125, 128, 192, 197], "e": [62, 63, 66, 83, 92, 111, 129, 132, 153, 154, 164, 169, 173, 175, 179, 192, 193, 194, 195, 196], "composit": [63, 101, 173, 187, 189], "suppli": [63, 64, 85, 96, 98, 128, 130, 131, 132, 133, 152, 197], "serial": [63, 154], "from_seri": 63, "ast": [63, 156], "literal_ev": [63, 156], "node_object": 63, "node_obj": 63, "element_nam": 63, "human": [63, 181, 186], "readabl": [63, 186], "storag": [63, 187], "conform": [63, 120], "format": [63, 97, 152, 153, 160, 171, 195, 196, 198, 199], "class_str": 63, "parameter_dict": 63, "__str__": 63, "omit": [63, 182, 191, 192, 197], "made": [63, 92, 163, 164, 165, 196, 197], "perspect": 63, "rout": [63, 128, 162, 187, 192], "As": [63, 183, 187, 190, 191, 192], "bonu": 63, "arbitrari": [63, 64, 153, 154, 192], "next": [63, 125, 128, 140, 141, 153, 183, 187, 190, 197], "waypoint": [63, 64], "except": [63, 64, 76, 84, 116, 123, 154, 156, 164, 166, 169, 173, 187, 190], "collinear": 63, "back": [63, 192, 193], "pass": [63, 76, 84, 85, 96, 97, 98, 101, 104, 108, 111, 112, 128, 130, 131, 132, 133, 153, 154, 160, 161, 165, 173, 192, 197], "ab_across": 63, "across": [63, 126, 197], "evenli": 63, "preced": 63, "calcul": [63, 83, 92, 101, 108, 111, 126, 138, 179, 187, 192, 196], "ab_to_ab_spac": 63, "ab_to_node_clear": 63, "former": 63, "densiti": [63, 83, 145, 187], "fact": 63, "instead": [63, 66, 76, 84, 111, 154, 156, 173, 175, 178, 183, 187, 192, 193, 195, 196, 197], "normal": [63, 126, 173, 175, 192], "those": [63, 125, 154, 187, 191, 193], "correct": [63, 86, 101, 104, 123, 156, 173, 182, 183, 192, 193], "compar": [63, 64, 154, 159, 186, 192], "notabl": 63, "detail": [63, 95, 111, 175, 178, 179, 183, 190, 192, 196, 198, 199], "everi": [63, 64, 127, 154, 169, 173, 176, 179, 187, 200], "done": [63, 111, 179, 180, 187, 192, 194, 195, 196, 201], "segment_length": 63, "individu": [63, 83, 84, 85, 111, 124, 128, 172, 178, 179, 187, 197], "regular": [63, 182, 191, 197, 198], "test_waveguide_composit": [63, 190], "lym": [63, 169, 187, 190, 198], "script": [63, 76, 107, 110, 112, 114, 115, 127, 152, 160, 169, 175, 176, 178, 179, 182, 183, 186, 187, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202], "were": [63, 101, 160, 169], "explicitli": [63, 104, 111, 152, 182, 195], "implicitli": 63, "node_index": [63, 151, 156], "_created_": 63, "associ": [63, 76, 165, 190], "particular": [63, 183, 190, 192], "subscel": 63, "appear": [63, 183, 187, 188, 190, 200], "retriev": 63, "itself": [63, 104, 178, 183, 192, 196], "count": [63, 128, 146, 197], "consecut": [63, 155], "special": [63, 153, 187], "consequ": [63, 91, 164], "accumul": 63, "oni": 63, "report": [63, 84, 111, 180], "route_funct": 63, "initial_guess": 63, "waveguide_param": 63, "lambda": 63, "f": [63, 66, 124, 126, 133, 175, 190], "more": [63, 79, 81, 84, 107, 110, 120, 124, 128, 164, 172, 173, 174, 175, 178, 179, 181, 183, 186, 187, 190, 191, 192, 195, 196, 197, 198, 199, 201], "compon": [63, 164], "tune": [63, 92, 169, 197], "weight": 63, "initi": [63, 76, 96, 97, 98, 128, 130, 131, 132, 133, 160, 168, 190, 191], "reason": [63, 173, 192], "interfac": [63, 111, 123, 124, 128, 183, 196, 197], "snap": [63, 160], "behavior": [63, 76, 154], "unmodifi": 63, "requir": [63, 76, 111, 116, 150, 160, 173, 174, 177, 178, 180, 182, 183, 186, 187, 191, 192, 195, 197, 198, 199, 202], "chain": 63, "iter": [63, 64, 108, 111, 154, 160, 196], "approri": 63, "target_len": 63, "point_a": 63, "point_a_corn": 63, "point_b": 63, "point_b_corn": 63, "endpoint": [63, 64, 124, 153, 164], "enable_gui_edit": [63, 156], "gui_path": 63, "gui_path_shadow": 63, "hidden": [63, 79, 166, 173, 192], "detect": [63, 187], "tight_rout": 63, "tight": 63, "airbridge_param": 63, "radio": 64, "bent": 64, "open": [64, 90, 91, 152, 176, 178, 182, 183, 185, 187, 188, 189, 190, 191, 195, 196, 201], "dpath": [64, 153, 192], "partial": [64, 187, 188], "case": [64, 79, 84, 86, 115, 124, 128, 152, 163, 169, 176, 179, 180, 182, 183, 186, 187, 190, 191, 192, 193, 196, 197], "guid": [64, 84, 131, 174, 175, 181, 183, 187, 197], "visibl": [64, 76, 178, 182, 183, 187, 190, 191, 192], "graphic": [64, 83, 153, 183], "due": [64, 173, 182], "precis": [64, 124, 128, 153, 181, 196], "arithmet": 64, "point1": 64, "point2": 64, "point3": 64, "data": [64, 79, 83, 95, 97, 108, 111, 124, 126, 127, 128, 160, 165, 169, 182, 190, 192, 196, 198, 199], "v1": 64, "v2": 64, "alpha1": 64, "alpha2": 64, "corner_po": 64, "vector": [64, 153], "elem": [64, 65], "point_1": 64, "point_2": 64, "term_len": [64, 65], "face_index": [64, 65], "One": [64, 128, 158, 164, 179, 187, 197], "waveguide_cel": 64, "annotation_lay": 64, "enough": [64, 160], "neighbor": [64, 187], "begin_shapes_rec": 64, "we": [64, 79, 83, 101, 128, 164, 168, 169, 172, 173, 174, 178, 179, 182, 183, 187, 190, 191, 192, 195, 197, 198, 200], "unsign": [64, 153], "maximum": [64, 76, 108, 111, 195, 196], "tline": 64, "stop": [65, 108, 111, 153, 178, 190, 196], "mode": [65, 76, 150, 179, 183, 186, 188, 190, 195, 198, 201], "radian": [65, 153], "circl": [65, 153, 190], "discret": [65, 108, 196], "shortcut": [65, 188], "detour": 65, "alpha": 65, "left_gap_inn": 65, "left_gap_out": 65, "right_gap_inn": 65, "right_gap_out": 65, "left_protect": 65, "right_protect": 65, "would": [65, 86, 104, 154, 156, 164, 179, 180, 187, 192], "rad": 65, "141592653589793": 65, "multiwai": 66, "splitter": 66, "letter": [66, 79, 114, 159, 161, 183], "length_extra": 66, "length_extra_sid": 66, "waveguidecoplanartcross": 66, "measur": [66, 88, 89, 128, 135, 190, 202], "11": [66, 123, 128, 178, 179], "270": 66, "use_airbridg": 66, "centr": [66, 88, 89], "bridge_dist": 66, "a_list": 66, "b_list": 66, "port_nam": [66, 116], "c": [66, 84, 132, 173], "d": [66, 84, 128, 153, 154, 178, 191, 195], "g": [66, 83, 154, 169, 192], "h": [66, 126, 133], "j": [66, 196], "design": [69, 70, 75, 82, 84, 87, 92, 169, 176, 179, 181, 186, 187, 190, 196, 199, 200], "packag": [69, 86, 95, 172, 175, 178, 179, 181, 186, 192, 193, 194, 196, 200, 202], "oasi": [69, 115, 121], "devic": [69, 92, 138, 192], "research": 69, "qcd1": 69, "qcd2": 69, "qcd3": 69, "thu": [70, 75, 196], "junctionnam": 70, "02": [70, 90, 92, 138], "style": [71, 72, 172, 177, 181, 192], "distinct": [71, 182, 187], "top_pad_lay": 71, "edge_height": 71, "small_loop_height": 71, "loop_bottom_i": 71, "delta_j": 71, "finger_margin": 71, "junction_shapes_top": 71, "junction_shapes_bottom": 71, "shadow_shap": 71, "h_pad_height": 71, "v_pad_width": 71, "pad_overlap": 71, "tp_width": 71, "tp_height": 71, "rounding_param": 71, "bp_height": 71, "bp_gap_x": 71, "big_loop_height": 71, "include_base_metal_addit": [72, 90], "pad_height": [72, 90, 135, 142], "pad_to_pad_separ": [72, 90], "x_offset": [72, 90], "pad_rounding_radiu": [72, 90], "junction_total_length": [73, 74, 92, 128], "26": 73, "33": [74, 92, 128], "junction_upper_pad_width": [74, 92, 128], "8": [74, 92, 123, 128, 165, 166, 173], "junction_upper_pad_length": [74, 92, 128], "13": [74, 92, 128, 182], "junction_lower_pad_width": [74, 92, 128], "junction_lower_pad_length": [74, 92, 128], "include_background_gap": 74, "squidnam": 75, "loop_area": [75, 90, 92, 138], "background_color": 76, "ffffff": 76, "helper": [76, 85, 97, 116, 123, 128, 144, 153, 161, 168, 179, 192, 197], "render": [76, 128], "environ": [76, 120, 175, 177, 178, 182, 193, 195, 199, 200, 202], "layoutview": [76, 190], "cellview": [76, 190], "view": [76, 79, 84, 111, 151, 160, 167, 179, 180, 183, 187, 190, 192, 195, 198, 201], "imag": [76, 81, 165, 175, 176, 179, 181, 182, 189, 190, 191, 193, 195, 196, 197], "tab": [76, 154, 187, 188, 190, 191], "standalon": [76, 86, 152, 173, 177, 178, 181, 182, 191, 194], "python": [76, 86, 127, 154, 156, 157, 160, 173, 174, 175, 177, 181, 183, 186, 189, 190, 191, 193, 194, 195, 196, 198, 201, 202], "keep": [76, 173, 179, 187, 191], "scope": [76, 179], "macro": [76, 160, 169, 178, 181, 182, 183, 186, 187, 189, 191, 192, 198, 200, 201], "applic": [76, 152, 153, 182, 188, 189, 201], "command": [76, 84, 86, 94, 115, 127, 160, 174, 175, 176, 178, 179, 180, 182, 189, 190, 192, 193, 195, 201], "act": [76, 126, 153], "onc": [76, 110, 125, 150, 168, 173, 183, 187, 188, 190, 191, 192, 193, 195, 197, 198, 202], "png": [76, 176], "jupyt": [76, 177], "notebook": [76, 177], "inlin": [76, 187], "wrap": [76, 77], "whether": [76, 90, 92, 123, 126, 127, 138, 152, 175, 194, 196], "background": [76, 193], "color": [76, 192, 197], "html": [76, 79, 175, 176, 182], "white": 76, "fit": [76, 111, 190, 192], "zoom": [76, 187, 188, 190], "main": [76, 83, 94, 110, 111, 164, 175, 179, 183, 186, 187, 190, 191, 192, 199, 200], "ipython": 76, "bold": [76, 187, 190], "clear": 76, "popul": [76, 83, 84, 160], "top_cell_nam": 76, "filenam": [76, 82, 121, 162, 164], "layers_set": 76, "directori": [76, 82, 114, 115, 152, 173, 175, 176, 178, 179, 180, 181, 182, 186, 190, 191, 192, 193, 198], "max_siz": 76, "bigger": 76, "pixelbuff": 76, "whole": [76, 131, 188], "hierarchi": [76, 83, 84, 146, 160, 169, 173, 180, 187, 189, 190, 191], "correspondingli": 76, "viewport": 76, "aspect": [76, 92], "Not": [76, 110, 168], "deprec": [76, 83, 169], "miss": [76, 150, 169, 180, 190], "ui": 76, "layerinfo": [76, 79, 124, 145, 163, 192], "default_lay": [76, 79, 186, 192], "valid": [76, 116, 128, 156, 174, 179, 196], "cluster": [77, 193, 195], "process": [77, 79, 84, 96, 98, 108, 115, 124, 127, 128, 130, 131, 132, 133, 168, 178, 181, 182, 183, 186, 189, 191, 192, 195, 196, 198, 199], "inform": [77, 84, 124, 128, 171, 173, 183, 186, 187, 191, 192, 196, 197, 198, 202], "about": [77, 173, 178, 181, 182, 186, 190, 192, 202], "togeth": [77, 153, 166, 178, 197], "220": 79, "reserv": [79, 97, 111], "127": [79, 192], "128": [79, 88, 192], "255": [79, 192], "work": [79, 84, 104, 124, 173, 175, 178, 179, 182, 183, 187, 190, 191, 192, 194, 197, 200, 202], "anoth": [79, 90, 91, 93, 154, 168, 169, 173, 187, 192], "stack": [79, 97, 123, 128, 189, 190, 199], "bond": 79, "denot": [79, 111, 191, 192], "manufactur": 79, "necessari": [79, 107, 169, 179, 194, 195], "deposit": [79, 124], "auxiliari": [79, 191], "field": [79, 97, 111, 128, 156, 168, 193], "229": 79, "organis": 79, "accord": [79, 83, 124, 169, 176, 179], "www": [79, 111, 120, 182, 195, 198], "de": [79, 126, 182], "doc": [79, 108, 111, 166, 175, 176, 179, 186, 196, 197], "qt5": 79, "layer_sourc": 79, "flat": [79, 83, 173], "map": [79, 83, 84, 85, 104, 164, 189, 197], "subset": 79, "minor": [79, 172], "twist": 79, "1t1_base_metal_gap": 79, "invert": [79, 82], "skip_extra": 82, "bitmap": [82, 84], "oa": [82, 83, 84, 124, 152, 153, 159, 169, 186, 191, 195, 198, 202], "gd": [82, 107, 110, 152, 169, 186, 191, 195], "chip_nam": [82, 83], "chip_dir": 82, "alt_netlist": [82, 84, 164], "export_dir": 82, "subdirectori": [82, 183, 186], "modifi": [82, 83, 90, 91, 124, 128, 153, 179, 181, 183, 189, 190, 192, 193], "mask_document": 82, "md": 82, "spec_lay": 82, "mask_graphical_rep": 82, "postfix": [83, 164, 180], "creation": [83, 168, 195], "2d": [83, 84, 111, 123, 152], "local_chip_tran": 83, "position_label": 83, "1800": 83, "m90": 83, "h08": 83, "exact": [83, 182, 187, 190], "minimum": [83, 108, 111, 153, 178, 179, 196], "violat": 83, "conflict": 83, "never": 83, "factor": [83, 161], "coverag": [83, 180], "uniqu": [83, 152, 160, 164, 165, 192, 193, 199], "outsid": [83, 91, 111, 179, 192], "dure": [83, 154, 179], "calcualt": 83, "k": [83, 164], "rigtht": 83, "90": [83, 191, 192], "what": [83, 120, 174, 190, 192, 197], "translat": [83, 182], "chip_placement_list": 83, "unit_x": 83, "unit_i": 83, "chip_coordin": 83, "global": [83, 111], "coord_x": 83, "coord_i": 83, "xxx": 83, "labels_cel": 83, "mask_name_for_chip": 83, "row": [83, 97, 196], "column": [83, 97, 196], "c03": 83, "posixpath": [84, 124], "home": [84, 124, 175, 191], "runner": [84, 124], "tmp": [84, 114, 175, 179, 186, 192, 193, 195, 198], "add_mask_name_to_chip": 84, "These": [84, 85, 105, 160, 173, 176, 178, 186, 190, 191, 192, 198], "Then": [84, 111, 169, 178, 187, 188, 198], "entir": [84, 146, 175, 190], "switch": [84, 201], "debug": [84, 128, 162, 190, 191, 201], "limit": [84, 97, 125, 169, 175, 182, 196, 197, 198], "concurr": [84, 178], "cpu": [84, 180, 182], "resourc": [84, 193, 195], "manag": [84, 151, 175, 178, 182, 183, 190, 193, 195, 202], "purpos": [84, 128, 134, 173, 179, 187, 197], "drc": [84, 152, 186, 187], "similar": [84, 111, 168, 190, 195, 196, 197, 198], "folder": [84, 107, 110, 114, 115, 123, 127, 175, 176, 178, 179, 180, 186, 191, 192, 193, 194, 195, 196, 198, 199, 202], "tmp_path": [84, 152, 191], "mask_layout_typ": [84, 85], "extra_face_param": [84, 85], "ident": [84, 85, 164, 165, 169, 173, 179], "overwritten": 84, "extra_kwarg": 84, "variant_nam": 84, "complex": [84, 181, 187, 196], "polymorph": 84, "here": [84, 162, 177, 183, 187, 192, 195, 200], "rest": 84, "quick_demo": [84, 179, 191], "py": [84, 107, 110, 114, 173, 175, 176, 178, 179, 180, 182, 191, 192, 193, 194, 195, 196, 198, 202], "further": [84, 175, 183, 191, 192, 197], "qdg": 84, "o": [84, 86, 154, 178, 182], "cpu_count": 84, "whichev": 84, "smaller": [84, 128, 153], "remove_guiding_shap": 84, "box_map": 84, "mask_map": 84, "nxn": 84, "mxm": 84, "mnxmn": 84, "usual": [85, 104, 124, 126, 164, 178, 183, 190, 191, 192, 194, 195, 197], "instanti": [85, 168, 173, 179, 197], "extra_param": 85, "modul": [86, 110, 153, 157, 161, 173, 174, 177, 178, 180, 181, 182, 183, 186, 192, 194], "import": [86, 107, 160, 161, 165, 173, 175, 176, 179, 180, 182, 183, 186, 187, 190, 191, 192, 197, 198], "api": [86, 111, 166, 172, 176, 179, 181, 183, 187, 188, 190, 192, 195, 196, 197, 198, 200], "usag": [86, 161, 177, 181, 183, 187, 189, 190, 191, 195, 196, 197, 198], "db": [86, 173], "execut": [86, 107, 110, 115, 127, 149, 175, 180, 182, 190, 191, 195, 198, 199], "session": 86, "found": [86, 116, 149, 152, 160, 171, 175, 182, 186, 192, 195, 196, 202], "transmon": [88, 89], "josephson": [88, 89], "r_island": 88, "squid_angl": [88, 89], "couplers_r": [88, 89], "couplers_a": [88, 89], "couplers_b": [88, 89], "couplers_angl": [88, 89], "340": [88, 89], "210": [88, 89], "couplers_width": [88, 89], "couplers_arc_amplitud": [88, 89], "45": [88, 89, 123, 128], "drive_angl": [88, 89], "drive_dist": [88, 89], "concentr": 89, "290": 89, "rectangl": [90, 91, 124, 173, 187], "shunt": [90, 91], "north": [90, 91, 93], "join": [90, 91], "700": 90, "ground_gap_r": 90, "coupler_r": 90, "coupler_a": 90, "coupler_offset": 90, "squid_offset": 90, "island1_r": 90, "island2_r": 90, "450": 90, "island1_taper_width": 90, "island1_taper_junction_width": 90, "island2_taper_width": 90, "island2_taper_junction_width": 90, "70": 90, "with_squid": 90, "spline": [91, 153], "construct": [91, 115, 153, 169, 191, 197], "island_splin": 91, "island_spline_sampl": 91, "collect": [92, 152, 187, 192], "routin": 92, "beam": 92, "customari": 92, "probepoint": [92, 152], "simpli": [92, 128, 154, 175, 197], "appropri": [92, 168, 172, 173, 192], "probe_ground": 92, "probe_island": 92, "probe_island_1": 92, "probe_island_2": 92, "transf": [92, 138], "only_arm": [92, 138], "base_metal_gap_for_ebl": [92, 138], "right_sid": [92, 138], "help": [92, 138, 178, 179, 180, 181, 187, 190], "dcplxtran": [92, 138, 169], "rot": 92, "flux": [92, 108, 116, 132], "flux_corn": 92, "origin_fluxlin": 92, "origin_squid": 92, "port_common": 92, "howev": [92, 128, 153, 179, 182, 183, 187, 191, 192, 195], "might": [92, 107, 110, 111, 175, 178, 182, 183, 195], "tweak": 92, "overwrit": [92, 175, 195], "south": 93, "gap_width": [93, 197], "wne": 93, "cpl_width": [93, 133], "cpl_length": 93, "cpl_gap": 93, "102": 93, "port_width": 93, "cl_offset": 93, "island_r": 93, "arg": [94, 112, 114, 145, 152, 154, 169, 175], "args_for_script": 94, "entri": [94, 152, 169, 182, 183, 191], "consol": [94, 114, 162, 182, 191, 194], "pars": [96, 97, 98, 112, 128, 130, 131, 132, 133, 156], "readi": [96, 98, 128, 130, 131, 132, 133], "co": 97, "intend": [97, 128, 153, 197, 202], "materi": [97, 111, 124, 128, 195, 196], "don": [97, 173, 178, 179, 182], "obei": 97, "vacuum": [97, 111, 123, 124, 125, 128, 197], "word": [97, 161, 183], "result": [97, 104, 108, 142, 152, 153, 154, 193, 195, 196, 199], "matric": [97, 108, 196], "introduc": [97, 124, 128, 197], "dielectr": [97, 128, 197], "permitt": [97, 123, 124, 128], "regist": [97, 167, 173, 185], "reset": 97, "param_nam": [97, 166, 176], "cast": [97, 128], "simulation_lay": 97, "relev": [97, 128, 153, 168, 196, 197], "london": [97, 124, 196], "penetr": [97, 124, 196], "depth": [97, 124, 196], "m": [97, 123, 128, 179, 195], "xsection_source_class": 97, "schema": [97, 169], "ignore_process_lay": 97, "boundari": [97, 111, 128, 196], "extra_json_data": [97, 128], "store": [97, 128, 145, 153, 169, 191, 196, 197], "virtual": [97, 128, 179, 182], "refpoint_prefix": [100, 101, 103, 104, 142], "parameter_remap_funct": [100, 101, 103, 104], "callabl": [100, 101, 103, 104, 123, 124, 129], "partit": [101, 104, 123, 125, 128, 129, 195], "pointer": 101, "partition_region_funct": [101, 129], "could": [101, 114, 120, 154, 172, 174, 175, 192, 195, 197], "differenti": [101, 124], "cut": [101, 104, 123, 124, 202], "meant": [101, 186, 192], "reus": [101, 159], "compos": 101, "needed_paramet": 104, "stub": [104, 128, 133], "parit": 104, "recommend": [104, 124, 178, 179, 182, 187, 191, 195, 196], "suppos": [104, 191, 197], "But": 104, "qubit_a": 104, "program": [105, 181, 188, 190, 194], "hfss": [105, 108, 196, 197, 199], "q3d": [105, 108, 196, 197, 199], "write": [107, 110, 115, 120, 152, 173, 175, 176, 178, 179, 180, 182, 192, 195, 197, 201, 202], "json_filenam": [107, 110, 115, 127], "file_prefix": [107, 110, 115], "exit_after_run": 107, "execution_script": 107, "import_and_simul": 107, "use_rel_path": 107, "batch": [107, 127, 186, 198], "bat": [107, 115, 198], "electron": [107, 149, 196, 198, 199], "desktop": [107, 195, 196, 198, 199], "sequenc": [107, 110, 141, 153], "script_fold": [107, 110], "bool": [107, 108, 110, 111, 112, 114, 119, 126, 128, 152, 153, 163, 169], "import_script": 107, "skip_error": [107, 110], "solution_param": [107, 108, 110, 111], "skip": [107, 110, 111, 154], "caus": [107, 110, 129, 153, 154, 178], "carefulli": [107, 110, 172, 197], "sens": [107, 110, 188, 190], "wast": [107, 110], "bad": [107, 110], "ghz": [108, 111, 196], "percentag": [108, 196], "mesh": [108, 111, 120, 195, 196], "refin": [108, 111, 196], "how": [108, 128, 169, 173, 179, 182, 183, 187, 192, 193, 196, 197], "mani": [108, 128, 171, 178, 179, 181, 182, 186, 187, 191, 192, 195, 196, 197], "meet": [108, 187, 196], "criterion": [108, 111, 196], "maxim": [108, 111], "templat": [108, 176, 181], "classvar": [108, 111, 117], "101": [108, 196], "interpol": [108, 111, 196], "multifrequ": [108, 196], "sweep": [108, 111, 115, 120, 124, 169, 189, 195, 196, 199], "lowest": [108, 128, 196, 197], "highest": [108, 128, 196], "fast": [108, 172, 196], "energi": [108, 110, 111, 189, 199], "save": [108, 127, 153, 169, 183, 192, 193, 196, 197], "magnet": [108, 116], "pec": 108, "sheet": [108, 123, 128, 197], "matrix": [108, 111, 153, 189, 195, 199], "nomin": 108, "moment": [108, 188], "eigenmod": [108, 189, 199], "eigenfrequ": [108, 196], "solv": [108, 196], "excit": [108, 111, 126, 196], "voltag": 108, "induct": [108, 111, 119, 126, 133, 168, 196], "workflow": [110, 120, 175, 181, 183, 187, 189, 190, 195, 199], "script_fil": 110, "compile_elmer_modul": 110, "launch": [110, 178, 182, 191, 192, 201], "compil": [110, 111, 179, 182, 193], "runtim": [110, 175], "model": [110, 111, 126, 128, 179, 195, 196, 197], "005": 111, "001": 111, "factori": 111, "adapt": [111, 197], "fraction": 111, "outlier": 111, "symmetr": 111, "big": [111, 191], "_": [111, 151, 192, 197], "larger": [111, 128, 195], "finer": 111, "divid": [111, 173, 179, 186, 192, 195], "dim": [111, 125], "term": [111, 125, 128, 180, 196, 197], "entiti": 111, "expans": [111, 125, 128, 153, 168], "constant": [111, 128, 173, 196], "slope": 111, "increas": [111, 124, 141, 175, 195], "global_max": 111, "less": [111, 120, 173, 182], "awai": [111, 125, 126, 128, 153, 156, 192], "forc": [111, 126, 128, 196], "niter": 111, "dimtag": 111, "gmsh": [111, 175, 189, 193, 194, 198, 199], "netgen": 111, "vtu": 111, "paraview": [111, 175, 194, 195, 198], "off": [111, 128, 190], "slightli": [111, 182], "faster": [111, 120, 169], "explicit": 111, "wave": [111, 128, 197], "equat": 111, "converg": 111, "supercurr": 111, "flow": 111, "thick": [111, 123, 124, 128, 197], "finit": 111, "nedelec": 111, "kind": [111, 179, 192], "formul": [111, 129], "vectorhelmholtz": 111, "potenti": [111, 126, 192], "v": [111, 119, 172], "electr": [111, 196], "nic": 111, "funet": 111, "fi": 111, "pub": 111, "sci": 111, "elmermodelsmanu": 111, "pdf": [111, 120], "warn": [111, 162, 182], "experiment": [111, 200], "poor": [111, 195], "film": 111, "nest": [111, 128], "solver": [111, 195, 196, 198], "calc": 111, "wave_equ": [111, 196], "mg": 111, "09": 111, "ilu0": 111, "polynomi": [111, 153], "p": [111, 151], "multigrid": 111, "bicgstab": 111, "mention": [111, 128, 175], "elmersolv": [111, 175, 195], "umfpack": 111, "mump": 111, "pardiso": 111, "superlu": 111, "softwar": [111, 171, 175, 185, 195, 198], "redund": 111, "precondition": 111, "linear": [111, 172], "condit": [111, 196], "xmin": [111, 119], "xmax": [111, 119], "ymin": [111, 119], "ymax": [111, 119], "just": [111, 173, 175, 178, 179, 183, 192, 197], "impend": 111, "electrostat": 111, "sequenti": [111, 195], "1v": 111, "epr_3d": 111, "export_script": 112, "quiet": [112, 114], "export_onli": 112, "basenam": [112, 193], "dialog": [112, 114, 183, 187, 194], "describ": [112, 128, 147, 153, 160, 174, 179, 187, 192, 194, 196, 197, 199], "stdout": [112, 162], "print": [112, 154, 160, 161, 162, 191], "export_path_identifi": 112, "script_export_path": 112, "remote_host": 113, "singularity_remote_path": 113, "ssh_login": 114, "kqc_remote_tmp_path": [114, 193], "detach_simul": 114, "poll_interv": 114, "export_path_basenam": 114, "local": [114, 172, 175, 176, 179, 182, 183, 188, 190, 193], "remot": [114, 189, 195, 199], "host": [114, 177, 179, 193, 195], "froce": 114, "q": [114, 179, 188, 194], "ssh": [114, 193], "login": 114, "hostnam": 114, "detach": [114, 193], "wait": 114, "finish": [114, 188, 193, 195], "poll": [114, 193], "interv": [114, 193], "export_tmp_dir": 114, "source_path": 115, "content": [115, 152, 181, 183, 195], "sh": [115, 175, 193, 195, 198], "json_data": 115, "json_file_path": 115, "sim_class": [115, 197, 198], "sim_paramet": [115, 197], "vari": [115, 192, 195, 197], "sol_class": 115, "sol_paramet": 115, "analys": 116, "inconsist": 116, "criteria": 116, "met": 116, "check": [116, 150, 154, 169, 178, 179, 186, 192, 196, 201], "ensur": [116, 154, 173], "least": [116, 153, 156, 169, 178, 182, 187, 190, 192], "presenc": 116, "validation_typ": 116, "handl": [116, 145, 173, 187, 192, 195, 199], "filename_templ": 119, "filename_output": 119, "rule": [119, 128, 176, 186], "nvertic": 119, "debugid": 119, "ilevel": 119, "mtype": 119, "filltyp": 119, "conmax": 119, "edge_mesh": 119, "sym": 119, "xwidth": 119, "ywidth": 119, "xcell": 119, "ycell": 119, "materials_typ": 119, "si": 119, "bt": 119, "port_ipoli": 119, "portnum": 119, "ipolygon": 119, "ivertex": 119, "port_typ": 119, "std": 119, "xcord": 119, "ycord": 119, "resist": [119, 126, 168], "react": 119, "capac": 119, "control_typ": 119, "dbu": [119, 120, 121, 124, 125, 145, 153], "fill_typ": [119, 120], "poli": 119, "detailed_reson": 120, "lower_accuraci": 120, "ab": 120, "staircas": 120, "simulation_safeti": 120, "son": [120, 198], "sonnetsoftwar": 120, "download": [120, 175, 182], "techdoc": 120, "enhanced_resonance_detection_featur": 120, "fine": [120, 166], "coars": 120, "accur": 120, "good": [120, 191], "everyth": [120, 183, 187, 192], "output_format": [121, 160], "intersect": 121, "override_arg": 123, "ma_eps_r": 123, "ms_eps_r": 123, "sa_eps_r": 123, "ma_thick": [123, 124], "0048": 123, "ms_thick": [123, 124], "0003": 123, "sa_thick": [123, 124], "0024": 123, "ma_bg_eps_r": 123, "ms_bg_eps_r": 123, "sa_bg_eps_r": 123, "metal_height": [123, 128, 197], "p1": [123, 124, 128], "p2": [123, 124, 128], "metal_edg": 123, "later": [123, 125, 143, 169, 180, 183, 192], "mer": 123, "x_revers": 123, "closer": [123, 128, 153, 160], "z": [123, 125, 128, 175, 201], "z_revers": 123, "ma": [123, 128], "sa": [123, 128], "approxim": [123, 128], "input_oa": 124, "output_oa": 124, "cut1": 124, "cut2": 124, "process_path": 124, "kqc_process": [124, 202], "parameters_path": 124, "plugin": [124, 151, 167, 174, 178, 202], "down": [124, 126, 128, 187, 188, 190, 192], "output_path": 124, "pathlib": 124, "pyacor": 124, "post_processing_funct": 124, "oxidise_layers_funct": 124, "_oxidise_lay": 124, "ma_permitt": 124, "ms_permitt": 124, "sa_permitt": 124, "vertical_cul": 124, "mer_box": 124, "magnification_ord": 124, "perform": [124, 128, 169, 175, 179, 195, 196], "oxid": 124, "expect": [124, 172, 182], "signatur": 124, "pyhint": 124, "air": 124, "cull": 124, "retain": 124, "_mer": 124, "suffix": [124, 125, 152, 165], "magnif": [124, 187], "accomod": 124, "spacial": 124, "10x": 124, "100x": 124, "thin": [124, 128, 197], "sort_kei": [124, 154], "sort": [124, 154], "pick": 124, "tie": 124, "break": [124, 172, 175], "slot": 124, "cut_label": 124, "width_ratio": 124, "visualis": [124, 125, 128, 179], "request": [124, 162, 169, 175, 193, 195], "xsection_cut": 124, "_1": 124, "_2": 124, "multipli": 124, "scalar": [125, 128], "vertical_dimens": 125, "metal_edge_dimens": 125, "accept": [125, 147, 156, 172, 178, 196], "domain": [125, 128, 197], "preview": [125, 128], "databas": [125, 153, 155, 200], "sign": 125, "metal_region": [125, 142], "etch_region": 125, "reactanc": [126, 168], "renorm": [126, 196], "ideal": 126, "rlc": [126, 196], "lump": [126, 128, 196, 197], "real": 126, "ohm": 126, "omega": 126, "imaginari": 126, "henri": 126, "farad": 126, "signal_loc": [126, 196, 197], "ground_loc": [126, 196, 197], "signal_lay": [126, 168], "etch_width": 126, "deembed_len": [126, 168, 196], "embed": 126, "micron": [126, 153, 159], "port_siz": [126, 128], "repeat_for_each": 127, "data_file_prefix": 127, "dimension": [128, 181, 196, 197], "basic": [128, 177, 178, 186, 187, 188, 189, 190, 200], "built": [128, 175, 176, 183, 187, 192, 197, 201], "principl": [128, 156], "imagin": [128, 197], "surfac": [128, 196, 197], "touch": [128, 192], "face_stack": [128, 197], "lower_box_height": [128, 197], "account": [128, 158, 160, 173, 193, 195, 197], "pile": [128, 197], "That": [128, 196, 197], "leav": [128, 197], "substrate_height": [128, 197], "chip_dist": [128, 197], "infinit": [128, 154, 197], "insul": 128, "dielectric_height": [128, 197], "grid_siz": [128, 155], "expand": [128, 153], "resolut": 128, "list_or_const": 128, "ordin": 128, "short": [128, 187, 200], "duplic": [128, 153, 163, 178], "ascend": 128, "simplifi": 128, "polygon_toler": 128, "shrink": 128, "amount": [128, 153, 193, 195], "minimum_point_spac": 128, "z0": 128, "z1": 128, "split": [128, 153], "opp_i": 128, "__init__": 128, "hole": [128, 155], "overlap": [128, 153, 155, 164, 192], "subtract_kei": 128, "port_kwarg": 128, "engin": 128, "infer": [128, 152, 169], "brought": [128, 168], "at_edg": 128, "signal_edg": 128, "ground_edg": 128, "material_dict": 128, "member": [128, 154], "overriden": 128, "whatev": [128, 182], "delet": [128, 161, 163, 183, 187], "access": [128, 179, 182, 187, 189], "append": [128, 153, 162, 164, 165, 197], "dtext": 128, "ground_grid_box": 128, "use_port": 128, "upper_box_height": 128, "fixed_level_stackup": 128, "375": 128, "substrate_box": 128, "correspondingsubstr": 128, "fulli": [128, 179, 196], "substrate_materi": 128, "electromagnet": 128, "dielectric_loss_tang": 128, "airbridge_height": 128, "dielectric_materi": 128, "vertical_over_etch": 128, "hollow_tsv": 128, "hollow": 128, "constructor": [128, 154, 197], "tls_layer_thick": 128, "tl": [128, 196], "tls_layer_materi": 128, "tls_sheet_approxim": 128, "detach_tls_sheets_from_bodi": 128, "significantli": 128, "improv": [128, 179, 180, 182], "element_class": 129, "ignore_port": [129, 197], "transformation_from_cent": 129, "sim_junction_typ": 129, "xs1": 130, "xs2": 130, "cpw_length": 131, "n_guid": 131, "guide_face_id": 131, "add_bump": 131, "port_termination_end": 131, "use_edge_port": 131, "etch_whole_opposite_fac": 131, "qubit_cel": 132, "center_x": 132, "center_i": 132, "wn": [132, 192], "en": 132, "sw": [132, 152], "se": [132, 152], "nw": [132, 152], "ne": [132, 152], "enable_flux_lin": 132, "enable_drive_lin": 132, "enable_transmission_lin": 132, "transmit": 132, "66": 133, "junction_induct": 133, "35e": 133, "junction_capacit": 133, "16": [133, 192], "num_cross": 136, "cross_width": 136, "cross_length": 136, "cross_spac": 136, "cross_box_dist": 136, "stripe_width": 140, "stripe_length": [140, 141], "stripe_spac": [140, 141], "min_stripe_width": 141, "stripe_step": 141, "widen": 141, "pads_region": 142, "pad_spacing_x": 142, "pad_spacing_i": 142, "connect_pad": 142, "refpoint_dist": 142, "resembl": 143, "fenc": 143, "profil": [143, 193], "tsv_array_form": 143, "tileoutputreceiv": 145, "tilingprocessor": 145, "brief": [145, 151], "ix": 145, "ii": 145, "tile": 145, "obj": [145, 153], "clip": 145, "layer_info": 145, "rho": 145, "frac": 145, "bbox": 145, "pcell_class": 146, "isinst": 146, "pcell_declar": 146, "coupler_typ": 147, "element_kei": 147, "useless": 147, "latest": [149, 175, 179, 182, 198], "instal": [149, 150, 175, 177, 181, 186, 188, 192, 194, 195, 198, 199, 201, 202], "against": [150, 186], "txt": [150, 178, 179, 182, 195, 198], "upgrad": [150, 178, 179, 181, 182], "stand": [150, 160, 186, 199], "alon": [150, 160, 186, 199], "pip": [150, 178, 179, 182, 194, 195, 198], "sync": [150, 179], "venv": [150, 178, 179], "startup": [150, 156, 179], "button": [151, 188, 190], "prio": 151, "__": 151, "pluginfactori": 151, "flip_fac": 152, "default_probe_typ": 152, "default_probe_suffix": 152, "millimet": 152, "tell": 152, "site": [152, 179, 182], "cell_fil": 152, "dir_nam": 152, "tri": [152, 175], "write_versions_fil": 152, "commit_refer": [152, 195], "git": [152, 172, 177, 178, 179, 182, 186], "revis": [152, 200], "written": [152, 198], "export_machine_vers": 152, "filepath": 152, "maco": [152, 177, 182, 188], "linux": [152, 175, 177, 179, 182, 186, 188, 191, 195, 198], "drc_script": 152, "name_drc_report": 152, "lyrdb": 152, "1t1_waveguide_path": 153, "2b1_waveguide_path": 153, "sum": 153, "children": 153, "objectinstpath": 153, "outward": 153, "whenev": [153, 172, 190], "elimin": [153, 154], "simple_polygon": 153, "polygon_point": 153, "counterclockwis": 153, "283185307179586": 153, "pi": 153, "control_point": 153, "sample_point": 153, "startpoint": 153, "uniformli": 153, "cubic": 153, "subsequ": 153, "slide": 153, "unlik": 153, "bezier": 153, "guarante": [153, 154, 183], "kaihuai": 153, "qin": 153, "proceed": 153, "pacif": 153, "98": 153, "sixth": 153, "confer": 153, "singapor": 153, "1998": 153, "pp": 153, "37": 153, "43": [153, 173], "doi": [153, 171], "1109": 153, "pccga": 153, "731996": 153, "uniform": [153, 197], "prepend": 153, "tangent": 153, "third": [153, 182, 195], "fourth": 153, "convers": 153, "ityp": 153, "dtype": 153, "odd": 153, "divis": 153, "mostli": [153, 187, 192], "waveguide_path": 153, "safe": [153, 179], "guard": 153, "unround": 153, "skipkei": 154, "ensure_ascii": 154, "check_circular": 154, "allow_nan": 154, "jsonencod": 154, "sensibl": 154, "typeerror": 154, "incom": 154, "ascii": 154, "charact": [154, 158, 159, 172], "escap": 154, "prevent": [154, 182], "recursionerror": 154, "nan": 154, "infin": 154, "compliant": 154, "javascript": 154, "decod": 154, "regress": 154, "dai": 154, "basi": [154, 173, 197], "pretti": 154, "newlin": 154, "item_separ": 154, "key_separ": 154, "whitespac": 154, "serializ": 154, "def": [154, 192, 197], "try": [154, 178, 179, 182], "let": [154, 179, 192], "jsondecod": 154, "object_hook": 154, "rpc": 154, "hint": 154, "object_pairs_hook": 154, "prioriti": [154, 187], "parse_float": 154, "num_str": 154, "datatyp": 154, "decim": 154, "parse_int": 154, "parse_const": 154, "invalid": 154, "encount": [154, 175], "strict": [154, 173], "context": [154, 169], "parseabl": 154, "boundbox": 155, "avoid_region": 155, "grid_step": 155, "group_n": 155, "speed": [155, 159, 168, 180, 195], "box_siz": 156, "require_gui_editing_en": 156, "search": [156, 181], "captur": 156, "invers": 156, "treat": [156, 164, 173], "strip": 156, "liter": 156, "namespac": [156, 166], "comma": [156, 160], "multilin": 156, "waveguide_inst": 156, "usabl": 156, "x_corner": 156, "slow": [156, 190, 191], "clumsi": 156, "curat": 156, "node_editor_valid_el": 156, "kept": 156, "file_path": 157, "enum": 158, "origin_offset": 158, "layer_protect": 158, "350": 158, "nearest": 159, "lai": 159, "font_polygon": 159, "cach": 159, "print_waveguides_as_composit": 160, "add_instance_nam": 160, "refpoint_snap": 160, "grid_snap": 160, "include_import": 160, "create_cod": 160, "past": 160, "statement": [160, 183], "node_param": 160, "complet": [160, 176, 179, 183, 192, 195], "flatten": 160, "flush": 161, "ones": [161, 178, 179], "src_path": 161, "memori": [161, 175, 195], "_kqc_librari": 161, "class_nam": 161, "pascalcas": [161, 173], "lowercas": [161, 183], "module_nam": 161, "_to_module_nam": 161, "titl": [161, 171], "qualiti": 161, "lowest_visible_level": 162, "remove_old_handl": 162, "log": [162, 191], "logfil": 162, "monitor": 162, "handler": 162, "root": [162, 175, 180, 186, 192], "logger": 162, "critic": 162, "cell_list": 163, "layer_1": 163, "layer_2": 163, "layer_merg": 163, "only_el": 163, "prune": 163, "contrast": 163, "convert_to_stat": 163, "anywher": [163, 183], "net": 164, "subcircuit": [164, 165], "terminologi": [164, 181, 189], "eda": 164, "resistor": 164, "pin": [164, 179], "wire": 164, "conceptu": 164, "analog": 164, "exactli": 164, "subcircuit_id": [164, 165], "unconnect": 164, "cell_nam": [164, 165], "subcircuit_loc": 164, "_pya_typ": 164, "subcircuit_origin": 164, "breakdown": 164, "regadless": 164, "absolut": [164, 179, 192], "cell_map": 164, "internal_cel": 164, "network": 165, "networkx": [165, 182], "graph": [165, 173, 179, 186], "cell_typ": 165, "instance_nam": 165, "obtain": [165, 197], "with_label": 165, "with_posit": 165, "figsiz": 165, "spring": 165, "matplotlib": 165, "interact": [165, 189], "plot": 165, "param_with_default_valu": 166, "wildcard": 166, "simplic": [166, 173], "grain": 166, "pcellparameterdeclar": 166, "data_typ": 166, "plain": [166, 173, 183], "docstr": [166, 174, 176, 187], "sphinx": [166, 176], "owner": 166, "registr": [167, 192], "happen": 167, "demand": 168, "builder": [168, 197], "ground_refpoint": 168, "port_squid_a": [168, 197], "port_squid_b": [168, 197], "separate_island_internal_port": 168, "commonli": [168, 192], "export_tuned_junct": 169, "class_typ": 169, "parent_nam": 169, "tuned_junction_paramet": 169, "qb1": 169, "testarray_nw": 169, "squid_0": 169, "squid_3": 169, "testarrai": 169, "even": [169, 173, 175, 179, 182, 190], "quick": [169, 192], "jsonabl": 169, "exhaust": 169, "read": [169, 175, 182, 183, 187, 192], "write_path": 169, "layer_str": 169, "visual": [169, 179, 192, 195], "again": [169, 175, 178, 190, 191], "parameter_nam": 169, "parameter_start": 169, "parameter_step": 169, "parameter_end": 169, "swept": 169, "squid_index": 169, "mirror_tran": 170, "project": [171, 173, 180, 182, 193, 195], "public": [171, 172, 175, 180], "citat": 171, "bib": 171, "zenodo": 171, "click": [171, 178, 181, 182, 183, 187, 189, 190, 191, 192, 201], "badg": 171, "cucurachi": 171, "daniel": 171, "da": 171, "soumya": 171, "ranjan": 171, "giri": 171, "rakshyakar": 171, "gusenkova": 171, "daria": 171, "guthri": 171, "andrew": 171, "inel": 171, "sinan": 171, "janzs\u00f3": 171, "d\u00e1vid": 171, "jenei": 171, "m\u00e1t\u00e9": 171, "juliusson": 171, "kristinn": 171, "kotilahti": 171, "jann": 171, "landra": 171, "alessandro": 171, "moretti": 171, "roberto": 171, "myll\u00e4ri": 171, "tuoma": 171, "ockeloen": 171, "korppi": 171, "caspar": 171, "r\u00e4bin\u00e4": 171, "jukka": 171, "savola": [171, 196], "niko": 171, "smirnov": 171, "pavel": 171, "takala": 171, "eeli": 171, "wubben": 171, "leon": 171, "month": 171, "jun": 171, "year": 171, "2021": 171, "publish": [171, 175], "5281": 171, "4944796": 171, "url": 171, "welcom": 172, "commun": [172, 195], "contributor": 172, "licens": [172, 196], "agreement": 172, "websit": [172, 175], "review": 172, "approv": 172, "pr": 172, "forward": [172, 195], "strategi": 172, "histori": 172, "pleas": [172, 178, 179, 180, 184, 185, 195, 196, 197, 198, 202], "organ": [172, 180, 190, 192], "commit": [172, 179], "meaning": [172, 192], "black": [172, 173, 174], "permit": [172, 192], "pep": [172, 173], "440": 172, "scheme": 172, "miniv": 172, "major": 172, "micro": 172, "offici": 172, "releas": [172, 175, 181, 202], "salt": [172, 178, 179, 181, 182, 186, 192], "incompat": 172, "backward": [172, 179], "seriou": 172, "cosmet": 172, "affect": [172, 181, 182, 195], "explain": [173, 174, 178, 187, 190, 192, 198], "diagram": 173, "oval": 173, "concret": 173, "leaf": 173, "green": [173, 190, 197], "natur": 173, "ever": 173, "live": 173, "create_cel": 173, "properli": [173, 178, 180, 183], "variabl": [173, 175, 179, 186, 190, 192, 193, 195, 196], "descriptor": 173, "hierarch": 173, "transpar": 173, "caller": 173, "default_parameter_valu": 173, "technic": [173, 192, 196], "intent": 173, "otherclass": 173, "param_a": 173, "param_b": 173, "myclass": 173, "param_c": 173, "42": 173, "param_d": 173, "41": 173, "syntax": [173, 192, 197], "bit": [173, 182, 188, 192], "revers": 173, "why": [173, 174], "bodi": 173, "kqc_library_nam": 173, "downstream": 173, "discov": 173, "convent": [173, 180, 182, 192], "comment": [174, 182, 187, 190, 192], "someth": [174, 195], "feel": 174, "probabl": [174, 182], "rewritten": 174, "clearli": 174, "builtin": 174, "googl": 174, "dockerfil": 175, "addition": [175, 195, 197], "kl_file": 175, "md5": 175, "hash": [175, 179, 186, 192], "kl_hash": 175, "klayout_0": 175, "29": [175, 182], "1_amd64": 175, "deb": 175, "421df42661a3d795b534da5048261044": 175, "ubuntu": [175, 178, 182], "quickli": 175, "m00x": 175, "volum": 175, "pwd": 175, "ghcr": 175, "io": [175, 202], "mount": 175, "run_script": 175, "nc": 175, "rx": [175, 192], "cours": [175, 192], "wd": 175, "older": [175, 179, 188], "hyperv": 175, "backend": 175, "ram": 175, "1gb": 175, "entrypoint": 175, "push": [175, 193], "branch": [175, 183, 190], "pipelin": [175, 180], "pull": [175, 178], "registri": 175, "sylab": 175, "quick_start": 175, "better": [175, 180, 197], "hpc": 175, "tutori": [175, 181, 183, 189, 190], "libexec": 175, "kqclib": [175, 195], "repo": 175, "ora": 175, "pem": 175, "rsa": 175, "encrypt": 175, "successfulli": [175, 178, 179, 201], "singularity_priv": 175, "privat": [175, 180], "now": [175, 183, 190, 192], "create_link": 175, "among": [175, 181], "elmersolver_mpi": 175, "elmergrid": [175, 195], "symbol": [175, 186, 190, 192, 193, 195], "link": [175, 178, 182, 183, 186, 190, 192, 193, 195], "rememb": [175, 178, 187], "bin": [175, 193], "prepar": [175, 195], "klayout_packag": [175, 178, 179, 186, 190, 192, 193, 194, 195, 196, 198, 202], "And": [175, 192], "waveguides_sim_compar": [175, 179, 194, 195], "sure": [175, 178, 179, 180, 183, 187, 190, 192, 193, 198, 202], "ride": 175, "python_execut": [175, 195], "subsystem": 175, "wsl": 175, "problem": [175, 178, 179, 182, 183, 184, 196], "stuck": 175, "workload": [175, 193, 195], "simple_workload_manag": 175, "subfold": [175, 192], "kqc_tmp_path": [175, 179], "waveguides_sim_elm": [175, 195], "affor": 175, "rst": 176, "rebuild": 176, "clean": 176, "apidoc": 176, "sphinxext": 176, "make_pcell_imag": 176, "pcell_imag": 176, "markers_for_png": 176, "x_2": 176, "y_2": 176, "ruler": [176, 202], "illustr": [176, 187, 197], "satisfactori": 176, "x2": 176, "y2": 176, "setup": [177, 181, 182, 183, 187, 188, 192, 193, 194, 199, 201, 202], "prerequisit": 177, "unlink": 177, "secondari": [177, 202], "symlink": 177, "reproduc": 177, "secur": [177, 195, 198], "exclus": 177, "pypi": [177, 186], "cli": 177, "docker": 177, "ci": [177, 179, 180, 186], "singular": [177, 186, 193, 195], "contribut": [177, 181], "come": [178, 192], "pre": [178, 197], "04": [178, 182], "platform": [178, 179, 182], "lt": [178, 182], "clone": [178, 179, 182], "cd": [178, 179, 180], "python3": 178, "setup_within_klayout": [178, 179, 186], "virtualenv": 178, "libpython": 178, "dll": 178, "known": [178, 181, 183], "issu": [178, 181, 183, 184], "downgrad": [178, 183], "ask": 178, "restart": [178, 183, 187, 188, 190, 201], "afterward": [178, 179], "evolv": [178, 192], "realli": [178, 191], "simultan": 178, "kqc_2nd": 178, "know": [178, 179, 182, 188], "klayout_hom": 178, "klayout_alt": 178, "mix": 178, "subsect": 178, "ln": 178, "path_to_kqcircuit": 178, "kqcircuits_script": [178, 186, 190, 191, 192], "kqcircuits_requir": [178, 186, 192], "prompt": [178, 179], "administr": 178, "privileg": 178, "homepath": [178, 182], "mklink": 178, "powershel": 178, "ye": 178, "mayb": 178, "won": [178, 179], "bulk": 178, "win": [178, 179, 186], "mac": [178, 179, 182, 186, 191], "debugg": [179, 189], "autom": [179, 181, 199, 202], "suitabl": [179, 182, 196, 197], "viewer": [179, 188, 198], "compat": [179, 182], "interfer": 179, "yet": [179, 187, 202], "bracket": 179, "trust": 179, "easier": 179, "troubleshoot": 179, "subsitut": 179, "dep": 179, "rewrit": 179, "wipe": 179, "advanc": [179, 187, 190], "categori": 179, "core": [179, 180, 195], "linter": 179, "netlist_as_graph": [179, 182, 186], "publicli": 179, "abl": [179, 190], "upload": 179, "double_pads_sim": [179, 196], "elsewher": [179, 191], "ipynb": [179, 196], "tofu": 179, "rare": [179, 192], "verifi": [179, 182, 191], "legitim": 179, "constraint": 179, "unsaf": 179, "substitut": 179, "tox": 180, "pytest": [180, 186], "pylint": 180, "lint": 180, "ini": 180, "framework": [180, 181, 196, 199], "num": 180, "reflect": 180, "propos": 180, "test_load_librari": 180, "test_invalid_nam": 180, "approach": [180, 183, 195, 197], "u": [180, 192], "our": [180, 183, 192], "understand": [180, 190], "unfortun": 180, "repetit": 180, "consider": 180, "cov": 180, "comprehens": 180, "happi": 180, "failur": 180, "similarli": [180, 197, 198], "bug": [180, 190], "fail": 180, "prior": 180, "wil": 180, "reintroduc": 180, "conftest": 180, "reduc": [181, 196], "effort": 181, "processor": 181, "instantli": 181, "exchang": 181, "qpu": 181, "assembl": 181, "fabric": [181, 182], "miscellan": [181, 189, 192], "trademark": 181, "page": [181, 192, 202], "simplest": [182, 197], "instant": 182, "rather": 182, "codebas": 182, "simulation_script": 182, "parti": 182, "mask_script": 182, "yourself": 182, "homebrew": 182, "brew": 182, "cask": 182, "becaus": [182, 190, 191], "app": 182, "finder": 182, "bugfix": 182, "stabil": 182, "27": [182, 188], "17": 182, "microsoft": 182, "server": 182, "2022": 182, "talk": 182, "mental": 182, "appdata": [182, 194], "klayout_app": 182, "st": 182, "dynam": [182, 197], "sonoma": 182, "still": [182, 191], "higher": 182, "heavyweight": 182, "hw": 182, "proce": 182, "bigsur": 182, "setuptool": 182, "_distutils_hack": 182, "v52": 182, "v57": 182, "instruct": [182, 187], "sometim": [182, 190], "dir": 182, "binari": [182, 194], "__path__": 182, "queri": 182, "sy": 182, "version_info": 182, "x86_64": 182, "modern": 182, "macbook": 182, "henc": [182, 198], "numpi": 182, "scipi": 182, "macosx_10_9_x86_64": 182, "fetch": 182, "macosx_10_9_arm64": 182, "notic": [182, 191], "easiest": [183, 192], "migrat": 183, "uninstal": 183, "recent": 183, "menu": [183, 188, 189, 190, 192, 200], "panel": [183, 187, 188, 189, 192], "drag": [183, 187, 188, 190, 201], "press": [183, 187, 188, 190], "f2": [183, 187, 188], "underscor": 183, "f5": [183, 190, 191], "my": 183, "my_el": 183, "myelement": [183, 192], "capit": 183, "ctrl": 183, "reload": [183, 187, 189, 192], "drop": [183, 187, 188, 201], "canva": 183, "my_packag": 183, "safest": 183, "quirk": 183, "broken": 183, "reinstal": 183, "earlier": 183, "reloc": 183, "behind": 183, "tqdm": 183, "question": 184, "idea": 184, "discuss": 184, "polici": 185, "high": [186, 202], "pictur": 186, "console_script": 186, "mainli": [186, 192, 197], "librair": [186, 192], "variou": 186, "check_layer_prop": 186, "create_element_from_path": [186, 192], "gdiff": 186, "get_klayout_python_info": 186, "oas2dxf": 186, "dxf": 186, "highlight": 187, "navig": [187, 188], "shift": [187, 188, 190, 191], "block": [187, 192], "toolbox": 187, "toolbar": [187, 188], "evok": 187, "anim": 187, "bring": 187, "few": [187, 195], "situat": 187, "accid": 187, "confirm": 187, "del": 187, "video": 187, "flexibl": [187, 197], "enter": 187, "export_cells_as_cod": 187, "nearbi": 187, "hardcod": [187, 192], "nice": 187, "x_port_a": 187, "x_port_a_corn": 187, "anywai": [187, 192], "unhid": [187, 188], "1t1_ground_grid": 187, "arrang": 187, "minut": 187, "anyth": 187, "quit": 188, "power": 188, "ok": 188, "chiplibrari": 188, "mous": 188, "scroll": [188, 202], "littl": 188, "esc": 188, "hotkei": 189, "introduct": 189, "samplehold": 189, "particip": [189, 199], "pyepr": [189, 199], "demo_placing_a_pcel": 190, "icon": 190, "plai": 190, "exclam": 190, "often": [190, 192], "task": [190, 195, 201], "toggl": 190, "breakpoint": 190, "red": 190, "f9": 190, "stage": 190, "pop": 190, "cancel": 190, "asterisk": 190, "caught": 190, "unrespons": 190, "heavi": 190, "though": 190, "demo_pya_bas": 190, "test_wgc_airbridg": 190, "learn": 190, "photomask": 191, "product": 191, "effici": [191, 195], "observ": 191, "multiprocess": 191, "test_mask": 191, "de1": 191, "roughli": 191, "logging_setup": 191, "spcifi": 191, "de2": 191, "5700": 191, "dt1": 191, "qf1": 191, "my_chip": 191, "mcf": 191, "proper": 191, "complic": [191, 195, 201], "mdemo": 191, "ch2": 191, "45000": 191, "30000": 191, "ch1": 191, "sx1": 191, "jt1": 191, "ac1": 191, "st1": 191, "jt2": 191, "65000": 191, "interest": 191, "fragment": 191, "fragmet": 191, "centerd": 191, "exploit": 191, "tip": 192, "trick": 192, "unlock": 192, "myelement2": 192, "offer": [192, 196], "nicer": 192, "myqubit": 192, "my_qubit": 192, "rubi": 192, "hide": 192, "simplecross": 192, "hold": 192, "len1": 192, "len2": 192, "cross_poli": 192, "simple_cross": 192, "scratch": 192, "especi": 192, "explan": [192, 193], "newchip1": 192, "default_samplehold": 192, "half_width": 192, "cross_cel": 192, "new_chip1": 192, "rf16": 192, "12000": 192, "refpoint_nam": 192, "cap_refpoint": 192, "wn_port": 192, "wn_port_corn": 192, "port_b_corn": 192, "perhap": 192, "someel": 192, "refpoint_of_some_el": 192, "existing_ref": 192, "everywher": 192, "something_port": 192, "something_port_corn": 192, "wherev": 192, "logic": [192, 196], "hard": 192, "tree": 192, "strictli": 192, "aptli": 192, "wo": 192, "laid": 192, "encompass": 192, "plu": 192, "groud": 192, "formula": 192, "intuit": 192, "2nd": 192, "indium_bump": 192, "swap": 192, "layer_config_path": 192, "simpler": 192, "x_base_metal_gap_wo_grid": 192, "x_ground_grid_avoid": 192, "133": 192, "x_port": 192, "154": 192, "x_new_lay": 192, "999": 192, "new_lay": 192, "although": 192, "newli": 192, "default_layer_prop": 192, "rm": 192, "rd": 192, "element_path": 192, "incorpor": 192, "pycharm": 192, "studio": 192, "vim": 192, "neovim": 192, "slurm": [193, 195], "password": 193, "openmpi": 193, "install_softwar": 193, "mpi": [193, 195], "machin": [193, 195], "send": 193, "singularity_path": 193, "bash": 193, "sbatch_paramet": [193, 195], "kqc_remote_account": [193, 195], "sim_1": 193, "sim_2": 193, "sim_n": 193, "job": 193, "sim_i_tmp_fold": 193, "nohup_runid": 193, "runid": 193, "watch": 193, "cat": 193, "shell": [194, 195], "liner": 194, "initialis": 194, "admin": 194, "priviledg": 194, "elmer_help": 195, "gmsh_helper": 195, "sif": 195, "capacitancematrix": 195, "electric_potenti": 195, "pvsm": 195, "waveguides_n_guides_1": 195, "waveguides_n_guides_2": 195, "n_worker": 195, "elmer_n_process": 195, "thread": 195, "openmp": 195, "elmer_n_thread": 195, "benefici": 195, "relationship": 195, "independentprocess": 195, "parallelizationsecond": 195, "ofparallel": 195, "worker": 195, "floor": 195, "run_gmsh_gui": 195, "run_elmergrid": 195, "run_elm": 195, "run_paraview": 195, "omp": 195, "gmsh_n_thread": 195, "bsd": 195, "benefit": 195, "multithread": 195, "sbatch": 195, "max_threads_per_nod": 195, "max": 195, "elmer_mem": 195, "64g": 195, "elmer_tim": 195, "00": 195, "gmsh_mem": 195, "alloc": 195, "gmsh_time": 195, "project_0": 195, "bill": 195, "simulation_mesh": 195, "afterok": 195, "sent": 195, "queue": 195, "elmerfem": [195, 198], "elmercsc": [195, 198], "org": [195, 198], "suffic": 195, "scatter": 196, "snp": 196, "touchston": 196, "s1p": 196, "s2p": 196, "s3p": 196, "forth": 196, "emploi": 196, "export_paramet": [196, 198], "extractor": [196, 199], "consult": [196, 197], "estim": 196, "mutual": 196, "c_i_j": 196, "c_i_i": 196, "lifetim": 196, "eig": 196, "eigenvalu": 196, "_energi": 196, "cv": 196, "export_epr": 196, "post_process_script": 196, "_epr": 196, "csv": 196, "accuraci": 196, "cpw_cross_section_sim": 196, "waveguides_sim_xsect": [196, 202], "xmons_direct_coupling_pyepr": 196, "pyepr_exampl": 196, "t_1": 196, "intermediate_processing_command": 196, "t1_estim": 196, "queu": 196, "lossi": 196, "coher": 196, "master": 196, "thesi": 196, "2023": 196, "focus": 197, "distinguish": 197, "snippet": 197, "refp": 197, "mandatori": [197, 198], "100um": 197, "port_2": 197, "port_2_corn": 197, "port_3": 197, "port_3_corn": 197, "multipurpos": 197, "airbridge_flyov": 197, "joint": 197, "parameter": [197, 198], "purpl": 197, "troubl": 197, "port_cplr0": 197, "port_cplr1": 197, "port_cplr2": 197, "revert": 197, "essenti": 197, "swissmonsimul": 197, "port_cplr0_corn": 197, "port_cplr1_corn": 197, "port_cplr2_corn": 197, "squid_port_squid_a": 197, "squid_port_squid_b": 197, "portion": 197, "variat": 197, "procedur": 197, "eas": 197, "arm_length_500": 197, "gap_sweep": 197, "ansys_execut": 198, "swissmon_simulation_output": 198, "dir_path": 198, "ironpython": 198, "gdsii": 198, "meta": 198, "occurr": 198, "incomplet": 198, "manner": 198, "dev": 198, "abil": 199, "until": 199, "guidanc": 199, "summari": 200, "parameteriz": 200, "primit": 200, "emb": 200, "onto": 200, "archiv": 200, "traceabl": 200, "thought": 200, "manipul": 201, "interpret": 201, "browser": 201, "low": 202, "7": 202, "newest": 202, "lightweight": 202, "klayoutmatthia": 202, "docintro": 202, "docrefer": 202, "docgrow": 202, "docetch": 202}, "objects": {"": [[1, 0, 0, "-", "kqcircuits"]], "kqcircuits": [[2, 0, 0, "-", "chips"], [27, 0, 0, "-", "defaults"], [28, 0, 0, "-", "elements"], [69, 0, 0, "-", "junctions"], [76, 0, 0, "-", "klayout_view"], [77, 0, 0, "-", "layer_cluster"], [78, 0, 0, "-", "layer_config"], [81, 0, 0, "-", "masks"], [86, 0, 0, "-", "pya_resolver"], [87, 0, 0, "-", "qubits"], [94, 0, 0, "-", "run"], [95, 0, 0, "-", "simulations"], [134, 0, 0, "-", "test_structures"], [144, 0, 0, "-", "util"]], "kqcircuits.chips": [[3, 0, 0, "-", "airbridge_crossings"], [4, 0, 0, "-", "airbridge_dc_test"], [5, 0, 0, "-", "chip"], [6, 0, 0, "-", "crossing_twoface"], [7, 0, 0, "-", "daisy_woven"], [8, 0, 0, "-", "dc_test"], [9, 0, 0, "-", "demo"], [10, 0, 0, "-", "demo_twoface"], [11, 0, 0, "-", "empty"], [12, 0, 0, "-", "junction_test"], [13, 0, 0, "-", "junction_test2"], [14, 0, 0, "-", "launchers"], [15, 0, 0, "-", "lithography_test"], [16, 0, 0, "-", "lithography_test_twoface"], [17, 0, 0, "-", "munch_qubits"], [18, 0, 0, "-", "quality_factor"], [19, 0, 0, "-", "quality_factor_twoface"], [20, 0, 0, "-", "sample_holder_test"], [21, 0, 0, "-", "shaping"], [22, 0, 0, "-", "simple"], [23, 0, 0, "-", "single_xmons"], [24, 0, 0, "-", "stripes"], [25, 0, 0, "-", "tsv_test"], [26, 0, 0, "-", "xmons_direct_coupling"]], "kqcircuits.chips.airbridge_crossings": [[3, 1, 1, "", "AirbridgeCrossings"]], "kqcircuits.chips.airbridge_crossings.AirbridgeCrossings": [[3, 2, 1, "", "build"]], "kqcircuits.chips.airbridge_dc_test": [[4, 1, 1, "", "AirbridgeDcTest"]], "kqcircuits.chips.airbridge_dc_test.AirbridgeDcTest": [[4, 2, 1, "", "build"]], "kqcircuits.chips.chip": [[5, 1, 1, "", "Chip"]], "kqcircuits.chips.chip.Chip": [[5, 3, 1, "", "LIBRARY_DESCRIPTION"], [5, 3, 1, "", "LIBRARY_NAME"], [5, 3, 1, "", "LIBRARY_PATH"], [5, 2, 1, "", "can_create_from_shape_impl"], [5, 2, 1, "", "display_text_impl"], [5, 2, 1, "", "get_box"], [5, 2, 1, "", "get_filter_regions"], [5, 2, 1, "", "get_ground_bump_locations"], [5, 2, 1, "", "get_ground_tsv_locations"], [5, 2, 1, "", "get_launcher_assignments"], [5, 2, 1, "", "insert_filtered_elements"], [5, 2, 1, "", "make_grid_locations"], [5, 2, 1, "", "merge_layout_layers"], [5, 2, 1, "", "merge_layout_layers_on_face"], [5, 2, 1, "", "parameters_from_shape_impl"], [5, 2, 1, "", "post_build"], [5, 2, 1, "", "produce_frame"], [5, 2, 1, "", "produce_ground_grid"], [5, 2, 1, "", "produce_ground_on_face_grid"], [5, 2, 1, "", "produce_junction_tests"], [5, 2, 1, "", "produce_launchers"], [5, 2, 1, "", "produce_n_launchers"], [5, 2, 1, "", "produce_opt_lit_tests"], [5, 2, 1, "", "produce_structures"], [5, 2, 1, "", "transformation_from_shape_impl"]], "kqcircuits.chips.crossing_twoface": [[6, 1, 1, "", "CrossingTwoface"]], "kqcircuits.chips.crossing_twoface.CrossingTwoface": [[6, 2, 1, "", "build"]], "kqcircuits.chips.daisy_woven": [[7, 1, 1, "", "DaisyWoven"]], "kqcircuits.chips.daisy_woven.DaisyWoven": [[7, 2, 1, "", "build"]], "kqcircuits.chips.dc_test": [[8, 1, 1, "", "DcTest"]], "kqcircuits.chips.dc_test.DcTest": [[8, 2, 1, "", "build"]], "kqcircuits.chips.demo": [[9, 1, 1, "", "Demo"]], "kqcircuits.chips.demo.Demo": [[9, 2, 1, "", "build"], [9, 2, 1, "", "produce_control_lines"], [9, 2, 1, "", "produce_coupler"], [9, 2, 1, "", "produce_couplers"], [9, 2, 1, "", "produce_driveline"], [9, 2, 1, "", "produce_fluxline"], [9, 2, 1, "", "produce_junction_tests"], [9, 2, 1, "", "produce_probeline"], [9, 2, 1, "", "produce_probelines"], [9, 2, 1, "", "produce_qubit"], [9, 2, 1, "", "produce_qubits"], [9, 2, 1, "", "produce_readout_structure"], [9, 2, 1, "", "produce_readout_structures"]], "kqcircuits.chips.demo_twoface": [[10, 1, 1, "", "DemoTwoface"]], "kqcircuits.chips.demo_twoface.DemoTwoface": [[10, 2, 1, "", "build"], [10, 2, 1, "", "produce_control_lines"], [10, 2, 1, "", "produce_coupler"], [10, 2, 1, "", "produce_couplers"], [10, 2, 1, "", "produce_driveline"], [10, 2, 1, "", "produce_fluxline"], [10, 2, 1, "", "produce_probeline"], [10, 2, 1, "", "produce_probelines"], [10, 2, 1, "", "produce_qubit"], [10, 2, 1, "", "produce_qubits"], [10, 2, 1, "", "produce_readout_structure"], [10, 2, 1, "", "produce_readout_structures"]], "kqcircuits.chips.empty": [[11, 1, 1, "", "Empty"]], "kqcircuits.chips.empty.Empty": [[11, 2, 1, "", "build"], [11, 2, 1, "", "make_empty_area"]], "kqcircuits.chips.junction_test": [[12, 1, 1, "", "JunctionTest"]], "kqcircuits.chips.junction_test.JunctionTest": [[12, 2, 1, "", "build"]], "kqcircuits.chips.junction_test2": [[13, 1, 1, "", "JunctionTest2"]], "kqcircuits.chips.junction_test2.JunctionTest2": [[13, 2, 1, "", "build"], [13, 2, 1, "", "coerce_parameters_impl"]], "kqcircuits.chips.launchers": [[14, 1, 1, "", "Launchers"]], "kqcircuits.chips.launchers.Launchers": [[14, 2, 1, "", "build"]], "kqcircuits.chips.lithography_test": [[15, 1, 1, "", "LithographyTest"]], "kqcircuits.chips.lithography_test.LithographyTest": [[15, 2, 1, "", "build"], [15, 2, 1, "", "create_pattern"]], "kqcircuits.chips.lithography_test_twoface": [[16, 1, 1, "", "LithographyTestTwoface"]], "kqcircuits.chips.lithography_test_twoface.LithographyTestTwoface": [[16, 2, 1, "", "build"], [16, 2, 1, "", "create_pattern"]], "kqcircuits.chips.munch_qubits": [[17, 1, 1, "", "MunchQubits"]], "kqcircuits.chips.munch_qubits.MunchQubits": [[17, 2, 1, "", "build"], [17, 2, 1, "", "produce_coupler"], [17, 2, 1, "", "produce_drivelines"], [17, 2, 1, "", "produce_probeline"], [17, 2, 1, "", "produce_qubits"], [17, 2, 1, "", "produce_readout_resonators"]], "kqcircuits.chips.quality_factor": [[18, 1, 1, "", "QualityFactor"]], "kqcircuits.chips.quality_factor.QualityFactor": [[18, 2, 1, "", "build"]], "kqcircuits.chips.quality_factor_twoface": [[19, 1, 1, "", "QualityFactorTwoface"]], "kqcircuits.chips.quality_factor_twoface.QualityFactorTwoface": [[19, 2, 1, "", "build"], [19, 2, 1, "", "produce_resonator"]], "kqcircuits.chips.sample_holder_test": [[20, 1, 1, "", "SampleHolderTest"]], "kqcircuits.chips.sample_holder_test.SampleHolderTest": [[20, 2, 1, "", "build"]], "kqcircuits.chips.shaping": [[21, 1, 1, "", "Shaping"]], "kqcircuits.chips.shaping.Shaping": [[21, 2, 1, "", "build"]], "kqcircuits.chips.simple": [[22, 1, 1, "", "Simple"]], "kqcircuits.chips.simple.Simple": [[22, 2, 1, "", "build"]], "kqcircuits.chips.single_xmons": [[23, 1, 1, "", "SingleXmons"]], "kqcircuits.chips.single_xmons.SingleXmons": [[23, 2, 1, "", "build"], [23, 3, 1, "", "launchers"], [23, 3, 1, "", "qubits_refpoints"]], "kqcircuits.chips.stripes": [[24, 1, 1, "", "Stripes"]], "kqcircuits.chips.stripes.Stripes": [[24, 2, 1, "", "build"]], "kqcircuits.chips.tsv_test": [[25, 1, 1, "", "TsvTest"]], "kqcircuits.chips.tsv_test.TsvTest": [[25, 2, 1, "", "build"], [25, 2, 1, "", "create_xsection"]], "kqcircuits.chips.xmons_direct_coupling": [[26, 1, 1, "", "XMonsDirectCoupling"]], "kqcircuits.chips.xmons_direct_coupling.XMonsDirectCoupling": [[26, 2, 1, "", "build"], [26, 2, 1, "", "produce_qubits"], [26, 2, 1, "", "produce_readout_resonator"]], "kqcircuits.elements": [[29, 0, 0, "-", "airbridge_connection"], [30, 0, 0, "-", "airbridges"], [34, 0, 0, "-", "capacitive_x_coupler"], [35, 0, 0, "-", "chip_frame"], [36, 0, 0, "-", "circular_capacitor"], [37, 0, 0, "-", "element"], [38, 0, 0, "-", "finger_capacitor_square"], [39, 0, 0, "-", "finger_capacitor_taper"], [40, 0, 0, "-", "flip_chip_connectors"], [44, 0, 0, "-", "fluxlines"], [48, 0, 0, "-", "hanger_resonator"], [49, 0, 0, "-", "launcher"], [50, 0, 0, "-", "launcher_dc"], [51, 0, 0, "-", "markers"], [55, 0, 0, "-", "meander"], [56, 0, 0, "-", "quarter_wave_cpw_resonator"], [57, 0, 0, "-", "smooth_capacitor"], [58, 0, 0, "-", "spiral_resonator_polygon"], [59, 0, 0, "-", "tsvs"], [63, 0, 0, "-", "waveguide_composite"], [64, 0, 0, "-", "waveguide_coplanar"], [65, 0, 0, "-", "waveguide_coplanar_curved"], [66, 0, 0, "-", "waveguide_coplanar_splitter"], [67, 0, 0, "-", "waveguide_coplanar_straight"], [68, 0, 0, "-", "waveguide_coplanar_taper"]], "kqcircuits.elements.airbridge_connection": [[29, 1, 1, "", "AirbridgeConnection"]], "kqcircuits.elements.airbridge_connection.AirbridgeConnection": [[29, 2, 1, "", "build"]], "kqcircuits.elements.airbridges": [[31, 0, 0, "-", "airbridge"], [32, 0, 0, "-", "airbridge_multi_face"], [33, 0, 0, "-", "airbridge_rectangular"]], "kqcircuits.elements.airbridges.airbridge": [[31, 1, 1, "", "Airbridge"]], "kqcircuits.elements.airbridges.airbridge.Airbridge": [[31, 2, 1, "", "create"], [31, 3, 1, "", "default_type"], [31, 2, 1, "", "transformation_from_shape_impl"]], "kqcircuits.elements.airbridges.airbridge_multi_face": [[32, 1, 1, "", "AirbridgeMultiFace"]], "kqcircuits.elements.airbridges.airbridge_multi_face.AirbridgeMultiFace": [[32, 2, 1, "", "build"], [32, 3, 1, "", "default_type"]], "kqcircuits.elements.airbridges.airbridge_rectangular": [[33, 1, 1, "", "AirbridgeRectangular"]], "kqcircuits.elements.airbridges.airbridge_rectangular.AirbridgeRectangular": [[33, 2, 1, "", "build"], [33, 3, 1, "", "default_type"]], "kqcircuits.elements.capacitive_x_coupler": [[34, 1, 1, "", "CapacitiveXCoupler"]], "kqcircuits.elements.capacitive_x_coupler.CapacitiveXCoupler": [[34, 2, 1, "", "build"], [34, 2, 1, "", "get_sim_ports"]], "kqcircuits.elements.chip_frame": [[35, 1, 1, "", "ChipFrame"]], "kqcircuits.elements.chip_frame.ChipFrame": [[35, 2, 1, "", "build"]], "kqcircuits.elements.circular_capacitor": [[36, 1, 1, "", "CircularCapacitor"]], "kqcircuits.elements.circular_capacitor.CircularCapacitor": [[36, 2, 1, "", "build"], [36, 2, 1, "", "get_sim_ports"]], "kqcircuits.elements.element": [[37, 1, 1, "", "Element"], [37, 4, 1, "", "get_refpoints"], [37, 4, 1, "", "insert_cell_into"], [37, 4, 1, "", "resolve_face"]], "kqcircuits.elements.element.Element": [[37, 3, 1, "", "LIBRARY_DESCRIPTION"], [37, 3, 1, "", "LIBRARY_NAME"], [37, 3, 1, "", "LIBRARY_PATH"], [37, 2, 1, "", "add_element"], [37, 2, 1, "", "add_port"], [37, 2, 1, "", "add_protection"], [37, 2, 1, "", "build"], [37, 2, 1, "", "copy_port"], [37, 2, 1, "", "create"], [37, 2, 1, "", "create_cell_from_shape"], [37, 2, 1, "", "create_subtype"], [37, 2, 1, "", "create_with_refpoints"], [37, 2, 1, "", "display_text_impl"], [37, 2, 1, "", "face"], [37, 2, 1, "", "face_changer_waveguides"], [37, 2, 1, "", "get_layer"], [37, 2, 1, "", "get_refpoints"], [37, 2, 1, "", "get_schema"], [37, 2, 1, "", "get_sim_ports"], [37, 2, 1, "", "insert_cell"], [37, 2, 1, "", "left_and_right_waveguides"], [37, 2, 1, "", "pcell_params_by_name"], [37, 2, 1, "", "post_build"], [37, 2, 1, "", "produce_impl"], [37, 2, 1, "", "raise_error_on_cell"], [37, 2, 1, "", "sync_parameters"]], "kqcircuits.elements.finger_capacitor_square": [[38, 1, 1, "", "FingerCapacitorSquare"]], "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare": [[38, 2, 1, "", "add_waveguides"], [38, 2, 1, "", "build"], [38, 2, 1, "", "can_create_from_shape_impl"], [38, 2, 1, "", "cut_region"], [38, 2, 1, "", "finger_area_length"], [38, 2, 1, "", "finger_area_width"], [38, 2, 1, "", "get_ground_region"], [38, 2, 1, "", "get_sim_ports"]], "kqcircuits.elements.finger_capacitor_taper": [[39, 1, 1, "", "FingerCapacitorTaper"]], "kqcircuits.elements.finger_capacitor_taper.FingerCapacitorTaper": [[39, 2, 1, "", "build"], [39, 2, 1, "", "can_create_from_shape_impl"]], "kqcircuits.elements.flip_chip_connectors": [[41, 0, 0, "-", "flip_chip_connector"], [42, 0, 0, "-", "flip_chip_connector_dc"], [43, 0, 0, "-", "flip_chip_connector_rf"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector": [[41, 1, 1, "", "FlipChipConnector"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector.FlipChipConnector": [[41, 2, 1, "", "create"], [41, 3, 1, "", "default_type"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc": [[42, 1, 1, "", "FlipChipConnectorDc"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc.FlipChipConnectorDc": [[42, 2, 1, "", "build"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf": [[43, 1, 1, "", "FlipChipConnectorRf"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf.FlipChipConnectorRf": [[43, 2, 1, "", "build"], [43, 2, 1, "", "get_sim_ports"]], "kqcircuits.elements.fluxlines": [[45, 0, 0, "-", "fluxline"], [46, 0, 0, "-", "fluxline_standard"], [47, 0, 0, "-", "fluxline_straight"]], "kqcircuits.elements.fluxlines.fluxline": [[45, 1, 1, "", "Fluxline"]], "kqcircuits.elements.fluxlines.fluxline.Fluxline": [[45, 2, 1, "", "coerce_parameters_impl"], [45, 2, 1, "", "create"], [45, 3, 1, "", "default_type"]], "kqcircuits.elements.fluxlines.fluxline_standard": [[46, 1, 1, "", "FluxlineStandard"]], "kqcircuits.elements.fluxlines.fluxline_standard.FluxlineStandard": [[46, 2, 1, "", "build"]], "kqcircuits.elements.fluxlines.fluxline_straight": [[47, 1, 1, "", "FluxlineStraight"]], "kqcircuits.elements.fluxlines.fluxline_straight.FluxlineStraight": [[47, 2, 1, "", "build"]], "kqcircuits.elements.hanger_resonator": [[48, 1, 1, "", "HangerResonator"]], "kqcircuits.elements.hanger_resonator.HangerResonator": [[48, 2, 1, "", "build"], [48, 2, 1, "", "get_sim_ports"]], "kqcircuits.elements.launcher": [[49, 1, 1, "", "Launcher"]], "kqcircuits.elements.launcher.Launcher": [[49, 2, 1, "", "build"]], "kqcircuits.elements.launcher_dc": [[50, 1, 1, "", "LauncherDC"]], "kqcircuits.elements.launcher_dc.LauncherDC": [[50, 2, 1, "", "build"]], "kqcircuits.elements.markers": [[52, 0, 0, "-", "marker"], [53, 0, 0, "-", "marker_standard"], [54, 0, 0, "-", "mask_marker_fc"]], "kqcircuits.elements.markers.marker": [[52, 1, 1, "", "Marker"]], "kqcircuits.elements.markers.marker.Marker": [[52, 2, 1, "", "create"], [52, 3, 1, "", "default_type"], [52, 2, 1, "", "get_marker_locations"], [52, 2, 1, "", "get_marker_region"], [52, 2, 1, "", "produce_geometry"]], "kqcircuits.elements.markers.marker_standard": [[53, 1, 1, "", "MarkerStandard"]], "kqcircuits.elements.markers.marker_standard.MarkerStandard": [[53, 2, 1, "", "build"]], "kqcircuits.elements.markers.mask_marker_fc": [[54, 1, 1, "", "MaskMarkerFc"]], "kqcircuits.elements.markers.mask_marker_fc.MaskMarkerFc": [[54, 2, 1, "", "build"], [54, 2, 1, "", "create_cross"], [54, 2, 1, "", "get_marker_locations"], [54, 2, 1, "", "get_marker_region"]], "kqcircuits.elements.meander": [[55, 1, 1, "", "Meander"]], "kqcircuits.elements.meander.Meander": [[55, 2, 1, "", "build"], [55, 2, 1, "", "can_create_from_shape_impl"], [55, 2, 1, "", "parameters_from_shape_impl"]], "kqcircuits.elements.quarter_wave_cpw_resonator": [[56, 1, 1, "", "QuarterWaveCpwResonator"]], "kqcircuits.elements.quarter_wave_cpw_resonator.QuarterWaveCpwResonator": [[56, 2, 1, "", "build"], [56, 2, 1, "", "get_sim_ports"]], "kqcircuits.elements.smooth_capacitor": [[57, 1, 1, "", "SmoothCapacitor"]], "kqcircuits.elements.smooth_capacitor.SmoothCapacitor": [[57, 2, 1, "", "build"], [57, 2, 1, "", "can_create_from_shape_impl"], [57, 2, 1, "", "get_sim_ports"]], "kqcircuits.elements.spiral_resonator_polygon": [[58, 1, 1, "", "SpiralResonatorPolygon"], [58, 4, 1, "", "rectangular_parameters"]], "kqcircuits.elements.spiral_resonator_polygon.SpiralResonatorPolygon": [[58, 2, 1, "", "build"]], "kqcircuits.elements.tsvs": [[60, 0, 0, "-", "tsv"], [61, 0, 0, "-", "tsv_ellipse"], [62, 0, 0, "-", "tsv_standard"]], "kqcircuits.elements.tsvs.tsv": [[60, 1, 1, "", "Tsv"]], "kqcircuits.elements.tsvs.tsv.Tsv": [[60, 2, 1, "", "create"], [60, 3, 1, "", "default_type"]], "kqcircuits.elements.tsvs.tsv_ellipse": [[61, 1, 1, "", "TsvEllipse"]], "kqcircuits.elements.tsvs.tsv_ellipse.TsvEllipse": [[61, 2, 1, "", "create_tsv_connector"], [61, 2, 1, "", "produce_impl"]], "kqcircuits.elements.tsvs.tsv_standard": [[62, 1, 1, "", "TsvStandard"]], "kqcircuits.elements.tsvs.tsv_standard.TsvStandard": [[62, 2, 1, "", "build"]], "kqcircuits.elements.waveguide_composite": [[63, 1, 1, "", "Node"], [63, 1, 1, "", "WaveguideComposite"], [63, 4, 1, "", "produce_fixed_length_bend"]], "kqcircuits.elements.waveguide_composite.Node": [[63, 3, 1, "", "align"], [63, 3, 1, "", "angle"], [63, 2, 1, "", "deserialize"], [63, 3, 1, "", "element"], [63, 3, 1, "", "inst_name"], [63, 3, 1, "", "length_before"], [63, 3, 1, "", "length_increment"], [63, 3, 1, "", "meander_direction"], [63, 2, 1, "", "nodes_from_string"], [63, 3, 1, "", "position"]], "kqcircuits.elements.waveguide_composite.WaveguideComposite": [[63, 2, 1, "", "build"], [63, 2, 1, "", "check_node_type"], [63, 2, 1, "", "coerce_parameters_impl"], [63, 2, 1, "", "create"], [63, 2, 1, "", "get_segment_cells"], [63, 2, 1, "", "get_segment_lengths"], [63, 2, 1, "", "produce_fixed_length_waveguide"], [63, 2, 1, "", "snap_point"]], "kqcircuits.elements.waveguide_coplanar": [[64, 1, 1, "", "WaveguideCoplanar"]], "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar": [[64, 2, 1, "", "build"], [64, 2, 1, "", "can_create_from_shape_impl"], [64, 2, 1, "", "get_corner_data"], [64, 2, 1, "", "is_continuous"], [64, 2, 1, "", "parameters_from_shape_impl"], [64, 2, 1, "", "produce_end_termination"], [64, 2, 1, "", "produce_waveguide"], [64, 2, 1, "", "transformation_from_shape_impl"]], "kqcircuits.elements.waveguide_coplanar_curved": [[65, 1, 1, "", "WaveguideCoplanarCurved"], [65, 4, 1, "", "arc"]], "kqcircuits.elements.waveguide_coplanar_curved.WaveguideCoplanarCurved": [[65, 2, 1, "", "build"], [65, 2, 1, "", "build_geometry"], [65, 2, 1, "", "coerce_parameters_impl"], [65, 2, 1, "", "create_curve_arcs"], [65, 2, 1, "", "produce_curve_termination"]], "kqcircuits.elements.waveguide_coplanar_splitter": [[66, 1, 1, "", "WaveguideCoplanarSplitter"], [66, 4, 1, "", "t_cross_parameters"]], "kqcircuits.elements.waveguide_coplanar_splitter.WaveguideCoplanarSplitter": [[66, 2, 1, "", "build"]], "kqcircuits.elements.waveguide_coplanar_straight": [[67, 1, 1, "", "WaveguideCoplanarStraight"]], "kqcircuits.elements.waveguide_coplanar_straight.WaveguideCoplanarStraight": [[67, 2, 1, "", "build"], [67, 2, 1, "", "build_geometry"]], "kqcircuits.elements.waveguide_coplanar_taper": [[68, 1, 1, "", "WaveguideCoplanarTaper"]], "kqcircuits.elements.waveguide_coplanar_taper.WaveguideCoplanarTaper": [[68, 2, 1, "", "build"]], "kqcircuits.junctions": [[70, 0, 0, "-", "junction"], [71, 0, 0, "-", "manhattan"], [72, 0, 0, "-", "manhattan_single_junction"], [73, 0, 0, "-", "no_squid"], [74, 0, 0, "-", "sim"], [75, 0, 0, "-", "squid"]], "kqcircuits.junctions.junction": [[70, 1, 1, "", "Junction"]], "kqcircuits.junctions.junction.Junction": [[70, 3, 1, "", "LIBRARY_DESCRIPTION"], [70, 3, 1, "", "LIBRARY_NAME"], [70, 3, 1, "", "LIBRARY_PATH"], [70, 2, 1, "", "coerce_parameters_impl"], [70, 2, 1, "", "create"], [70, 3, 1, "", "default_type"]], "kqcircuits.junctions.manhattan": [[71, 1, 1, "", "Manhattan"]], "kqcircuits.junctions.manhattan.Manhattan": [[71, 2, 1, "", "build"], [71, 2, 1, "", "produce_contact_pads"], [71, 2, 1, "", "produce_manhattan_squid"], [71, 2, 1, "", "produce_tp_large"], [71, 2, 1, "", "produce_tp_small"]], "kqcircuits.junctions.manhattan_single_junction": [[72, 1, 1, "", "ManhattanSingleJunction"]], "kqcircuits.junctions.manhattan_single_junction.ManhattanSingleJunction": [[72, 2, 1, "", "build"], [72, 2, 1, "", "produce_manhattan_junction"]], "kqcircuits.junctions.no_squid": [[73, 1, 1, "", "NoSquid"]], "kqcircuits.junctions.no_squid.NoSquid": [[73, 2, 1, "", "build"]], "kqcircuits.junctions.sim": [[74, 1, 1, "", "Sim"]], "kqcircuits.junctions.sim.Sim": [[74, 2, 1, "", "build"]], "kqcircuits.junctions.squid": [[75, 1, 1, "", "Squid"]], "kqcircuits.klayout_view": [[76, 1, 1, "", "KLayoutView"], [76, 6, 1, "", "MissingUILibraryException"], [76, 4, 1, "", "resolve_default_layer_info"]], "kqcircuits.klayout_view.KLayoutView": [[76, 5, 1, "", "active_cell"], [76, 2, 1, "", "add_default_layers"], [76, 5, 1, "", "cell_view"], [76, 2, 1, "", "clear_layers"], [76, 2, 1, "", "close"], [76, 2, 1, "", "create_top_cell"], [76, 2, 1, "", "export_all_layers_bitmap"], [76, 2, 1, "", "export_layers_bitmaps"], [76, 2, 1, "", "export_pcell_png"], [76, 2, 1, "", "focus"], [76, 2, 1, "", "get_active_cell"], [76, 2, 1, "", "get_active_cell_view"], [76, 2, 1, "", "get_active_layout"], [76, 2, 1, "", "get_pixels"], [76, 2, 1, "", "insert_cell"], [76, 5, 1, "", "layout"], [76, 3, 1, "", "layout_view"], [76, 2, 1, "", "show"], [76, 5, 1, "", "top_cell"]], "kqcircuits.layer_cluster": [[77, 1, 1, "", "LayerCluster"]], "kqcircuits.layer_cluster.LayerCluster": [[77, 2, 1, "", "all_layers"], [77, 3, 1, "", "extra_layers"], [77, 3, 1, "", "face_id"], [77, 3, 1, "", "main_layers"]], "kqcircuits.layer_config": [[79, 0, 0, "-", "default_layer_config"], [80, 0, 0, "-", "example_layer_config"]], "kqcircuits.masks": [[82, 0, 0, "-", "mask_export"], [83, 0, 0, "-", "mask_layout"], [84, 0, 0, "-", "mask_set"], [85, 0, 0, "-", "multi_face_mask_layout"]], "kqcircuits.masks.mask_export": [[82, 4, 1, "", "export_bitmaps"], [82, 4, 1, "", "export_chip"], [82, 4, 1, "", "export_designs"], [82, 4, 1, "", "export_docs"], [82, 4, 1, "", "export_junction_parameters"], [82, 4, 1, "", "export_mask"], [82, 4, 1, "", "export_mask_set"], [82, 4, 1, "", "export_masks_of_face"], [82, 4, 1, "", "get_mask_layout_full_name"]], "kqcircuits.masks.mask_layout": [[83, 1, 1, "", "MaskLayout"]], "kqcircuits.masks.mask_layout.MaskLayout": [[83, 2, 1, "", "add_chips_map"], [83, 3, 1, "", "added_chips"], [83, 3, 1, "", "align_to"], [83, 3, 1, "", "bbox_face_ids"], [83, 2, 1, "", "build"], [83, 3, 1, "", "chip_box_offset"], [83, 3, 1, "", "chip_copies"], [83, 3, 1, "", "chip_size"], [83, 3, 1, "", "chip_trans"], [83, 3, 1, "", "chips_map"], [83, 3, 1, "", "chips_map_legend"], [83, 3, 1, "", "chips_map_offset"], [83, 3, 1, "", "chips_placed_by_position_label"], [83, 3, 1, "", "covered_region_excluded_layers"], [83, 3, 1, "", "dice_width"], [83, 3, 1, "", "edge_clearance"], [83, 3, 1, "", "extra_chips"], [83, 3, 1, "", "extra_id"], [83, 2, 1, "", "face"], [83, 3, 1, "", "face_id"], [83, 2, 1, "", "generate_and_insert_chip_copy_labels"], [83, 2, 1, "", "generate_position_label"], [83, 2, 1, "", "insert_chip_copy_labels"], [83, 2, 1, "", "insert_chips"], [83, 3, 1, "", "layers_to_mask"], [83, 3, 1, "", "layout"], [83, 3, 1, "", "mask_export_density_layers"], [83, 3, 1, "", "mask_export_layers"], [83, 3, 1, "", "mask_marker_offset"], [83, 3, 1, "", "mask_markers_dict"], [83, 3, 1, "", "mask_name_box_margin"], [83, 3, 1, "", "mask_name_offset"], [83, 3, 1, "", "mask_name_scale"], [83, 3, 1, "", "mask_text_scale"], [83, 3, 1, "", "mirror_labels"], [83, 3, 1, "", "name"], [83, 2, 1, "", "position_label_to_two_coordinates"], [83, 3, 1, "", "remove_chips"], [83, 3, 1, "", "submasks"], [83, 3, 1, "", "text_margin"], [83, 3, 1, "", "top_cell"], [83, 2, 1, "", "two_coordinates_to_position_label"], [83, 3, 1, "", "version"], [83, 3, 1, "", "wafer_bottom_flat_length"], [83, 3, 1, "", "wafer_center"], [83, 3, 1, "", "wafer_rad"], [83, 3, 1, "", "wafer_top_flat_length"], [83, 3, 1, "", "with_grid"]], "kqcircuits.masks.mask_set": [[84, 1, 1, "", "MaskSet"]], "kqcircuits.masks.mask_set.MaskSet": [[84, 2, 1, "", "add_chip"], [84, 2, 1, "", "add_mask_layout"], [84, 2, 1, "", "add_multi_face_mask_layout"], [84, 2, 1, "", "build"], [84, 2, 1, "", "chips_map_from_box_map"], [84, 3, 1, "", "chips_map_legend"], [84, 2, 1, "", "export"], [84, 3, 1, "", "export_drc"], [84, 3, 1, "", "export_path"], [84, 3, 1, "", "layout"], [84, 3, 1, "", "mask_export_layers"], [84, 3, 1, "", "mask_layouts"], [84, 3, 1, "", "name"], [84, 3, 1, "", "used_chips"], [84, 3, 1, "", "version"], [84, 3, 1, "", "with_grid"]], "kqcircuits.masks.multi_face_mask_layout": [[85, 1, 1, "", "MultiFaceMaskLayout"]], "kqcircuits.masks.multi_face_mask_layout.MultiFaceMaskLayout": [[85, 2, 1, "", "add_chips_map"], [85, 3, 1, "", "face_ids"], [85, 3, 1, "", "mask_layouts"]], "kqcircuits.pya_resolver": [[86, 4, 1, "", "is_standalone_session"], [86, 4, 1, "", "klayout_executable_command"]], "kqcircuits.qubits": [[88, 0, 0, "-", "circular_transmon_single_island"], [89, 0, 0, "-", "concentric_transmon"], [90, 0, 0, "-", "double_pads"], [91, 0, 0, "-", "double_pads_splines"], [92, 0, 0, "-", "qubit"], [93, 0, 0, "-", "swissmon"]], "kqcircuits.qubits.circular_transmon_single_island": [[88, 1, 1, "", "CircularTransmonSingleIsland"]], "kqcircuits.qubits.circular_transmon_single_island.CircularTransmonSingleIsland": [[88, 2, 1, "", "build"], [88, 2, 1, "", "get_sim_ports"]], "kqcircuits.qubits.concentric_transmon": [[89, 1, 1, "", "ConcentricTransmon"]], "kqcircuits.qubits.concentric_transmon.ConcentricTransmon": [[89, 2, 1, "", "build"], [89, 2, 1, "", "get_sim_ports"]], "kqcircuits.qubits.double_pads": [[90, 1, 1, "", "DoublePads"]], "kqcircuits.qubits.double_pads.DoublePads": [[90, 2, 1, "", "build"], [90, 2, 1, "", "get_sim_ports"]], "kqcircuits.qubits.double_pads_splines": [[91, 1, 1, "", "DoublePadsSplines"]], "kqcircuits.qubits.qubit": [[92, 1, 1, "", "Qubit"]], "kqcircuits.qubits.qubit.Qubit": [[92, 3, 1, "", "LIBRARY_DESCRIPTION"], [92, 3, 1, "", "LIBRARY_NAME"], [92, 3, 1, "", "LIBRARY_PATH"], [92, 2, 1, "", "coerce_parameters_impl"], [92, 2, 1, "", "produce_fluxline"], [92, 2, 1, "", "produce_squid"]], "kqcircuits.qubits.swissmon": [[93, 1, 1, "", "Swissmon"]], "kqcircuits.qubits.swissmon.Swissmon": [[93, 2, 1, "", "build"], [93, 2, 1, "", "get_sim_ports"]], "kqcircuits.run": [[94, 4, 1, "", "argument_parser"], [94, 4, 1, "", "run"], [94, 4, 1, "", "run_kqc"]], "kqcircuits.simulations": [[96, 0, 0, "-", "airbridges_sim"], [97, 0, 0, "-", "cross_section_simulation"], [98, 0, 0, "-", "empty_simulation"], [105, 0, 0, "-", "export"], [125, 0, 0, "-", "partition_region"], [126, 0, 0, "-", "port"], [127, 0, 0, "-", "post_process"], [128, 0, 0, "-", "simulation"], [129, 0, 0, "-", "single_element_simulation"], [130, 0, 0, "-", "single_xmons_full_chip_sim"], [131, 0, 0, "-", "waveguides_sim"], [132, 0, 0, "-", "xmons_direct_coupling_full_chip_sim"], [133, 0, 0, "-", "xmons_direct_coupling_sim"]], "kqcircuits.simulations.airbridges_sim": [[96, 1, 1, "", "AirbridgesSim"]], "kqcircuits.simulations.airbridges_sim.AirbridgesSim": [[96, 2, 1, "", "build"]], "kqcircuits.simulations.cross_section_simulation": [[97, 1, 1, "", "CrossSectionSimulation"]], "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation": [[97, 3, 1, "", "LIBRARY_NAME"], [97, 2, 1, "", "build"], [97, 2, 1, "", "get_dict_by_layers"], [97, 2, 1, "", "get_layers"], [97, 2, 1, "", "get_parameters"], [97, 2, 1, "", "get_schema"], [97, 2, 1, "", "get_sim_layer"], [97, 2, 1, "", "get_simulation_data"], [97, 2, 1, "", "process_layers"], [97, 2, 1, "", "register_cell_layers_as_sim_layers"], [97, 2, 1, "", "set_permittivity"]], "kqcircuits.simulations.empty_simulation": [[98, 1, 1, "", "EmptySimulation"]], "kqcircuits.simulations.empty_simulation.EmptySimulation": [[98, 2, 1, "", "build"]], "kqcircuits.simulations.epr": [[100, 0, 0, "-", "circular_capacitor"], [101, 0, 0, "-", "example"], [102, 0, 0, "-", "smooth_capacitor"], [103, 0, 0, "-", "swissmon"], [104, 0, 0, "-", "utils"]], "kqcircuits.simulations.epr.circular_capacitor": [[100, 4, 1, "", "correction_cuts"], [100, 4, 1, "", "extract_circular_capacitor_from"], [100, 4, 1, "", "partition_regions"]], "kqcircuits.simulations.epr.example": [[101, 4, 1, "", "correction_cuts"], [101, 4, 1, "", "extract_from"], [101, 4, 1, "", "partition_regions"]], "kqcircuits.simulations.epr.smooth_capacitor": [[102, 4, 1, "", "correction_cuts"], [102, 4, 1, "", "partition_regions"]], "kqcircuits.simulations.epr.swissmon": [[103, 4, 1, "", "correction_cuts"], [103, 4, 1, "", "extract_swissmon_from"], [103, 4, 1, "", "partition_regions"]], "kqcircuits.simulations.epr.utils": [[104, 4, 1, "", "extract_child_simulation"]], "kqcircuits.simulations.export": [[106, 0, 0, "-", "ansys"], [109, 0, 0, "-", "elmer"], [112, 0, 0, "-", "export_and_run"], [113, 0, 0, "-", "export_singularity"], [114, 0, 0, "-", "remote_export_and_run"], [115, 0, 0, "-", "simulation_export"], [116, 0, 0, "-", "simulation_validate"], [117, 0, 0, "-", "solution"], [118, 0, 0, "-", "sonnet"], [121, 0, 0, "-", "util"], [122, 0, 0, "-", "xsection"]], "kqcircuits.simulations.export.ansys": [[107, 0, 0, "-", "ansys_export"], [108, 0, 0, "-", "ansys_solution"]], "kqcircuits.simulations.export.ansys.ansys_export": [[107, 4, 1, "", "export_ansys"], [107, 4, 1, "", "export_ansys_bat"], [107, 4, 1, "", "export_ansys_json"]], "kqcircuits.simulations.export.ansys.ansys_solution": [[108, 1, 1, "", "AnsysCrossSectionSolution"], [108, 1, 1, "", "AnsysCurrentSolution"], [108, 1, 1, "", "AnsysEigenmodeSolution"], [108, 1, 1, "", "AnsysHfssSolution"], [108, 1, 1, "", "AnsysQ3dSolution"], [108, 1, 1, "", "AnsysSolution"], [108, 1, 1, "", "AnsysVoltageSolution"], [108, 4, 1, "", "get_ansys_solution"]], "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCrossSectionSolution": [[108, 3, 1, "", "ansys_tool"], [108, 3, 1, "", "frequency"], [108, 2, 1, "", "get_solution_data"], [108, 3, 1, "", "integrate_energies"], [108, 3, 1, "", "percent_error"]], "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCurrentSolution": [[108, 3, 1, "", "ansys_tool"], [108, 3, 1, "", "frequency"], [108, 2, 1, "", "get_solution_data"], [108, 3, 1, "", "integrate_energies"], [108, 3, 1, "", "integrate_magnetic_flux"], [108, 3, 1, "", "max_delta_e"]], "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution": [[108, 3, 1, "", "ansys_tool"], [108, 2, 1, "", "get_solution_data"], [108, 3, 1, "", "integrate_energies"], [108, 3, 1, "", "integrate_magnetic_flux"], [108, 3, 1, "", "max_delta_f"], [108, 3, 1, "", "min_frequency"], [108, 3, 1, "", "n_modes"]], "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution": [[108, 3, 1, "", "ansys_tool"], [108, 3, 1, "", "capacitance_export"], [108, 3, 1, "", "frequency"], [108, 2, 1, "", "get_solution_data"], [108, 3, 1, "", "integrate_energies"], [108, 3, 1, "", "integrate_magnetic_flux"], [108, 3, 1, "", "max_delta_s"], [108, 3, 1, "", "sweep_count"], [108, 3, 1, "", "sweep_enabled"], [108, 3, 1, "", "sweep_end"], [108, 3, 1, "", "sweep_start"], [108, 3, 1, "", "sweep_type"]], "kqcircuits.simulations.export.ansys.ansys_solution.AnsysQ3dSolution": [[108, 3, 1, "", "ansys_tool"], [108, 3, 1, "", "frequency"], [108, 2, 1, "", "get_solution_data"], [108, 3, 1, "", "percent_error"]], "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution": [[108, 3, 1, "", "ansys_project_template"], [108, 3, 1, "", "ansys_tool"], [108, 3, 1, "", "frequency_units"], [108, 2, 1, "", "get_solution_data"], [108, 3, 1, "", "maximum_passes"], [108, 3, 1, "", "mesh_size"], [108, 3, 1, "", "minimum_converged_passes"], [108, 3, 1, "", "minimum_passes"], [108, 3, 1, "", "percent_refinement"], [108, 3, 1, "", "simulation_flags"]], "kqcircuits.simulations.export.ansys.ansys_solution.AnsysVoltageSolution": [[108, 3, 1, "", "ansys_tool"], [108, 3, 1, "", "frequency"], [108, 2, 1, "", "get_solution_data"], [108, 3, 1, "", "integrate_energies"], [108, 3, 1, "", "integrate_magnetic_flux"], [108, 3, 1, "", "max_delta_e"]], "kqcircuits.simulations.export.elmer": [[110, 0, 0, "-", "elmer_export"], [111, 0, 0, "-", "elmer_solution"]], "kqcircuits.simulations.export.elmer.elmer_export": [[110, 4, 1, "", "export_elmer"], [110, 4, 1, "", "export_elmer_json"], [110, 4, 1, "", "export_elmer_script"]], "kqcircuits.simulations.export.elmer.elmer_solution": [[111, 1, 1, "", "ElmerCapacitanceSolution"], [111, 1, 1, "", "ElmerCrossSectionSolution"], [111, 1, 1, "", "ElmerEPR3DSolution"], [111, 1, 1, "", "ElmerSolution"], [111, 1, 1, "", "ElmerVectorHelmholtzSolution"], [111, 4, 1, "", "get_elmer_solution"]], "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCapacitanceSolution": [[111, 3, 1, "", "convergence_tolerance"], [111, 3, 1, "", "integrate_energies"], [111, 3, 1, "", "linear_system_method"], [111, 3, 1, "", "linear_system_preconditioning"], [111, 3, 1, "", "max_iterations"], [111, 3, 1, "", "p_element_order"], [111, 3, 1, "", "tool"]], "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution": [[111, 3, 1, "", "boundary_conditions"], [111, 3, 1, "", "convergence_tolerance"], [111, 3, 1, "", "integrate_energies"], [111, 3, 1, "", "linear_system_method"], [111, 3, 1, "", "linear_system_preconditioning"], [111, 3, 1, "", "max_iterations"], [111, 3, 1, "", "p_element_order"], [111, 3, 1, "", "run_inductance_sim"], [111, 3, 1, "", "tool"]], "kqcircuits.simulations.export.elmer.elmer_solution.ElmerEPR3DSolution": [[111, 3, 1, "", "convergence_tolerance"], [111, 3, 1, "", "linear_system_method"], [111, 3, 1, "", "linear_system_preconditioning"], [111, 3, 1, "", "max_iterations"], [111, 3, 1, "", "p_element_order"], [111, 3, 1, "", "sequential_signal_excitation"], [111, 3, 1, "", "tool"]], "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution": [[111, 2, 1, "", "get_solution_data"], [111, 3, 1, "", "is_axisymmetric"], [111, 3, 1, "", "max_error_scale"], [111, 3, 1, "", "max_outlier_fraction"], [111, 3, 1, "", "maximum_passes"], [111, 3, 1, "", "mesh_levels"], [111, 3, 1, "", "mesh_size"], [111, 3, 1, "", "minimum_passes"], [111, 3, 1, "", "percent_error"], [111, 3, 1, "", "tool"], [111, 3, 1, "", "vtu_output"]], "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution": [[111, 3, 1, "", "conductivity"], [111, 3, 1, "", "convergence_tolerance"], [111, 3, 1, "", "frequency"], [111, 3, 1, "", "frequency_batch"], [111, 3, 1, "", "london_penetration_depth"], [111, 3, 1, "", "max_delta_s"], [111, 3, 1, "", "max_iterations"], [111, 3, 1, "", "nested_iteration"], [111, 3, 1, "", "quadratic_approximation"], [111, 3, 1, "", "second_kind_basis"], [111, 3, 1, "", "sweep_type"], [111, 3, 1, "", "tool"], [111, 3, 1, "", "use_av"]], "kqcircuits.simulations.export.export_and_run": [[112, 4, 1, "", "export_and_run"], [112, 4, 1, "", "run_export_script"], [112, 4, 1, "", "run_simulations"]], "kqcircuits.simulations.export.export_singularity": [[113, 4, 1, "", "export_singularity"]], "kqcircuits.simulations.export.remote_export_and_run": [[114, 4, 1, "", "remote_export_and_run"], [114, 4, 1, "", "remote_run_only"]], "kqcircuits.simulations.export.simulation_export": [[115, 4, 1, "", "copy_content_into_directory"], [115, 4, 1, "", "cross_combine"], [115, 4, 1, "", "cross_sweep_simulation"], [115, 4, 1, "", "cross_sweep_solution"], [115, 4, 1, "", "export_simulation_json"], [115, 4, 1, "", "export_simulation_oas"], [115, 4, 1, "", "get_combined_parameters"], [115, 4, 1, "", "get_post_process_command_lines"], [115, 4, 1, "", "sweep_simulation"], [115, 4, 1, "", "sweep_solution"]], "kqcircuits.simulations.export.simulation_validate": [[116, 6, 1, "", "ValidateSimError"], [116, 4, 1, "", "flux_integration_layer_exists_if_needed"], [116, 4, 1, "", "get_port_names"], [116, 4, 1, "", "has_edgeport_when_forbidden"], [116, 4, 1, "", "has_no_ports_when_required"], [116, 4, 1, "", "simulation_and_solution_types_match"], [116, 4, 1, "", "validate_simulation"]], "kqcircuits.simulations.export.solution": [[117, 1, 1, "", "Solution"]], "kqcircuits.simulations.export.solution.Solution": [[117, 2, 1, "", "get_parameters"], [117, 3, 1, "", "name"]], "kqcircuits.simulations.export.sonnet": [[119, 0, 0, "-", "parser"], [120, 0, 0, "-", "sonnet_export"]], "kqcircuits.simulations.export.sonnet.parser": [[119, 4, 1, "", "apply_template"], [119, 4, 1, "", "box"], [119, 4, 1, "", "control"], [119, 4, 1, "", "polygon_head"], [119, 4, 1, "", "polygons"], [119, 4, 1, "", "port"], [119, 4, 1, "", "refplane"], [119, 4, 1, "", "refplanes"], [119, 4, 1, "", "symmetry"], [119, 4, 1, "", "via"]], "kqcircuits.simulations.export.sonnet.sonnet_export": [[120, 4, 1, "", "export_sonnet"], [120, 4, 1, "", "export_sonnet_son"], [120, 4, 1, "", "poly_and_edge_indices"]], "kqcircuits.simulations.export.util": [[121, 4, 1, "", "export_layers"], [121, 4, 1, "", "find_edge_from_point_in_cell"], [121, 4, 1, "", "find_edge_from_point_in_polygons"], [121, 4, 1, "", "get_enclosing_polygon"]], "kqcircuits.simulations.export.xsection": [[123, 0, 0, "-", "epr_correction_export"], [124, 0, 0, "-", "xsection_export"]], "kqcircuits.simulations.export.xsection.epr_correction_export": [[123, 4, 1, "", "get_epr_correction_elmer_solution"], [123, 4, 1, "", "get_epr_correction_simulations"]], "kqcircuits.simulations.export.xsection.xsection_export": [[124, 4, 1, "", "create_xsections_from_simulations"], [124, 4, 1, "", "find_layer_by_name"], [124, 4, 1, "", "free_layer_slots"], [124, 4, 1, "", "separate_signal_layer_shapes"], [124, 4, 1, "", "visualise_xsection_cut_on_original_layout"], [124, 4, 1, "", "xsection_call"]], "kqcircuits.simulations.partition_region": [[125, 1, 1, "", "PartitionRegion"], [125, 4, 1, "", "get_list_of_two"]], "kqcircuits.simulations.partition_region.PartitionRegion": [[125, 2, 1, "", "limit_box"], [125, 2, 1, "", "limit_face"]], "kqcircuits.simulations.port": [[126, 1, 1, "", "EdgePort"], [126, 1, 1, "", "InternalPort"], [126, 1, 1, "", "Port"]], "kqcircuits.simulations.port.InternalPort": [[126, 2, 1, "", "get_etch_polygon"]], "kqcircuits.simulations.port.Port": [[126, 2, 1, "", "as_dict"]], "kqcircuits.simulations.post_process": [[127, 1, 1, "", "PostProcess"]], "kqcircuits.simulations.post_process.PostProcess": [[127, 2, 1, "", "get_command_line"]], "kqcircuits.simulations.simulation": [[128, 1, 1, "", "Simulation"], [128, 4, 1, "", "get_simulation_layer_by_name"], [128, 4, 1, "", "to_1d_list"]], "kqcircuits.simulations.simulation.Simulation": [[128, 3, 1, "", "LIBRARY_NAME"], [128, 2, 1, "", "add_element"], [128, 2, 1, "", "build"], [128, 2, 1, "", "create_simulation_layers"], [128, 2, 1, "", "delete_instances"], [128, 2, 1, "", "etched_line"], [128, 2, 1, "", "face"], [128, 2, 1, "", "face_stack_list_of_lists"], [128, 2, 1, "", "face_z_levels"], [128, 2, 1, "", "from_cell"], [128, 2, 1, "", "get_layer"], [128, 2, 1, "", "get_layers"], [128, 2, 1, "", "get_parameters"], [128, 2, 1, "", "get_partition_regions"], [128, 2, 1, "", "get_port_data"], [128, 2, 1, "", "get_refpoints"], [128, 2, 1, "", "get_schema"], [128, 2, 1, "", "get_simulation_data"], [128, 2, 1, "", "ground_grid_region"], [128, 2, 1, "", "insert_cell"], [128, 2, 1, "", "insert_layer"], [128, 2, 1, "", "insert_layers_between_faces"], [128, 2, 1, "", "insert_stacked_up_layers"], [128, 2, 1, "", "ith_value"], [128, 2, 1, "", "pcell_params_by_name"], [128, 3, 1, "", "ports"], [128, 2, 1, "", "produce_layers"], [128, 2, 1, "", "produce_waveguide_to_port"], [128, 2, 1, "", "region_from_layer"], [128, 2, 1, "", "simplified_region"], [128, 2, 1, "", "visualise_region"]], "kqcircuits.simulations.single_element_simulation": [[129, 4, 1, "", "get_single_element_sim_class"]], "kqcircuits.simulations.single_xmons_full_chip_sim": [[130, 1, 1, "", "SingleXmonsFullChipSim"]], "kqcircuits.simulations.single_xmons_full_chip_sim.SingleXmonsFullChipSim": [[130, 2, 1, "", "build"]], "kqcircuits.simulations.waveguides_sim": [[131, 1, 1, "", "WaveGuidesSim"]], "kqcircuits.simulations.waveguides_sim.WaveGuidesSim": [[131, 2, 1, "", "build"], [131, 2, 1, "", "produce_ground_bumps"], [131, 2, 1, "", "produce_guides"]], "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim": [[132, 1, 1, "", "XMonsDirectCouplingFullChipSim"]], "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim": [[132, 2, 1, "", "build"], [132, 2, 1, "", "produce_launcher"], [132, 2, 1, "", "produce_launchers_SMA8"], [132, 2, 1, "", "produce_qubit"], [132, 2, 1, "", "produce_readout_resonator"], [132, 2, 1, "", "produce_waveguide"]], "kqcircuits.simulations.xmons_direct_coupling_sim": [[133, 1, 1, "", "XMonsDirectCouplingSim"]], "kqcircuits.simulations.xmons_direct_coupling_sim.XMonsDirectCouplingSim": [[133, 2, 1, "", "build"], [133, 2, 1, "", "produce_qubits"]], "kqcircuits.test_structures": [[135, 0, 0, "-", "airbridge_dc"], [136, 0, 0, "-", "cross_test"], [137, 0, 0, "-", "junction_test_pads"], [140, 0, 0, "-", "stripes_test"], [141, 0, 0, "-", "stripes_test_increasing_width"], [142, 0, 0, "-", "test_structure"], [143, 0, 0, "-", "tsv_test_pattern"]], "kqcircuits.test_structures.airbridge_dc": [[135, 1, 1, "", "AirbridgeDC"]], "kqcircuits.test_structures.airbridge_dc.AirbridgeDC": [[135, 2, 1, "", "build"]], "kqcircuits.test_structures.cross_test": [[136, 1, 1, "", "CrossTest"]], "kqcircuits.test_structures.cross_test.CrossTest": [[136, 2, 1, "", "build"]], "kqcircuits.test_structures.junction_test_pads": [[138, 0, 0, "-", "junction_test_pads"], [139, 0, 0, "-", "junction_test_pads_simple"]], "kqcircuits.test_structures.junction_test_pads.junction_test_pads": [[138, 1, 1, "", "JunctionTestPads"]], "kqcircuits.test_structures.junction_test_pads.junction_test_pads.JunctionTestPads": [[138, 2, 1, "", "coerce_parameters_impl"], [138, 2, 1, "", "create"], [138, 3, 1, "", "default_type"], [138, 2, 1, "", "produce_squid"]], "kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple": [[139, 1, 1, "", "JunctionTestPadsSimple"]], "kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple.JunctionTestPadsSimple": [[139, 2, 1, "", "build"]], "kqcircuits.test_structures.stripes_test": [[140, 1, 1, "", "StripesTest"]], "kqcircuits.test_structures.stripes_test.StripesTest": [[140, 2, 1, "", "build"]], "kqcircuits.test_structures.stripes_test_increasing_width": [[141, 1, 1, "", "StripesTestIncreasingWidth"]], "kqcircuits.test_structures.stripes_test_increasing_width.StripesTestIncreasingWidth": [[141, 2, 1, "", "build"]], "kqcircuits.test_structures.test_structure": [[142, 1, 1, "", "TestStructure"]], "kqcircuits.test_structures.test_structure.TestStructure": [[142, 3, 1, "", "LIBRARY_DESCRIPTION"], [142, 3, 1, "", "LIBRARY_NAME"], [142, 3, 1, "", "LIBRARY_PATH"], [142, 2, 1, "", "produce_etched_region"], [142, 2, 1, "", "produce_four_point_pads"], [142, 2, 1, "", "produce_pad"]], "kqcircuits.test_structures.tsv_test_pattern": [[143, 1, 1, "", "TsvTestPattern"]], "kqcircuits.test_structures.tsv_test_pattern.TsvTestPattern": [[143, 2, 1, "", "build"]], "kqcircuits.util": [[145, 0, 0, "-", "area"], [146, 0, 0, "-", "count_instances"], [147, 0, 0, "-", "coupler_lib"], [148, 0, 0, "-", "deep_delete"], [149, 0, 0, "-", "defaults_helper"], [150, 0, 0, "-", "dependencies"], [151, 0, 0, "-", "edit_node_plugin"], [152, 0, 0, "-", "export_helper"], [153, 0, 0, "-", "geometry_helper"], [154, 0, 0, "-", "geometry_json_encoder"], [155, 0, 0, "-", "groundgrid"], [156, 0, 0, "-", "gui_helper"], [157, 0, 0, "-", "import_helper"], [158, 0, 0, "-", "label"], [159, 0, 0, "-", "label_polygons"], [160, 0, 0, "-", "layout_to_code"], [161, 0, 0, "-", "library_helper"], [162, 0, 0, "-", "log_router"], [163, 0, 0, "-", "merge"], [164, 0, 0, "-", "netlist_extraction"], [165, 0, 0, "-", "netlist_graph"], [166, 0, 0, "-", "parameters"], [167, 0, 0, "-", "plugin_startup"], [168, 0, 0, "-", "refpoints"], [169, 0, 0, "-", "replace_junctions"], [170, 0, 0, "-", "symmetric_polygons"]], "kqcircuits.util.area": [[145, 1, 1, "", "AreaReceiver"], [145, 4, 1, "", "get_area_and_density"]], "kqcircuits.util.area.AreaReceiver": [[145, 2, 1, "", "put"]], "kqcircuits.util.count_instances": [[146, 4, 1, "", "count_instances_in_cell"]], "kqcircuits.util.coupler_lib": [[147, 4, 1, "", "cap_params"]], "kqcircuits.util.deep_delete": [[148, 4, 1, "", "deep_delete_all"], [148, 4, 1, "", "deep_delete_pcells"]], "kqcircuits.util.defaults_helper": [[149, 4, 1, "", "find_ansys_executable"]], "kqcircuits.util.dependencies": [[150, 4, 1, "", "install_kqc_gui_dependencies"]], "kqcircuits.util.edit_node_plugin": [[151, 1, 1, "", "EditNodePlugin"], [151, 1, 1, "", "EditNodePluginFactory"]], "kqcircuits.util.edit_node_plugin.EditNodePlugin": [[151, 2, 1, "", "activated"], [151, 2, 1, "", "create_dialog"], [151, 2, 1, "", "deactivated"], [151, 2, 1, "", "deselect"], [151, 2, 1, "", "has_tracking_position"], [151, 2, 1, "", "mouse_click_event"], [151, 2, 1, "", "mouse_moved_event"], [151, 2, 1, "", "select"], [151, 2, 1, "", "tracking_position"], [151, 2, 1, "", "update"], [151, 2, 1, "", "update_form_from_node"], [151, 2, 1, "", "update_node_from_form"]], "kqcircuits.util.edit_node_plugin.EditNodePluginFactory": [[151, 2, 1, "", "create_plugin"]], "kqcircuits.util.export_helper": [[152, 4, 1, "", "create_or_empty_tmp_directory"], [152, 4, 1, "", "export_drc_report"], [152, 4, 1, "", "generate_probepoints_from_file"], [152, 4, 1, "", "generate_probepoints_json"], [152, 4, 1, "", "get_active_or_new_layout"], [152, 4, 1, "", "get_klayout_version"], [152, 4, 1, "", "get_simulation_directory"], [152, 4, 1, "", "open_with_klayout_or_default_application"], [152, 4, 1, "", "write_commit_reference_file"], [152, 4, 1, "", "write_export_machine_versions_file"]], "kqcircuits.util.geometry_helper": [[153, 4, 1, "", "arc_points"], [153, 4, 1, "", "bezier_points"], [153, 4, 1, "", "bspline_points"], [153, 4, 1, "", "circle_polygon"], [153, 4, 1, "", "get_angle"], [153, 4, 1, "", "get_cell_path_length"], [153, 4, 1, "", "get_direction"], [153, 4, 1, "", "get_object_path_length"], [153, 4, 1, "", "is_clockwise"], [153, 4, 1, "", "merge_points_and_match_on_edges"], [153, 4, 1, "", "point_shift_along_vector"], [153, 4, 1, "", "region_with_merged_points"], [153, 4, 1, "", "region_with_merged_polygons"], [153, 4, 1, "", "round_dpath_width"], [153, 4, 1, "", "simple_region"], [153, 4, 1, "", "vector_length_and_direction"]], "kqcircuits.util.geometry_json_encoder": [[154, 1, 1, "", "GeometryJsonDecoder"], [154, 1, 1, "", "GeometryJsonEncoder"], [154, 4, 1, "", "decode_dict_as_python_obj"], [154, 4, 1, "", "encode_python_obj_as_dict"]], "kqcircuits.util.geometry_json_encoder.GeometryJsonEncoder": [[154, 2, 1, "", "default"]], "kqcircuits.util.groundgrid": [[155, 4, 1, "", "make_grid"]], "kqcircuits.util.gui_helper": [[156, 4, 1, "", "get_all_node_elements"], [156, 4, 1, "", "get_nodes_near_position"], [156, 4, 1, "", "get_valid_node_elements"], [156, 4, 1, "", "node_from_text"], [156, 4, 1, "", "node_to_text"], [156, 4, 1, "", "replace_node"]], "kqcircuits.util.import_helper": [[157, 4, 1, "", "module_from_file"]], "kqcircuits.util.label": [[158, 1, 1, "", "LabelOrigin"], [158, 4, 1, "", "produce_label"]], "kqcircuits.util.label.LabelOrigin": [[158, 3, 1, "", "BOTTOMLEFT"], [158, 3, 1, "", "BOTTOMRIGHT"], [158, 3, 1, "", "TOPLEFT"], [158, 3, 1, "", "TOPRIGHT"]], "kqcircuits.util.label_polygons": [[159, 4, 1, "", "get_text_polygon"], [159, 4, 1, "", "load_font_polygons"]], "kqcircuits.util.layout_to_code": [[160, 4, 1, "", "convert_cells_to_code"], [160, 4, 1, "", "extract_pcell_data_from_views"], [160, 4, 1, "", "get_node_params"], [160, 4, 1, "", "restore_pcells_to_views"]], "kqcircuits.util.library_helper": [[161, 4, 1, "", "delete_all_libraries"], [161, 4, 1, "", "delete_library"], [161, 4, 1, "", "element_by_class_name"], [161, 4, 1, "", "get_library_paths"], [161, 4, 1, "", "load_libraries"], [161, 4, 1, "", "to_library_name"], [161, 4, 1, "", "to_module_name"]], "kqcircuits.util.log_router": [[162, 4, 1, "", "route_log"]], "kqcircuits.util.merge": [[163, 4, 1, "", "convert_child_instances_to_static"], [163, 4, 1, "", "merge_layers"], [163, 4, 1, "", "merge_layout_layers_on_face"]], "kqcircuits.util.netlist_extraction": [[164, 4, 1, "", "export_cell_netlist"], [164, 4, 1, "", "extract_circuits"], [164, 4, 1, "", "extract_nets"]], "kqcircuits.util.netlist_graph": [[165, 4, 1, "", "draw_graph"], [165, 4, 1, "", "network_as_graph"]], "kqcircuits.util.parameters": [[166, 1, 1, "", "Param"], [166, 4, 1, "", "add_parameter"], [166, 4, 1, "", "add_parameters_from"], [166, 1, 1, "", "pdt"]], "kqcircuits.util.parameters.Param": [[166, 2, 1, "", "get_all"]], "kqcircuits.util.parameters.pdt": [[166, 3, 1, "", "TypeBoolean"], [166, 3, 1, "", "TypeDouble"], [166, 3, 1, "", "TypeInt"], [166, 3, 1, "", "TypeLayer"], [166, 3, 1, "", "TypeList"], [166, 3, 1, "", "TypeNone"], [166, 3, 1, "", "TypeShape"], [166, 3, 1, "", "TypeString"]], "kqcircuits.util.plugin_startup": [[167, 4, 1, "", "register_plugins"]], "kqcircuits.util.refpoints": [[168, 1, 1, "", "JunctionSimPort"], [168, 1, 1, "", "RefpointToEdgePort"], [168, 1, 1, "", "RefpointToInternalPort"], [168, 1, 1, "", "RefpointToSimPort"], [168, 1, 1, "", "Refpoints"], [168, 1, 1, "", "WaveguideToSimPort"]], "kqcircuits.util.refpoints.JunctionSimPort": [[168, 3, 1, "", "face"], [168, 3, 1, "", "floating"], [168, 3, 1, "", "other_refpoint"], [168, 3, 1, "", "refpoint"]], "kqcircuits.util.refpoints.RefpointToSimPort": [[168, 3, 1, "", "face"], [168, 3, 1, "", "refpoint"]], "kqcircuits.util.refpoints.Refpoints": [[168, 3, 1, "", "cell"], [168, 2, 1, "", "dict"], [168, 2, 1, "", "items"], [168, 2, 1, "", "keys"], [168, 3, 1, "", "layer"], [168, 3, 1, "", "rec_levels"], [168, 3, 1, "", "trans"], [168, 2, 1, "", "values"]], "kqcircuits.util.refpoints.WaveguideToSimPort": [[168, 3, 1, "", "a"], [168, 3, 1, "", "airbridge"], [168, 3, 1, "", "b"], [168, 3, 1, "", "face"], [168, 3, 1, "", "over_etching"], [168, 3, 1, "", "refpoint"], [168, 3, 1, "", "side"], [168, 3, 1, "", "term1"], [168, 3, 1, "", "towards"], [168, 3, 1, "", "turn_radius"], [168, 3, 1, "", "use_internal_ports"], [168, 3, 1, "", "waveguide_length"]], "kqcircuits.util.replace_junctions": [[169, 1, 1, "", "JunctionEntry"], [169, 4, 1, "", "check_static_cell_has_junctions"], [169, 4, 1, "", "convert_cells_to_static"], [169, 4, 1, "", "copy_one_layer_of_cell"], [169, 4, 1, "", "extract_junctions"], [169, 4, 1, "", "get_tuned_junction_json"], [169, 4, 1, "", "place_junctions"], [169, 4, 1, "", "replace_squid"], [169, 4, 1, "", "replace_squids"]], "kqcircuits.util.symmetric_polygons": [[170, 4, 1, "", "polygon_with_hsym"], [170, 4, 1, "", "polygon_with_sym"], [170, 4, 1, "", "polygon_with_vsym"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function", "5": "py:property", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"about": 0, "api": 1, "document": [1, 176, 181], "modul": [1, 2, 28, 30, 40, 44, 51, 59, 69, 78, 81, 87, 95, 105, 106, 109, 118, 122, 134, 137, 144, 179], "content": [1, 2, 28, 30, 40, 44, 51, 59, 69, 78, 81, 87, 95, 105, 106, 109, 118, 122, 134, 137, 144], "kqcircuit": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 179, 183, 192], "chip": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 183, 191, 192], "airbridge_cross": 3, "airbridge_dc_test": 4, "crossing_twofac": 6, "daisy_woven": 7, "dc_test": 8, "demo": 9, "demo_twofac": 10, "empti": 11, "junction_test": 12, "junction_test2": 13, "launcher": [14, 49], "lithography_test": 15, "lithography_test_twofac": 16, "munch_qubit": 17, "quality_factor": 18, "quality_factor_twofac": 19, "sample_holder_test": 20, "shape": 21, "simpl": 22, "single_xmon": 23, "stripe": 24, "tsv_test": 25, "xmons_direct_coupl": 26, "default": 27, "element": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 173, 183, 187, 192, 197], "airbridge_connect": 29, "airbridg": [30, 31, 32, 33], "airbridge_multi_fac": 32, "airbridge_rectangular": 33, "capacitive_x_coupl": 34, "chip_fram": 35, "circular_capacitor": [36, 100], "finger_capacitor_squar": 38, "finger_capacitor_tap": 39, "flip_chip_connector": [40, 41, 42, 43], "flip_chip_connector_dc": 42, "flip_chip_connector_rf": 43, "fluxlin": [44, 45, 46, 47], "fluxline_standard": 46, "fluxline_straight": 47, "hanger_reson": 48, "launcher_dc": 50, "marker": [51, 52, 53, 54], "marker_standard": 53, "mask_marker_fc": 54, "meander": 55, "quarter_wave_cpw_reson": 56, "smooth_capacitor": [57, 102], "spiral_resonator_polygon": 58, "tsv": [59, 60, 61, 62], "tsv_ellips": 61, "tsv_standard": 62, "waveguide_composit": 63, "waveguide_coplanar": 64, "waveguide_coplanar_curv": 65, "waveguide_coplanar_splitt": 66, "waveguide_coplanar_straight": 67, "waveguide_coplanar_tap": 68, "junction": [69, 70, 71, 72, 73, 74, 75], "manhattan": 71, "manhattan_single_junct": 72, "no_squid": 73, "sim": 74, "squid": 75, "klayout_view": 76, "layer_clust": 77, "layer_config": [78, 79, 80], "default_layer_config": 79, "example_layer_config": 80, "mask": [81, 82, 83, 84, 85, 191], "mask_export": 82, "mask_layout": 83, "mask_set": 84, "multi_face_mask_layout": 85, "pya_resolv": 86, "qubit": [87, 88, 89, 90, 91, 92, 93], "circular_transmon_single_island": 88, "concentric_transmon": 89, "double_pad": 90, "double_pads_splin": 91, "swissmon": [93, 103], "run": [94, 190, 194], "simul": [95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 193, 196, 197, 199], "airbridges_sim": 96, "cross_section_simul": 97, "empty_simul": 98, "epr": [99, 100, 101, 102, 103, 104], "exampl": [101, 190, 192], "util": [104, 121, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 186], "export": [105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 191, 194, 195, 198], "ansi": [106, 107, 108, 198], "ansys_export": 107, "ansys_solut": 108, "elmer": [109, 110, 111, 193, 195, 198], "elmer_export": 110, "elmer_solut": 111, "export_and_run": 112, "export_singular": 113, "remote_export_and_run": 114, "simulation_export": 115, "simulation_valid": 116, "solut": 117, "sonnet": [118, 119, 120, 198], "parser": 119, "sonnet_export": 120, "xsection": [122, 123, 124, 202], "epr_correction_export": 123, "xsection_export": 124, "partition_region": 125, "port": [126, 197], "post_process": 127, "single_element_simul": 129, "single_xmons_full_chip_sim": 130, "waveguides_sim": 131, "xmons_direct_coupling_full_chip_sim": 132, "xmons_direct_coupling_sim": 133, "test_structur": [134, 135, 136, 137, 138, 139, 140, 141, 142, 143], "airbridge_dc": 135, "cross_test": 136, "junction_test_pad": [137, 138, 139], "junction_test_pads_simpl": 139, "stripes_test": 140, "stripes_test_increasing_width": 141, "tsv_test_pattern": 143, "area": 145, "count_inst": 146, "coupler_lib": 147, "deep_delet": 148, "defaults_help": 149, "depend": [150, 178, 179], "edit_node_plugin": 151, "export_help": 152, "geometry_help": 153, "geometry_json_encod": 154, "groundgrid": 155, "gui_help": 156, "import_help": 157, "label": 158, "label_polygon": 159, "layout_to_cod": 160, "library_help": 161, "log_rout": 162, "merg": 163, "netlist_extract": 164, "netlist_graph": 165, "paramet": [166, 173, 187, 192, 196], "plugin_startup": 167, "refpoint": [168, 192], "replace_junct": 169, "symmetric_polygon": 170, "cite": 171, "contribut": 172, "version": [172, 182], "architectur": 173, "pcell": 173, "librari": [173, 190, 192], "pya": 173, "resolv": 173, "code": [174, 187, 192, 202], "style": 174, "contain": 175, "cli": 175, "usag": [175, 179, 201], "docker": 175, "ci": 175, "singular": 175, "develop": [177, 178, 179, 190], "guid": [177, 189], "gui": [178, 187, 198, 202], "setup": [178, 179], "prerequisit": [178, 179], "python": [178, 179, 182, 192], "sourc": 178, "instal": [178, 179, 182, 183], "unlink": 178, "updat": [178, 179], "secondari": 178, "manual": [178, 182], "symlink": 178, "linux": 178, "maco": 178, "window": 178, "standalon": 179, "1": 179, "basic": [179, 191], "2": 179, "reproduc": 179, "secur": 179, "3": 179, "exclus": 179, "environ": 179, "extens": 179, "pypi": 179, "jupyt": 179, "notebook": 179, "requir": 179, "test": 180, "unit": 180, "kqc": [181, 202], "logo": 181, "indic": 181, "tabl": 181, "klayout": [182, 190, 198, 202], "known": 182, "issu": 182, "differ": 182, "packag": [182, 183], "get": 183, "start": 183, "salt": 183, "first": [183, 190], "look": 183, "around": 183, "set": 183, "up": 183, "user": [183, 189], "directori": 183, "defin": [183, 192], "custom": 183, "upgrad": 183, "remov": 183, "releas": 183, "note": 183, "support": 184, "trademark": 185, "gener": [186, 197], "structur": [186, 192], "miscellan": 186, "file": [186, 192, 202], "system": [186, 192], "hierarchi": [186, 192], "featur": [187, 196], "us": [187, 190], "hotkei": 187, "introduct": 187, "place": 187, "modifi": [187, 191], "waveguid": 187, "edit": 187, "waveguidecomposit": 187, "node": 187, "convert": 187, "menu": 187, "command": 187, "point": 188, "click": 188, "workflow": [188, 192, 193], "tutori": [188, 191, 192], "macro": 190, "interact": 190, "applic": 190, "creat": [190, 202], "new": [190, 192], "panel": 190, "access": 190, "current": 190, "activ": 190, "klayoutview": 190, "debugg": 190, "reload": 190, "script": 191, "ground": 191, "grid": 191, "ad": [191, 192], "multi": 191, "face": [191, 192, 197], "composit": 191, "map": 191, "class": [192, 197], "build": 192, "an": 192, "insert": 192, "samplehold": 192, "type": 192, "layer": 192, "configur": 192, "open": 192, "from": [192, 198], "id": 192, "remot": 193, "one": 194, "line": 194, "gmsh": 195, "": 196, "matrix": 196, "capacit": 196, "eigenmod": 196, "energi": 196, "integr": 196, "particip": 196, "ratio": 196, "cross": [196, 202], "section": [196, 202], "pyepr": 196, "object": 197, "The": 197, "box": 197, "stack": 197, "subclass": 197, "singl": 197, "geometri": [197, 198], "sweep": 197, "function": 198, "extern": 199, "tool": [199, 202], "terminologi": 200, "imag": 202, "call": 202, "process": 202, "x": 202}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"About": [[0, "about"]], "API documentation": [[1, "api-documentation"]], "Module contents": [[1, "module-kqcircuits"], [2, "module-kqcircuits.chips"], [28, "module-kqcircuits.elements"], [30, "module-kqcircuits.elements.airbridges"], [40, "module-kqcircuits.elements.flip_chip_connectors"], [44, "module-kqcircuits.elements.fluxlines"], [51, "module-kqcircuits.elements.markers"], [59, "module-kqcircuits.elements.tsvs"], [69, "module-kqcircuits.junctions"], [78, "module-kqcircuits.layer_config"], [81, "module-kqcircuits.masks"], [87, "module-kqcircuits.qubits"], [95, "module-kqcircuits.simulations"], [105, "module-kqcircuits.simulations.export"], [106, "module-kqcircuits.simulations.export.ansys"], [109, "module-kqcircuits.simulations.export.elmer"], [118, "module-kqcircuits.simulations.export.sonnet"], [122, "module-kqcircuits.simulations.export.xsection"], [134, "module-kqcircuits.test_structures"], [137, "module-kqcircuits.test_structures.junction_test_pads"], [144, "module-kqcircuits.util"]], "kqcircuits.chips": [[2, "kqcircuits-chips"]], "kqcircuits.chips.airbridge_crossings": [[3, "module-kqcircuits.chips.airbridge_crossings"]], "kqcircuits.chips.airbridge_dc_test": [[4, "module-kqcircuits.chips.airbridge_dc_test"]], "kqcircuits.chips.chip": [[5, "module-kqcircuits.chips.chip"]], "kqcircuits.chips.crossing_twoface": [[6, "module-kqcircuits.chips.crossing_twoface"]], "kqcircuits.chips.daisy_woven": [[7, "module-kqcircuits.chips.daisy_woven"]], "kqcircuits.chips.dc_test": [[8, "module-kqcircuits.chips.dc_test"]], "kqcircuits.chips.demo": [[9, "module-kqcircuits.chips.demo"]], "kqcircuits.chips.demo_twoface": [[10, "module-kqcircuits.chips.demo_twoface"]], "kqcircuits.chips.empty": [[11, "module-kqcircuits.chips.empty"]], "kqcircuits.chips.junction_test": [[12, "module-kqcircuits.chips.junction_test"]], "kqcircuits.chips.junction_test2": [[13, "module-kqcircuits.chips.junction_test2"]], "kqcircuits.chips.launchers": [[14, "module-kqcircuits.chips.launchers"]], "kqcircuits.chips.lithography_test": [[15, "module-kqcircuits.chips.lithography_test"]], "kqcircuits.chips.lithography_test_twoface": [[16, "module-kqcircuits.chips.lithography_test_twoface"]], "kqcircuits.chips.munch_qubits": [[17, "module-kqcircuits.chips.munch_qubits"]], "kqcircuits.chips.quality_factor": [[18, "module-kqcircuits.chips.quality_factor"]], "kqcircuits.chips.quality_factor_twoface": [[19, "module-kqcircuits.chips.quality_factor_twoface"]], "kqcircuits.chips.sample_holder_test": [[20, "module-kqcircuits.chips.sample_holder_test"]], "kqcircuits.chips.shaping": [[21, "module-kqcircuits.chips.shaping"]], "kqcircuits.chips.simple": [[22, "module-kqcircuits.chips.simple"]], "kqcircuits.chips.single_xmons": [[23, "module-kqcircuits.chips.single_xmons"]], "kqcircuits.chips.stripes": [[24, "module-kqcircuits.chips.stripes"]], "kqcircuits.chips.tsv_test": [[25, "module-kqcircuits.chips.tsv_test"]], "kqcircuits.chips.xmons_direct_coupling": [[26, "module-kqcircuits.chips.xmons_direct_coupling"]], "kqcircuits.defaults": [[27, "module-kqcircuits.defaults"]], "kqcircuits.elements": [[28, "kqcircuits-elements"]], "kqcircuits.elements.airbridge_connection": [[29, "module-kqcircuits.elements.airbridge_connection"]], "kqcircuits.elements.airbridges": [[30, "kqcircuits-elements-airbridges"]], "kqcircuits.elements.airbridges.airbridge": [[31, "module-kqcircuits.elements.airbridges.airbridge"]], "kqcircuits.elements.airbridges.airbridge_multi_face": [[32, "module-kqcircuits.elements.airbridges.airbridge_multi_face"]], "kqcircuits.elements.airbridges.airbridge_rectangular": [[33, "module-kqcircuits.elements.airbridges.airbridge_rectangular"]], "kqcircuits.elements.capacitive_x_coupler": [[34, "module-kqcircuits.elements.capacitive_x_coupler"]], "kqcircuits.elements.chip_frame": [[35, "module-kqcircuits.elements.chip_frame"]], "kqcircuits.elements.circular_capacitor": [[36, "module-kqcircuits.elements.circular_capacitor"]], "kqcircuits.elements.element": [[37, "module-kqcircuits.elements.element"]], "kqcircuits.elements.finger_capacitor_square": [[38, "module-kqcircuits.elements.finger_capacitor_square"]], "kqcircuits.elements.finger_capacitor_taper": [[39, "module-kqcircuits.elements.finger_capacitor_taper"]], "kqcircuits.elements.flip_chip_connectors": [[40, "kqcircuits-elements-flip-chip-connectors"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector": [[41, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc": [[42, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf": [[43, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf"]], "kqcircuits.elements.fluxlines": [[44, "kqcircuits-elements-fluxlines"]], "kqcircuits.elements.fluxlines.fluxline": [[45, "module-kqcircuits.elements.fluxlines.fluxline"]], "kqcircuits.elements.fluxlines.fluxline_standard": [[46, "module-kqcircuits.elements.fluxlines.fluxline_standard"]], "kqcircuits.elements.fluxlines.fluxline_straight": [[47, "module-kqcircuits.elements.fluxlines.fluxline_straight"]], "kqcircuits.elements.hanger_resonator": [[48, "module-kqcircuits.elements.hanger_resonator"]], "kqcircuits.elements.launcher": [[49, "module-kqcircuits.elements.launcher"]], "kqcircuits.elements.launcher_dc": [[50, "module-kqcircuits.elements.launcher_dc"]], "kqcircuits.elements.markers": [[51, "kqcircuits-elements-markers"]], "kqcircuits.elements.markers.marker": [[52, "module-kqcircuits.elements.markers.marker"]], "kqcircuits.elements.markers.marker_standard": [[53, "module-kqcircuits.elements.markers.marker_standard"]], "kqcircuits.elements.markers.mask_marker_fc": [[54, "module-kqcircuits.elements.markers.mask_marker_fc"]], "kqcircuits.elements.meander": [[55, "module-kqcircuits.elements.meander"]], "kqcircuits.elements.quarter_wave_cpw_resonator": [[56, "module-kqcircuits.elements.quarter_wave_cpw_resonator"]], "kqcircuits.elements.smooth_capacitor": [[57, "module-kqcircuits.elements.smooth_capacitor"]], "kqcircuits.elements.spiral_resonator_polygon": [[58, "module-kqcircuits.elements.spiral_resonator_polygon"]], "kqcircuits.elements.tsvs": [[59, "kqcircuits-elements-tsvs"]], "kqcircuits.elements.tsvs.tsv": [[60, "module-kqcircuits.elements.tsvs.tsv"]], "kqcircuits.elements.tsvs.tsv_ellipse": [[61, "module-kqcircuits.elements.tsvs.tsv_ellipse"]], "kqcircuits.elements.tsvs.tsv_standard": [[62, "module-kqcircuits.elements.tsvs.tsv_standard"]], "kqcircuits.elements.waveguide_composite": [[63, "module-kqcircuits.elements.waveguide_composite"]], "kqcircuits.elements.waveguide_coplanar": [[64, "module-kqcircuits.elements.waveguide_coplanar"]], "kqcircuits.elements.waveguide_coplanar_curved": [[65, "module-kqcircuits.elements.waveguide_coplanar_curved"]], "kqcircuits.elements.waveguide_coplanar_splitter": [[66, "module-kqcircuits.elements.waveguide_coplanar_splitter"]], "kqcircuits.elements.waveguide_coplanar_straight": [[67, "module-kqcircuits.elements.waveguide_coplanar_straight"]], "kqcircuits.elements.waveguide_coplanar_taper": [[68, "module-kqcircuits.elements.waveguide_coplanar_taper"]], "kqcircuits.junctions": [[69, "kqcircuits-junctions"]], "kqcircuits.junctions.junction": [[70, "module-kqcircuits.junctions.junction"]], "kqcircuits.junctions.manhattan": [[71, "module-kqcircuits.junctions.manhattan"]], "kqcircuits.junctions.manhattan_single_junction": [[72, "module-kqcircuits.junctions.manhattan_single_junction"]], "kqcircuits.junctions.no_squid": [[73, "module-kqcircuits.junctions.no_squid"]], "kqcircuits.junctions.sim": [[74, "module-kqcircuits.junctions.sim"]], "kqcircuits.junctions.squid": [[75, "module-kqcircuits.junctions.squid"]], "kqcircuits.klayout_view": [[76, "module-kqcircuits.klayout_view"]], "kqcircuits.layer_cluster": [[77, "module-kqcircuits.layer_cluster"]], "kqcircuits.layer_config": [[78, "kqcircuits-layer-config"]], "kqcircuits.layer_config.default_layer_config": [[79, "module-kqcircuits.layer_config.default_layer_config"]], "kqcircuits.layer_config.example_layer_config": [[80, "module-kqcircuits.layer_config.example_layer_config"]], "kqcircuits.masks": [[81, "kqcircuits-masks"]], "kqcircuits.masks.mask_export": [[82, "module-kqcircuits.masks.mask_export"]], "kqcircuits.masks.mask_layout": [[83, "module-kqcircuits.masks.mask_layout"]], "kqcircuits.masks.mask_set": [[84, "module-kqcircuits.masks.mask_set"]], "kqcircuits.masks.multi_face_mask_layout": [[85, "module-kqcircuits.masks.multi_face_mask_layout"]], "kqcircuits.pya_resolver": [[86, "module-kqcircuits.pya_resolver"]], "kqcircuits.qubits": [[87, "kqcircuits-qubits"]], "kqcircuits.qubits.circular_transmon_single_island": [[88, "module-kqcircuits.qubits.circular_transmon_single_island"]], "kqcircuits.qubits.concentric_transmon": [[89, "module-kqcircuits.qubits.concentric_transmon"]], "kqcircuits.qubits.double_pads": [[90, "module-kqcircuits.qubits.double_pads"]], "kqcircuits.qubits.double_pads_splines": [[91, "module-kqcircuits.qubits.double_pads_splines"]], "kqcircuits.qubits.qubit": [[92, "module-kqcircuits.qubits.qubit"]], "kqcircuits.qubits.swissmon": [[93, "module-kqcircuits.qubits.swissmon"]], "kqcircuits.run": [[94, "module-kqcircuits.run"]], "kqcircuits.simulations": [[95, "kqcircuits-simulations"]], "kqcircuits.simulations.airbridges_sim": [[96, "module-kqcircuits.simulations.airbridges_sim"]], "kqcircuits.simulations.cross_section_simulation": [[97, "module-kqcircuits.simulations.cross_section_simulation"]], "kqcircuits.simulations.empty_simulation": [[98, "module-kqcircuits.simulations.empty_simulation"]], "kqcircuits.simulations.epr": [[99, "kqcircuits-simulations-epr"]], "kqcircuits.simulations.epr.circular_capacitor": [[100, "module-kqcircuits.simulations.epr.circular_capacitor"]], "kqcircuits.simulations.epr.example": [[101, "module-kqcircuits.simulations.epr.example"]], "kqcircuits.simulations.epr.smooth_capacitor": [[102, "module-kqcircuits.simulations.epr.smooth_capacitor"]], "kqcircuits.simulations.epr.swissmon": [[103, "module-kqcircuits.simulations.epr.swissmon"]], "kqcircuits.simulations.epr.utils": [[104, "module-kqcircuits.simulations.epr.utils"]], "kqcircuits.simulations.export": [[105, "kqcircuits-simulations-export"]], "kqcircuits.simulations.export.ansys": [[106, "kqcircuits-simulations-export-ansys"]], "kqcircuits.simulations.export.ansys.ansys_export": [[107, "module-kqcircuits.simulations.export.ansys.ansys_export"]], "kqcircuits.simulations.export.ansys.ansys_solution": [[108, "module-kqcircuits.simulations.export.ansys.ansys_solution"]], "kqcircuits.simulations.export.elmer": [[109, "kqcircuits-simulations-export-elmer"]], "kqcircuits.simulations.export.elmer.elmer_export": [[110, "module-kqcircuits.simulations.export.elmer.elmer_export"]], "kqcircuits.simulations.export.elmer.elmer_solution": [[111, "module-kqcircuits.simulations.export.elmer.elmer_solution"]], "kqcircuits.simulations.export.export_and_run": [[112, "module-kqcircuits.simulations.export.export_and_run"]], "kqcircuits.simulations.export.export_singularity": [[113, "module-kqcircuits.simulations.export.export_singularity"]], "kqcircuits.simulations.export.remote_export_and_run": [[114, "module-kqcircuits.simulations.export.remote_export_and_run"]], "kqcircuits.simulations.export.simulation_export": [[115, "module-kqcircuits.simulations.export.simulation_export"]], "kqcircuits.simulations.export.simulation_validate": [[116, "module-kqcircuits.simulations.export.simulation_validate"]], "kqcircuits.simulations.export.solution": [[117, "module-kqcircuits.simulations.export.solution"]], "kqcircuits.simulations.export.sonnet": [[118, "kqcircuits-simulations-export-sonnet"]], "kqcircuits.simulations.export.sonnet.parser": [[119, "module-kqcircuits.simulations.export.sonnet.parser"]], "kqcircuits.simulations.export.sonnet.sonnet_export": [[120, "module-kqcircuits.simulations.export.sonnet.sonnet_export"]], "kqcircuits.simulations.export.util": [[121, "module-kqcircuits.simulations.export.util"]], "kqcircuits.simulations.export.xsection": [[122, "kqcircuits-simulations-export-xsection"]], "kqcircuits.simulations.export.xsection.epr_correction_export": [[123, "module-kqcircuits.simulations.export.xsection.epr_correction_export"]], "kqcircuits.simulations.export.xsection.xsection_export": [[124, "module-kqcircuits.simulations.export.xsection.xsection_export"]], "kqcircuits.simulations.partition_region": [[125, "module-kqcircuits.simulations.partition_region"]], "kqcircuits.simulations.port": [[126, "module-kqcircuits.simulations.port"]], "kqcircuits.simulations.post_process": [[127, "module-kqcircuits.simulations.post_process"]], "kqcircuits.simulations.simulation": [[128, "module-kqcircuits.simulations.simulation"]], "kqcircuits.simulations.single_element_simulation": [[129, "module-kqcircuits.simulations.single_element_simulation"]], "kqcircuits.simulations.single_xmons_full_chip_sim": [[130, "module-kqcircuits.simulations.single_xmons_full_chip_sim"]], "kqcircuits.simulations.waveguides_sim": [[131, "module-kqcircuits.simulations.waveguides_sim"]], "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim": [[132, "module-kqcircuits.simulations.xmons_direct_coupling_full_chip_sim"]], "kqcircuits.simulations.xmons_direct_coupling_sim": [[133, "module-kqcircuits.simulations.xmons_direct_coupling_sim"]], "kqcircuits.test_structures": [[134, "kqcircuits-test-structures"]], "kqcircuits.test_structures.airbridge_dc": [[135, "module-kqcircuits.test_structures.airbridge_dc"]], "kqcircuits.test_structures.cross_test": [[136, "module-kqcircuits.test_structures.cross_test"]], "kqcircuits.test_structures.junction_test_pads": [[137, "kqcircuits-test-structures-junction-test-pads"]], "kqcircuits.test_structures.junction_test_pads.junction_test_pads": [[138, "module-kqcircuits.test_structures.junction_test_pads.junction_test_pads"]], "kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple": [[139, "module-kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple"]], "kqcircuits.test_structures.stripes_test": [[140, "module-kqcircuits.test_structures.stripes_test"]], "kqcircuits.test_structures.stripes_test_increasing_width": [[141, "module-kqcircuits.test_structures.stripes_test_increasing_width"]], "kqcircuits.test_structures.test_structure": [[142, "module-kqcircuits.test_structures.test_structure"]], "kqcircuits.test_structures.tsv_test_pattern": [[143, "module-kqcircuits.test_structures.tsv_test_pattern"]], "kqcircuits.util": [[144, "kqcircuits-util"]], "kqcircuits.util.area": [[145, "module-kqcircuits.util.area"]], "kqcircuits.util.count_instances": [[146, "module-kqcircuits.util.count_instances"]], "kqcircuits.util.coupler_lib": [[147, "module-kqcircuits.util.coupler_lib"]], "kqcircuits.util.deep_delete": [[148, "module-kqcircuits.util.deep_delete"]], "kqcircuits.util.defaults_helper": [[149, "module-kqcircuits.util.defaults_helper"]], "kqcircuits.util.dependencies": [[150, "module-kqcircuits.util.dependencies"]], "kqcircuits.util.edit_node_plugin": [[151, "module-kqcircuits.util.edit_node_plugin"]], "kqcircuits.util.export_helper": [[152, "module-kqcircuits.util.export_helper"]], "kqcircuits.util.geometry_helper": [[153, "module-kqcircuits.util.geometry_helper"]], "kqcircuits.util.geometry_json_encoder": [[154, "module-kqcircuits.util.geometry_json_encoder"]], "kqcircuits.util.groundgrid": [[155, "module-kqcircuits.util.groundgrid"]], "kqcircuits.util.gui_helper": [[156, "module-kqcircuits.util.gui_helper"]], "kqcircuits.util.import_helper": [[157, "module-kqcircuits.util.import_helper"]], "kqcircuits.util.label": [[158, "module-kqcircuits.util.label"]], "kqcircuits.util.label_polygons": [[159, "module-kqcircuits.util.label_polygons"]], "kqcircuits.util.layout_to_code": [[160, "module-kqcircuits.util.layout_to_code"]], "kqcircuits.util.library_helper": [[161, "module-kqcircuits.util.library_helper"]], "kqcircuits.util.log_router": [[162, "module-kqcircuits.util.log_router"]], "kqcircuits.util.merge": [[163, "module-kqcircuits.util.merge"]], "kqcircuits.util.netlist_extraction": [[164, "module-kqcircuits.util.netlist_extraction"]], "kqcircuits.util.netlist_graph": [[165, "module-kqcircuits.util.netlist_graph"]], "kqcircuits.util.parameters": [[166, "module-kqcircuits.util.parameters"]], "kqcircuits.util.plugin_startup": [[167, "module-kqcircuits.util.plugin_startup"]], "kqcircuits.util.refpoints": [[168, "module-kqcircuits.util.refpoints"]], "kqcircuits.util.replace_junctions": [[169, "module-kqcircuits.util.replace_junctions"]], "kqcircuits.util.symmetric_polygons": [[170, "module-kqcircuits.util.symmetric_polygons"]], "Citing": [[171, "citing"]], "Contributing": [[172, "contributing"]], "Versioning": [[172, "versioning"]], "Architecture": [[173, "architecture"]], "Elements": [[173, "elements"]], "PCell parameters": [[173, "pcell-parameters"]], "Libraries": [[173, "libraries"], [192, "libraries"]], "pya resolver": [[173, "pya-resolver"]], "Coding Style": [[174, "coding-style"]], "Containers": [[175, "containers"]], "CLI usage": [[175, "cli-usage"]], "Docker CI usage": [[175, "docker-ci-usage"]], "Singularity usage": [[175, "singularity-usage"]], "Documentation": [[176, "documentation"], [181, "documentation"]], "Developer Guide": [[177, "developer-guide"]], "Developer GUI Setup": [[178, "developer-gui-setup"]], "Prerequisites": [[178, "prerequisites"], [179, "prerequisites"]], "Python": [[178, "python"]], "Sources": [[178, "sources"]], "Install": [[178, "install"]], "Unlinking": [[178, "unlinking"]], "Update": [[178, "update"]], "Secondary install": [[178, "secondary-install"]], "Manual installation": [[178, "manual-installation"]], "Symlinks in Linux or MacOS": [[178, "symlinks-in-linux-or-macos"]], "Symlinks in Windows": [[178, "symlinks-in-windows"]], "Installing dependencies": [[178, "installing-dependencies"]], "Developer Standalone module Setup": [[179, "developer-standalone-module-setup"]], "Installation": [[179, "installation"], [182, "installation"]], "1. Basic installation": [[179, "basic-installation"]], "2. Reproducible, Secure Installation": [[179, "reproducible-secure-installation"]], "3. KQCircuits exclusive python environment": [[179, "kqcircuits-exclusive-python-environment"]], "Dependency extensions": [[179, "dependency-extensions"]], "PyPI Installation": [[179, "pypi-installation"]], "Usage": [[179, "usage"], [201, "usage"]], "Jupyter notebook usage": [[179, "jupyter-notebook-usage"]], "Updating the required dependencies": [[179, "updating-the-required-dependencies"]], "Testing": [[180, "testing"]], "Unit tests": [[180, "unit-tests"]], "KQC logo": [[181, "logo"]], "Indices and tables": [[181, "indices-and-tables"]], "KLayout": [[182, "klayout"]], "Known installation issues": [[182, "known-installation-issues"]], "Installing different Python package versions to KLayout manually": [[182, "installing-different-python-package-versions-to-klayout-manually"]], "Getting started (Salt package)": [[183, "getting-started-salt-package"]], "Installing KQCircuits Salt Package": [[183, "installing-kqcircuits-salt-package"]], "First look around": [[183, "first-look-around"]], "Setting up a user package directory": [[183, "setting-up-a-user-package-directory"]], "Defining a custom element": [[183, "defining-a-custom-element"]], "Defining a custom chip": [[183, "defining-a-custom-chip"]], "Upgrading or Removing Salt Package": [[183, "upgrading-or-removing-salt-package"]], "Release Notes": [[183, "release-notes"]], "Support": [[184, "support"]], "Trademarks": [[185, "trademarks"]], "General Structure and Miscellaneous Utilities": [[186, "general-structure-and-miscellaneous-utilities"]], "File system hierarchy": [[186, "file-system-hierarchy"], [192, "file-system-hierarchy"]], "Miscellaneous Utilities": [[186, "miscellaneous-utilities"]], "GUI Features": [[187, "gui-features"]], "Useful hotkeys": [[187, "useful-hotkeys"]], "Introduction to Elements": [[187, "introduction-to-elements"]], "Placing Elements": [[187, "placing-elements"]], "Modifying Element parameters": [[187, "modifying-element-parameters"]], "Modifying waveguides": [[187, "modifying-waveguides"]], "Editing WaveguideComposite Nodes": [[187, "editing-waveguidecomposite-nodes"]], "Converting elements placed in GUI into code": [[187, "converting-elements-placed-in-gui-into-code"]], "Useful Menu Commands": [[187, "useful-menu-commands"]], "Point-and-click workflow tutorial": [[188, "point-and-click-workflow-tutorial"]], "User Guide": [[189, "user-guide"]], "Macro development": [[190, "macro-development"]], "Running the first example": [[190, "running-the-first-example"]], "Interacting with the KLayout application": [[190, "interacting-with-the-klayout-application"]], "Creating a new panel": [[190, "creating-a-new-panel"]], "Accessing the currently active panel": [[190, "accessing-the-currently-active-panel"]], "Using KLayoutView": [[190, "using-klayoutview"]], "Debugger": [[190, "debugger"]], "Reloading libraries": [[190, "reloading-libraries"]], "Examples": [[190, "examples"]], "Mask export": [[191, "mask-export"]], "Tutorial": [[191, "tutorial"]], "Basic mask script and export": [[191, "basic-mask-script-and-export"]], "Ground grid": [[191, "ground-grid"]], "Adding and modifying chips": [[191, "adding-and-modifying-chips"]], "Multi-face masks": [[191, "multi-face-masks"]], "Composite mask maps": [[191, "composite-mask-maps"]], "Python workflow tutorial": [[192, "python-workflow-tutorial"]], "Structure of Element code": [[192, "structure-of-element-code"]], "Element class": [[192, "element-class"]], "Parameters": [[192, "parameters"]], "Build": [[192, "build"]], "Example of defining an Element class": [[192, "example-of-defining-an-element-class"]], "Example of defining a Chip and inserting elements into it": [[192, "example-of-defining-a-chip-and-inserting-elements-into-it"]], "Defining sampleholder types": [[192, "defining-sampleholder-types"]], "Refpoints": [[192, "refpoints"]], "KQCircuits\u2019 Layers": [[192, "kqcircuits-layers"]], "Faces": [[192, "faces"]], "Layer configuration files": [[192, "layer-configuration-files"]], "Adding a new face": [[192, "adding-a-new-face"]], "Opening Element or Chip from an IDE": [[192, "opening-element-or-chip-from-an-ide"]], "Elmer remote simulations workflow": [[193, "elmer-remote-simulations-workflow"]], "Run and export in one line": [[194, "run-and-export-in-one-line"]], "Gmsh/Elmer export": [[195, "gmsh-elmer-export"]], "Simulation features": [[196, "simulation-features"]], "S-parameter matrix": [[196, "s-parameter-matrix"]], "Capacitance matrix": [[196, "capacitance-matrix"]], "Eigenmode": [[196, "eigenmode"]], "Energy integrals and participation ratio": [[196, "energy-integrals-and-participation-ratio"]], "Cross-sectional simulations": [[196, "cross-sectional-simulations"]], "pyEPR": [[196, "pyepr"]], "Simulation objects": [[197, "simulation-objects"]], "The Simulation class": [[197, "the-simulation-class"]], "Box": [[197, "box"]], "Ports": [[197, "ports"]], "Face stack": [[197, "face-stack"]], "Simulation subclass": [[197, "simulation-subclass"]], "Single element subclass": [[197, "single-element-subclass"]], "General subclass": [[197, "general-subclass"]], "Geometry sweeps": [[197, "geometry-sweeps"]], "Export functions": [[198, "export-functions"]], "Ansys export": [[198, "ansys-export"]], "Elmer export": [[198, "elmer-export"]], "Sonnet export": [[198, "sonnet-export"]], "Geometry from Klayout GUI": [[198, "geometry-from-klayout-gui"]], "External simulation tools": [[199, "external-simulation-tools"]], "Terminology": [[200, "terminology"]], "Creating cross section images": [[202, "creating-cross-section-images"]], "KLayout GUI XSection tool": [[202, "klayout-gui-xsection-tool"]], "XSection call in KQC code": [[202, "xsection-call-in-kqc-code"]], "Process files (.xs)": [[202, "process-files-xs"]]}, "indexentries": {"kqcircuits": [[1, "module-kqcircuits"]], "module": [[1, "module-kqcircuits"], [2, "module-kqcircuits.chips"], [3, "module-kqcircuits.chips.airbridge_crossings"], [4, "module-kqcircuits.chips.airbridge_dc_test"], [5, "module-kqcircuits.chips.chip"], [6, "module-kqcircuits.chips.crossing_twoface"], [7, "module-kqcircuits.chips.daisy_woven"], [8, "module-kqcircuits.chips.dc_test"], [9, "module-kqcircuits.chips.demo"], [10, "module-kqcircuits.chips.demo_twoface"], [11, "module-kqcircuits.chips.empty"], [12, "module-kqcircuits.chips.junction_test"], [13, "module-kqcircuits.chips.junction_test2"], [14, "module-kqcircuits.chips.launchers"], [15, "module-kqcircuits.chips.lithography_test"], [16, "module-kqcircuits.chips.lithography_test_twoface"], [17, "module-kqcircuits.chips.munch_qubits"], [18, "module-kqcircuits.chips.quality_factor"], [19, "module-kqcircuits.chips.quality_factor_twoface"], [20, "module-kqcircuits.chips.sample_holder_test"], [21, "module-kqcircuits.chips.shaping"], [22, "module-kqcircuits.chips.simple"], [23, "module-kqcircuits.chips.single_xmons"], [24, "module-kqcircuits.chips.stripes"], [25, "module-kqcircuits.chips.tsv_test"], [26, "module-kqcircuits.chips.xmons_direct_coupling"], [27, "module-kqcircuits.defaults"], [28, "module-kqcircuits.elements"], [29, "module-kqcircuits.elements.airbridge_connection"], [30, "module-kqcircuits.elements.airbridges"], [31, "module-kqcircuits.elements.airbridges.airbridge"], [32, "module-kqcircuits.elements.airbridges.airbridge_multi_face"], [33, "module-kqcircuits.elements.airbridges.airbridge_rectangular"], [34, "module-kqcircuits.elements.capacitive_x_coupler"], [35, "module-kqcircuits.elements.chip_frame"], [36, "module-kqcircuits.elements.circular_capacitor"], [37, "module-kqcircuits.elements.element"], [38, "module-kqcircuits.elements.finger_capacitor_square"], [39, "module-kqcircuits.elements.finger_capacitor_taper"], [40, "module-kqcircuits.elements.flip_chip_connectors"], [41, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector"], [42, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc"], [43, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf"], [44, "module-kqcircuits.elements.fluxlines"], [45, "module-kqcircuits.elements.fluxlines.fluxline"], [46, "module-kqcircuits.elements.fluxlines.fluxline_standard"], [47, "module-kqcircuits.elements.fluxlines.fluxline_straight"], [48, "module-kqcircuits.elements.hanger_resonator"], [49, "module-kqcircuits.elements.launcher"], [50, "module-kqcircuits.elements.launcher_dc"], [51, "module-kqcircuits.elements.markers"], [52, "module-kqcircuits.elements.markers.marker"], [53, "module-kqcircuits.elements.markers.marker_standard"], [54, "module-kqcircuits.elements.markers.mask_marker_fc"], [55, "module-kqcircuits.elements.meander"], [56, "module-kqcircuits.elements.quarter_wave_cpw_resonator"], [57, "module-kqcircuits.elements.smooth_capacitor"], [58, "module-kqcircuits.elements.spiral_resonator_polygon"], [59, "module-kqcircuits.elements.tsvs"], [60, "module-kqcircuits.elements.tsvs.tsv"], [61, "module-kqcircuits.elements.tsvs.tsv_ellipse"], [62, "module-kqcircuits.elements.tsvs.tsv_standard"], [63, "module-kqcircuits.elements.waveguide_composite"], [64, "module-kqcircuits.elements.waveguide_coplanar"], [65, "module-kqcircuits.elements.waveguide_coplanar_curved"], [66, "module-kqcircuits.elements.waveguide_coplanar_splitter"], [67, "module-kqcircuits.elements.waveguide_coplanar_straight"], [68, "module-kqcircuits.elements.waveguide_coplanar_taper"], [69, "module-kqcircuits.junctions"], [70, "module-kqcircuits.junctions.junction"], [71, "module-kqcircuits.junctions.manhattan"], [72, "module-kqcircuits.junctions.manhattan_single_junction"], [73, "module-kqcircuits.junctions.no_squid"], [74, "module-kqcircuits.junctions.sim"], [75, "module-kqcircuits.junctions.squid"], [76, "module-kqcircuits.klayout_view"], [77, "module-kqcircuits.layer_cluster"], [78, "module-kqcircuits.layer_config"], [79, "module-kqcircuits.layer_config.default_layer_config"], [80, "module-kqcircuits.layer_config.example_layer_config"], [81, "module-kqcircuits.masks"], [82, "module-kqcircuits.masks.mask_export"], [83, "module-kqcircuits.masks.mask_layout"], [84, "module-kqcircuits.masks.mask_set"], [85, "module-kqcircuits.masks.multi_face_mask_layout"], [86, "module-kqcircuits.pya_resolver"], [87, "module-kqcircuits.qubits"], [88, "module-kqcircuits.qubits.circular_transmon_single_island"], [89, "module-kqcircuits.qubits.concentric_transmon"], [90, "module-kqcircuits.qubits.double_pads"], [91, "module-kqcircuits.qubits.double_pads_splines"], [92, "module-kqcircuits.qubits.qubit"], [93, "module-kqcircuits.qubits.swissmon"], [94, "module-kqcircuits.run"], [95, "module-kqcircuits.simulations"], [96, "module-kqcircuits.simulations.airbridges_sim"], [97, "module-kqcircuits.simulations.cross_section_simulation"], [98, "module-kqcircuits.simulations.empty_simulation"], [100, "module-kqcircuits.simulations.epr.circular_capacitor"], [101, "module-kqcircuits.simulations.epr.example"], [102, "module-kqcircuits.simulations.epr.smooth_capacitor"], [103, "module-kqcircuits.simulations.epr.swissmon"], [104, "module-kqcircuits.simulations.epr.utils"], [105, "module-kqcircuits.simulations.export"], [106, "module-kqcircuits.simulations.export.ansys"], [107, "module-kqcircuits.simulations.export.ansys.ansys_export"], [108, "module-kqcircuits.simulations.export.ansys.ansys_solution"], [109, "module-kqcircuits.simulations.export.elmer"], [110, "module-kqcircuits.simulations.export.elmer.elmer_export"], [111, "module-kqcircuits.simulations.export.elmer.elmer_solution"], [112, "module-kqcircuits.simulations.export.export_and_run"], [113, "module-kqcircuits.simulations.export.export_singularity"], [114, "module-kqcircuits.simulations.export.remote_export_and_run"], [115, "module-kqcircuits.simulations.export.simulation_export"], [116, "module-kqcircuits.simulations.export.simulation_validate"], [117, "module-kqcircuits.simulations.export.solution"], [118, "module-kqcircuits.simulations.export.sonnet"], [119, "module-kqcircuits.simulations.export.sonnet.parser"], [120, "module-kqcircuits.simulations.export.sonnet.sonnet_export"], [121, "module-kqcircuits.simulations.export.util"], [122, "module-kqcircuits.simulations.export.xsection"], [123, "module-kqcircuits.simulations.export.xsection.epr_correction_export"], [124, "module-kqcircuits.simulations.export.xsection.xsection_export"], [125, "module-kqcircuits.simulations.partition_region"], [126, "module-kqcircuits.simulations.port"], [127, "module-kqcircuits.simulations.post_process"], [128, "module-kqcircuits.simulations.simulation"], [129, "module-kqcircuits.simulations.single_element_simulation"], [130, "module-kqcircuits.simulations.single_xmons_full_chip_sim"], [131, "module-kqcircuits.simulations.waveguides_sim"], [132, "module-kqcircuits.simulations.xmons_direct_coupling_full_chip_sim"], [133, "module-kqcircuits.simulations.xmons_direct_coupling_sim"], [134, "module-kqcircuits.test_structures"], [135, "module-kqcircuits.test_structures.airbridge_dc"], [136, "module-kqcircuits.test_structures.cross_test"], [137, "module-kqcircuits.test_structures.junction_test_pads"], [138, "module-kqcircuits.test_structures.junction_test_pads.junction_test_pads"], [139, "module-kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple"], [140, "module-kqcircuits.test_structures.stripes_test"], [141, "module-kqcircuits.test_structures.stripes_test_increasing_width"], [142, "module-kqcircuits.test_structures.test_structure"], [143, "module-kqcircuits.test_structures.tsv_test_pattern"], [144, "module-kqcircuits.util"], [145, "module-kqcircuits.util.area"], [146, "module-kqcircuits.util.count_instances"], [147, "module-kqcircuits.util.coupler_lib"], [148, "module-kqcircuits.util.deep_delete"], [149, "module-kqcircuits.util.defaults_helper"], [150, "module-kqcircuits.util.dependencies"], [151, "module-kqcircuits.util.edit_node_plugin"], [152, "module-kqcircuits.util.export_helper"], [153, "module-kqcircuits.util.geometry_helper"], [154, "module-kqcircuits.util.geometry_json_encoder"], [155, "module-kqcircuits.util.groundgrid"], [156, "module-kqcircuits.util.gui_helper"], [157, "module-kqcircuits.util.import_helper"], [158, "module-kqcircuits.util.label"], [159, "module-kqcircuits.util.label_polygons"], [160, "module-kqcircuits.util.layout_to_code"], [161, "module-kqcircuits.util.library_helper"], [162, "module-kqcircuits.util.log_router"], [163, "module-kqcircuits.util.merge"], [164, "module-kqcircuits.util.netlist_extraction"], [165, "module-kqcircuits.util.netlist_graph"], [166, "module-kqcircuits.util.parameters"], [167, "module-kqcircuits.util.plugin_startup"], [168, "module-kqcircuits.util.refpoints"], [169, "module-kqcircuits.util.replace_junctions"], [170, "module-kqcircuits.util.symmetric_polygons"]], "kqcircuits.chips": [[2, "module-kqcircuits.chips"]], "airbridgecrossings (class in kqcircuits.chips.airbridge_crossings)": [[3, "kqcircuits.chips.airbridge_crossings.AirbridgeCrossings"]], "build() (kqcircuits.chips.airbridge_crossings.airbridgecrossings method)": [[3, "kqcircuits.chips.airbridge_crossings.AirbridgeCrossings.build"]], "kqcircuits.chips.airbridge_crossings": [[3, "module-kqcircuits.chips.airbridge_crossings"]], "airbridgedctest (class in kqcircuits.chips.airbridge_dc_test)": [[4, "kqcircuits.chips.airbridge_dc_test.AirbridgeDcTest"]], "build() (kqcircuits.chips.airbridge_dc_test.airbridgedctest method)": [[4, "kqcircuits.chips.airbridge_dc_test.AirbridgeDcTest.build"]], "kqcircuits.chips.airbridge_dc_test": [[4, "module-kqcircuits.chips.airbridge_dc_test"]], "chip (class in kqcircuits.chips.chip)": [[5, "kqcircuits.chips.chip.Chip"]], "library_description (kqcircuits.chips.chip.chip attribute)": [[5, "kqcircuits.chips.chip.Chip.LIBRARY_DESCRIPTION"]], "library_name (kqcircuits.chips.chip.chip attribute)": [[5, "kqcircuits.chips.chip.Chip.LIBRARY_NAME"]], "library_path (kqcircuits.chips.chip.chip attribute)": [[5, "kqcircuits.chips.chip.Chip.LIBRARY_PATH"]], "can_create_from_shape_impl() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.can_create_from_shape_impl"]], "display_text_impl() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.display_text_impl"]], "get_box() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.get_box"]], "get_filter_regions() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.get_filter_regions"]], "get_ground_bump_locations() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.get_ground_bump_locations"]], "get_ground_tsv_locations() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.get_ground_tsv_locations"]], "get_launcher_assignments() (kqcircuits.chips.chip.chip static method)": [[5, "kqcircuits.chips.chip.Chip.get_launcher_assignments"]], "insert_filtered_elements() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.insert_filtered_elements"]], "kqcircuits.chips.chip": [[5, "module-kqcircuits.chips.chip"]], "make_grid_locations() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.make_grid_locations"]], "merge_layout_layers() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.merge_layout_layers"]], "merge_layout_layers_on_face() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.merge_layout_layers_on_face"]], "parameters_from_shape_impl() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.parameters_from_shape_impl"]], "post_build() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.post_build"]], "produce_frame() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.produce_frame"]], "produce_ground_grid() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.produce_ground_grid"]], "produce_ground_on_face_grid() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.produce_ground_on_face_grid"]], "produce_junction_tests() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.produce_junction_tests"]], "produce_launchers() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.produce_launchers"]], "produce_n_launchers() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.produce_n_launchers"]], "produce_opt_lit_tests() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.produce_opt_lit_tests"]], "produce_structures() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.produce_structures"]], "transformation_from_shape_impl() (kqcircuits.chips.chip.chip method)": [[5, "kqcircuits.chips.chip.Chip.transformation_from_shape_impl"]], "crossingtwoface (class in kqcircuits.chips.crossing_twoface)": [[6, "kqcircuits.chips.crossing_twoface.CrossingTwoface"]], "build() (kqcircuits.chips.crossing_twoface.crossingtwoface method)": [[6, "kqcircuits.chips.crossing_twoface.CrossingTwoface.build"]], "kqcircuits.chips.crossing_twoface": [[6, "module-kqcircuits.chips.crossing_twoface"]], "daisywoven (class in kqcircuits.chips.daisy_woven)": [[7, "kqcircuits.chips.daisy_woven.DaisyWoven"]], "build() (kqcircuits.chips.daisy_woven.daisywoven method)": [[7, "kqcircuits.chips.daisy_woven.DaisyWoven.build"]], "kqcircuits.chips.daisy_woven": [[7, "module-kqcircuits.chips.daisy_woven"]], "dctest (class in kqcircuits.chips.dc_test)": [[8, "kqcircuits.chips.dc_test.DcTest"]], "build() (kqcircuits.chips.dc_test.dctest method)": [[8, "kqcircuits.chips.dc_test.DcTest.build"]], "kqcircuits.chips.dc_test": [[8, "module-kqcircuits.chips.dc_test"]], "demo (class in kqcircuits.chips.demo)": [[9, "kqcircuits.chips.demo.Demo"]], "build() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.build"]], "kqcircuits.chips.demo": [[9, "module-kqcircuits.chips.demo"]], "produce_control_lines() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_control_lines"]], "produce_coupler() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_coupler"]], "produce_couplers() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_couplers"]], "produce_driveline() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_driveline"]], "produce_fluxline() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_fluxline"]], "produce_junction_tests() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_junction_tests"]], "produce_probeline() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_probeline"]], "produce_probelines() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_probelines"]], "produce_qubit() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_qubit"]], "produce_qubits() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_qubits"]], "produce_readout_structure() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_readout_structure"]], "produce_readout_structures() (kqcircuits.chips.demo.demo method)": [[9, "kqcircuits.chips.demo.Demo.produce_readout_structures"]], "demotwoface (class in kqcircuits.chips.demo_twoface)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface"]], "build() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.build"]], "kqcircuits.chips.demo_twoface": [[10, "module-kqcircuits.chips.demo_twoface"]], "produce_control_lines() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_control_lines"]], "produce_coupler() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_coupler"]], "produce_couplers() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_couplers"]], "produce_driveline() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_driveline"]], "produce_fluxline() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_fluxline"]], "produce_probeline() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_probeline"]], "produce_probelines() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_probelines"]], "produce_qubit() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_qubit"]], "produce_qubits() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_qubits"]], "produce_readout_structure() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_readout_structure"]], "produce_readout_structures() (kqcircuits.chips.demo_twoface.demotwoface method)": [[10, "kqcircuits.chips.demo_twoface.DemoTwoface.produce_readout_structures"]], "empty (class in kqcircuits.chips.empty)": [[11, "kqcircuits.chips.empty.Empty"]], "build() (kqcircuits.chips.empty.empty method)": [[11, "kqcircuits.chips.empty.Empty.build"]], "kqcircuits.chips.empty": [[11, "module-kqcircuits.chips.empty"]], "make_empty_area() (kqcircuits.chips.empty.empty method)": [[11, "kqcircuits.chips.empty.Empty.make_empty_area"]], "junctiontest (class in kqcircuits.chips.junction_test)": [[12, "kqcircuits.chips.junction_test.JunctionTest"]], "build() (kqcircuits.chips.junction_test.junctiontest method)": [[12, "kqcircuits.chips.junction_test.JunctionTest.build"]], "kqcircuits.chips.junction_test": [[12, "module-kqcircuits.chips.junction_test"]], "junctiontest2 (class in kqcircuits.chips.junction_test2)": [[13, "kqcircuits.chips.junction_test2.JunctionTest2"]], "build() (kqcircuits.chips.junction_test2.junctiontest2 method)": [[13, "kqcircuits.chips.junction_test2.JunctionTest2.build"]], "coerce_parameters_impl() (kqcircuits.chips.junction_test2.junctiontest2 method)": [[13, "kqcircuits.chips.junction_test2.JunctionTest2.coerce_parameters_impl"]], "kqcircuits.chips.junction_test2": [[13, "module-kqcircuits.chips.junction_test2"]], "launchers (class in kqcircuits.chips.launchers)": [[14, "kqcircuits.chips.launchers.Launchers"]], "build() (kqcircuits.chips.launchers.launchers method)": [[14, "kqcircuits.chips.launchers.Launchers.build"]], "kqcircuits.chips.launchers": [[14, "module-kqcircuits.chips.launchers"]], "lithographytest (class in kqcircuits.chips.lithography_test)": [[15, "kqcircuits.chips.lithography_test.LithographyTest"]], "build() (kqcircuits.chips.lithography_test.lithographytest method)": [[15, "kqcircuits.chips.lithography_test.LithographyTest.build"]], "create_pattern() (kqcircuits.chips.lithography_test.lithographytest method)": [[15, "kqcircuits.chips.lithography_test.LithographyTest.create_pattern"]], "kqcircuits.chips.lithography_test": [[15, "module-kqcircuits.chips.lithography_test"]], "lithographytesttwoface (class in kqcircuits.chips.lithography_test_twoface)": [[16, "kqcircuits.chips.lithography_test_twoface.LithographyTestTwoface"]], "build() (kqcircuits.chips.lithography_test_twoface.lithographytesttwoface method)": [[16, "kqcircuits.chips.lithography_test_twoface.LithographyTestTwoface.build"]], "create_pattern() (kqcircuits.chips.lithography_test_twoface.lithographytesttwoface method)": [[16, "kqcircuits.chips.lithography_test_twoface.LithographyTestTwoface.create_pattern"]], "kqcircuits.chips.lithography_test_twoface": [[16, "module-kqcircuits.chips.lithography_test_twoface"]], "munchqubits (class in kqcircuits.chips.munch_qubits)": [[17, "kqcircuits.chips.munch_qubits.MunchQubits"]], "build() (kqcircuits.chips.munch_qubits.munchqubits method)": [[17, "kqcircuits.chips.munch_qubits.MunchQubits.build"]], "kqcircuits.chips.munch_qubits": [[17, "module-kqcircuits.chips.munch_qubits"]], "produce_coupler() (kqcircuits.chips.munch_qubits.munchqubits method)": [[17, "kqcircuits.chips.munch_qubits.MunchQubits.produce_coupler"]], "produce_drivelines() (kqcircuits.chips.munch_qubits.munchqubits method)": [[17, "kqcircuits.chips.munch_qubits.MunchQubits.produce_drivelines"]], "produce_probeline() (kqcircuits.chips.munch_qubits.munchqubits method)": [[17, "kqcircuits.chips.munch_qubits.MunchQubits.produce_probeline"]], "produce_qubits() (kqcircuits.chips.munch_qubits.munchqubits method)": [[17, "kqcircuits.chips.munch_qubits.MunchQubits.produce_qubits"]], "produce_readout_resonators() (kqcircuits.chips.munch_qubits.munchqubits method)": [[17, "kqcircuits.chips.munch_qubits.MunchQubits.produce_readout_resonators"]], "qualityfactor (class in kqcircuits.chips.quality_factor)": [[18, "kqcircuits.chips.quality_factor.QualityFactor"]], "build() (kqcircuits.chips.quality_factor.qualityfactor method)": [[18, "kqcircuits.chips.quality_factor.QualityFactor.build"]], "kqcircuits.chips.quality_factor": [[18, "module-kqcircuits.chips.quality_factor"]], "qualityfactortwoface (class in kqcircuits.chips.quality_factor_twoface)": [[19, "kqcircuits.chips.quality_factor_twoface.QualityFactorTwoface"]], "build() (kqcircuits.chips.quality_factor_twoface.qualityfactortwoface method)": [[19, "kqcircuits.chips.quality_factor_twoface.QualityFactorTwoface.build"]], "kqcircuits.chips.quality_factor_twoface": [[19, "module-kqcircuits.chips.quality_factor_twoface"]], "produce_resonator() (kqcircuits.chips.quality_factor_twoface.qualityfactortwoface method)": [[19, "kqcircuits.chips.quality_factor_twoface.QualityFactorTwoface.produce_resonator"]], "sampleholdertest (class in kqcircuits.chips.sample_holder_test)": [[20, "kqcircuits.chips.sample_holder_test.SampleHolderTest"]], "build() (kqcircuits.chips.sample_holder_test.sampleholdertest method)": [[20, "kqcircuits.chips.sample_holder_test.SampleHolderTest.build"]], "kqcircuits.chips.sample_holder_test": [[20, "module-kqcircuits.chips.sample_holder_test"]], "shaping (class in kqcircuits.chips.shaping)": [[21, "kqcircuits.chips.shaping.Shaping"]], "build() (kqcircuits.chips.shaping.shaping method)": [[21, "kqcircuits.chips.shaping.Shaping.build"]], "kqcircuits.chips.shaping": [[21, "module-kqcircuits.chips.shaping"]], "simple (class in kqcircuits.chips.simple)": [[22, "kqcircuits.chips.simple.Simple"]], "build() (kqcircuits.chips.simple.simple method)": [[22, "kqcircuits.chips.simple.Simple.build"]], "kqcircuits.chips.simple": [[22, "module-kqcircuits.chips.simple"]], "singlexmons (class in kqcircuits.chips.single_xmons)": [[23, "kqcircuits.chips.single_xmons.SingleXmons"]], "build() (kqcircuits.chips.single_xmons.singlexmons method)": [[23, "kqcircuits.chips.single_xmons.SingleXmons.build"]], "kqcircuits.chips.single_xmons": [[23, "module-kqcircuits.chips.single_xmons"]], "launchers (kqcircuits.chips.single_xmons.singlexmons attribute)": [[23, "kqcircuits.chips.single_xmons.SingleXmons.launchers"]], "qubits_refpoints (kqcircuits.chips.single_xmons.singlexmons attribute)": [[23, "kqcircuits.chips.single_xmons.SingleXmons.qubits_refpoints"]], "stripes (class in kqcircuits.chips.stripes)": [[24, "kqcircuits.chips.stripes.Stripes"]], "build() (kqcircuits.chips.stripes.stripes method)": [[24, "kqcircuits.chips.stripes.Stripes.build"]], "kqcircuits.chips.stripes": [[24, "module-kqcircuits.chips.stripes"]], "tsvtest (class in kqcircuits.chips.tsv_test)": [[25, "kqcircuits.chips.tsv_test.TsvTest"]], "build() (kqcircuits.chips.tsv_test.tsvtest method)": [[25, "kqcircuits.chips.tsv_test.TsvTest.build"]], "create_xsection() (kqcircuits.chips.tsv_test.tsvtest method)": [[25, "kqcircuits.chips.tsv_test.TsvTest.create_xsection"]], "kqcircuits.chips.tsv_test": [[25, "module-kqcircuits.chips.tsv_test"]], "xmonsdirectcoupling (class in kqcircuits.chips.xmons_direct_coupling)": [[26, "kqcircuits.chips.xmons_direct_coupling.XMonsDirectCoupling"]], "build() (kqcircuits.chips.xmons_direct_coupling.xmonsdirectcoupling method)": [[26, "kqcircuits.chips.xmons_direct_coupling.XMonsDirectCoupling.build"]], "kqcircuits.chips.xmons_direct_coupling": [[26, "module-kqcircuits.chips.xmons_direct_coupling"]], "produce_qubits() (kqcircuits.chips.xmons_direct_coupling.xmonsdirectcoupling method)": [[26, "kqcircuits.chips.xmons_direct_coupling.XMonsDirectCoupling.produce_qubits"]], "produce_readout_resonator() (kqcircuits.chips.xmons_direct_coupling.xmonsdirectcoupling method)": [[26, "kqcircuits.chips.xmons_direct_coupling.XMonsDirectCoupling.produce_readout_resonator"]], "kqcircuits.defaults": [[27, "module-kqcircuits.defaults"]], "kqcircuits.elements": [[28, "module-kqcircuits.elements"]], "airbridgeconnection (class in kqcircuits.elements.airbridge_connection)": [[29, "kqcircuits.elements.airbridge_connection.AirbridgeConnection"]], "build() (kqcircuits.elements.airbridge_connection.airbridgeconnection method)": [[29, "kqcircuits.elements.airbridge_connection.AirbridgeConnection.build"]], "kqcircuits.elements.airbridge_connection": [[29, "module-kqcircuits.elements.airbridge_connection"]], "kqcircuits.elements.airbridges": [[30, "module-kqcircuits.elements.airbridges"]], "airbridge (class in kqcircuits.elements.airbridges.airbridge)": [[31, "kqcircuits.elements.airbridges.airbridge.Airbridge"]], "create() (kqcircuits.elements.airbridges.airbridge.airbridge class method)": [[31, "kqcircuits.elements.airbridges.airbridge.Airbridge.create"]], "default_type (kqcircuits.elements.airbridges.airbridge.airbridge attribute)": [[31, "kqcircuits.elements.airbridges.airbridge.Airbridge.default_type"]], "kqcircuits.elements.airbridges.airbridge": [[31, "module-kqcircuits.elements.airbridges.airbridge"]], "transformation_from_shape_impl() (kqcircuits.elements.airbridges.airbridge.airbridge method)": [[31, "kqcircuits.elements.airbridges.airbridge.Airbridge.transformation_from_shape_impl"]], "airbridgemultiface (class in kqcircuits.elements.airbridges.airbridge_multi_face)": [[32, "kqcircuits.elements.airbridges.airbridge_multi_face.AirbridgeMultiFace"]], "build() (kqcircuits.elements.airbridges.airbridge_multi_face.airbridgemultiface method)": [[32, "kqcircuits.elements.airbridges.airbridge_multi_face.AirbridgeMultiFace.build"]], "default_type (kqcircuits.elements.airbridges.airbridge_multi_face.airbridgemultiface attribute)": [[32, "kqcircuits.elements.airbridges.airbridge_multi_face.AirbridgeMultiFace.default_type"]], "kqcircuits.elements.airbridges.airbridge_multi_face": [[32, "module-kqcircuits.elements.airbridges.airbridge_multi_face"]], "airbridgerectangular (class in kqcircuits.elements.airbridges.airbridge_rectangular)": [[33, "kqcircuits.elements.airbridges.airbridge_rectangular.AirbridgeRectangular"]], "build() (kqcircuits.elements.airbridges.airbridge_rectangular.airbridgerectangular method)": [[33, "kqcircuits.elements.airbridges.airbridge_rectangular.AirbridgeRectangular.build"]], "default_type (kqcircuits.elements.airbridges.airbridge_rectangular.airbridgerectangular attribute)": [[33, "kqcircuits.elements.airbridges.airbridge_rectangular.AirbridgeRectangular.default_type"]], "kqcircuits.elements.airbridges.airbridge_rectangular": [[33, "module-kqcircuits.elements.airbridges.airbridge_rectangular"]], "capacitivexcoupler (class in kqcircuits.elements.capacitive_x_coupler)": [[34, "kqcircuits.elements.capacitive_x_coupler.CapacitiveXCoupler"]], "build() (kqcircuits.elements.capacitive_x_coupler.capacitivexcoupler method)": [[34, "kqcircuits.elements.capacitive_x_coupler.CapacitiveXCoupler.build"]], "get_sim_ports() (kqcircuits.elements.capacitive_x_coupler.capacitivexcoupler class method)": [[34, "kqcircuits.elements.capacitive_x_coupler.CapacitiveXCoupler.get_sim_ports"]], "kqcircuits.elements.capacitive_x_coupler": [[34, "module-kqcircuits.elements.capacitive_x_coupler"]], "chipframe (class in kqcircuits.elements.chip_frame)": [[35, "kqcircuits.elements.chip_frame.ChipFrame"]], "build() (kqcircuits.elements.chip_frame.chipframe method)": [[35, "kqcircuits.elements.chip_frame.ChipFrame.build"]], "kqcircuits.elements.chip_frame": [[35, "module-kqcircuits.elements.chip_frame"]], "circularcapacitor (class in kqcircuits.elements.circular_capacitor)": [[36, "kqcircuits.elements.circular_capacitor.CircularCapacitor"]], "build() (kqcircuits.elements.circular_capacitor.circularcapacitor method)": [[36, "kqcircuits.elements.circular_capacitor.CircularCapacitor.build"]], "get_sim_ports() (kqcircuits.elements.circular_capacitor.circularcapacitor class method)": [[36, "kqcircuits.elements.circular_capacitor.CircularCapacitor.get_sim_ports"]], "kqcircuits.elements.circular_capacitor": [[36, "module-kqcircuits.elements.circular_capacitor"]], "element (class in kqcircuits.elements.element)": [[37, "kqcircuits.elements.element.Element"]], "library_description (kqcircuits.elements.element.element attribute)": [[37, "kqcircuits.elements.element.Element.LIBRARY_DESCRIPTION"]], "library_name (kqcircuits.elements.element.element attribute)": [[37, "kqcircuits.elements.element.Element.LIBRARY_NAME"]], "library_path (kqcircuits.elements.element.element attribute)": [[37, "kqcircuits.elements.element.Element.LIBRARY_PATH"]], "add_element() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.add_element"]], "add_port() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.add_port"]], "add_protection() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.add_protection"]], "build() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.build"]], "copy_port() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.copy_port"]], "create() (kqcircuits.elements.element.element class method)": [[37, "kqcircuits.elements.element.Element.create"]], "create_cell_from_shape() (kqcircuits.elements.element.element static method)": [[37, "kqcircuits.elements.element.Element.create_cell_from_shape"]], "create_subtype() (kqcircuits.elements.element.element class method)": [[37, "kqcircuits.elements.element.Element.create_subtype"]], "create_with_refpoints() (kqcircuits.elements.element.element class method)": [[37, "kqcircuits.elements.element.Element.create_with_refpoints"]], "display_text_impl() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.display_text_impl"]], "face() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.face"]], "face_changer_waveguides() (kqcircuits.elements.element.element static method)": [[37, "kqcircuits.elements.element.Element.face_changer_waveguides"]], "get_layer() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.get_layer"]], "get_refpoints() (in module kqcircuits.elements.element)": [[37, "kqcircuits.elements.element.get_refpoints"]], "get_refpoints() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.get_refpoints"]], "get_schema() (kqcircuits.elements.element.element class method)": [[37, "kqcircuits.elements.element.Element.get_schema"]], "get_sim_ports() (kqcircuits.elements.element.element class method)": [[37, "kqcircuits.elements.element.Element.get_sim_ports"]], "insert_cell() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.insert_cell"]], "insert_cell_into() (in module kqcircuits.elements.element)": [[37, "kqcircuits.elements.element.insert_cell_into"]], "kqcircuits.elements.element": [[37, "module-kqcircuits.elements.element"]], "left_and_right_waveguides() (kqcircuits.elements.element.element static method)": [[37, "kqcircuits.elements.element.Element.left_and_right_waveguides"]], "pcell_params_by_name() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.pcell_params_by_name"]], "post_build() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.post_build"]], "produce_impl() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.produce_impl"]], "raise_error_on_cell() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.raise_error_on_cell"]], "resolve_face() (in module kqcircuits.elements.element)": [[37, "kqcircuits.elements.element.resolve_face"]], "sync_parameters() (kqcircuits.elements.element.element method)": [[37, "kqcircuits.elements.element.Element.sync_parameters"]], "fingercapacitorsquare (class in kqcircuits.elements.finger_capacitor_square)": [[38, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare"]], "add_waveguides() (kqcircuits.elements.finger_capacitor_square.fingercapacitorsquare method)": [[38, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare.add_waveguides"]], "build() (kqcircuits.elements.finger_capacitor_square.fingercapacitorsquare method)": [[38, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare.build"]], "can_create_from_shape_impl() (kqcircuits.elements.finger_capacitor_square.fingercapacitorsquare method)": [[38, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare.can_create_from_shape_impl"]], "cut_region() (kqcircuits.elements.finger_capacitor_square.fingercapacitorsquare method)": [[38, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare.cut_region"]], "finger_area_length() (kqcircuits.elements.finger_capacitor_square.fingercapacitorsquare method)": [[38, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare.finger_area_length"]], "finger_area_width() (kqcircuits.elements.finger_capacitor_square.fingercapacitorsquare method)": [[38, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare.finger_area_width"]], "get_ground_region() (kqcircuits.elements.finger_capacitor_square.fingercapacitorsquare method)": [[38, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare.get_ground_region"]], "get_sim_ports() (kqcircuits.elements.finger_capacitor_square.fingercapacitorsquare class method)": [[38, "kqcircuits.elements.finger_capacitor_square.FingerCapacitorSquare.get_sim_ports"]], "kqcircuits.elements.finger_capacitor_square": [[38, "module-kqcircuits.elements.finger_capacitor_square"]], "fingercapacitortaper (class in kqcircuits.elements.finger_capacitor_taper)": [[39, "kqcircuits.elements.finger_capacitor_taper.FingerCapacitorTaper"]], "build() (kqcircuits.elements.finger_capacitor_taper.fingercapacitortaper method)": [[39, "kqcircuits.elements.finger_capacitor_taper.FingerCapacitorTaper.build"]], "can_create_from_shape_impl() (kqcircuits.elements.finger_capacitor_taper.fingercapacitortaper method)": [[39, "kqcircuits.elements.finger_capacitor_taper.FingerCapacitorTaper.can_create_from_shape_impl"]], "kqcircuits.elements.finger_capacitor_taper": [[39, "module-kqcircuits.elements.finger_capacitor_taper"]], "kqcircuits.elements.flip_chip_connectors": [[40, "module-kqcircuits.elements.flip_chip_connectors"]], "flipchipconnector (class in kqcircuits.elements.flip_chip_connectors.flip_chip_connector)": [[41, "kqcircuits.elements.flip_chip_connectors.flip_chip_connector.FlipChipConnector"]], "create() (kqcircuits.elements.flip_chip_connectors.flip_chip_connector.flipchipconnector class method)": [[41, "kqcircuits.elements.flip_chip_connectors.flip_chip_connector.FlipChipConnector.create"]], "default_type (kqcircuits.elements.flip_chip_connectors.flip_chip_connector.flipchipconnector attribute)": [[41, "kqcircuits.elements.flip_chip_connectors.flip_chip_connector.FlipChipConnector.default_type"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector": [[41, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector"]], "flipchipconnectordc (class in kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc)": [[42, "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc.FlipChipConnectorDc"]], "build() (kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc.flipchipconnectordc method)": [[42, "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc.FlipChipConnectorDc.build"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc": [[42, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector_dc"]], "flipchipconnectorrf (class in kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf)": [[43, "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf.FlipChipConnectorRf"]], "build() (kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf.flipchipconnectorrf method)": [[43, "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf.FlipChipConnectorRf.build"]], "get_sim_ports() (kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf.flipchipconnectorrf class method)": [[43, "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf.FlipChipConnectorRf.get_sim_ports"]], "kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf": [[43, "module-kqcircuits.elements.flip_chip_connectors.flip_chip_connector_rf"]], "kqcircuits.elements.fluxlines": [[44, "module-kqcircuits.elements.fluxlines"]], "fluxline (class in kqcircuits.elements.fluxlines.fluxline)": [[45, "kqcircuits.elements.fluxlines.fluxline.Fluxline"]], "coerce_parameters_impl() (kqcircuits.elements.fluxlines.fluxline.fluxline method)": [[45, "kqcircuits.elements.fluxlines.fluxline.Fluxline.coerce_parameters_impl"]], "create() (kqcircuits.elements.fluxlines.fluxline.fluxline class method)": [[45, "kqcircuits.elements.fluxlines.fluxline.Fluxline.create"]], "default_type (kqcircuits.elements.fluxlines.fluxline.fluxline attribute)": [[45, "kqcircuits.elements.fluxlines.fluxline.Fluxline.default_type"]], "kqcircuits.elements.fluxlines.fluxline": [[45, "module-kqcircuits.elements.fluxlines.fluxline"]], "fluxlinestandard (class in kqcircuits.elements.fluxlines.fluxline_standard)": [[46, "kqcircuits.elements.fluxlines.fluxline_standard.FluxlineStandard"]], "build() (kqcircuits.elements.fluxlines.fluxline_standard.fluxlinestandard method)": [[46, "kqcircuits.elements.fluxlines.fluxline_standard.FluxlineStandard.build"]], "kqcircuits.elements.fluxlines.fluxline_standard": [[46, "module-kqcircuits.elements.fluxlines.fluxline_standard"]], "fluxlinestraight (class in kqcircuits.elements.fluxlines.fluxline_straight)": [[47, "kqcircuits.elements.fluxlines.fluxline_straight.FluxlineStraight"]], "build() (kqcircuits.elements.fluxlines.fluxline_straight.fluxlinestraight method)": [[47, "kqcircuits.elements.fluxlines.fluxline_straight.FluxlineStraight.build"]], "kqcircuits.elements.fluxlines.fluxline_straight": [[47, "module-kqcircuits.elements.fluxlines.fluxline_straight"]], "hangerresonator (class in kqcircuits.elements.hanger_resonator)": [[48, "kqcircuits.elements.hanger_resonator.HangerResonator"]], "build() (kqcircuits.elements.hanger_resonator.hangerresonator method)": [[48, "kqcircuits.elements.hanger_resonator.HangerResonator.build"]], "get_sim_ports() (kqcircuits.elements.hanger_resonator.hangerresonator class method)": [[48, "kqcircuits.elements.hanger_resonator.HangerResonator.get_sim_ports"]], "kqcircuits.elements.hanger_resonator": [[48, "module-kqcircuits.elements.hanger_resonator"]], "launcher (class in kqcircuits.elements.launcher)": [[49, "kqcircuits.elements.launcher.Launcher"]], "build() (kqcircuits.elements.launcher.launcher method)": [[49, "kqcircuits.elements.launcher.Launcher.build"]], "kqcircuits.elements.launcher": [[49, "module-kqcircuits.elements.launcher"]], "launcherdc (class in kqcircuits.elements.launcher_dc)": [[50, "kqcircuits.elements.launcher_dc.LauncherDC"]], "build() (kqcircuits.elements.launcher_dc.launcherdc method)": [[50, "kqcircuits.elements.launcher_dc.LauncherDC.build"]], "kqcircuits.elements.launcher_dc": [[50, "module-kqcircuits.elements.launcher_dc"]], "kqcircuits.elements.markers": [[51, "module-kqcircuits.elements.markers"]], "marker (class in kqcircuits.elements.markers.marker)": [[52, "kqcircuits.elements.markers.marker.Marker"]], "create() (kqcircuits.elements.markers.marker.marker class method)": [[52, "kqcircuits.elements.markers.marker.Marker.create"]], "default_type (kqcircuits.elements.markers.marker.marker attribute)": [[52, "kqcircuits.elements.markers.marker.Marker.default_type"]], "get_marker_locations() (kqcircuits.elements.markers.marker.marker class method)": [[52, "kqcircuits.elements.markers.marker.Marker.get_marker_locations"]], "get_marker_region() (kqcircuits.elements.markers.marker.marker class method)": [[52, "kqcircuits.elements.markers.marker.Marker.get_marker_region"]], "kqcircuits.elements.markers.marker": [[52, "module-kqcircuits.elements.markers.marker"]], "produce_geometry() (kqcircuits.elements.markers.marker.marker method)": [[52, "kqcircuits.elements.markers.marker.Marker.produce_geometry"]], "markerstandard (class in kqcircuits.elements.markers.marker_standard)": [[53, "kqcircuits.elements.markers.marker_standard.MarkerStandard"]], "build() (kqcircuits.elements.markers.marker_standard.markerstandard method)": [[53, "kqcircuits.elements.markers.marker_standard.MarkerStandard.build"]], "kqcircuits.elements.markers.marker_standard": [[53, "module-kqcircuits.elements.markers.marker_standard"]], "maskmarkerfc (class in kqcircuits.elements.markers.mask_marker_fc)": [[54, "kqcircuits.elements.markers.mask_marker_fc.MaskMarkerFc"]], "build() (kqcircuits.elements.markers.mask_marker_fc.maskmarkerfc method)": [[54, "kqcircuits.elements.markers.mask_marker_fc.MaskMarkerFc.build"]], "create_cross() (kqcircuits.elements.markers.mask_marker_fc.maskmarkerfc static method)": [[54, "kqcircuits.elements.markers.mask_marker_fc.MaskMarkerFc.create_cross"]], "get_marker_locations() (kqcircuits.elements.markers.mask_marker_fc.maskmarkerfc class method)": [[54, "kqcircuits.elements.markers.mask_marker_fc.MaskMarkerFc.get_marker_locations"]], "get_marker_region() (kqcircuits.elements.markers.mask_marker_fc.maskmarkerfc class method)": [[54, "kqcircuits.elements.markers.mask_marker_fc.MaskMarkerFc.get_marker_region"]], "kqcircuits.elements.markers.mask_marker_fc": [[54, "module-kqcircuits.elements.markers.mask_marker_fc"]], "meander (class in kqcircuits.elements.meander)": [[55, "kqcircuits.elements.meander.Meander"]], "build() (kqcircuits.elements.meander.meander method)": [[55, "kqcircuits.elements.meander.Meander.build"]], "can_create_from_shape_impl() (kqcircuits.elements.meander.meander method)": [[55, "kqcircuits.elements.meander.Meander.can_create_from_shape_impl"]], "kqcircuits.elements.meander": [[55, "module-kqcircuits.elements.meander"]], "parameters_from_shape_impl() (kqcircuits.elements.meander.meander method)": [[55, "kqcircuits.elements.meander.Meander.parameters_from_shape_impl"]], "quarterwavecpwresonator (class in kqcircuits.elements.quarter_wave_cpw_resonator)": [[56, "kqcircuits.elements.quarter_wave_cpw_resonator.QuarterWaveCpwResonator"]], "build() (kqcircuits.elements.quarter_wave_cpw_resonator.quarterwavecpwresonator method)": [[56, "kqcircuits.elements.quarter_wave_cpw_resonator.QuarterWaveCpwResonator.build"]], "get_sim_ports() (kqcircuits.elements.quarter_wave_cpw_resonator.quarterwavecpwresonator class method)": [[56, "kqcircuits.elements.quarter_wave_cpw_resonator.QuarterWaveCpwResonator.get_sim_ports"]], "kqcircuits.elements.quarter_wave_cpw_resonator": [[56, "module-kqcircuits.elements.quarter_wave_cpw_resonator"]], "smoothcapacitor (class in kqcircuits.elements.smooth_capacitor)": [[57, "kqcircuits.elements.smooth_capacitor.SmoothCapacitor"]], "build() (kqcircuits.elements.smooth_capacitor.smoothcapacitor method)": [[57, "kqcircuits.elements.smooth_capacitor.SmoothCapacitor.build"]], "can_create_from_shape_impl() (kqcircuits.elements.smooth_capacitor.smoothcapacitor method)": [[57, "kqcircuits.elements.smooth_capacitor.SmoothCapacitor.can_create_from_shape_impl"]], "get_sim_ports() (kqcircuits.elements.smooth_capacitor.smoothcapacitor class method)": [[57, "kqcircuits.elements.smooth_capacitor.SmoothCapacitor.get_sim_ports"]], "kqcircuits.elements.smooth_capacitor": [[57, "module-kqcircuits.elements.smooth_capacitor"]], "spiralresonatorpolygon (class in kqcircuits.elements.spiral_resonator_polygon)": [[58, "kqcircuits.elements.spiral_resonator_polygon.SpiralResonatorPolygon"]], "build() (kqcircuits.elements.spiral_resonator_polygon.spiralresonatorpolygon method)": [[58, "kqcircuits.elements.spiral_resonator_polygon.SpiralResonatorPolygon.build"]], "kqcircuits.elements.spiral_resonator_polygon": [[58, "module-kqcircuits.elements.spiral_resonator_polygon"]], "rectangular_parameters() (in module kqcircuits.elements.spiral_resonator_polygon)": [[58, "kqcircuits.elements.spiral_resonator_polygon.rectangular_parameters"]], "kqcircuits.elements.tsvs": [[59, "module-kqcircuits.elements.tsvs"]], "tsv (class in kqcircuits.elements.tsvs.tsv)": [[60, "kqcircuits.elements.tsvs.tsv.Tsv"]], "create() (kqcircuits.elements.tsvs.tsv.tsv class method)": [[60, "kqcircuits.elements.tsvs.tsv.Tsv.create"]], "default_type (kqcircuits.elements.tsvs.tsv.tsv attribute)": [[60, "kqcircuits.elements.tsvs.tsv.Tsv.default_type"]], "kqcircuits.elements.tsvs.tsv": [[60, "module-kqcircuits.elements.tsvs.tsv"]], "tsvellipse (class in kqcircuits.elements.tsvs.tsv_ellipse)": [[61, "kqcircuits.elements.tsvs.tsv_ellipse.TsvEllipse"]], "create_tsv_connector() (kqcircuits.elements.tsvs.tsv_ellipse.tsvellipse method)": [[61, "kqcircuits.elements.tsvs.tsv_ellipse.TsvEllipse.create_tsv_connector"]], "kqcircuits.elements.tsvs.tsv_ellipse": [[61, "module-kqcircuits.elements.tsvs.tsv_ellipse"]], "produce_impl() (kqcircuits.elements.tsvs.tsv_ellipse.tsvellipse method)": [[61, "kqcircuits.elements.tsvs.tsv_ellipse.TsvEllipse.produce_impl"]], "tsvstandard (class in kqcircuits.elements.tsvs.tsv_standard)": [[62, "kqcircuits.elements.tsvs.tsv_standard.TsvStandard"]], "build() (kqcircuits.elements.tsvs.tsv_standard.tsvstandard method)": [[62, "kqcircuits.elements.tsvs.tsv_standard.TsvStandard.build"]], "kqcircuits.elements.tsvs.tsv_standard": [[62, "module-kqcircuits.elements.tsvs.tsv_standard"]], "node (class in kqcircuits.elements.waveguide_composite)": [[63, "kqcircuits.elements.waveguide_composite.Node"]], "waveguidecomposite (class in kqcircuits.elements.waveguide_composite)": [[63, "kqcircuits.elements.waveguide_composite.WaveguideComposite"]], "align (kqcircuits.elements.waveguide_composite.node attribute)": [[63, "kqcircuits.elements.waveguide_composite.Node.align"]], "angle (kqcircuits.elements.waveguide_composite.node attribute)": [[63, "kqcircuits.elements.waveguide_composite.Node.angle"]], "build() (kqcircuits.elements.waveguide_composite.waveguidecomposite method)": [[63, "kqcircuits.elements.waveguide_composite.WaveguideComposite.build"]], "check_node_type() (kqcircuits.elements.waveguide_composite.waveguidecomposite method)": [[63, "kqcircuits.elements.waveguide_composite.WaveguideComposite.check_node_type"]], "coerce_parameters_impl() (kqcircuits.elements.waveguide_composite.waveguidecomposite method)": [[63, "kqcircuits.elements.waveguide_composite.WaveguideComposite.coerce_parameters_impl"]], "create() (kqcircuits.elements.waveguide_composite.waveguidecomposite class method)": [[63, "kqcircuits.elements.waveguide_composite.WaveguideComposite.create"]], "deserialize() (kqcircuits.elements.waveguide_composite.node class method)": [[63, "kqcircuits.elements.waveguide_composite.Node.deserialize"]], "element (kqcircuits.elements.waveguide_composite.node attribute)": [[63, "kqcircuits.elements.waveguide_composite.Node.element"]], "get_segment_cells() (kqcircuits.elements.waveguide_composite.waveguidecomposite static method)": [[63, "kqcircuits.elements.waveguide_composite.WaveguideComposite.get_segment_cells"]], "get_segment_lengths() (kqcircuits.elements.waveguide_composite.waveguidecomposite static method)": [[63, "kqcircuits.elements.waveguide_composite.WaveguideComposite.get_segment_lengths"]], "inst_name (kqcircuits.elements.waveguide_composite.node attribute)": [[63, "kqcircuits.elements.waveguide_composite.Node.inst_name"]], "kqcircuits.elements.waveguide_composite": [[63, "module-kqcircuits.elements.waveguide_composite"]], "length_before (kqcircuits.elements.waveguide_composite.node attribute)": [[63, "kqcircuits.elements.waveguide_composite.Node.length_before"]], "length_increment (kqcircuits.elements.waveguide_composite.node attribute)": [[63, "kqcircuits.elements.waveguide_composite.Node.length_increment"]], "meander_direction (kqcircuits.elements.waveguide_composite.node attribute)": [[63, "kqcircuits.elements.waveguide_composite.Node.meander_direction"]], "nodes_from_string() (kqcircuits.elements.waveguide_composite.node static method)": [[63, "kqcircuits.elements.waveguide_composite.Node.nodes_from_string"]], "position (kqcircuits.elements.waveguide_composite.node attribute)": [[63, "kqcircuits.elements.waveguide_composite.Node.position"]], "produce_fixed_length_bend() (in module kqcircuits.elements.waveguide_composite)": [[63, "kqcircuits.elements.waveguide_composite.produce_fixed_length_bend"]], "produce_fixed_length_waveguide() (kqcircuits.elements.waveguide_composite.waveguidecomposite static method)": [[63, "kqcircuits.elements.waveguide_composite.WaveguideComposite.produce_fixed_length_waveguide"]], "snap_point() (kqcircuits.elements.waveguide_composite.waveguidecomposite method)": [[63, "kqcircuits.elements.waveguide_composite.WaveguideComposite.snap_point"]], "waveguidecoplanar (class in kqcircuits.elements.waveguide_coplanar)": [[64, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar"]], "build() (kqcircuits.elements.waveguide_coplanar.waveguidecoplanar method)": [[64, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar.build"]], "can_create_from_shape_impl() (kqcircuits.elements.waveguide_coplanar.waveguidecoplanar method)": [[64, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar.can_create_from_shape_impl"]], "get_corner_data() (kqcircuits.elements.waveguide_coplanar.waveguidecoplanar static method)": [[64, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar.get_corner_data"]], "is_continuous() (kqcircuits.elements.waveguide_coplanar.waveguidecoplanar static method)": [[64, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar.is_continuous"]], "kqcircuits.elements.waveguide_coplanar": [[64, "module-kqcircuits.elements.waveguide_coplanar"]], "parameters_from_shape_impl() (kqcircuits.elements.waveguide_coplanar.waveguidecoplanar method)": [[64, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar.parameters_from_shape_impl"]], "produce_end_termination() (kqcircuits.elements.waveguide_coplanar.waveguidecoplanar static method)": [[64, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar.produce_end_termination"]], "produce_waveguide() (kqcircuits.elements.waveguide_coplanar.waveguidecoplanar method)": [[64, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar.produce_waveguide"]], "transformation_from_shape_impl() (kqcircuits.elements.waveguide_coplanar.waveguidecoplanar method)": [[64, "kqcircuits.elements.waveguide_coplanar.WaveguideCoplanar.transformation_from_shape_impl"]], "waveguidecoplanarcurved (class in kqcircuits.elements.waveguide_coplanar_curved)": [[65, "kqcircuits.elements.waveguide_coplanar_curved.WaveguideCoplanarCurved"]], "arc() (in module kqcircuits.elements.waveguide_coplanar_curved)": [[65, "kqcircuits.elements.waveguide_coplanar_curved.arc"]], "build() (kqcircuits.elements.waveguide_coplanar_curved.waveguidecoplanarcurved method)": [[65, "kqcircuits.elements.waveguide_coplanar_curved.WaveguideCoplanarCurved.build"]], "build_geometry() (kqcircuits.elements.waveguide_coplanar_curved.waveguidecoplanarcurved static method)": [[65, "kqcircuits.elements.waveguide_coplanar_curved.WaveguideCoplanarCurved.build_geometry"]], "coerce_parameters_impl() (kqcircuits.elements.waveguide_coplanar_curved.waveguidecoplanarcurved method)": [[65, "kqcircuits.elements.waveguide_coplanar_curved.WaveguideCoplanarCurved.coerce_parameters_impl"]], "create_curve_arcs() (kqcircuits.elements.waveguide_coplanar_curved.waveguidecoplanarcurved static method)": [[65, "kqcircuits.elements.waveguide_coplanar_curved.WaveguideCoplanarCurved.create_curve_arcs"]], "kqcircuits.elements.waveguide_coplanar_curved": [[65, "module-kqcircuits.elements.waveguide_coplanar_curved"]], "produce_curve_termination() (kqcircuits.elements.waveguide_coplanar_curved.waveguidecoplanarcurved static method)": [[65, "kqcircuits.elements.waveguide_coplanar_curved.WaveguideCoplanarCurved.produce_curve_termination"]], "waveguidecoplanarsplitter (class in kqcircuits.elements.waveguide_coplanar_splitter)": [[66, "kqcircuits.elements.waveguide_coplanar_splitter.WaveguideCoplanarSplitter"]], "build() (kqcircuits.elements.waveguide_coplanar_splitter.waveguidecoplanarsplitter method)": [[66, "kqcircuits.elements.waveguide_coplanar_splitter.WaveguideCoplanarSplitter.build"]], "kqcircuits.elements.waveguide_coplanar_splitter": [[66, "module-kqcircuits.elements.waveguide_coplanar_splitter"]], "t_cross_parameters() (in module kqcircuits.elements.waveguide_coplanar_splitter)": [[66, "kqcircuits.elements.waveguide_coplanar_splitter.t_cross_parameters"]], "waveguidecoplanarstraight (class in kqcircuits.elements.waveguide_coplanar_straight)": [[67, "kqcircuits.elements.waveguide_coplanar_straight.WaveguideCoplanarStraight"]], "build() (kqcircuits.elements.waveguide_coplanar_straight.waveguidecoplanarstraight method)": [[67, "kqcircuits.elements.waveguide_coplanar_straight.WaveguideCoplanarStraight.build"]], "build_geometry() (kqcircuits.elements.waveguide_coplanar_straight.waveguidecoplanarstraight static method)": [[67, "kqcircuits.elements.waveguide_coplanar_straight.WaveguideCoplanarStraight.build_geometry"]], "kqcircuits.elements.waveguide_coplanar_straight": [[67, "module-kqcircuits.elements.waveguide_coplanar_straight"]], "waveguidecoplanartaper (class in kqcircuits.elements.waveguide_coplanar_taper)": [[68, "kqcircuits.elements.waveguide_coplanar_taper.WaveguideCoplanarTaper"]], "build() (kqcircuits.elements.waveguide_coplanar_taper.waveguidecoplanartaper method)": [[68, "kqcircuits.elements.waveguide_coplanar_taper.WaveguideCoplanarTaper.build"]], "kqcircuits.elements.waveguide_coplanar_taper": [[68, "module-kqcircuits.elements.waveguide_coplanar_taper"]], "kqcircuits.junctions": [[69, "module-kqcircuits.junctions"]], "junction (class in kqcircuits.junctions.junction)": [[70, "kqcircuits.junctions.junction.Junction"]], "library_description (kqcircuits.junctions.junction.junction attribute)": [[70, "kqcircuits.junctions.junction.Junction.LIBRARY_DESCRIPTION"]], "library_name (kqcircuits.junctions.junction.junction attribute)": [[70, "kqcircuits.junctions.junction.Junction.LIBRARY_NAME"]], "library_path (kqcircuits.junctions.junction.junction attribute)": [[70, "kqcircuits.junctions.junction.Junction.LIBRARY_PATH"]], "coerce_parameters_impl() (kqcircuits.junctions.junction.junction method)": [[70, "kqcircuits.junctions.junction.Junction.coerce_parameters_impl"]], "create() (kqcircuits.junctions.junction.junction class method)": [[70, "kqcircuits.junctions.junction.Junction.create"]], "default_type (kqcircuits.junctions.junction.junction attribute)": [[70, "kqcircuits.junctions.junction.Junction.default_type"]], "kqcircuits.junctions.junction": [[70, "module-kqcircuits.junctions.junction"]], "manhattan (class in kqcircuits.junctions.manhattan)": [[71, "kqcircuits.junctions.manhattan.Manhattan"]], "build() (kqcircuits.junctions.manhattan.manhattan method)": [[71, "kqcircuits.junctions.manhattan.Manhattan.build"]], "kqcircuits.junctions.manhattan": [[71, "module-kqcircuits.junctions.manhattan"]], "produce_contact_pads() (kqcircuits.junctions.manhattan.manhattan method)": [[71, "kqcircuits.junctions.manhattan.Manhattan.produce_contact_pads"]], "produce_manhattan_squid() (kqcircuits.junctions.manhattan.manhattan method)": [[71, "kqcircuits.junctions.manhattan.Manhattan.produce_manhattan_squid"]], "produce_tp_large() (kqcircuits.junctions.manhattan.manhattan method)": [[71, "kqcircuits.junctions.manhattan.Manhattan.produce_tp_large"]], "produce_tp_small() (kqcircuits.junctions.manhattan.manhattan method)": [[71, "kqcircuits.junctions.manhattan.Manhattan.produce_tp_small"]], "manhattansinglejunction (class in kqcircuits.junctions.manhattan_single_junction)": [[72, "kqcircuits.junctions.manhattan_single_junction.ManhattanSingleJunction"]], "build() (kqcircuits.junctions.manhattan_single_junction.manhattansinglejunction method)": [[72, "kqcircuits.junctions.manhattan_single_junction.ManhattanSingleJunction.build"]], "kqcircuits.junctions.manhattan_single_junction": [[72, "module-kqcircuits.junctions.manhattan_single_junction"]], "produce_manhattan_junction() (kqcircuits.junctions.manhattan_single_junction.manhattansinglejunction method)": [[72, "kqcircuits.junctions.manhattan_single_junction.ManhattanSingleJunction.produce_manhattan_junction"]], "nosquid (class in kqcircuits.junctions.no_squid)": [[73, "kqcircuits.junctions.no_squid.NoSquid"]], "build() (kqcircuits.junctions.no_squid.nosquid method)": [[73, "kqcircuits.junctions.no_squid.NoSquid.build"]], "kqcircuits.junctions.no_squid": [[73, "module-kqcircuits.junctions.no_squid"]], "sim (class in kqcircuits.junctions.sim)": [[74, "kqcircuits.junctions.sim.Sim"]], "build() (kqcircuits.junctions.sim.sim method)": [[74, "kqcircuits.junctions.sim.Sim.build"]], "kqcircuits.junctions.sim": [[74, "module-kqcircuits.junctions.sim"]], "squid (class in kqcircuits.junctions.squid)": [[75, "kqcircuits.junctions.squid.Squid"]], "kqcircuits.junctions.squid": [[75, "module-kqcircuits.junctions.squid"]], "klayoutview (class in kqcircuits.klayout_view)": [[76, "kqcircuits.klayout_view.KLayoutView"]], "missinguilibraryexception": [[76, "kqcircuits.klayout_view.MissingUILibraryException"]], "active_cell (kqcircuits.klayout_view.klayoutview property)": [[76, "kqcircuits.klayout_view.KLayoutView.active_cell"]], "add_default_layers() (kqcircuits.klayout_view.klayoutview method)": [[76, "kqcircuits.klayout_view.KLayoutView.add_default_layers"]], "cell_view (kqcircuits.klayout_view.klayoutview property)": [[76, "kqcircuits.klayout_view.KLayoutView.cell_view"]], "clear_layers() (kqcircuits.klayout_view.klayoutview method)": [[76, "kqcircuits.klayout_view.KLayoutView.clear_layers"]], "close() (kqcircuits.klayout_view.klayoutview method)": [[76, "kqcircuits.klayout_view.KLayoutView.close"]], "create_top_cell() (kqcircuits.klayout_view.klayoutview method)": [[76, "kqcircuits.klayout_view.KLayoutView.create_top_cell"]], "export_all_layers_bitmap() (kqcircuits.klayout_view.klayoutview method)": [[76, "kqcircuits.klayout_view.KLayoutView.export_all_layers_bitmap"]], "export_layers_bitmaps() (kqcircuits.klayout_view.klayoutview method)": [[76, "kqcircuits.klayout_view.KLayoutView.export_layers_bitmaps"]], "export_pcell_png() (kqcircuits.klayout_view.klayoutview method)": [[76, "kqcircuits.klayout_view.KLayoutView.export_pcell_png"]], "focus() (kqcircuits.klayout_view.klayoutview method)": [[76, "kqcircuits.klayout_view.KLayoutView.focus"]], "get_active_cell() (kqcircuits.klayout_view.klayoutview static method)": [[76, "kqcircuits.klayout_view.KLayoutView.get_active_cell"]], "get_active_cell_view() (kqcircuits.klayout_view.klayoutview static method)": [[76, "kqcircuits.klayout_view.KLayoutView.get_active_cell_view"]], "get_active_layout() (kqcircuits.klayout_view.klayoutview static method)": [[76, "kqcircuits.klayout_view.KLayoutView.get_active_layout"]], "get_pixels() (kqcircuits.klayout_view.klayoutview method)": [[76, "kqcircuits.klayout_view.KLayoutView.get_pixels"]], "insert_cell() (kqcircuits.klayout_view.klayoutview method)": [[76, "kqcircuits.klayout_view.KLayoutView.insert_cell"]], "kqcircuits.klayout_view": [[76, "module-kqcircuits.klayout_view"]], "layout (kqcircuits.klayout_view.klayoutview property)": [[76, "kqcircuits.klayout_view.KLayoutView.layout"]], "layout_view (kqcircuits.klayout_view.klayoutview attribute)": [[76, "kqcircuits.klayout_view.KLayoutView.layout_view"]], "resolve_default_layer_info() (in module kqcircuits.klayout_view)": [[76, "kqcircuits.klayout_view.resolve_default_layer_info"]], "show() (kqcircuits.klayout_view.klayoutview method)": [[76, "kqcircuits.klayout_view.KLayoutView.show"]], "top_cell (kqcircuits.klayout_view.klayoutview property)": [[76, "kqcircuits.klayout_view.KLayoutView.top_cell"]], "layercluster (class in kqcircuits.layer_cluster)": [[77, "kqcircuits.layer_cluster.LayerCluster"]], "all_layers() (kqcircuits.layer_cluster.layercluster method)": [[77, "kqcircuits.layer_cluster.LayerCluster.all_layers"]], "extra_layers (kqcircuits.layer_cluster.layercluster attribute)": [[77, "kqcircuits.layer_cluster.LayerCluster.extra_layers"]], "face_id (kqcircuits.layer_cluster.layercluster attribute)": [[77, "kqcircuits.layer_cluster.LayerCluster.face_id"]], "kqcircuits.layer_cluster": [[77, "module-kqcircuits.layer_cluster"]], "main_layers (kqcircuits.layer_cluster.layercluster attribute)": [[77, "kqcircuits.layer_cluster.LayerCluster.main_layers"]], "kqcircuits.layer_config": [[78, "module-kqcircuits.layer_config"]], "kqcircuits.layer_config.default_layer_config": [[79, "module-kqcircuits.layer_config.default_layer_config"]], "kqcircuits.layer_config.example_layer_config": [[80, "module-kqcircuits.layer_config.example_layer_config"]], "kqcircuits.masks": [[81, "module-kqcircuits.masks"]], "export_bitmaps() (in module kqcircuits.masks.mask_export)": [[82, "kqcircuits.masks.mask_export.export_bitmaps"]], "export_chip() (in module kqcircuits.masks.mask_export)": [[82, "kqcircuits.masks.mask_export.export_chip"]], "export_designs() (in module kqcircuits.masks.mask_export)": [[82, "kqcircuits.masks.mask_export.export_designs"]], "export_docs() (in module kqcircuits.masks.mask_export)": [[82, "kqcircuits.masks.mask_export.export_docs"]], "export_junction_parameters() (in module kqcircuits.masks.mask_export)": [[82, "kqcircuits.masks.mask_export.export_junction_parameters"]], "export_mask() (in module kqcircuits.masks.mask_export)": [[82, "kqcircuits.masks.mask_export.export_mask"]], "export_mask_set() (in module kqcircuits.masks.mask_export)": [[82, "kqcircuits.masks.mask_export.export_mask_set"]], "export_masks_of_face() (in module kqcircuits.masks.mask_export)": [[82, "kqcircuits.masks.mask_export.export_masks_of_face"]], "get_mask_layout_full_name() (in module kqcircuits.masks.mask_export)": [[82, "kqcircuits.masks.mask_export.get_mask_layout_full_name"]], "kqcircuits.masks.mask_export": [[82, "module-kqcircuits.masks.mask_export"]], "masklayout (class in kqcircuits.masks.mask_layout)": [[83, "kqcircuits.masks.mask_layout.MaskLayout"]], "add_chips_map() (kqcircuits.masks.mask_layout.masklayout method)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.add_chips_map"]], "added_chips (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.added_chips"]], "align_to (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.align_to"]], "bbox_face_ids (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.bbox_face_ids"]], "build() (kqcircuits.masks.mask_layout.masklayout method)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.build"]], "chip_box_offset (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.chip_box_offset"]], "chip_copies (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.chip_copies"]], "chip_size (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.chip_size"]], "chip_trans (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.chip_trans"]], "chips_map (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.chips_map"]], "chips_map_legend (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.chips_map_legend"]], "chips_map_offset (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.chips_map_offset"]], "chips_placed_by_position_label (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.chips_placed_by_position_label"]], "covered_region_excluded_layers (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.covered_region_excluded_layers"]], "dice_width (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.dice_width"]], "edge_clearance (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.edge_clearance"]], "extra_chips (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.extra_chips"]], "extra_id (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.extra_id"]], "face() (kqcircuits.masks.mask_layout.masklayout method)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.face"]], "face_id (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.face_id"]], "generate_and_insert_chip_copy_labels() (kqcircuits.masks.mask_layout.masklayout method)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.generate_and_insert_chip_copy_labels"]], "generate_position_label() (kqcircuits.masks.mask_layout.masklayout static method)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.generate_position_label"]], "insert_chip_copy_labels() (kqcircuits.masks.mask_layout.masklayout method)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.insert_chip_copy_labels"]], "insert_chips() (kqcircuits.masks.mask_layout.masklayout method)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.insert_chips"]], "kqcircuits.masks.mask_layout": [[83, "module-kqcircuits.masks.mask_layout"]], "layers_to_mask (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.layers_to_mask"]], "layout (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.layout"]], "mask_export_density_layers (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.mask_export_density_layers"]], "mask_export_layers (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.mask_export_layers"]], "mask_marker_offset (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.mask_marker_offset"]], "mask_markers_dict (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.mask_markers_dict"]], "mask_name_box_margin (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.mask_name_box_margin"]], "mask_name_offset (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.mask_name_offset"]], "mask_name_scale (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.mask_name_scale"]], "mask_text_scale (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.mask_text_scale"]], "mirror_labels (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.mirror_labels"]], "name (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.name"]], "position_label_to_two_coordinates() (kqcircuits.masks.mask_layout.masklayout static method)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.position_label_to_two_coordinates"]], "remove_chips (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.remove_chips"]], "submasks (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.submasks"]], "text_margin (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.text_margin"]], "top_cell (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.top_cell"]], "two_coordinates_to_position_label() (kqcircuits.masks.mask_layout.masklayout static method)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.two_coordinates_to_position_label"]], "version (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.version"]], "wafer_bottom_flat_length (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.wafer_bottom_flat_length"]], "wafer_center (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.wafer_center"]], "wafer_rad (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.wafer_rad"]], "wafer_top_flat_length (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.wafer_top_flat_length"]], "with_grid (kqcircuits.masks.mask_layout.masklayout attribute)": [[83, "kqcircuits.masks.mask_layout.MaskLayout.with_grid"]], "maskset (class in kqcircuits.masks.mask_set)": [[84, "kqcircuits.masks.mask_set.MaskSet"]], "add_chip() (kqcircuits.masks.mask_set.maskset method)": [[84, "kqcircuits.masks.mask_set.MaskSet.add_chip"]], "add_mask_layout() (kqcircuits.masks.mask_set.maskset method)": [[84, "kqcircuits.masks.mask_set.MaskSet.add_mask_layout"]], "add_multi_face_mask_layout() (kqcircuits.masks.mask_set.maskset method)": [[84, "kqcircuits.masks.mask_set.MaskSet.add_multi_face_mask_layout"]], "build() (kqcircuits.masks.mask_set.maskset method)": [[84, "kqcircuits.masks.mask_set.MaskSet.build"]], "chips_map_from_box_map() (kqcircuits.masks.mask_set.maskset static method)": [[84, "kqcircuits.masks.mask_set.MaskSet.chips_map_from_box_map"]], "chips_map_legend (kqcircuits.masks.mask_set.maskset attribute)": [[84, "kqcircuits.masks.mask_set.MaskSet.chips_map_legend"]], "export() (kqcircuits.masks.mask_set.maskset method)": [[84, "kqcircuits.masks.mask_set.MaskSet.export"]], "export_drc (kqcircuits.masks.mask_set.maskset attribute)": [[84, "kqcircuits.masks.mask_set.MaskSet.export_drc"]], "export_path (kqcircuits.masks.mask_set.maskset attribute)": [[84, "kqcircuits.masks.mask_set.MaskSet.export_path"]], "kqcircuits.masks.mask_set": [[84, "module-kqcircuits.masks.mask_set"]], "layout (kqcircuits.masks.mask_set.maskset attribute)": [[84, "kqcircuits.masks.mask_set.MaskSet.layout"]], "mask_export_layers (kqcircuits.masks.mask_set.maskset attribute)": [[84, "kqcircuits.masks.mask_set.MaskSet.mask_export_layers"]], "mask_layouts (kqcircuits.masks.mask_set.maskset attribute)": [[84, "kqcircuits.masks.mask_set.MaskSet.mask_layouts"]], "name (kqcircuits.masks.mask_set.maskset attribute)": [[84, "kqcircuits.masks.mask_set.MaskSet.name"]], "used_chips (kqcircuits.masks.mask_set.maskset attribute)": [[84, "kqcircuits.masks.mask_set.MaskSet.used_chips"]], "version (kqcircuits.masks.mask_set.maskset attribute)": [[84, "kqcircuits.masks.mask_set.MaskSet.version"]], "with_grid (kqcircuits.masks.mask_set.maskset attribute)": [[84, "kqcircuits.masks.mask_set.MaskSet.with_grid"]], "multifacemasklayout (class in kqcircuits.masks.multi_face_mask_layout)": [[85, "kqcircuits.masks.multi_face_mask_layout.MultiFaceMaskLayout"]], "add_chips_map() (kqcircuits.masks.multi_face_mask_layout.multifacemasklayout method)": [[85, "kqcircuits.masks.multi_face_mask_layout.MultiFaceMaskLayout.add_chips_map"]], "face_ids (kqcircuits.masks.multi_face_mask_layout.multifacemasklayout attribute)": [[85, "kqcircuits.masks.multi_face_mask_layout.MultiFaceMaskLayout.face_ids"]], "kqcircuits.masks.multi_face_mask_layout": [[85, "module-kqcircuits.masks.multi_face_mask_layout"]], "mask_layouts (kqcircuits.masks.multi_face_mask_layout.multifacemasklayout attribute)": [[85, "kqcircuits.masks.multi_face_mask_layout.MultiFaceMaskLayout.mask_layouts"]], "is_standalone_session() (in module kqcircuits.pya_resolver)": [[86, "kqcircuits.pya_resolver.is_standalone_session"]], "klayout_executable_command() (in module kqcircuits.pya_resolver)": [[86, "kqcircuits.pya_resolver.klayout_executable_command"]], "kqcircuits.pya_resolver": [[86, "module-kqcircuits.pya_resolver"]], "kqcircuits.qubits": [[87, "module-kqcircuits.qubits"]], "circulartransmonsingleisland (class in kqcircuits.qubits.circular_transmon_single_island)": [[88, "kqcircuits.qubits.circular_transmon_single_island.CircularTransmonSingleIsland"]], "build() (kqcircuits.qubits.circular_transmon_single_island.circulartransmonsingleisland method)": [[88, "kqcircuits.qubits.circular_transmon_single_island.CircularTransmonSingleIsland.build"]], "get_sim_ports() (kqcircuits.qubits.circular_transmon_single_island.circulartransmonsingleisland class method)": [[88, "kqcircuits.qubits.circular_transmon_single_island.CircularTransmonSingleIsland.get_sim_ports"]], "kqcircuits.qubits.circular_transmon_single_island": [[88, "module-kqcircuits.qubits.circular_transmon_single_island"]], "concentrictransmon (class in kqcircuits.qubits.concentric_transmon)": [[89, "kqcircuits.qubits.concentric_transmon.ConcentricTransmon"]], "build() (kqcircuits.qubits.concentric_transmon.concentrictransmon method)": [[89, "kqcircuits.qubits.concentric_transmon.ConcentricTransmon.build"]], "get_sim_ports() (kqcircuits.qubits.concentric_transmon.concentrictransmon class method)": [[89, "kqcircuits.qubits.concentric_transmon.ConcentricTransmon.get_sim_ports"]], "kqcircuits.qubits.concentric_transmon": [[89, "module-kqcircuits.qubits.concentric_transmon"]], "doublepads (class in kqcircuits.qubits.double_pads)": [[90, "kqcircuits.qubits.double_pads.DoublePads"]], "build() (kqcircuits.qubits.double_pads.doublepads method)": [[90, "kqcircuits.qubits.double_pads.DoublePads.build"]], "get_sim_ports() (kqcircuits.qubits.double_pads.doublepads class method)": [[90, "kqcircuits.qubits.double_pads.DoublePads.get_sim_ports"]], "kqcircuits.qubits.double_pads": [[90, "module-kqcircuits.qubits.double_pads"]], "doublepadssplines (class in kqcircuits.qubits.double_pads_splines)": [[91, "kqcircuits.qubits.double_pads_splines.DoublePadsSplines"]], "kqcircuits.qubits.double_pads_splines": [[91, "module-kqcircuits.qubits.double_pads_splines"]], "library_description (kqcircuits.qubits.qubit.qubit attribute)": [[92, "kqcircuits.qubits.qubit.Qubit.LIBRARY_DESCRIPTION"]], "library_name (kqcircuits.qubits.qubit.qubit attribute)": [[92, "kqcircuits.qubits.qubit.Qubit.LIBRARY_NAME"]], "library_path (kqcircuits.qubits.qubit.qubit attribute)": [[92, "kqcircuits.qubits.qubit.Qubit.LIBRARY_PATH"]], "qubit (class in kqcircuits.qubits.qubit)": [[92, "kqcircuits.qubits.qubit.Qubit"]], "coerce_parameters_impl() (kqcircuits.qubits.qubit.qubit method)": [[92, "kqcircuits.qubits.qubit.Qubit.coerce_parameters_impl"]], "kqcircuits.qubits.qubit": [[92, "module-kqcircuits.qubits.qubit"]], "produce_fluxline() (kqcircuits.qubits.qubit.qubit method)": [[92, "kqcircuits.qubits.qubit.Qubit.produce_fluxline"]], "produce_squid() (kqcircuits.qubits.qubit.qubit method)": [[92, "kqcircuits.qubits.qubit.Qubit.produce_squid"]], "swissmon (class in kqcircuits.qubits.swissmon)": [[93, "kqcircuits.qubits.swissmon.Swissmon"]], "build() (kqcircuits.qubits.swissmon.swissmon method)": [[93, "kqcircuits.qubits.swissmon.Swissmon.build"]], "get_sim_ports() (kqcircuits.qubits.swissmon.swissmon class method)": [[93, "kqcircuits.qubits.swissmon.Swissmon.get_sim_ports"]], "kqcircuits.qubits.swissmon": [[93, "module-kqcircuits.qubits.swissmon"]], "argument_parser() (in module kqcircuits.run)": [[94, "kqcircuits.run.argument_parser"]], "kqcircuits.run": [[94, "module-kqcircuits.run"]], "run() (in module kqcircuits.run)": [[94, "kqcircuits.run.run"]], "run_kqc() (in module kqcircuits.run)": [[94, "kqcircuits.run.run_kqc"]], "kqcircuits.simulations": [[95, "module-kqcircuits.simulations"]], "airbridgessim (class in kqcircuits.simulations.airbridges_sim)": [[96, "kqcircuits.simulations.airbridges_sim.AirbridgesSim"]], "build() (kqcircuits.simulations.airbridges_sim.airbridgessim method)": [[96, "kqcircuits.simulations.airbridges_sim.AirbridgesSim.build"]], "kqcircuits.simulations.airbridges_sim": [[96, "module-kqcircuits.simulations.airbridges_sim"]], "crosssectionsimulation (class in kqcircuits.simulations.cross_section_simulation)": [[97, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation"]], "library_name (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation attribute)": [[97, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.LIBRARY_NAME"]], "build() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[97, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.build"]], "get_dict_by_layers() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[97, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.get_dict_by_layers"]], "get_layers() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[97, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.get_layers"]], "get_parameters() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[97, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.get_parameters"]], "get_schema() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation class method)": [[97, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.get_schema"]], "get_sim_layer() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[97, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.get_sim_layer"]], "get_simulation_data() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[97, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.get_simulation_data"]], "kqcircuits.simulations.cross_section_simulation": [[97, "module-kqcircuits.simulations.cross_section_simulation"]], "process_layers() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[97, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.process_layers"]], "register_cell_layers_as_sim_layers() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[97, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.register_cell_layers_as_sim_layers"]], "set_permittivity() (kqcircuits.simulations.cross_section_simulation.crosssectionsimulation method)": [[97, "kqcircuits.simulations.cross_section_simulation.CrossSectionSimulation.set_permittivity"]], "emptysimulation (class in kqcircuits.simulations.empty_simulation)": [[98, "kqcircuits.simulations.empty_simulation.EmptySimulation"]], "build() (kqcircuits.simulations.empty_simulation.emptysimulation method)": [[98, "kqcircuits.simulations.empty_simulation.EmptySimulation.build"]], "kqcircuits.simulations.empty_simulation": [[98, "module-kqcircuits.simulations.empty_simulation"]], "correction_cuts() (in module kqcircuits.simulations.epr.circular_capacitor)": [[100, "kqcircuits.simulations.epr.circular_capacitor.correction_cuts"]], "extract_circular_capacitor_from() (in module kqcircuits.simulations.epr.circular_capacitor)": [[100, "kqcircuits.simulations.epr.circular_capacitor.extract_circular_capacitor_from"]], "kqcircuits.simulations.epr.circular_capacitor": [[100, "module-kqcircuits.simulations.epr.circular_capacitor"]], "partition_regions() (in module kqcircuits.simulations.epr.circular_capacitor)": [[100, "kqcircuits.simulations.epr.circular_capacitor.partition_regions"]], "correction_cuts() (in module kqcircuits.simulations.epr.example)": [[101, "kqcircuits.simulations.epr.example.correction_cuts"]], "extract_from() (in module kqcircuits.simulations.epr.example)": [[101, "kqcircuits.simulations.epr.example.extract_from"]], "kqcircuits.simulations.epr.example": [[101, "module-kqcircuits.simulations.epr.example"]], "partition_regions() (in module kqcircuits.simulations.epr.example)": [[101, "kqcircuits.simulations.epr.example.partition_regions"]], "correction_cuts() (in module kqcircuits.simulations.epr.smooth_capacitor)": [[102, "kqcircuits.simulations.epr.smooth_capacitor.correction_cuts"]], "kqcircuits.simulations.epr.smooth_capacitor": [[102, "module-kqcircuits.simulations.epr.smooth_capacitor"]], "partition_regions() (in module kqcircuits.simulations.epr.smooth_capacitor)": [[102, "kqcircuits.simulations.epr.smooth_capacitor.partition_regions"]], "correction_cuts() (in module kqcircuits.simulations.epr.swissmon)": [[103, "kqcircuits.simulations.epr.swissmon.correction_cuts"]], "extract_swissmon_from() (in module kqcircuits.simulations.epr.swissmon)": [[103, "kqcircuits.simulations.epr.swissmon.extract_swissmon_from"]], "kqcircuits.simulations.epr.swissmon": [[103, "module-kqcircuits.simulations.epr.swissmon"]], "partition_regions() (in module kqcircuits.simulations.epr.swissmon)": [[103, "kqcircuits.simulations.epr.swissmon.partition_regions"]], "extract_child_simulation() (in module kqcircuits.simulations.epr.utils)": [[104, "kqcircuits.simulations.epr.utils.extract_child_simulation"]], "kqcircuits.simulations.epr.utils": [[104, "module-kqcircuits.simulations.epr.utils"]], "kqcircuits.simulations.export": [[105, "module-kqcircuits.simulations.export"]], "kqcircuits.simulations.export.ansys": [[106, "module-kqcircuits.simulations.export.ansys"]], "export_ansys() (in module kqcircuits.simulations.export.ansys.ansys_export)": [[107, "kqcircuits.simulations.export.ansys.ansys_export.export_ansys"]], "export_ansys_bat() (in module kqcircuits.simulations.export.ansys.ansys_export)": [[107, "kqcircuits.simulations.export.ansys.ansys_export.export_ansys_bat"]], "export_ansys_json() (in module kqcircuits.simulations.export.ansys.ansys_export)": [[107, "kqcircuits.simulations.export.ansys.ansys_export.export_ansys_json"]], "kqcircuits.simulations.export.ansys.ansys_export": [[107, "module-kqcircuits.simulations.export.ansys.ansys_export"]], "ansyscrosssectionsolution (class in kqcircuits.simulations.export.ansys.ansys_solution)": [[108, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCrossSectionSolution"]], "ansyscurrentsolution (class in kqcircuits.simulations.export.ansys.ansys_solution)": [[108, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCurrentSolution"]], "ansyseigenmodesolution (class in kqcircuits.simulations.export.ansys.ansys_solution)": [[108, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution"]], "ansyshfsssolution (class in kqcircuits.simulations.export.ansys.ansys_solution)": [[108, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution"]], "ansysq3dsolution (class in kqcircuits.simulations.export.ansys.ansys_solution)": [[108, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysQ3dSolution"]], "ansyssolution (class in kqcircuits.simulations.export.ansys.ansys_solution)": [[108, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution"]], "ansysvoltagesolution (class in kqcircuits.simulations.export.ansys.ansys_solution)": [[108, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysVoltageSolution"]], "ansys_project_template (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution attribute)": [[108, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.ansys_project_template"]], "ansys_tool (kqcircuits.simulations.export.ansys.ansys_solution.ansyscrosssectionsolution attribute)": [[108, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCrossSectionSolution.ansys_tool"]], "ansys_tool (kqcircuits.simulations.export.ansys.ansys_solution.ansyscurrentsolution attribute)": [[108, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCurrentSolution.ansys_tool"]], "ansys_tool (kqcircuits.simulations.export.ansys.ansys_solution.ansyseigenmodesolution attribute)": [[108, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution.ansys_tool"]], "ansys_tool (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[108, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.ansys_tool"]], "ansys_tool (kqcircuits.simulations.export.ansys.ansys_solution.ansysq3dsolution attribute)": [[108, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysQ3dSolution.ansys_tool"]], "ansys_tool (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution attribute)": [[108, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.ansys_tool"]], "ansys_tool (kqcircuits.simulations.export.ansys.ansys_solution.ansysvoltagesolution attribute)": [[108, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysVoltageSolution.ansys_tool"]], "capacitance_export (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[108, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.capacitance_export"]], "frequency (kqcircuits.simulations.export.ansys.ansys_solution.ansyscrosssectionsolution attribute)": [[108, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCrossSectionSolution.frequency"]], "frequency (kqcircuits.simulations.export.ansys.ansys_solution.ansyscurrentsolution attribute)": [[108, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCurrentSolution.frequency"]], "frequency (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[108, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.frequency"]], "frequency (kqcircuits.simulations.export.ansys.ansys_solution.ansysq3dsolution attribute)": [[108, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysQ3dSolution.frequency"]], "frequency (kqcircuits.simulations.export.ansys.ansys_solution.ansysvoltagesolution attribute)": [[108, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysVoltageSolution.frequency"]], "frequency_units (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution attribute)": [[108, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.frequency_units"]], "get_ansys_solution() (in module kqcircuits.simulations.export.ansys.ansys_solution)": [[108, "kqcircuits.simulations.export.ansys.ansys_solution.get_ansys_solution"]], "get_solution_data() (kqcircuits.simulations.export.ansys.ansys_solution.ansyscrosssectionsolution method)": [[108, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCrossSectionSolution.get_solution_data"]], "get_solution_data() (kqcircuits.simulations.export.ansys.ansys_solution.ansyscurrentsolution method)": [[108, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCurrentSolution.get_solution_data"]], "get_solution_data() (kqcircuits.simulations.export.ansys.ansys_solution.ansyseigenmodesolution method)": [[108, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution.get_solution_data"]], "get_solution_data() (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution method)": [[108, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.get_solution_data"]], "get_solution_data() (kqcircuits.simulations.export.ansys.ansys_solution.ansysq3dsolution method)": [[108, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysQ3dSolution.get_solution_data"]], "get_solution_data() (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution method)": [[108, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.get_solution_data"]], "get_solution_data() (kqcircuits.simulations.export.ansys.ansys_solution.ansysvoltagesolution method)": [[108, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysVoltageSolution.get_solution_data"]], "integrate_energies (kqcircuits.simulations.export.ansys.ansys_solution.ansyscrosssectionsolution attribute)": [[108, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCrossSectionSolution.integrate_energies"]], "integrate_energies (kqcircuits.simulations.export.ansys.ansys_solution.ansyscurrentsolution attribute)": [[108, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCurrentSolution.integrate_energies"]], "integrate_energies (kqcircuits.simulations.export.ansys.ansys_solution.ansyseigenmodesolution attribute)": [[108, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution.integrate_energies"]], "integrate_energies (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[108, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.integrate_energies"]], "integrate_energies (kqcircuits.simulations.export.ansys.ansys_solution.ansysvoltagesolution attribute)": [[108, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysVoltageSolution.integrate_energies"]], "integrate_magnetic_flux (kqcircuits.simulations.export.ansys.ansys_solution.ansyscurrentsolution attribute)": [[108, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCurrentSolution.integrate_magnetic_flux"]], "integrate_magnetic_flux (kqcircuits.simulations.export.ansys.ansys_solution.ansyseigenmodesolution attribute)": [[108, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution.integrate_magnetic_flux"]], "integrate_magnetic_flux (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[108, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.integrate_magnetic_flux"]], "integrate_magnetic_flux (kqcircuits.simulations.export.ansys.ansys_solution.ansysvoltagesolution attribute)": [[108, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysVoltageSolution.integrate_magnetic_flux"]], "kqcircuits.simulations.export.ansys.ansys_solution": [[108, "module-kqcircuits.simulations.export.ansys.ansys_solution"]], "max_delta_e (kqcircuits.simulations.export.ansys.ansys_solution.ansyscurrentsolution attribute)": [[108, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCurrentSolution.max_delta_e"]], "max_delta_e (kqcircuits.simulations.export.ansys.ansys_solution.ansysvoltagesolution attribute)": [[108, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysVoltageSolution.max_delta_e"]], "max_delta_f (kqcircuits.simulations.export.ansys.ansys_solution.ansyseigenmodesolution attribute)": [[108, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution.max_delta_f"]], "max_delta_s (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[108, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.max_delta_s"]], "maximum_passes (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution attribute)": [[108, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.maximum_passes"]], "mesh_size (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution attribute)": [[108, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.mesh_size"]], "min_frequency (kqcircuits.simulations.export.ansys.ansys_solution.ansyseigenmodesolution attribute)": [[108, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution.min_frequency"]], "minimum_converged_passes (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution attribute)": [[108, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.minimum_converged_passes"]], "minimum_passes (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution attribute)": [[108, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.minimum_passes"]], "n_modes (kqcircuits.simulations.export.ansys.ansys_solution.ansyseigenmodesolution attribute)": [[108, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysEigenmodeSolution.n_modes"]], "percent_error (kqcircuits.simulations.export.ansys.ansys_solution.ansyscrosssectionsolution attribute)": [[108, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysCrossSectionSolution.percent_error"]], "percent_error (kqcircuits.simulations.export.ansys.ansys_solution.ansysq3dsolution attribute)": [[108, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysQ3dSolution.percent_error"]], "percent_refinement (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution attribute)": [[108, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.percent_refinement"]], "simulation_flags (kqcircuits.simulations.export.ansys.ansys_solution.ansyssolution attribute)": [[108, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysSolution.simulation_flags"]], "sweep_count (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[108, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.sweep_count"]], "sweep_enabled (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[108, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.sweep_enabled"]], "sweep_end (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[108, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.sweep_end"]], "sweep_start (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[108, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.sweep_start"]], "sweep_type (kqcircuits.simulations.export.ansys.ansys_solution.ansyshfsssolution attribute)": [[108, "kqcircuits.simulations.export.ansys.ansys_solution.AnsysHfssSolution.sweep_type"]], "kqcircuits.simulations.export.elmer": [[109, "module-kqcircuits.simulations.export.elmer"]], "export_elmer() (in module kqcircuits.simulations.export.elmer.elmer_export)": [[110, "kqcircuits.simulations.export.elmer.elmer_export.export_elmer"]], "export_elmer_json() (in module kqcircuits.simulations.export.elmer.elmer_export)": [[110, "kqcircuits.simulations.export.elmer.elmer_export.export_elmer_json"]], "export_elmer_script() (in module kqcircuits.simulations.export.elmer.elmer_export)": [[110, "kqcircuits.simulations.export.elmer.elmer_export.export_elmer_script"]], "kqcircuits.simulations.export.elmer.elmer_export": [[110, "module-kqcircuits.simulations.export.elmer.elmer_export"]], "elmercapacitancesolution (class in kqcircuits.simulations.export.elmer.elmer_solution)": [[111, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCapacitanceSolution"]], "elmercrosssectionsolution (class in kqcircuits.simulations.export.elmer.elmer_solution)": [[111, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution"]], "elmerepr3dsolution (class in kqcircuits.simulations.export.elmer.elmer_solution)": [[111, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerEPR3DSolution"]], "elmersolution (class in kqcircuits.simulations.export.elmer.elmer_solution)": [[111, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution"]], "elmervectorhelmholtzsolution (class in kqcircuits.simulations.export.elmer.elmer_solution)": [[111, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution"]], "boundary_conditions (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[111, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.boundary_conditions"]], "conductivity (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[111, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.conductivity"]], "convergence_tolerance (kqcircuits.simulations.export.elmer.elmer_solution.elmercapacitancesolution attribute)": [[111, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCapacitanceSolution.convergence_tolerance"]], "convergence_tolerance (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[111, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.convergence_tolerance"]], "convergence_tolerance (kqcircuits.simulations.export.elmer.elmer_solution.elmerepr3dsolution attribute)": [[111, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerEPR3DSolution.convergence_tolerance"]], "convergence_tolerance (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[111, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.convergence_tolerance"]], "frequency (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[111, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.frequency"]], "frequency_batch (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[111, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.frequency_batch"]], "get_elmer_solution() (in module kqcircuits.simulations.export.elmer.elmer_solution)": [[111, "kqcircuits.simulations.export.elmer.elmer_solution.get_elmer_solution"]], "get_solution_data() (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution method)": [[111, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.get_solution_data"]], "integrate_energies (kqcircuits.simulations.export.elmer.elmer_solution.elmercapacitancesolution attribute)": [[111, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCapacitanceSolution.integrate_energies"]], "integrate_energies (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[111, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.integrate_energies"]], "is_axisymmetric (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[111, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.is_axisymmetric"]], "kqcircuits.simulations.export.elmer.elmer_solution": [[111, "module-kqcircuits.simulations.export.elmer.elmer_solution"]], "linear_system_method (kqcircuits.simulations.export.elmer.elmer_solution.elmercapacitancesolution attribute)": [[111, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCapacitanceSolution.linear_system_method"]], "linear_system_method (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[111, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.linear_system_method"]], "linear_system_method (kqcircuits.simulations.export.elmer.elmer_solution.elmerepr3dsolution attribute)": [[111, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerEPR3DSolution.linear_system_method"]], "linear_system_preconditioning (kqcircuits.simulations.export.elmer.elmer_solution.elmercapacitancesolution attribute)": [[111, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCapacitanceSolution.linear_system_preconditioning"]], "linear_system_preconditioning (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[111, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.linear_system_preconditioning"]], "linear_system_preconditioning (kqcircuits.simulations.export.elmer.elmer_solution.elmerepr3dsolution attribute)": [[111, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerEPR3DSolution.linear_system_preconditioning"]], "london_penetration_depth (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[111, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.london_penetration_depth"]], "max_delta_s (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[111, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.max_delta_s"]], "max_error_scale (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[111, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.max_error_scale"]], "max_iterations (kqcircuits.simulations.export.elmer.elmer_solution.elmercapacitancesolution attribute)": [[111, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCapacitanceSolution.max_iterations"]], "max_iterations (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[111, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.max_iterations"]], "max_iterations (kqcircuits.simulations.export.elmer.elmer_solution.elmerepr3dsolution attribute)": [[111, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerEPR3DSolution.max_iterations"]], "max_iterations (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[111, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.max_iterations"]], "max_outlier_fraction (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[111, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.max_outlier_fraction"]], "maximum_passes (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[111, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.maximum_passes"]], "mesh_levels (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[111, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.mesh_levels"]], "mesh_size (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[111, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.mesh_size"]], "minimum_passes (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[111, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.minimum_passes"]], "nested_iteration (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[111, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.nested_iteration"]], "p_element_order (kqcircuits.simulations.export.elmer.elmer_solution.elmercapacitancesolution attribute)": [[111, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCapacitanceSolution.p_element_order"]], "p_element_order (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[111, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.p_element_order"]], "p_element_order (kqcircuits.simulations.export.elmer.elmer_solution.elmerepr3dsolution attribute)": [[111, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerEPR3DSolution.p_element_order"]], "percent_error (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[111, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.percent_error"]], "quadratic_approximation (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[111, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.quadratic_approximation"]], "run_inductance_sim (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[111, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.run_inductance_sim"]], "second_kind_basis (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[111, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.second_kind_basis"]], "sequential_signal_excitation (kqcircuits.simulations.export.elmer.elmer_solution.elmerepr3dsolution attribute)": [[111, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerEPR3DSolution.sequential_signal_excitation"]], "sweep_type (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[111, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.sweep_type"]], "tool (kqcircuits.simulations.export.elmer.elmer_solution.elmercapacitancesolution attribute)": [[111, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCapacitanceSolution.tool"]], "tool (kqcircuits.simulations.export.elmer.elmer_solution.elmercrosssectionsolution attribute)": [[111, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerCrossSectionSolution.tool"]], "tool (kqcircuits.simulations.export.elmer.elmer_solution.elmerepr3dsolution attribute)": [[111, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerEPR3DSolution.tool"]], "tool (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[111, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.tool"]], "tool (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[111, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.tool"]], "use_av (kqcircuits.simulations.export.elmer.elmer_solution.elmervectorhelmholtzsolution attribute)": [[111, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerVectorHelmholtzSolution.use_av"]], "vtu_output (kqcircuits.simulations.export.elmer.elmer_solution.elmersolution attribute)": [[111, "kqcircuits.simulations.export.elmer.elmer_solution.ElmerSolution.vtu_output"]], "export_and_run() (in module kqcircuits.simulations.export.export_and_run)": [[112, "kqcircuits.simulations.export.export_and_run.export_and_run"]], "kqcircuits.simulations.export.export_and_run": [[112, "module-kqcircuits.simulations.export.export_and_run"]], "run_export_script() (in module kqcircuits.simulations.export.export_and_run)": [[112, "kqcircuits.simulations.export.export_and_run.run_export_script"]], "run_simulations() (in module kqcircuits.simulations.export.export_and_run)": [[112, "kqcircuits.simulations.export.export_and_run.run_simulations"]], "export_singularity() (in module kqcircuits.simulations.export.export_singularity)": [[113, "kqcircuits.simulations.export.export_singularity.export_singularity"]], "kqcircuits.simulations.export.export_singularity": [[113, "module-kqcircuits.simulations.export.export_singularity"]], "kqcircuits.simulations.export.remote_export_and_run": [[114, "module-kqcircuits.simulations.export.remote_export_and_run"]], "remote_export_and_run() (in module kqcircuits.simulations.export.remote_export_and_run)": [[114, "kqcircuits.simulations.export.remote_export_and_run.remote_export_and_run"]], "remote_run_only() (in module kqcircuits.simulations.export.remote_export_and_run)": [[114, "kqcircuits.simulations.export.remote_export_and_run.remote_run_only"]], "copy_content_into_directory() (in module kqcircuits.simulations.export.simulation_export)": [[115, "kqcircuits.simulations.export.simulation_export.copy_content_into_directory"]], "cross_combine() (in module kqcircuits.simulations.export.simulation_export)": [[115, "kqcircuits.simulations.export.simulation_export.cross_combine"]], "cross_sweep_simulation() (in module kqcircuits.simulations.export.simulation_export)": [[115, "kqcircuits.simulations.export.simulation_export.cross_sweep_simulation"]], "cross_sweep_solution() (in module kqcircuits.simulations.export.simulation_export)": [[115, "kqcircuits.simulations.export.simulation_export.cross_sweep_solution"]], "export_simulation_json() (in module kqcircuits.simulations.export.simulation_export)": [[115, "kqcircuits.simulations.export.simulation_export.export_simulation_json"]], "export_simulation_oas() (in module kqcircuits.simulations.export.simulation_export)": [[115, "kqcircuits.simulations.export.simulation_export.export_simulation_oas"]], "get_combined_parameters() (in module kqcircuits.simulations.export.simulation_export)": [[115, "kqcircuits.simulations.export.simulation_export.get_combined_parameters"]], "get_post_process_command_lines() (in module kqcircuits.simulations.export.simulation_export)": [[115, "kqcircuits.simulations.export.simulation_export.get_post_process_command_lines"]], "kqcircuits.simulations.export.simulation_export": [[115, "module-kqcircuits.simulations.export.simulation_export"]], "sweep_simulation() (in module kqcircuits.simulations.export.simulation_export)": [[115, "kqcircuits.simulations.export.simulation_export.sweep_simulation"]], "sweep_solution() (in module kqcircuits.simulations.export.simulation_export)": [[115, "kqcircuits.simulations.export.simulation_export.sweep_solution"]], "validatesimerror": [[116, "kqcircuits.simulations.export.simulation_validate.ValidateSimError"]], "flux_integration_layer_exists_if_needed() (in module kqcircuits.simulations.export.simulation_validate)": [[116, "kqcircuits.simulations.export.simulation_validate.flux_integration_layer_exists_if_needed"]], "get_port_names() (in module kqcircuits.simulations.export.simulation_validate)": [[116, "kqcircuits.simulations.export.simulation_validate.get_port_names"]], "has_edgeport_when_forbidden() (in module kqcircuits.simulations.export.simulation_validate)": [[116, "kqcircuits.simulations.export.simulation_validate.has_edgeport_when_forbidden"]], "has_no_ports_when_required() (in module kqcircuits.simulations.export.simulation_validate)": [[116, "kqcircuits.simulations.export.simulation_validate.has_no_ports_when_required"]], "kqcircuits.simulations.export.simulation_validate": [[116, "module-kqcircuits.simulations.export.simulation_validate"]], "simulation_and_solution_types_match() (in module kqcircuits.simulations.export.simulation_validate)": [[116, "kqcircuits.simulations.export.simulation_validate.simulation_and_solution_types_match"]], "validate_simulation() (in module kqcircuits.simulations.export.simulation_validate)": [[116, "kqcircuits.simulations.export.simulation_validate.validate_simulation"]], "solution (class in kqcircuits.simulations.export.solution)": [[117, "kqcircuits.simulations.export.solution.Solution"]], "get_parameters() (kqcircuits.simulations.export.solution.solution method)": [[117, "kqcircuits.simulations.export.solution.Solution.get_parameters"]], "kqcircuits.simulations.export.solution": [[117, "module-kqcircuits.simulations.export.solution"]], "name (kqcircuits.simulations.export.solution.solution attribute)": [[117, "kqcircuits.simulations.export.solution.Solution.name"]], "kqcircuits.simulations.export.sonnet": [[118, "module-kqcircuits.simulations.export.sonnet"]], "apply_template() (in module kqcircuits.simulations.export.sonnet.parser)": [[119, "kqcircuits.simulations.export.sonnet.parser.apply_template"]], "box() (in module kqcircuits.simulations.export.sonnet.parser)": [[119, "kqcircuits.simulations.export.sonnet.parser.box"]], "control() (in module kqcircuits.simulations.export.sonnet.parser)": [[119, "kqcircuits.simulations.export.sonnet.parser.control"]], "kqcircuits.simulations.export.sonnet.parser": [[119, "module-kqcircuits.simulations.export.sonnet.parser"]], "polygon_head() (in module kqcircuits.simulations.export.sonnet.parser)": [[119, "kqcircuits.simulations.export.sonnet.parser.polygon_head"]], "polygons() (in module kqcircuits.simulations.export.sonnet.parser)": [[119, "kqcircuits.simulations.export.sonnet.parser.polygons"]], "port() (in module kqcircuits.simulations.export.sonnet.parser)": [[119, "kqcircuits.simulations.export.sonnet.parser.port"]], "refplane() (in module kqcircuits.simulations.export.sonnet.parser)": [[119, "kqcircuits.simulations.export.sonnet.parser.refplane"]], "refplanes() (in module kqcircuits.simulations.export.sonnet.parser)": [[119, "kqcircuits.simulations.export.sonnet.parser.refplanes"]], "symmetry() (in module kqcircuits.simulations.export.sonnet.parser)": [[119, "kqcircuits.simulations.export.sonnet.parser.symmetry"]], "via() (in module kqcircuits.simulations.export.sonnet.parser)": [[119, "kqcircuits.simulations.export.sonnet.parser.via"]], "export_sonnet() (in module kqcircuits.simulations.export.sonnet.sonnet_export)": [[120, "kqcircuits.simulations.export.sonnet.sonnet_export.export_sonnet"]], "export_sonnet_son() (in module kqcircuits.simulations.export.sonnet.sonnet_export)": [[120, "kqcircuits.simulations.export.sonnet.sonnet_export.export_sonnet_son"]], "kqcircuits.simulations.export.sonnet.sonnet_export": [[120, "module-kqcircuits.simulations.export.sonnet.sonnet_export"]], "poly_and_edge_indices() (in module kqcircuits.simulations.export.sonnet.sonnet_export)": [[120, "kqcircuits.simulations.export.sonnet.sonnet_export.poly_and_edge_indices"]], "export_layers() (in module kqcircuits.simulations.export.util)": [[121, "kqcircuits.simulations.export.util.export_layers"]], "find_edge_from_point_in_cell() (in module kqcircuits.simulations.export.util)": [[121, "kqcircuits.simulations.export.util.find_edge_from_point_in_cell"]], "find_edge_from_point_in_polygons() (in module kqcircuits.simulations.export.util)": [[121, "kqcircuits.simulations.export.util.find_edge_from_point_in_polygons"]], "get_enclosing_polygon() (in module kqcircuits.simulations.export.util)": [[121, "kqcircuits.simulations.export.util.get_enclosing_polygon"]], "kqcircuits.simulations.export.util": [[121, "module-kqcircuits.simulations.export.util"]], "kqcircuits.simulations.export.xsection": [[122, "module-kqcircuits.simulations.export.xsection"]], "get_epr_correction_elmer_solution() (in module kqcircuits.simulations.export.xsection.epr_correction_export)": [[123, "kqcircuits.simulations.export.xsection.epr_correction_export.get_epr_correction_elmer_solution"]], "get_epr_correction_simulations() (in module kqcircuits.simulations.export.xsection.epr_correction_export)": [[123, "kqcircuits.simulations.export.xsection.epr_correction_export.get_epr_correction_simulations"]], "kqcircuits.simulations.export.xsection.epr_correction_export": [[123, "module-kqcircuits.simulations.export.xsection.epr_correction_export"]], "create_xsections_from_simulations() (in module kqcircuits.simulations.export.xsection.xsection_export)": [[124, "kqcircuits.simulations.export.xsection.xsection_export.create_xsections_from_simulations"]], "find_layer_by_name() (in module kqcircuits.simulations.export.xsection.xsection_export)": [[124, "kqcircuits.simulations.export.xsection.xsection_export.find_layer_by_name"]], "free_layer_slots() (in module kqcircuits.simulations.export.xsection.xsection_export)": [[124, "kqcircuits.simulations.export.xsection.xsection_export.free_layer_slots"]], "kqcircuits.simulations.export.xsection.xsection_export": [[124, "module-kqcircuits.simulations.export.xsection.xsection_export"]], "separate_signal_layer_shapes() (in module kqcircuits.simulations.export.xsection.xsection_export)": [[124, "kqcircuits.simulations.export.xsection.xsection_export.separate_signal_layer_shapes"]], "visualise_xsection_cut_on_original_layout() (in module kqcircuits.simulations.export.xsection.xsection_export)": [[124, "kqcircuits.simulations.export.xsection.xsection_export.visualise_xsection_cut_on_original_layout"]], "xsection_call() (in module kqcircuits.simulations.export.xsection.xsection_export)": [[124, "kqcircuits.simulations.export.xsection.xsection_export.xsection_call"]], "partitionregion (class in kqcircuits.simulations.partition_region)": [[125, "kqcircuits.simulations.partition_region.PartitionRegion"]], "get_list_of_two() (in module kqcircuits.simulations.partition_region)": [[125, "kqcircuits.simulations.partition_region.get_list_of_two"]], "kqcircuits.simulations.partition_region": [[125, "module-kqcircuits.simulations.partition_region"]], "limit_box() (kqcircuits.simulations.partition_region.partitionregion method)": [[125, "kqcircuits.simulations.partition_region.PartitionRegion.limit_box"]], "limit_face() (kqcircuits.simulations.partition_region.partitionregion method)": [[125, "kqcircuits.simulations.partition_region.PartitionRegion.limit_face"]], "edgeport (class in kqcircuits.simulations.port)": [[126, "kqcircuits.simulations.port.EdgePort"]], "internalport (class in kqcircuits.simulations.port)": [[126, "kqcircuits.simulations.port.InternalPort"]], "port (class in kqcircuits.simulations.port)": [[126, "kqcircuits.simulations.port.Port"]], "as_dict() (kqcircuits.simulations.port.port method)": [[126, "kqcircuits.simulations.port.Port.as_dict"]], "get_etch_polygon() (kqcircuits.simulations.port.internalport method)": [[126, "kqcircuits.simulations.port.InternalPort.get_etch_polygon"]], "kqcircuits.simulations.port": [[126, "module-kqcircuits.simulations.port"]], "postprocess (class in kqcircuits.simulations.post_process)": [[127, "kqcircuits.simulations.post_process.PostProcess"]], "get_command_line() (kqcircuits.simulations.post_process.postprocess method)": [[127, "kqcircuits.simulations.post_process.PostProcess.get_command_line"]], "kqcircuits.simulations.post_process": [[127, "module-kqcircuits.simulations.post_process"]], "library_name (kqcircuits.simulations.simulation.simulation attribute)": [[128, "kqcircuits.simulations.simulation.Simulation.LIBRARY_NAME"]], "simulation (class in kqcircuits.simulations.simulation)": [[128, "kqcircuits.simulations.simulation.Simulation"]], "add_element() (kqcircuits.simulations.simulation.simulation method)": [[128, "kqcircuits.simulations.simulation.Simulation.add_element"]], "build() (kqcircuits.simulations.simulation.simulation method)": [[128, "kqcircuits.simulations.simulation.Simulation.build"]], "create_simulation_layers() (kqcircuits.simulations.simulation.simulation method)": [[128, "kqcircuits.simulations.simulation.Simulation.create_simulation_layers"]], "delete_instances() (kqcircuits.simulations.simulation.simulation static method)": [[128, "kqcircuits.simulations.simulation.Simulation.delete_instances"]], "etched_line() (kqcircuits.simulations.simulation.simulation method)": [[128, "kqcircuits.simulations.simulation.Simulation.etched_line"]], "face() (kqcircuits.simulations.simulation.simulation method)": [[128, "kqcircuits.simulations.simulation.Simulation.face"]], "face_stack_list_of_lists() (kqcircuits.simulations.simulation.simulation method)": [[128, "kqcircuits.simulations.simulation.Simulation.face_stack_list_of_lists"]], "face_z_levels() (kqcircuits.simulations.simulation.simulation method)": [[128, "kqcircuits.simulations.simulation.Simulation.face_z_levels"]], "from_cell() (kqcircuits.simulations.simulation.simulation class method)": [[128, "kqcircuits.simulations.simulation.Simulation.from_cell"]], "get_layer() (kqcircuits.simulations.simulation.simulation method)": [[128, "kqcircuits.simulations.simulation.Simulation.get_layer"]], "get_layers() (kqcircuits.simulations.simulation.simulation method)": [[128, "kqcircuits.simulations.simulation.Simulation.get_layers"]], "get_parameters() (kqcircuits.simulations.simulation.simulation method)": [[128, "kqcircuits.simulations.simulation.Simulation.get_parameters"]], "get_partition_regions() (kqcircuits.simulations.simulation.simulation method)": [[128, "kqcircuits.simulations.simulation.Simulation.get_partition_regions"]], "get_port_data() (kqcircuits.simulations.simulation.simulation method)": [[128, "kqcircuits.simulations.simulation.Simulation.get_port_data"]], "get_refpoints() (kqcircuits.simulations.simulation.simulation method)": [[128, "kqcircuits.simulations.simulation.Simulation.get_refpoints"]], "get_schema() (kqcircuits.simulations.simulation.simulation class method)": [[128, "kqcircuits.simulations.simulation.Simulation.get_schema"]], "get_simulation_data() (kqcircuits.simulations.simulation.simulation method)": [[128, "kqcircuits.simulations.simulation.Simulation.get_simulation_data"]], "get_simulation_layer_by_name() (in module kqcircuits.simulations.simulation)": [[128, "kqcircuits.simulations.simulation.get_simulation_layer_by_name"]], "ground_grid_region() (kqcircuits.simulations.simulation.simulation method)": [[128, "kqcircuits.simulations.simulation.Simulation.ground_grid_region"]], "insert_cell() (kqcircuits.simulations.simulation.simulation method)": [[128, "kqcircuits.simulations.simulation.Simulation.insert_cell"]], "insert_layer() (kqcircuits.simulations.simulation.simulation method)": [[128, "kqcircuits.simulations.simulation.Simulation.insert_layer"]], "insert_layers_between_faces() (kqcircuits.simulations.simulation.simulation method)": [[128, "kqcircuits.simulations.simulation.Simulation.insert_layers_between_faces"]], "insert_stacked_up_layers() (kqcircuits.simulations.simulation.simulation method)": [[128, "kqcircuits.simulations.simulation.Simulation.insert_stacked_up_layers"]], "ith_value() (kqcircuits.simulations.simulation.simulation static method)": [[128, "kqcircuits.simulations.simulation.Simulation.ith_value"]], "kqcircuits.simulations.simulation": [[128, "module-kqcircuits.simulations.simulation"]], "pcell_params_by_name() (kqcircuits.simulations.simulation.simulation method)": [[128, "kqcircuits.simulations.simulation.Simulation.pcell_params_by_name"]], "ports (kqcircuits.simulations.simulation.simulation attribute)": [[128, "kqcircuits.simulations.simulation.Simulation.ports"]], "produce_layers() (kqcircuits.simulations.simulation.simulation method)": [[128, "kqcircuits.simulations.simulation.Simulation.produce_layers"]], "produce_waveguide_to_port() (kqcircuits.simulations.simulation.simulation method)": [[128, "kqcircuits.simulations.simulation.Simulation.produce_waveguide_to_port"]], "region_from_layer() (kqcircuits.simulations.simulation.simulation method)": [[128, "kqcircuits.simulations.simulation.Simulation.region_from_layer"]], "simplified_region() (kqcircuits.simulations.simulation.simulation method)": [[128, "kqcircuits.simulations.simulation.Simulation.simplified_region"]], "to_1d_list() (in module kqcircuits.simulations.simulation)": [[128, "kqcircuits.simulations.simulation.to_1d_list"]], "visualise_region() (kqcircuits.simulations.simulation.simulation method)": [[128, "kqcircuits.simulations.simulation.Simulation.visualise_region"]], "get_single_element_sim_class() (in module kqcircuits.simulations.single_element_simulation)": [[129, "kqcircuits.simulations.single_element_simulation.get_single_element_sim_class"]], "kqcircuits.simulations.single_element_simulation": [[129, "module-kqcircuits.simulations.single_element_simulation"]], "singlexmonsfullchipsim (class in kqcircuits.simulations.single_xmons_full_chip_sim)": [[130, "kqcircuits.simulations.single_xmons_full_chip_sim.SingleXmonsFullChipSim"]], "build() (kqcircuits.simulations.single_xmons_full_chip_sim.singlexmonsfullchipsim method)": [[130, "kqcircuits.simulations.single_xmons_full_chip_sim.SingleXmonsFullChipSim.build"]], "kqcircuits.simulations.single_xmons_full_chip_sim": [[130, "module-kqcircuits.simulations.single_xmons_full_chip_sim"]], "waveguidessim (class in kqcircuits.simulations.waveguides_sim)": [[131, "kqcircuits.simulations.waveguides_sim.WaveGuidesSim"]], "build() (kqcircuits.simulations.waveguides_sim.waveguidessim method)": [[131, "kqcircuits.simulations.waveguides_sim.WaveGuidesSim.build"]], "kqcircuits.simulations.waveguides_sim": [[131, "module-kqcircuits.simulations.waveguides_sim"]], "produce_ground_bumps() (kqcircuits.simulations.waveguides_sim.waveguidessim method)": [[131, "kqcircuits.simulations.waveguides_sim.WaveGuidesSim.produce_ground_bumps"]], "produce_guides() (kqcircuits.simulations.waveguides_sim.waveguidessim method)": [[131, "kqcircuits.simulations.waveguides_sim.WaveGuidesSim.produce_guides"]], "xmonsdirectcouplingfullchipsim (class in kqcircuits.simulations.xmons_direct_coupling_full_chip_sim)": [[132, "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim"]], "build() (kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.xmonsdirectcouplingfullchipsim method)": [[132, "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim.build"]], "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim": [[132, "module-kqcircuits.simulations.xmons_direct_coupling_full_chip_sim"]], "produce_launcher() (kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.xmonsdirectcouplingfullchipsim method)": [[132, "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim.produce_launcher"]], "produce_launchers_sma8() (kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.xmonsdirectcouplingfullchipsim method)": [[132, "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim.produce_launchers_SMA8"]], "produce_qubit() (kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.xmonsdirectcouplingfullchipsim method)": [[132, "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim.produce_qubit"]], "produce_readout_resonator() (kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.xmonsdirectcouplingfullchipsim method)": [[132, "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim.produce_readout_resonator"]], "produce_waveguide() (kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.xmonsdirectcouplingfullchipsim method)": [[132, "kqcircuits.simulations.xmons_direct_coupling_full_chip_sim.XMonsDirectCouplingFullChipSim.produce_waveguide"]], "xmonsdirectcouplingsim (class in kqcircuits.simulations.xmons_direct_coupling_sim)": [[133, "kqcircuits.simulations.xmons_direct_coupling_sim.XMonsDirectCouplingSim"]], "build() (kqcircuits.simulations.xmons_direct_coupling_sim.xmonsdirectcouplingsim method)": [[133, "kqcircuits.simulations.xmons_direct_coupling_sim.XMonsDirectCouplingSim.build"]], "kqcircuits.simulations.xmons_direct_coupling_sim": [[133, "module-kqcircuits.simulations.xmons_direct_coupling_sim"]], "produce_qubits() (kqcircuits.simulations.xmons_direct_coupling_sim.xmonsdirectcouplingsim method)": [[133, "kqcircuits.simulations.xmons_direct_coupling_sim.XMonsDirectCouplingSim.produce_qubits"]], "kqcircuits.test_structures": [[134, "module-kqcircuits.test_structures"]], "airbridgedc (class in kqcircuits.test_structures.airbridge_dc)": [[135, "kqcircuits.test_structures.airbridge_dc.AirbridgeDC"]], "build() (kqcircuits.test_structures.airbridge_dc.airbridgedc method)": [[135, "kqcircuits.test_structures.airbridge_dc.AirbridgeDC.build"]], "kqcircuits.test_structures.airbridge_dc": [[135, "module-kqcircuits.test_structures.airbridge_dc"]], "crosstest (class in kqcircuits.test_structures.cross_test)": [[136, "kqcircuits.test_structures.cross_test.CrossTest"]], "build() (kqcircuits.test_structures.cross_test.crosstest method)": [[136, "kqcircuits.test_structures.cross_test.CrossTest.build"]], "kqcircuits.test_structures.cross_test": [[136, "module-kqcircuits.test_structures.cross_test"]], "kqcircuits.test_structures.junction_test_pads": [[137, "module-kqcircuits.test_structures.junction_test_pads"]], "junctiontestpads (class in kqcircuits.test_structures.junction_test_pads.junction_test_pads)": [[138, "kqcircuits.test_structures.junction_test_pads.junction_test_pads.JunctionTestPads"]], "coerce_parameters_impl() (kqcircuits.test_structures.junction_test_pads.junction_test_pads.junctiontestpads method)": [[138, "kqcircuits.test_structures.junction_test_pads.junction_test_pads.JunctionTestPads.coerce_parameters_impl"]], "create() (kqcircuits.test_structures.junction_test_pads.junction_test_pads.junctiontestpads class method)": [[138, "kqcircuits.test_structures.junction_test_pads.junction_test_pads.JunctionTestPads.create"]], "default_type (kqcircuits.test_structures.junction_test_pads.junction_test_pads.junctiontestpads attribute)": [[138, "kqcircuits.test_structures.junction_test_pads.junction_test_pads.JunctionTestPads.default_type"]], "kqcircuits.test_structures.junction_test_pads.junction_test_pads": [[138, "module-kqcircuits.test_structures.junction_test_pads.junction_test_pads"]], "produce_squid() (kqcircuits.test_structures.junction_test_pads.junction_test_pads.junctiontestpads method)": [[138, "kqcircuits.test_structures.junction_test_pads.junction_test_pads.JunctionTestPads.produce_squid"]], "junctiontestpadssimple (class in kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple)": [[139, "kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple.JunctionTestPadsSimple"]], "build() (kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple.junctiontestpadssimple method)": [[139, "kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple.JunctionTestPadsSimple.build"]], "kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple": [[139, "module-kqcircuits.test_structures.junction_test_pads.junction_test_pads_simple"]], "stripestest (class in kqcircuits.test_structures.stripes_test)": [[140, "kqcircuits.test_structures.stripes_test.StripesTest"]], "build() (kqcircuits.test_structures.stripes_test.stripestest method)": [[140, "kqcircuits.test_structures.stripes_test.StripesTest.build"]], "kqcircuits.test_structures.stripes_test": [[140, "module-kqcircuits.test_structures.stripes_test"]], "stripestestincreasingwidth (class in kqcircuits.test_structures.stripes_test_increasing_width)": [[141, "kqcircuits.test_structures.stripes_test_increasing_width.StripesTestIncreasingWidth"]], "build() (kqcircuits.test_structures.stripes_test_increasing_width.stripestestincreasingwidth method)": [[141, "kqcircuits.test_structures.stripes_test_increasing_width.StripesTestIncreasingWidth.build"]], "kqcircuits.test_structures.stripes_test_increasing_width": [[141, "module-kqcircuits.test_structures.stripes_test_increasing_width"]], "library_description (kqcircuits.test_structures.test_structure.teststructure attribute)": [[142, "kqcircuits.test_structures.test_structure.TestStructure.LIBRARY_DESCRIPTION"]], "library_name (kqcircuits.test_structures.test_structure.teststructure attribute)": [[142, "kqcircuits.test_structures.test_structure.TestStructure.LIBRARY_NAME"]], "library_path (kqcircuits.test_structures.test_structure.teststructure attribute)": [[142, "kqcircuits.test_structures.test_structure.TestStructure.LIBRARY_PATH"]], "teststructure (class in kqcircuits.test_structures.test_structure)": [[142, "kqcircuits.test_structures.test_structure.TestStructure"]], "kqcircuits.test_structures.test_structure": [[142, "module-kqcircuits.test_structures.test_structure"]], "produce_etched_region() (kqcircuits.test_structures.test_structure.teststructure method)": [[142, "kqcircuits.test_structures.test_structure.TestStructure.produce_etched_region"]], "produce_four_point_pads() (kqcircuits.test_structures.test_structure.teststructure method)": [[142, "kqcircuits.test_structures.test_structure.TestStructure.produce_four_point_pads"]], "produce_pad() (kqcircuits.test_structures.test_structure.teststructure method)": [[142, "kqcircuits.test_structures.test_structure.TestStructure.produce_pad"]], "tsvtestpattern (class in kqcircuits.test_structures.tsv_test_pattern)": [[143, "kqcircuits.test_structures.tsv_test_pattern.TsvTestPattern"]], "build() (kqcircuits.test_structures.tsv_test_pattern.tsvtestpattern method)": [[143, "kqcircuits.test_structures.tsv_test_pattern.TsvTestPattern.build"]], "kqcircuits.test_structures.tsv_test_pattern": [[143, "module-kqcircuits.test_structures.tsv_test_pattern"]], "kqcircuits.util": [[144, "module-kqcircuits.util"]], "areareceiver (class in kqcircuits.util.area)": [[145, "kqcircuits.util.area.AreaReceiver"]], "get_area_and_density() (in module kqcircuits.util.area)": [[145, "kqcircuits.util.area.get_area_and_density"]], "kqcircuits.util.area": [[145, "module-kqcircuits.util.area"]], "put() (kqcircuits.util.area.areareceiver method)": [[145, "kqcircuits.util.area.AreaReceiver.put"]], "count_instances_in_cell() (in module kqcircuits.util.count_instances)": [[146, "kqcircuits.util.count_instances.count_instances_in_cell"]], "kqcircuits.util.count_instances": [[146, "module-kqcircuits.util.count_instances"]], "cap_params() (in module kqcircuits.util.coupler_lib)": [[147, "kqcircuits.util.coupler_lib.cap_params"]], "kqcircuits.util.coupler_lib": [[147, "module-kqcircuits.util.coupler_lib"]], "deep_delete_all() (in module kqcircuits.util.deep_delete)": [[148, "kqcircuits.util.deep_delete.deep_delete_all"]], "deep_delete_pcells() (in module kqcircuits.util.deep_delete)": [[148, "kqcircuits.util.deep_delete.deep_delete_pcells"]], "kqcircuits.util.deep_delete": [[148, "module-kqcircuits.util.deep_delete"]], "find_ansys_executable() (in module kqcircuits.util.defaults_helper)": [[149, "kqcircuits.util.defaults_helper.find_ansys_executable"]], "kqcircuits.util.defaults_helper": [[149, "module-kqcircuits.util.defaults_helper"]], "install_kqc_gui_dependencies() (in module kqcircuits.util.dependencies)": [[150, "kqcircuits.util.dependencies.install_kqc_gui_dependencies"]], "kqcircuits.util.dependencies": [[150, "module-kqcircuits.util.dependencies"]], "editnodeplugin (class in kqcircuits.util.edit_node_plugin)": [[151, "kqcircuits.util.edit_node_plugin.EditNodePlugin"]], "editnodepluginfactory (class in kqcircuits.util.edit_node_plugin)": [[151, "kqcircuits.util.edit_node_plugin.EditNodePluginFactory"]], "activated() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[151, "kqcircuits.util.edit_node_plugin.EditNodePlugin.activated"]], "create_dialog() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[151, "kqcircuits.util.edit_node_plugin.EditNodePlugin.create_dialog"]], "create_plugin() (kqcircuits.util.edit_node_plugin.editnodepluginfactory method)": [[151, "kqcircuits.util.edit_node_plugin.EditNodePluginFactory.create_plugin"]], "deactivated() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[151, "kqcircuits.util.edit_node_plugin.EditNodePlugin.deactivated"]], "deselect() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[151, "kqcircuits.util.edit_node_plugin.EditNodePlugin.deselect"]], "has_tracking_position() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[151, "kqcircuits.util.edit_node_plugin.EditNodePlugin.has_tracking_position"]], "kqcircuits.util.edit_node_plugin": [[151, "module-kqcircuits.util.edit_node_plugin"]], "mouse_click_event() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[151, "kqcircuits.util.edit_node_plugin.EditNodePlugin.mouse_click_event"]], "mouse_moved_event() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[151, "kqcircuits.util.edit_node_plugin.EditNodePlugin.mouse_moved_event"]], "select() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[151, "kqcircuits.util.edit_node_plugin.EditNodePlugin.select"]], "tracking_position() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[151, "kqcircuits.util.edit_node_plugin.EditNodePlugin.tracking_position"]], "update() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[151, "kqcircuits.util.edit_node_plugin.EditNodePlugin.update"]], "update_form_from_node() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[151, "kqcircuits.util.edit_node_plugin.EditNodePlugin.update_form_from_node"]], "update_node_from_form() (kqcircuits.util.edit_node_plugin.editnodeplugin method)": [[151, "kqcircuits.util.edit_node_plugin.EditNodePlugin.update_node_from_form"]], "create_or_empty_tmp_directory() (in module kqcircuits.util.export_helper)": [[152, "kqcircuits.util.export_helper.create_or_empty_tmp_directory"]], "export_drc_report() (in module kqcircuits.util.export_helper)": [[152, "kqcircuits.util.export_helper.export_drc_report"]], "generate_probepoints_from_file() (in module kqcircuits.util.export_helper)": [[152, "kqcircuits.util.export_helper.generate_probepoints_from_file"]], "generate_probepoints_json() (in module kqcircuits.util.export_helper)": [[152, "kqcircuits.util.export_helper.generate_probepoints_json"]], "get_active_or_new_layout() (in module kqcircuits.util.export_helper)": [[152, "kqcircuits.util.export_helper.get_active_or_new_layout"]], "get_klayout_version() (in module kqcircuits.util.export_helper)": [[152, "kqcircuits.util.export_helper.get_klayout_version"]], "get_simulation_directory() (in module kqcircuits.util.export_helper)": [[152, "kqcircuits.util.export_helper.get_simulation_directory"]], "kqcircuits.util.export_helper": [[152, "module-kqcircuits.util.export_helper"]], "open_with_klayout_or_default_application() (in module kqcircuits.util.export_helper)": [[152, "kqcircuits.util.export_helper.open_with_klayout_or_default_application"]], "write_commit_reference_file() (in module kqcircuits.util.export_helper)": [[152, "kqcircuits.util.export_helper.write_commit_reference_file"]], "write_export_machine_versions_file() (in module kqcircuits.util.export_helper)": [[152, "kqcircuits.util.export_helper.write_export_machine_versions_file"]], "arc_points() (in module kqcircuits.util.geometry_helper)": [[153, "kqcircuits.util.geometry_helper.arc_points"]], "bezier_points() (in module kqcircuits.util.geometry_helper)": [[153, "kqcircuits.util.geometry_helper.bezier_points"]], "bspline_points() (in module kqcircuits.util.geometry_helper)": [[153, "kqcircuits.util.geometry_helper.bspline_points"]], "circle_polygon() (in module kqcircuits.util.geometry_helper)": [[153, "kqcircuits.util.geometry_helper.circle_polygon"]], "get_angle() (in module kqcircuits.util.geometry_helper)": [[153, "kqcircuits.util.geometry_helper.get_angle"]], "get_cell_path_length() (in module kqcircuits.util.geometry_helper)": [[153, "kqcircuits.util.geometry_helper.get_cell_path_length"]], "get_direction() (in module kqcircuits.util.geometry_helper)": [[153, "kqcircuits.util.geometry_helper.get_direction"]], "get_object_path_length() (in module kqcircuits.util.geometry_helper)": [[153, "kqcircuits.util.geometry_helper.get_object_path_length"]], "is_clockwise() (in module kqcircuits.util.geometry_helper)": [[153, "kqcircuits.util.geometry_helper.is_clockwise"]], "kqcircuits.util.geometry_helper": [[153, "module-kqcircuits.util.geometry_helper"]], "merge_points_and_match_on_edges() (in module kqcircuits.util.geometry_helper)": [[153, "kqcircuits.util.geometry_helper.merge_points_and_match_on_edges"]], "point_shift_along_vector() (in module kqcircuits.util.geometry_helper)": [[153, "kqcircuits.util.geometry_helper.point_shift_along_vector"]], "region_with_merged_points() (in module kqcircuits.util.geometry_helper)": [[153, "kqcircuits.util.geometry_helper.region_with_merged_points"]], "region_with_merged_polygons() (in module kqcircuits.util.geometry_helper)": [[153, "kqcircuits.util.geometry_helper.region_with_merged_polygons"]], "round_dpath_width() (in module kqcircuits.util.geometry_helper)": [[153, "kqcircuits.util.geometry_helper.round_dpath_width"]], "simple_region() (in module kqcircuits.util.geometry_helper)": [[153, "kqcircuits.util.geometry_helper.simple_region"]], "vector_length_and_direction() (in module kqcircuits.util.geometry_helper)": [[153, "kqcircuits.util.geometry_helper.vector_length_and_direction"]], "geometryjsondecoder (class in kqcircuits.util.geometry_json_encoder)": [[154, "kqcircuits.util.geometry_json_encoder.GeometryJsonDecoder"]], "geometryjsonencoder (class in kqcircuits.util.geometry_json_encoder)": [[154, "kqcircuits.util.geometry_json_encoder.GeometryJsonEncoder"]], "decode_dict_as_python_obj() (in module kqcircuits.util.geometry_json_encoder)": [[154, "kqcircuits.util.geometry_json_encoder.decode_dict_as_python_obj"]], "default() (kqcircuits.util.geometry_json_encoder.geometryjsonencoder method)": [[154, "kqcircuits.util.geometry_json_encoder.GeometryJsonEncoder.default"]], "encode_python_obj_as_dict() (in module kqcircuits.util.geometry_json_encoder)": [[154, "kqcircuits.util.geometry_json_encoder.encode_python_obj_as_dict"]], "kqcircuits.util.geometry_json_encoder": [[154, "module-kqcircuits.util.geometry_json_encoder"]], "kqcircuits.util.groundgrid": [[155, "module-kqcircuits.util.groundgrid"]], "make_grid() (in module kqcircuits.util.groundgrid)": [[155, "kqcircuits.util.groundgrid.make_grid"]], "get_all_node_elements() (in module kqcircuits.util.gui_helper)": [[156, "kqcircuits.util.gui_helper.get_all_node_elements"]], "get_nodes_near_position() (in module kqcircuits.util.gui_helper)": [[156, "kqcircuits.util.gui_helper.get_nodes_near_position"]], "get_valid_node_elements() (in module kqcircuits.util.gui_helper)": [[156, "kqcircuits.util.gui_helper.get_valid_node_elements"]], "kqcircuits.util.gui_helper": [[156, "module-kqcircuits.util.gui_helper"]], "node_from_text() (in module kqcircuits.util.gui_helper)": [[156, "kqcircuits.util.gui_helper.node_from_text"]], "node_to_text() (in module kqcircuits.util.gui_helper)": [[156, "kqcircuits.util.gui_helper.node_to_text"]], "replace_node() (in module kqcircuits.util.gui_helper)": [[156, "kqcircuits.util.gui_helper.replace_node"]], "kqcircuits.util.import_helper": [[157, "module-kqcircuits.util.import_helper"]], "module_from_file() (in module kqcircuits.util.import_helper)": [[157, "kqcircuits.util.import_helper.module_from_file"]], "bottomleft (kqcircuits.util.label.labelorigin attribute)": [[158, "kqcircuits.util.label.LabelOrigin.BOTTOMLEFT"]], "bottomright (kqcircuits.util.label.labelorigin attribute)": [[158, "kqcircuits.util.label.LabelOrigin.BOTTOMRIGHT"]], "labelorigin (class in kqcircuits.util.label)": [[158, "kqcircuits.util.label.LabelOrigin"]], "topleft (kqcircuits.util.label.labelorigin attribute)": [[158, "kqcircuits.util.label.LabelOrigin.TOPLEFT"]], "topright (kqcircuits.util.label.labelorigin attribute)": [[158, "kqcircuits.util.label.LabelOrigin.TOPRIGHT"]], "kqcircuits.util.label": [[158, "module-kqcircuits.util.label"]], "produce_label() (in module kqcircuits.util.label)": [[158, "kqcircuits.util.label.produce_label"]], "get_text_polygon() (in module kqcircuits.util.label_polygons)": [[159, "kqcircuits.util.label_polygons.get_text_polygon"]], "kqcircuits.util.label_polygons": [[159, "module-kqcircuits.util.label_polygons"]], "load_font_polygons() (in module kqcircuits.util.label_polygons)": [[159, "kqcircuits.util.label_polygons.load_font_polygons"]], "convert_cells_to_code() (in module kqcircuits.util.layout_to_code)": [[160, "kqcircuits.util.layout_to_code.convert_cells_to_code"]], "extract_pcell_data_from_views() (in module kqcircuits.util.layout_to_code)": [[160, "kqcircuits.util.layout_to_code.extract_pcell_data_from_views"]], "get_node_params() (in module kqcircuits.util.layout_to_code)": [[160, "kqcircuits.util.layout_to_code.get_node_params"]], "kqcircuits.util.layout_to_code": [[160, "module-kqcircuits.util.layout_to_code"]], "restore_pcells_to_views() (in module kqcircuits.util.layout_to_code)": [[160, "kqcircuits.util.layout_to_code.restore_pcells_to_views"]], "delete_all_libraries() (in module kqcircuits.util.library_helper)": [[161, "kqcircuits.util.library_helper.delete_all_libraries"]], "delete_library() (in module kqcircuits.util.library_helper)": [[161, "kqcircuits.util.library_helper.delete_library"]], "element_by_class_name() (in module kqcircuits.util.library_helper)": [[161, "kqcircuits.util.library_helper.element_by_class_name"]], "get_library_paths() (in module kqcircuits.util.library_helper)": [[161, "kqcircuits.util.library_helper.get_library_paths"]], "kqcircuits.util.library_helper": [[161, "module-kqcircuits.util.library_helper"]], "load_libraries() (in module kqcircuits.util.library_helper)": [[161, "kqcircuits.util.library_helper.load_libraries"]], "to_library_name() (in module kqcircuits.util.library_helper)": [[161, "kqcircuits.util.library_helper.to_library_name"]], "to_module_name() (in module kqcircuits.util.library_helper)": [[161, "kqcircuits.util.library_helper.to_module_name"]], "kqcircuits.util.log_router": [[162, "module-kqcircuits.util.log_router"]], "route_log() (in module kqcircuits.util.log_router)": [[162, "kqcircuits.util.log_router.route_log"]], "convert_child_instances_to_static() (in module kqcircuits.util.merge)": [[163, "kqcircuits.util.merge.convert_child_instances_to_static"]], "kqcircuits.util.merge": [[163, "module-kqcircuits.util.merge"]], "merge_layers() (in module kqcircuits.util.merge)": [[163, "kqcircuits.util.merge.merge_layers"]], "merge_layout_layers_on_face() (in module kqcircuits.util.merge)": [[163, "kqcircuits.util.merge.merge_layout_layers_on_face"]], "export_cell_netlist() (in module kqcircuits.util.netlist_extraction)": [[164, "kqcircuits.util.netlist_extraction.export_cell_netlist"]], "extract_circuits() (in module kqcircuits.util.netlist_extraction)": [[164, "kqcircuits.util.netlist_extraction.extract_circuits"]], "extract_nets() (in module kqcircuits.util.netlist_extraction)": [[164, "kqcircuits.util.netlist_extraction.extract_nets"]], "kqcircuits.util.netlist_extraction": [[164, "module-kqcircuits.util.netlist_extraction"]], "draw_graph() (in module kqcircuits.util.netlist_graph)": [[165, "kqcircuits.util.netlist_graph.draw_graph"]], "kqcircuits.util.netlist_graph": [[165, "module-kqcircuits.util.netlist_graph"]], "network_as_graph() (in module kqcircuits.util.netlist_graph)": [[165, "kqcircuits.util.netlist_graph.network_as_graph"]], "param (class in kqcircuits.util.parameters)": [[166, "kqcircuits.util.parameters.Param"]], "typeboolean (kqcircuits.util.parameters.pdt attribute)": [[166, "kqcircuits.util.parameters.pdt.TypeBoolean"]], "typedouble (kqcircuits.util.parameters.pdt attribute)": [[166, "kqcircuits.util.parameters.pdt.TypeDouble"]], "typeint (kqcircuits.util.parameters.pdt attribute)": [[166, "kqcircuits.util.parameters.pdt.TypeInt"]], "typelayer (kqcircuits.util.parameters.pdt attribute)": [[166, "kqcircuits.util.parameters.pdt.TypeLayer"]], "typelist (kqcircuits.util.parameters.pdt attribute)": [[166, "kqcircuits.util.parameters.pdt.TypeList"]], "typenone (kqcircuits.util.parameters.pdt attribute)": [[166, "kqcircuits.util.parameters.pdt.TypeNone"]], "typeshape (kqcircuits.util.parameters.pdt attribute)": [[166, "kqcircuits.util.parameters.pdt.TypeShape"]], "typestring (kqcircuits.util.parameters.pdt attribute)": [[166, "kqcircuits.util.parameters.pdt.TypeString"]], "add_parameter() (in module kqcircuits.util.parameters)": [[166, "kqcircuits.util.parameters.add_parameter"]], "add_parameters_from() (in module kqcircuits.util.parameters)": [[166, "kqcircuits.util.parameters.add_parameters_from"]], "get_all() (kqcircuits.util.parameters.param class method)": [[166, "kqcircuits.util.parameters.Param.get_all"]], "kqcircuits.util.parameters": [[166, "module-kqcircuits.util.parameters"]], "pdt (class in kqcircuits.util.parameters)": [[166, "kqcircuits.util.parameters.pdt"]], "kqcircuits.util.plugin_startup": [[167, "module-kqcircuits.util.plugin_startup"]], "register_plugins() (in module kqcircuits.util.plugin_startup)": [[167, "kqcircuits.util.plugin_startup.register_plugins"]], "junctionsimport (class in kqcircuits.util.refpoints)": [[168, "kqcircuits.util.refpoints.JunctionSimPort"]], "refpointtoedgeport (class in kqcircuits.util.refpoints)": [[168, "kqcircuits.util.refpoints.RefpointToEdgePort"]], "refpointtointernalport (class in kqcircuits.util.refpoints)": [[168, "kqcircuits.util.refpoints.RefpointToInternalPort"]], "refpointtosimport (class in kqcircuits.util.refpoints)": [[168, "kqcircuits.util.refpoints.RefpointToSimPort"]], "refpoints (class in kqcircuits.util.refpoints)": [[168, "kqcircuits.util.refpoints.Refpoints"]], "waveguidetosimport (class in kqcircuits.util.refpoints)": [[168, "kqcircuits.util.refpoints.WaveguideToSimPort"]], "a (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[168, "kqcircuits.util.refpoints.WaveguideToSimPort.a"]], "airbridge (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[168, "kqcircuits.util.refpoints.WaveguideToSimPort.airbridge"]], "b (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[168, "kqcircuits.util.refpoints.WaveguideToSimPort.b"]], "cell (kqcircuits.util.refpoints.refpoints attribute)": [[168, "kqcircuits.util.refpoints.Refpoints.cell"]], "dict() (kqcircuits.util.refpoints.refpoints method)": [[168, "kqcircuits.util.refpoints.Refpoints.dict"]], "face (kqcircuits.util.refpoints.junctionsimport attribute)": [[168, "kqcircuits.util.refpoints.JunctionSimPort.face"]], "face (kqcircuits.util.refpoints.refpointtosimport attribute)": [[168, "kqcircuits.util.refpoints.RefpointToSimPort.face"]], "face (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[168, "kqcircuits.util.refpoints.WaveguideToSimPort.face"]], "floating (kqcircuits.util.refpoints.junctionsimport attribute)": [[168, "kqcircuits.util.refpoints.JunctionSimPort.floating"]], "items() (kqcircuits.util.refpoints.refpoints method)": [[168, "kqcircuits.util.refpoints.Refpoints.items"]], "keys() (kqcircuits.util.refpoints.refpoints method)": [[168, "kqcircuits.util.refpoints.Refpoints.keys"]], "kqcircuits.util.refpoints": [[168, "module-kqcircuits.util.refpoints"]], "layer (kqcircuits.util.refpoints.refpoints attribute)": [[168, "kqcircuits.util.refpoints.Refpoints.layer"]], "other_refpoint (kqcircuits.util.refpoints.junctionsimport attribute)": [[168, "kqcircuits.util.refpoints.JunctionSimPort.other_refpoint"]], "over_etching (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[168, "kqcircuits.util.refpoints.WaveguideToSimPort.over_etching"]], "rec_levels (kqcircuits.util.refpoints.refpoints attribute)": [[168, "kqcircuits.util.refpoints.Refpoints.rec_levels"]], "refpoint (kqcircuits.util.refpoints.junctionsimport attribute)": [[168, "kqcircuits.util.refpoints.JunctionSimPort.refpoint"]], "refpoint (kqcircuits.util.refpoints.refpointtosimport attribute)": [[168, "kqcircuits.util.refpoints.RefpointToSimPort.refpoint"]], "refpoint (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[168, "kqcircuits.util.refpoints.WaveguideToSimPort.refpoint"]], "side (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[168, "kqcircuits.util.refpoints.WaveguideToSimPort.side"]], "term1 (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[168, "kqcircuits.util.refpoints.WaveguideToSimPort.term1"]], "towards (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[168, "kqcircuits.util.refpoints.WaveguideToSimPort.towards"]], "trans (kqcircuits.util.refpoints.refpoints attribute)": [[168, "kqcircuits.util.refpoints.Refpoints.trans"]], "turn_radius (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[168, "kqcircuits.util.refpoints.WaveguideToSimPort.turn_radius"]], "use_internal_ports (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[168, "kqcircuits.util.refpoints.WaveguideToSimPort.use_internal_ports"]], "values() (kqcircuits.util.refpoints.refpoints method)": [[168, "kqcircuits.util.refpoints.Refpoints.values"]], "waveguide_length (kqcircuits.util.refpoints.waveguidetosimport attribute)": [[168, "kqcircuits.util.refpoints.WaveguideToSimPort.waveguide_length"]], "junctionentry (class in kqcircuits.util.replace_junctions)": [[169, "kqcircuits.util.replace_junctions.JunctionEntry"]], "check_static_cell_has_junctions() (in module kqcircuits.util.replace_junctions)": [[169, "kqcircuits.util.replace_junctions.check_static_cell_has_junctions"]], "convert_cells_to_static() (in module kqcircuits.util.replace_junctions)": [[169, "kqcircuits.util.replace_junctions.convert_cells_to_static"]], "copy_one_layer_of_cell() (in module kqcircuits.util.replace_junctions)": [[169, "kqcircuits.util.replace_junctions.copy_one_layer_of_cell"]], "extract_junctions() (in module kqcircuits.util.replace_junctions)": [[169, "kqcircuits.util.replace_junctions.extract_junctions"]], "get_tuned_junction_json() (in module kqcircuits.util.replace_junctions)": [[169, "kqcircuits.util.replace_junctions.get_tuned_junction_json"]], "kqcircuits.util.replace_junctions": [[169, "module-kqcircuits.util.replace_junctions"]], "place_junctions() (in module kqcircuits.util.replace_junctions)": [[169, "kqcircuits.util.replace_junctions.place_junctions"]], "replace_squid() (in module kqcircuits.util.replace_junctions)": [[169, "kqcircuits.util.replace_junctions.replace_squid"]], "replace_squids() (in module kqcircuits.util.replace_junctions)": [[169, "kqcircuits.util.replace_junctions.replace_squids"]], "kqcircuits.util.symmetric_polygons": [[170, "module-kqcircuits.util.symmetric_polygons"]], "polygon_with_hsym() (in module kqcircuits.util.symmetric_polygons)": [[170, "kqcircuits.util.symmetric_polygons.polygon_with_hsym"]], "polygon_with_sym() (in module kqcircuits.util.symmetric_polygons)": [[170, "kqcircuits.util.symmetric_polygons.polygon_with_sym"]], "polygon_with_vsym() (in module kqcircuits.util.symmetric_polygons)": [[170, "kqcircuits.util.symmetric_polygons.polygon_with_vsym"]]}})